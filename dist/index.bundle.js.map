{"version":3,"sources":["webpack:///webpack/bootstrap 36cb9a05bc4b5563123b","webpack:///index.ts","webpack:///./~/opensheetmusicdisplay/dist/src/MusicSheetApi.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/FileIO/Xml.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMusicSheetCalculator.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSheetCalculator.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalMusicSheet.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VerticalGraphicalStaffEntryContainer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalLine.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/DrawingEnums.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/DataObjects/PointF2D.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/ClefInstruction.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/DataObjects/pitch.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/AbstractNotationInstruction.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Exceptions.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/KeyInstruction.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/DataObjects/fraction.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/BoundingBox.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/DataObjects/SizeF2D.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/DataObjects/RectangleF2D.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/logging.js","webpack:///./~/typescript-collections/dist/lib/Dictionary.js","webpack:///./~/typescript-collections/dist/lib/util.js","webpack:///./~/opensheetmusicdisplay/dist/src/Util/collectionUtil.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Note.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/ContinuousExpressions/octaveShift.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/VoiceEntry.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/OrnamentContainer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSystemBuilder.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalMusicPage.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalObject.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/RhythmInstruction.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/SystemLinesEnum.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/SystemLinePosition.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/SourceStaffEntry.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalLabel.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/Enums/TextAlignment.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/Clickable.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/EngravingRules.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/LinkedVoice.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Voice.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/OctaveShiftParams.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/AccidentalCalculator.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowGraphicalSymbolFactory.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMusicSystem.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSystem.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Instrument.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/InstrumentalGroup.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Label.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/Enums/Fonts.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Staff.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/SystemLine.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowConverter.js","webpack:///./~/vexflow/releases/vexflow-debug.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowStaffLine.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/StaffLine.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/StaffLineActivitySymbol.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMeasure.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/StaffMeasure.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowStaffEntry.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalStaffEntry.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalNote.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowGraphicalNote.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowTextMeasurer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/ScoreIO/MusicSheetReader.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSheet.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicParts/MusicPartManager.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicParts/MusicPartManagerIterator.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/HelperObjects/DynamicsContainer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/ContinuousExpressions/continuousDynamicExpression.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/abstractExpression.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/instantaniousDynamicExpression.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/dynamicExpressionSymbolEnum.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSource/Repetition.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSource/SourceMusicPart.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSource/PartListEntry.js","webpack:///./~/opensheetmusicdisplay/dist/src/Common/DataObjects/MusicSheetErrors.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/SourceMeasure.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/VerticalSourceStaffEntryContainer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/ScoreIO/InstrumentReader.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/ScoreIO/VoiceGenerator.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Beam.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Tie.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Tuplet.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Interfaces/ITextTranslation.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/StaffEntryLink.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/SubInstrument.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMusicSheetDrawer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSheetDrawer.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/DrawingParameters.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSymbol.js","webpack:///./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/DrawingMode.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,mDAA8B,CAAuB,CAAC;AAEtD,KAAI,IAAI,GAAkB,IAAI,qCAAa,EAAE,CAAC;AAE9C,OAAM,CAAC,MAAM,GAAG;KACf,IAAI,MAAM,GAAyC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;KACjF,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;KACnB,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;KACpB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACvB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACnB,YAAY,CAAC,oBAAoB,CAAC,CAAC;AACvC,EAAC,CAAC;AAEF,uBAAsB,GAAW;KAC9B,IAAI,KAAK,GAAG,IAAI,cAAc,EAAE,CAAC;KACjC,KAAK,CAAC,kBAAkB,GAAG;SAC1B,MAAM,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;aACxB,KAAK,CAAC,CAAE;aACR,KAAK,CAAC,CAAE;aACR,KAAK,CAAC,CAAE;aACR,KAAK,CAAC;iBACN,KAAK,CAAC;aACN,KAAK,CAAC;iBACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAC7B,KAAK,CAAC;aACP;iBACC,MAAK,CAAC,yBAAyB,CAAC,CAAC;SACrC,CAAC;KACJ,CAAC;KACC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC7B,KAAK,CAAC,IAAI,EAAE,CAAC;AACf,EAAC;;;;;;;AChCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC3DA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,gBAAgB;AACnF;AACA,8DAA6D,6BAA6B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA;AACA;AACA,kFAAiF,aAAa;AAC9F;AACA;AACA;AACA,kEAAiE,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA,kEAAiE,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iDAAiD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA,4DAA2D,aAAa;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C,sCAAqC,yBAAyB;AAC9D,2CAA0C,8BAA8B;AACxE;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,QAAQ;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,WAAW;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,aAAa;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoF,gBAAgB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,qEAAoE,aAAa;AACjF;AACA,yEAAwE,aAAa;AACrF;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,oCAAoC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,gFAAgF;AAClH;AACA,qCAAoC,mDAAmD;AACvF,gCAA+B,6DAA6D;AAC5F;AACA;AACA;AACA,sFAAqF,WAAW;AAChG;AACA,+EAA8E,aAAa;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,+CAA+C;AAC1E;AACA;AACA;AACA,qHAAoH,WAAW;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iDAAiD;AACxE,4BAA2B,qBAAqB;AAChD;AACA,qEAAoE,WAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,2EAA2E;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,mDAAmD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iHAAgH,WAAW;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF,WAAW;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,sEAAsE;AACtG;AACA;AACA,8EAA6E,WAAW;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E,WAAW;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF,WAAW;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,WAAW;AACvF;AACA,uDAAsD,aAAa;AACnE;AACA,uEAAsE,aAAa;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,qEAAoE,aAAa;AACjF;AACA,yEAAwE,aAAa;AACrF;AACA,yEAAwE,aAAa;AACrF;AACA,+EAA8E,aAAa;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,gEAA+D,aAAa;AAC5E;AACA,oEAAmE,aAAa;AAChF;AACA,oEAAmE,aAAa;AAChF;AACA,+EAA8E,aAAa;AAC3F;AACA,gHAA+G,aAAa;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,gEAA+D,aAAa;AAC5E;AACA,oEAAmE,aAAa;AAChF;AACA,oEAAmE,aAAa;AAChF;AACA,+EAA8E,aAAa;AAC3F;AACA,gHAA+G,aAAa;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,gEAA+D,aAAa;AAC5E;AACA,oEAAmE,aAAa;AAChF;AACA,oEAAmE,aAAa;AAChF;AACA,+EAA8E,aAAa;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA,yEAAwE,aAAa;AACrF;AACA,+EAA8E,aAAa;AAC3F;AACA;AACA,4EAA2E,aAAa;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA6F,WAAW;AACxG;AACA,gGAA+F,aAAa;AAC5G;AACA,2FAA0F,aAAa;AACvG;AACA;AACA,2FAA0F,aAAa;AACvG;AACA;AACA,iGAAgG,aAAa;AAC7G;AACA;AACA,yHAAwH,aAAa;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA6F,WAAW;AACxG;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,8EAA6E,aAAa;AAC1F;AACA,yEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qEAAqE;AAC5F;AACA,4BAA2B,iDAAiD;AAC5E;AACA,oCAAmC,oDAAoD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qEAAqE;AAC5F;AACA,4BAA2B,iDAAiD;AAC5E;AACA,oCAAmC,oDAAoD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,2EAA2E;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qEAAqE;AAC5F;AACA,sFAAqF,WAAW;AAChG;AACA;AACA;AACA,qFAAoF,WAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA,wBAAuB,qEAAqE;AAC5F;AACA,4BAA2B,2CAA2C;AACtE;AACA;AACA;AACA;AACA;AACA,wBAAuB,qEAAqE;AAC5F;AACA,4BAA2B,iDAAiD;AAC5E;AACA,oCAAmC,oDAAoD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AChyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,wBAAuB,2CAA2C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA,8EAA6E,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,6BAA6B;AAC/D;AACA,0EAAyE,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,UAAU;AACrC,4BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,+CAA+C;AAC1E;AACA;AACA,qHAAoH,WAAW;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,+CAA+C;AAC1E,iHAAgH,WAAW;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA,4BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,wCAAwC;AACtD,2EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,QAAQ;AACvC;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,uDAAuD;AACtF;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,uDAAuD;AACvoEAAmE,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,WAAW;AACtE;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAsG,WAAW;AACjH;AACA;AACA;AACA;AACA,wEAAuE,aAAa;AACpF;AACA,iEAAgE,aAAa;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC3yBA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/DA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C,oCAAmC,qEAAqE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,0EAA0E;AAC3E;AACA;AACA;AACA;AACA,EAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,8CAA8C;AAC/C;;;;;;;ACjEA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,uBAAuB;AACzD,uCAAsC,kBAAkB;AACxD,+BAA8B,UAAU;AACxC,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,yBAAwB,QAAQ;AAChwDAAwD;AACzD;;;;;;;AC/SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,wBAAuB;AACvB;AACA,iBAAgB;AAChjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,8BAA8B;AACxE,8BAA6B,SAAS;AACtC,+BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC,0CAA0C;AAC3C;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA,oCAAmC,eAAe;AAClD,sCAAqC,iBAAiB;AACtD,mCAAkC,iBAAiB;AACnqCAAoC,wBAAwB;AAC5D,iCAAgC,oBAAoB;AACprE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gDAAgD;AACjD;;;;;;;ACllBA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C,iCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA,UAAS;AACT,4BAA2B;AAC3B;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D,8BAA6B;AAC7B,uC;;;;;;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,gBAAgB;AACpD,mCAAkC,yBAAysDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,8BAA8B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC,gDAAgD;AACjD;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gDAAgD;AACjD;;;;;;;ACxmDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmnVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oDAAoD;AACrD;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,4BAA4B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,uDAAuD;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA,gEAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,SAAS;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,mBAAmB;AAChF;AACA;AACA;AACA,yEAAwE,YAAY;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,YAAY;AAChE;AACA;AACA,8EAA6E,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,YAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA,0EAAyE,mBAAmB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,aAAa;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA,sCAAqC,8CAA8C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAmF,WAAW;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,2DAA2D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,mBAAmB;AAC3F;AACA;AACA,uCAAsC,0CAA0C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,WAAW;AAC3E;AACA;AACA,mEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACptBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC,8DAA8D;AAC/D;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;AChBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC,4DAA4D;AAC7D;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,0DAA0D;AAC3D;;;;;;;ACVA;AACA;AACA;AACA;AACA,EAAC,gEAAgE;AACjE;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,8BAA8B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA,+DAA8D,aAAa;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA,+DAA8D,aAAa;AAC3E;AACA;AACA;AACA;AACA,iFAAgF,aAAa;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA,+DAA8D,aAAa;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1PA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,sDAAsD;AACvD;;;;;;;ACZA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACdA;AACA;AACA,WAAU,YAAY;AACtwBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACn/CA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,2EAA0E,gBAAgB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,YAAY;AACzC,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sCAAqC,6CAA6C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sCAAqC,6CAA6C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACxJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/DA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA,kEAAiE,aAAa;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,6BAA6B;AAC5D;AACA,wCAAuC,6BAA6B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAuB,gCAAgC;AACvD,wEAAuE,WAAW;AAClF;AACA,uEAAsE,aAAa;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E,WAAW;AACtF;AACA,uEAAsE,aAAa;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,gBAAgB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,WAAW;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACnaA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,gEAA+D,WAAW;AAC1E;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,4DAA2D,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA,wDAAuD,WAAW;AAClE;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA,8DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA,gEAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA,8DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA,gEAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AClTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA,+BAA8B,WAAW;AACzC,oCAAmC,sDAAsD;AACzF,+BAA8B,oCAAoC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACjBA;AACA;AACA;AACA;AACA,EAAC,sCAAsC;AACvC;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;AC9CA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT,4CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oBAAoB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD,oCAAmC;AACnC,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAiD,+BAA+B;AAChF;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,gDAA+C,gBAAgB;;AAE/D;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,gBAAgB;AAC/B,cAAa,gBAAgB;AAC7B,eAAc,gBAAgB;AAC9B,cAAa,gBAAgB;AAC7B,iBAAgB,gBAAgB;AAChC,oBAAmB,gBAAgB;AACnC,uBAAsB,gBAAgB;AACtC,oBAAmB,gBAAgB;AACnC,oBAAmB,gBAAgB;AACnC,iBAAgB,gBAAgB;AAChC,gBAAe;AACf;;AAEA;AACA;;AAEA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qDAAoD;AACpD,sDAAqD;;AAErD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAU,yCAAyC;AACnD,YAAW,wCAAwC;AACnD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,YAAW,yCAAyC;AACpD,aAAY,0CAA0C;AACtD,WAAU,yCAAyC;AACnD,YAAW,wCAAwC;AACnD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,WAAU,yCAAyC;AACnD,YAAW,wCAAwC;AACnD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,WAAU,yCAAyC;AACnD,YAAW,wCAAwC;AACnD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,WAAU,yCAAyC;AACnD,YAAW,wCAAwC;AACnD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,WAAU,yCAAyC;AACnD,YAAW,wCAAwC;AACnD,YAAW,yCAAyC;AACpD,aAAY,0CAA0C;AACtD,YAAW,wCAAwC;AACnD,aAAY,yCAAyC;AACrD,WAAU,0CAA0C;AACpD,YAAW,yCAAyC;AACpD,YAAW,yCAAyC;AACpD,aAAY,0CAA0C;AACtD,YAAW,yCAAyC;AACpD,aAAY,yCAAyC;AACrD,WAAU,mCAAmC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,iCAAiC;AAC5C,YAAW,iCAAiC;AAC5C,YAAW,iCAAiC;AAC5C,YAAW,iCAAiC;;AAE5C;AACA,YAAW,+BAA+B;AAC1C,YAAW,gCAAgC;AAC3C,YAAW,gCAAgC;AAC3C,YAAW,gCAAgC;;AAE3C;AACA,YAAW,+BAA+B;AAC1C,YAAW,iCAAiC;AAC5C,YAAW,gCAAgC;AAC3C,YAAW;AACX;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,OAAM,IAAI;AACV;AACA;AACA;AACA;AACA,MAAK;AACL,OAAM,IAAI;AACV;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAQ,iBAAiB;AACzB,SAAQ,YAAY;AACpB,SAAQ,0DAA0D;AAClE,SAAQ,wEAAwE;AAChF,SAAQ;AACR;AACA,oDAAmD;AACnD,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,iBAAiB;AACpC;AACA,sBAAqB,gCAAgC;AACrD;;AAEA;AACA;;AAEA;AACA,WAAU,oBAAoB;AAC9B,YAAW,oBAAoB;AAC/B,WAAU,mBAAmB;AAC7B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,YAAW,mBAAmB;AAC9B,aAAY,mBAAmB;AAC/B,YAAW,mBAAmB;AAC9B,aAAY,mBAAmB;AAC/B,YAAW,mBAAmB;AAC9B,aAAY,mBAAmB;AAC/B,WAAU,mBAAmB;AAC7B,YAAW,mBAAmB;AAC9B,WAAU,mBAAmB;AAC7B,YAAW,mBAAmB;AAC9B,WAAU,mBAAmB;AAC7B,aAAY,mBAAmB;AAC/B,WAAU,mBAAmB;AAC7B,aAAY,mBAAmB;AAC/B,WAAU,mBAAmB;AAC7B,aAAY,mBAAmB;AAC/B,YAAW,mBAAmB;AAC9B,aAAY,mBAAmB;AAC/B,YAAW,mBAAmB;AAC9B,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;AAC/B;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,oDAAmD;AACnD;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,SAAS;;AAEhC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,8EAA6E;AAC7E;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA,wDAAuD;;AAEvD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA,iCAAgC;AAChC;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAqB,2BAA2B;AAChD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,6BAA4B;AAC5B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8CAA6C;AAC7C,8CAA6C;AAC7C,+CAA8C;AAC9C,+CAA8C;AAC9C;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA,qBAAoB;AACpB;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH,aAAY,UAAU,MAAM,6qBAA6qB,OAAO,gpBAAgpB,OAAO,4nCAA4nC,OAAO,0iCAA0iC,OAAO,smCAAsmC,OAAO,opCAAopC,OAAO,imCAAimC,OAAO,o9BAAo9B,OAAO,46BAA46B,OAAO,6jCAA6jC,OAAO,+bAA+b,OAAO,qRAAqR,OAAO,oHAAoH,OAAO,igBAAigB,OAAO,+kBAA+kB,OAAO,mNAAmN,QAAQ,u6BAAu6B,QAAQ,0dAA0d,QAAQ,utDAAutD,QAAQ,grEAAgrE,QAAQ,0kBAA0kB,QAAQ,6fAA6f,QAAQ,yeAAye,QAAQ,yNAAyN,QAAQ,wnDAAwnD,QAAQ,ogBAAogB,QAAQ,6lBAA6lB,QAAQ,k8BAAk8B,QAAQ,gtCAAgtC,QAAQ,6ZAA6Z,QAAQ,+2BAA+2B,QAAQ,0xDAA0xD,QAAQ,uxCAAuxC,QAAQ,2nBAA2nB,QAAQ,0ZAA0Z,QAAQ,oOAAoO,QAAQ,2mCAA2mC,QAAQ,iPAAiP,QAAQ,qmCAAqmC,QAAQ,+tBAA+tB,QAAQ,wIAAwI,QAAQ,8kDAA8kD,QAAQ,osCAAosC,QAAQ,0HAA0H,QAAQ,w5CAAw5C,QAAQ,gvBAAgvB,QAAQ,o/BAAo/B,QAAQ,42GAA42G,QAAQ,ukEAAukE,QAAQ,uHAAuH,QAAQ,s7BAAs7B,QAAQ,gwCAAgwC,QAAQ,yhBAAyhB,QAAQ,wnDAAwnD,QAAQ,o/FAAo/F,QAAQ,8iEAA8iE,QAAQ,6nDAA6nD,QAAQ,2zCAA2zC,QAAQ,4ZAA4Z,QAAQ,83BAA83B,QAAQ,o7BAAo7B,QAAQ,i/EAAi/E,QAAQ,mwBAAmwB,QAAQ,gkCAAgkC,QAAQ,+lBAA+lB,QAAQ,kwBAAkwB,QAAQ,gkBAAgkB,QAAQ,ynBAAynB,QAAQ,4jBAA4jB,QAAQ,+lCAA+lC,QAAQ,k3BAAk3B,QAAQ,y8CAAy8C,QAAQ,6jCAA6jC,QAAQ,k8BAAk8B,QAAQ,q4BAAq4B,QAAQ,srBAAsrB,QAAQ,ogBAAogB,QAAQ,miDAAmiD,QAAQ,2sBAA2sB,QAAQ,snCAAsnC,QAAQ,uaAAua,QAAQ,grEAAgrE,QAAQ,0tBAA0tB,QAAQ,opDAAopD,QAAQ,2YAA2Y,QAAQ,6vCAA6vC,QAAQ,2NAA2N,QAAQ,4lBAA4lB,QAAQ,44CAA44C,QAAQ,oNAAoN,QAAQ,+ZAA+Z,QAAQ,qrBAAqrB,QAAQ,0HAA0H,QAAQ,m5EAAm5E,QAAQ,seAAse,QAAQ,gqBAAgqB,QAAQ,8zCAA8zC,QAAQ,0kCAA0kC,QAAQ,kiEAAkiE,QAAQ,+jBAA+jB,QAAQ,uZAAuZ,QAAQ,u2BAAu2B,QAAQ,yKAAyK,QAAQ,+mDAA+mD,QAAQ,ipDAAipD,QAAQ,0hBAA0hB,QAAQ,wNAAwN,QAAQ,2sGAA2sG,QAAQ,4WAA4W,QAAQ,8yCAA8yC,QAAQ,6kBAA6kB,QAAQ,+VAA+V,QAAQ,kcAAkc,QAAQ,gfAAgf,QAAQ,i9BAAi9B,QAAQ,whFAAwhF,QAAQ,ugBAAugB,QAAQ,iaAAia,QAAQ,uTAAuT,QAAQ,mTAAmT,QAAQ,snCAAsnC,QAAQ,ynCAAynC,QAAQ,06EAA06E,QAAQ,8nBAA8nB,QAAQ,giCAAgiC,QAAQ,+lBAA+lB,QAAQ,6lEAA6lE,QAAQ,ufAAuf,QAAQ,+jCAA+jC,QAAQ,4eAA4e,QAAQ,woCAAwoC,QAAQ,8nFAA8nF,QAAQ,mZAAmZ,QAAQ,4jBAA4jB,QAAQ,yqCAAyqC,QAAQ,6BAA6B,QAAQ,4sDAA4sD,QAAQ,oRAAoR,QAAQ,4fAA4f,QAAQ,6nBAA6nB,QAAQ,6rDAA6rD,QAAQ,unDAAunD,QAAQ,+mBAA+mB,QAAQ,kuBAAkuB,QAAQ,soDAAsoD,QAAQ,y6FAAy6F,QAAQ,89CAA89C,QAAQ,0uBAA0uB,QAAQ,mtBAAmtB,QAAQ,k+CAAk+C,QAAQ,2jBAA2jB,QAAQ,2aAA2a,QAAQ,g/BAAg/B,QAAQ,2sBAA2sB,QAAQ,ucAAuc,QAAQ,s4EAAs4E,QAAQ,8eAA8e,QAAQ,0sCAA0sC,QAAQ,woCAAwoC,QAAQ,y6DAAy6D,QAAQ,yhBAAyhB,QAAQ,uzBAAuzB,QAAQ,ufAAuf,QAAQ,kkBAAkkB,QAAQ,qmCAAqmC,QAAQ,0kBAA0kB,QAAQ,moBAAmoB,QAAQ,ieAAie,QAAQ,4OAA4O,QAAQ,u0DAAu0D,QAAQ,08DAA08D,QAAQ,4lBAA4lB,QAAQ,+gEAA+gE,QAAQ,2uDAA2uD,QAAQ,ggDAAggD,QAAQ,qhBAAqhB,QAAQ,0uBAA0uB,QAAQ,+7BAA+7B,QAAQ,mTAAmT,QAAQ,4XAA4X,QAAQ,o4CAAo4C,QAAQ,0gBAA0gB,QAAQ,2pCAA2pC,QAAQ,o9BAAo9B,QAAQ,oNAAoN,QAAQ,mbAAmb,QAAQ,oqCAAoqC,QAAQ,uXAAuX,QAAQ,6eAA6e,QAAQ,6jCAA6jC,QAAQ,snBAAsnB,QAAQ,ggDAAggD,QAAQ,u7CAAu7C,QAAQ,0tBAA0tB,QAAQ,kmEAAkmE,QAAQ,0tBAA0tB,0GAA0G,yEAAyE,gDAAgD,8aAA8a;;AAEjm+L;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,QAAQ;AACzB;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,eAAe;AACtC;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA,iBAAgB;AAChB;;AAEA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,uDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wDAAuD;AACvD;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA,UAAS;AACT;;AAEA,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA,0BAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,0BAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB;AACrB;;AAEA;;AAEA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wDAAuD,wCAAwC;AAC/F;AACA;;AAEA;AACA,0BAAyB,uBAAuB;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,oCAAmC;AACnC;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,wBAAuB,iCAAiC;AACxD;AACA;;AAEA,0BAAyB,uBAAuB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B,6BAA4B;;AAE5B;AACA,oBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,iCAAgC,yBAAyB;AACzD,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAA+B;AAC/B;AACA;;AAEA;AACA,uBAAsB;AACtB,6BAA4B;AAC5B,8BAA6B;AAC7B,yBAAwB;AACxB,4BAA2B;AAC3B,6BAA4B;AAC5B,0BAAyB;AACzB,kCAAiC;AACjC,qBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8BAA6B;AAC7B;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8BAA6B;AAC7B;AACA,MAAK;AACL;AACA;AACA,+BAA8B;AAC9B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA,sBAAqB;AACrB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;;AAEP;;AAEA,MAAK;AACL;AACA;AACA,mCAAkC;AAClC;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,oBAAoB;AAC3C;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,mCAAkC;AAClC;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,kCAAiC;AACjC;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,+BAA8B;AAC9B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,sBAAqB,aAAa;AAClC;AACA;;AAEA,0BAAyB,uDAAuD;AAChF;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,6BAA4B;AAC5B;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC;AACnC;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,kBAAkB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yBAAwB,uBAAuB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB;;AAEhD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,4BAA2B,WAAW;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;;AAEA;AACA;AACA;;AAEA,0BAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,0BAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;;AAEA,iBAAgB;AAChB;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA0B,sBAAsB;AAChD;AACA;;AAEA,4BAA2B,sBAAsB;AACjD;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA,uDAAsD,oBAAoB;AAC1E;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA8C,oBAAoB;AAClE;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,+CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA0B,4FAA4F;AACtH;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA,YAAW;AACX;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA,0BAAyB;AACzB,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8BAA6B;AAC7B;AACA,MAAK;AACL;AACA;AACA,2BAA0B;AAC1B;AACA,MAAK;AACL;AACA;AACA,2BAA0B;AAC1B;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAqB,eAAe;AACpC;AACA;AACA,UAAS;AACT,uBAAsB,eAAe;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,sBAAqB,yBAAyB;AAC9C,kBAAiB,0BAA0B;AAC3C,kBAAiB,yBAAyB;AAC1C,kBAAiB,0BAA0B;AAC3C,kBAAiB,yBAAyB;AAC1C,kBAAiB,yBAAyB;AAC1C,oBAAmB,0BAA0B;AAC7C,kBAAiB,yBAAyB;AAC1C,kBAAiB,0BAA0B;AAC3C,kBAAiB,yBAAyB;AAC1C,kBAAiB,0BAA0B;AAC3C,kBAAiB,yBAAyB;AAC1C,sBAAqB;AACrB;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,iBAAgB,4BAA4B;AAC5C,kBAAiB,4BAA4B;AAC7C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,kBAAiB,6BAA6B;AAC9C,mBAAkB,6BAA6B;AAC/C,iBAAgB,4BAA4B;AAC5C,kBAAiB,4BAA4B;AAC7C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,iBAAgB,4BAA4B;AAC5C,kBAAiB,4BAA4B;AAC7C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,iBAAgB,4BAA4B;AAC5C,kBAAiB,4BAA4B;AAC7C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,iBAAgB,4BAA4B;AAC5C,kBAAiB,4BAA4B;AAC7C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,iBAAgB,4BAA4B;AAC5C,kBAAiB,4BAA4B;AAC7C,kBAAiB,6BAA6B;AAC9C,mBAAkB,6BAA6B;AAC/C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,iBAAgB,6BAA6B;AAC7C,kBAAiB,6BAA6B;AAC9C,kBAAiB,4BAA4B;AAC7C,mBAAkB,4BAA4B;AAC9C,kBAAiB,6BAA6B;AAC9C,mBAAkB;AAClB;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,qEAAqE;AAC/F,YAAW;AACX,2BAA0B,4CAA4C;AACtE;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB,qBAAqB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qFAAoF,eAAe;AACnG;AACA;;AAEA;AACA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,wCAAwC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX,sCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB,uBAAuB;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB,qBAAqB;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET,0BAAyB,2BAA2B;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA,YAAW;AACX,UAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;AACT;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,iDAAgD;AAChD,kDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,oCAAmC;AACnC;;AAEA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,QAAQ;AAC1B;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA,wBAAuB,+BAA+B;AACtD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,kDAAkD;AAC/E,YAAW;AACX,8BAA6B,kDAAkD;AAC/E;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,2CAA2C;AACtE,YAAW;AACX;AACA,4BAA2B,sCAAsC;AACjE;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,qBAAqB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA,qCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8BAA6B;AAC7B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA,0BAAyB,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,2BAA0B,WAAW;AACrC;AACA;AACA,YAAW;AACX,2BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;;AAEA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA,YAAW;AACX;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,gDAA+C;AAC/C;AACA;AACA,0BAAyB;AACzB,0BAAyB;AACzB,2BAA0B;AAC1B,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,qCAAoC;AACpC;AACA,MAAK;AACL;AACA;AACA,2BAA0B;AAC1B;AACA,MAAK;AACL;AACA;AACA,2BAA0B;AAC1B;AACA,MAAK;AACL;AACA;AACA,+BAA8B;AAC9B;AACA,MAAK;AACL;AACA;AACA,8BAA6B;AAC7B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;;AAEA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,2BAA0B;AAC1B,uBAAsB;AACtB,4BAA2B;AAC3B,6BAA4B;AAC5B;;AAEA,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,sCAAqC;AACrC;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,iBAAgB;AAChB;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,wBAAuB,2BAA2B;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,0BAAyB,kCAAkC;AAC3D,+CAA8C,4BAA4B;AAC1E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,eAAe;AACnD,kFAAiF,kBAAkB;AACnG;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA6C,mCAAmC,iCAAiC,mCAAmC;;AAEpJ;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAiD,gCAAgC,sEAAsE,gCAAgC;;AAEvL;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC;;AAExC;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,cAAa;AACb,YAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,kCAAiC;AACjC;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,2CAA0C;AAC1C,qDAAoD;AACpD;AACA,qBAAoB;AACpB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,4BAA2B;AAC3B;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA4D,eAAe;;AAE3E,wDAAuD;;AAEvD;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA,iCAAgC;AAChC;AACA,6BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,4BAA4B;AACtD;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB,kCAAiC;;AAEjC;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA,yEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA,yEAAwE;AACxE;AACA;AACA;AACA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,yBAAyB;AAC9C;AACA;AACA,UAAS;AACT,sBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,yBAAyB;AAClD;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,qBAAqB;AACnC;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA,iBAAgB;AAChB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,4BAA4B;AACnD,0CAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB;AACnB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA,uCAAsC,QAAQ;AAC9C,0BAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,yBAAyB;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,kBAAkB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,MAAM;AACxB;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,qBAAqB;AAC7C;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;;AAEA,2BAA0B;AAC1B;AACA;AACA,wDAAuD,kBAAkB;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAqB;AACrB,UAAS;AACT,gCAA+B;AAC/B,YAAW;AACX;AACA;AACA;;AAEA,iBAAgB;AAChB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA,iBAAgB;AAChB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,2BAA2B;AAClD;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA,+FAA8F,gBAAgB;;AAE9G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA,kGAAiG,gBAAgB;;AAEjH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAqB,gDAAgD;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAuB,+BAA+B;AACtD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAuB,wBAAwB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB,kBAAiB,QAAQ;AACzB;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc,GAAG,cAAc;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,QAAQ;AAC1B;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA,MAAK;AACL;AACA;AACA,gCAA+B;AAC/B;AACA;;AAEA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB,qBAAoB;;AAEpB;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8FAA6F,gBAAgB;;AAE7G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,8BAA6B;AAC7B;;AAEA;AACA;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA,kCAAiC;AACjC;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;AACD,0C;;;;;;AClwjBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACdA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzsDAAqD,WAAW;AAChE;AACA,4EAA2E,aAAa;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/GA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACtBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,uBAAuB;AAC1D,wCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjgBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,gBAAgB;AAC1E;AACA;AACA,mDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/QA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mBAAmB;AAClD,8CAA6C,iCAAiC;AAC9E,oCAAmC,uBAAuyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA,uFAAsF,aAAa;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA,gGAA+F,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,WAAW;AACzD;AACA;AACA,gEAA+D,aAAa;AAC5E;AACA,4EAA2E,aAAa;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/OA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AClBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,8BAA8B;AACxE,2CAA0C,8BAA8B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,WAAW;AACjE;AACA,iEAAgE,aAAa;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,6DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AChRA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACvCA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,kEAAiE,iCAAiC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAqF,WAAW;AAChG;AACA,6GAA4G,mBAAmB;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE,iCAAiC;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,WAAW;AACxE;AACA;AACA;AACA;AACA,2DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA,yCAAwC,2DAA2D;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mEAAmE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,QAAQ;AAC/F,4GAA2G,QAAQ;AACnH;AACA;AACA,2EAA0E,QAAQ;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,QAAQ;AAC/F;AACA,mHAAkH,WAAW;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,WAAW;AACxD;AACA,uDAAsD,aAAa;AACnE;AACA;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA2F,aAAa;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoF,aAAa;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC9wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA,gEAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,WAAW;AACnF;AACA,mEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF,WAAW;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA,iDAAgD;AAChD;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,2EAA0E,WAAW;AACrF;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,4DAA2D,WAAW;AACtE;AACA,oFAAmF,aAAa;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACnmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA6G;AAC7G;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,QAAQ;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,qCAAoC,mDAAmD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE;AACtgBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,4EAA4E;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,0EAA0E;AAC7I;AACA,0FAAyF,OAAO;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAsF,WAAW;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,mDAAmD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,iEAAgE,gBAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC3BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzmDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC,sDAAsD;AACvD;;;;;;;ACxBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,WAAU,4BAA4B;AACtkEAAiE,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,kDAAkD;AACnD;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,kFAAkF;AACnF;;;;;;;ACTA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,6BAA6B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,uCAAsC,qBAAqB;AAC3D;AACA,4BAA2B,0CAA0C;AACrE,wGAAuG,gBAAgB;AACvH;AACA;AACA;AACA,6EAA4E,gBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC7NA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,4BAA4B;AACnuEAAsE,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,QAAQ;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,gDAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mCAAmC;AAC1D;AACA;AACA,4BAA2B,6CAA6C;AACxE;AACA;AACA;AACA,6DAA4D,QAAQ;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mCAAmC;AAC1D;AACA;AACA,4BAA2B,6CAA6C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF,kBAAkB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,QAAQ;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AClZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE,iCAAiC;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,yEAAyE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoqDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,0DAA0D;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,0DAA0D;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACz3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA,yGAAwG,aAAa;AACrrE;AACA;AACA;AACA;AACA,sEAAqE,aAAa;AAClvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E,WAAW;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,WAAW;AACxoGAAmG,WAAW;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA0F,WAAW;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E,WAAW;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,kBAAkB,EAAE,EAAE;AACzD,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACv0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4CAA4C;AAC7C;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,uDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA,gEAA+D,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,4CAA2C,QAAQ;AACnD,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC5GA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,+DAA8D,gBAAgB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,gBAAgB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA,uDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,8DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA,yDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA,mEAAkE,gBAAgB;AAClF;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,mBAAmB;AAC1D,gCAA+B,8CAA8C;AAC7E;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,iDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACrbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,kDAAkD;AACnD;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA,EAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,0EAA0E;AAC3E;AACA;AACA;AACA;AACA;AACA,EAAC,4DAA4D;AAC7D","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 36cb9a05bc4b5563123b\n **/","import { MusicSheetAPI } from \"opensheetmusicdisplay\";\n\nlet osmd: MusicSheetAPI = new MusicSheetAPI();\n\nwindow.onload = function () {\n\tlet canvas: HTMLCanvasElement = <HTMLCanvasElement>document.createElement(\"canvas\");\n    canvas.width = 800;\n    canvas.height = 600;\n    document.body.appendChild(canvas);\n    osmd.setCanvas(canvas);\n    osmd.setWidth(800);\n    loadMusicXML(\"musicXmlSample.xml\");\n};\n\nfunction loadMusicXML(url: string) {\n   var xhttp = new XMLHttpRequest();\n   xhttp.onreadystatechange = function () {\n\t   switch (xhttp.readyState) {\n\t      case 0 : // UNINITIALIZED\n\t      case 1 : // LOADING\n\t      case 2 : // LOADED\n\t      case 3 : // INTERACTIVE\n\t      break;\n\t      case 4 : // COMPLETED\n\t      \tosmd.load(xhttp.responseXML);\n\t      \tbreak;\n\t      default:\n\t      \tthrow(\"Error loading MusicXML.\");\n\t   }\n\t}\n   xhttp.open(\"GET\", url, true);\n   xhttp.send();\n }\n\n\n/** WEBPACK FOOTER **\n ** index.ts\n **/","\"use strict\";\nvar Xml_1 = require(\"./Common/FileIO/Xml\");\nvar VexFlowMusicSheetCalculator_1 = require(\"./MusicalScore/Graphical/VexFlow/VexFlowMusicSheetCalculator\");\nvar MusicSheetReader_1 = require(\"./MusicalScore/ScoreIO/MusicSheetReader\");\nvar GraphicalMusicSheet_1 = require(\"./MusicalScore/Graphical/GraphicalMusicSheet\");\nvar VexFlowMusicSheetDrawer_1 = require(\"./MusicalScore/Graphical/VexFlow/VexFlowMusicSheetDrawer\");\nvar VexFlowTextMeasurer_1 = require(\"./MusicalScore/Graphical/VexFlow/VexFlowTextMeasurer\");\nvar MusicSheetAPI = (function () {\n    function MusicSheetAPI() {\n        this.zoom = 1.0;\n        this.unit = 10;\n        return;\n    }\n    MusicSheetAPI.prototype.load = function (sheet) {\n        var score = new Xml_1.IXmlElement(sheet.getElementsByTagName(\"score-partwise\")[0]);\n        var calc = new VexFlowMusicSheetCalculator_1.VexFlowMusicSheetCalculator();\n        var reader = new MusicSheetReader_1.MusicSheetReader();\n        this.sheet = reader.createMusicSheet(score, \"path missing\");\n        this.graphic = new GraphicalMusicSheet_1.GraphicalMusicSheet(this.sheet, calc);\n        this.display();\n    };\n    MusicSheetAPI.prototype.setCanvas = function (canvas) {\n        this.canvas = canvas;\n        this.drawer = new VexFlowMusicSheetDrawer_1.VexFlowMusicSheetDrawer(canvas, new VexFlowTextMeasurer_1.VexFlowTextMeasurer());\n    };\n    MusicSheetAPI.prototype.setWidth = function (width) {\n        if (width === this.width) {\n            return;\n        }\n        this.width = width;\n        this.display();\n    };\n    MusicSheetAPI.prototype.scale = function (k) {\n        this.zoom = k;\n        this.display();\n    };\n    MusicSheetAPI.prototype.display = function () {\n        if (this.width === undefined) {\n            return;\n        }\n        if (this.canvas === undefined) {\n            return;\n        }\n        if (this.sheet === undefined) {\n            return;\n        }\n        this.sheet.pageWidth = this.width / this.zoom / this.unit;\n        this.graphic.reCalculate();\n        // Update Sheet Page\n        var height = this.graphic.MusicPages[0].PositionAndShape.BorderBottom * this.unit * this.zoom;\n        this.drawer.resize(this.width, height);\n        // Fix the label problem\n        this.drawer.translate(0, 100);\n        this.drawer.scale(this.zoom);\n        this.drawer.drawSheet(this.graphic);\n    };\n    MusicSheetAPI.prototype.free = function () {\n        this.canvas = undefined;\n        this.sheet = undefined;\n        return;\n    };\n    return MusicSheetAPI;\n}());\nexports.MusicSheetAPI = MusicSheetAPI;\nwindow.osmd = {\n    \"MusicSheet\": MusicSheetAPI,\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicSheetApi.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar IXmlElement = (function () {\n    function IXmlElement(elem) {\n        this.hasAttributes = false;\n        this.elem = elem;\n        this.name = elem.nodeName.toLowerCase();\n        if (elem.hasAttributes()) {\n            this.hasAttributes = true;\n            this.firstAttribute = elem.attributes[0];\n        }\n        this.hasElements = elem.hasChildNodes();\n        // Look for a value\n        if (elem.childNodes.length === 1 && elem.childNodes[0].nodeType === Node.TEXT_NODE) {\n            this.value = elem.childNodes[0].nodeValue;\n        }\n        else {\n            this.value = \"\";\n        }\n    }\n    IXmlElement.prototype.attribute = function (attributeName) {\n        return this.elem.attributes.getNamedItem(attributeName);\n    };\n    IXmlElement.prototype.attributes = function () {\n        if (typeof this.attrs === \"undefined\") {\n            var attributes = this.elem.attributes;\n            var attrs = [];\n            for (var i = 0; i < attributes.length; i += 1) {\n                attrs.push(attributes[i]);\n            }\n            this.attrs = attrs;\n        }\n        return this.attrs;\n    };\n    IXmlElement.prototype.element = function (elementName) {\n        return this.elements(elementName)[0];\n    };\n    IXmlElement.prototype.elements = function (nodeName) {\n        var nodes = this.elem.childNodes;\n        var ret = [];\n        var nameUnset = nodeName === undefined;\n        if (!nameUnset) {\n            nodeName = nodeName.toLowerCase();\n        }\n        // console.log(\"-\", nodeName, nodes.length, this.elem.childElementCount, this.elem.getElementsByTagName(nodeName).length);\n        // if (nodeName === \"measure\") {\n        //   console.log(this.elem);\n        // }\n        for (var i = 0; i < nodes.length; i += 1) {\n            var node = nodes[i];\n            //console.log(\"node: \", this.elem.nodeName, \">>\", node.nodeName, node.nodeType === Node.ELEMENT_NODE);\n            if (node.nodeType === Node.ELEMENT_NODE &&\n                (nameUnset || node.nodeName.toLowerCase() === nodeName)) {\n                ret.push(new IXmlElement(node));\n            }\n        }\n        return ret;\n    };\n    return IXmlElement;\n}());\nexports.IXmlElement = IXmlElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/FileIO/Xml.js\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MusicSheetCalculator_1 = require(\"../MusicSheetCalculator\");\nvar VexFlowGraphicalSymbolFactory_1 = require(\"./VexFlowGraphicalSymbolFactory\");\nvar VexFlowTextMeasurer_1 = require(\"./VexFlowTextMeasurer\");\nvar Vex = require(\"vexflow\");\nvar VexFlowMusicSheetCalculator = (function (_super) {\n    __extends(VexFlowMusicSheetCalculator, _super);\n    function VexFlowMusicSheetCalculator() {\n        _super.call(this, new VexFlowGraphicalSymbolFactory_1.VexFlowGraphicalSymbolFactory());\n        MusicSheetCalculator_1.MusicSheetCalculator.TextMeasurer = new VexFlowTextMeasurer_1.VexFlowTextMeasurer();\n    }\n    VexFlowMusicSheetCalculator.prototype.clearRecreatedObjects = function () {\n        _super.prototype.clearRecreatedObjects.call(this);\n        for (var _i = 0, _a = this.graphicalMusicSheet.MeasureList; _i < _a.length; _i++) {\n            var staffMeasures = _a[_i];\n            for (var _b = 0, staffMeasures_1 = staffMeasures; _b < staffMeasures_1.length; _b++) {\n                var staffMeasure = staffMeasures_1[_b];\n                staffMeasure.clean();\n            }\n        }\n    };\n    //protected clearSystemsAndMeasures(): void {\n    //    for (let measure of measures) {\n    //\n    //    }\n    //}\n    /**\n     * Calculates the x layout of the staff entries within the staff measures belonging to one source measure.\n     * All staff entries are x-aligned throughout all vertically aligned staff measures.\n     * This method is called within calculateXLayout.\n     * The staff entries are aligned with minimum needed x distances.\n     * The MinimumStaffEntriesWidth of every measure will be set - needed for system building.\n     * @param measures\n     * @returns the minimum required x width of the source measure (=list of staff measures)\n     */\n    VexFlowMusicSheetCalculator.prototype.calculateMeasureXLayout = function (measures) {\n        // Finalize beams\n        for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n            var measure = measures_1[_i];\n            measure.finalizeBeams();\n        }\n        // Format the voices\n        var allVoices = [];\n        var formatter = new Vex.Flow.Formatter();\n        for (var _a = 0, measures_2 = measures; _a < measures_2.length; _a++) {\n            var measure = measures_2[_a];\n            var mvoices = measure.vfVoices;\n            var voices = [];\n            for (var voiceID in mvoices) {\n                if (mvoices.hasOwnProperty(voiceID)) {\n                    voices.push(mvoices[voiceID]);\n                    allVoices.push(mvoices[voiceID]);\n                }\n            }\n            if (voices.length === 0) {\n                console.warn(\"Found a measure with no voices... Continuing anyway.\", mvoices);\n                continue;\n            }\n            formatter.joinVoices(voices);\n        }\n        var firstMeasure = measures[0];\n        var width = formatter.preCalculateMinTotalWidth(allVoices) / firstMeasure.unit;\n        for (var _b = 0, measures_3 = measures; _b < measures_3.length; _b++) {\n            var measure = measures_3[_b];\n            measure.minimumStaffEntriesWidth = width;\n            measure.formatVoices = undefined;\n        }\n        firstMeasure.formatVoices = function (w) {\n            formatter.format(allVoices, w);\n        };\n        return width;\n    };\n    VexFlowMusicSheetCalculator.prototype.updateStaffLineBorders = function (staffLine) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.calculateMeasureNumberPlacement = function (musicSystem) {\n        return;\n    };\n    /**\n     * Can be used to calculate stem directions, helper(ledger) lines, and overlapping note x-displacement.\n     * Is Excecuted per voice entry of a staff entry.\n     * After that layoutStaffEntry is called.\n     * @param voiceEntry\n     * @param graphicalNotes\n     * @param graphicalStaffEntry\n     * @param hasPitchedNote\n     * @param isGraceStaffEntry\n     */\n    VexFlowMusicSheetCalculator.prototype.layoutVoiceEntry = function (voiceEntry, graphicalNotes, graphicalStaffEntry, hasPitchedNote, isGraceStaffEntry) {\n        return;\n    };\n    /**\n     * Do all layout calculations that have to be done per staff entry, like dots, ornaments, arpeggios....\n     * This method is called after the voice entries are handled by layoutVoiceEntry().\n     * @param graphicalStaffEntry\n     */\n    VexFlowMusicSheetCalculator.prototype.layoutStaffEntry = function (graphicalStaffEntry) {\n        graphicalStaffEntry.parentMeasure.layoutStaffEntry(graphicalStaffEntry);\n    };\n    /**\n     * calculates the y positions of the staff lines within a system and\n     * furthermore the y positions of the systems themselves.\n     */\n    VexFlowMusicSheetCalculator.prototype.calculateSystemYLayout = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            if (!this.leadSheet) {\n                var globalY = 0;\n                for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                    var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                    // calculate y positions of stafflines within system\n                    var y = 0;\n                    for (var _i = 0, _a = musicSystem.StaffLines; _i < _a.length; _i++) {\n                        var line = _a[_i];\n                        line.PositionAndShape.RelativePosition.y = y;\n                        y += 10;\n                    }\n                    // set y positions of systems using the previous system and a fixed distance.\n                    musicSystem.PositionAndShape.BorderBottom = y + 10;\n                    musicSystem.PositionAndShape.RelativePosition.y = globalY;\n                    globalY += y + 10;\n                }\n            }\n        }\n    };\n    /**\n     * Is called at the begin of the method for creating the vertically aligned staff measures belonging to one source measure.\n     */\n    VexFlowMusicSheetCalculator.prototype.initStaffMeasuresCreation = function () {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.handleTie = function (tie, startGraphicalStaffEntry, staffIndex, measureIndex) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.layoutGraphicalTie = function (tie, tieIsAtSystemBreak) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.calculateSingleStaffLineLyricsPosition = function (staffLine, lyricVersesNumber) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.calculateSingleOctaveShift = function (sourceMeasure, multiExpression, measureIndex, staffIndex) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.calculateWordRepetitionInstruction = function (repetitionInstruction, measureIndex) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.calculateMoodAndUnknownExpression = function (multiExpression, measureIndex, staffIndex) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.createGraphicalTieNote = function (beams, activeClef, octaveShiftValue, graphicalStaffEntry, duration, numberOfDots, openTie, isLastTieNote) {\n        return;\n    };\n    /**\n     * Is called if a note is part of a beam.\n     * @param graphicalNote\n     * @param beam\n     * @param openBeams a list of all currently open beams\n     */\n    VexFlowMusicSheetCalculator.prototype.handleBeam = function (graphicalNote, beam, openBeams) {\n        graphicalNote.parentStaffEntry.parentMeasure.handleBeam(graphicalNote, beam);\n    };\n    VexFlowMusicSheetCalculator.prototype.handleVoiceEntryLyrics = function (lyricsEntries, voiceEntry, graphicalStaffEntry, openLyricWords) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.handleVoiceEntryOrnaments = function (ornamentContainer, voiceEntry, graphicalStaffEntry) {\n        return;\n    };\n    VexFlowMusicSheetCalculator.prototype.handleVoiceEntryArticulations = function (articulations, voiceEntry, graphicalStaffEntry) {\n        return;\n    };\n    /**\n     * Is called if a note is part of a tuplet.\n     * @param graphicalNote\n     * @param tuplet\n     * @param openTuplets a list of all currently open tuplets\n     */\n    VexFlowMusicSheetCalculator.prototype.handleTuplet = function (graphicalNote, tuplet, openTuplets) {\n        return;\n    };\n    return VexFlowMusicSheetCalculator;\n}(MusicSheetCalculator_1.MusicSheetCalculator));\nexports.VexFlowMusicSheetCalculator = VexFlowMusicSheetCalculator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMusicSheetCalculator.js\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\nvar GraphicalMusicSheet_1 = require(\"./GraphicalMusicSheet\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar Note_1 = require(\"../VoiceData/Note\");\nvar ClefInstruction_1 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar octaveShift_1 = require(\"../VoiceData/Expressions/ContinuousExpressions/octaveShift\");\nvar VoiceEntry_1 = require(\"../VoiceData/VoiceEntry\");\nvar MusicSystemBuilder_1 = require(\"./MusicSystemBuilder\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar SourceStaffEntry_1 = require(\"../VoiceData/SourceStaffEntry\");\nvar GraphicalLabel_1 = require(\"./GraphicalLabel\");\nvar TextAlignment_1 = require(\"../../Common/Enums/TextAlignment\");\nvar KeyInstruction_1 = require(\"../VoiceData/Instructions/KeyInstruction\");\nvar ClefInstruction_2 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar LinkedVoice_1 = require(\"../VoiceData/LinkedVoice\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar OctaveShiftParams_1 = require(\"./OctaveShiftParams\");\nvar AccidentalCalculator_1 = require(\"./AccidentalCalculator\");\nvar ClefInstruction_3 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar logging_1 = require(\"../../Common/logging\");\nvar Dictionary_1 = require(\"typescript-collections/dist/lib/Dictionary\");\nvar collectionUtil_1 = require(\"../../Util/collectionUtil\");\nvar MusicSheetCalculator = (function () {\n    function MusicSheetCalculator(symbolFactory) {\n        this.staffEntriesWithGraphicalTies = [];\n        this.staffEntriesWithOrnaments = [];\n        this.staffEntriesWithChordSymbols = [];\n        this.staffLinesWithLyricWords = [];\n        this.staffLinesWithGraphicalExpressions = [];\n        this.symbolFactory = symbolFactory;\n    }\n    Object.defineProperty(MusicSheetCalculator, \"TextMeasurer\", {\n        get: function () {\n            return MusicSheetCalculator.textMeasurer;\n        },\n        set: function (value) {\n            MusicSheetCalculator.textMeasurer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheetCalculator.prototype, \"leadSheet\", {\n        get: function () {\n            return this.graphicalMusicSheet.LeadSheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheetCalculator.addTieToTieTimestampsDict = function (tieTimestampListDict, note) {\n        note.NoteTie.initializeBoolList();\n        var tieTimestampList = [];\n        for (var m = 0; m < note.NoteTie.Fractions.length; m++) {\n            var musicTimestamp = void 0;\n            if (m === 0) {\n                musicTimestamp = fraction_1.Fraction.plus(note.calculateNoteLengthWithoutTie(), note.getAbsoluteTimestamp());\n            }\n            else {\n                musicTimestamp = fraction_1.Fraction.plus(tieTimestampList[m - 1], note.NoteTie.Fractions[m - 1]);\n            }\n            tieTimestampList.push(musicTimestamp);\n        }\n        tieTimestampListDict.setValue(note.NoteTie, tieTimestampList);\n    };\n    MusicSheetCalculator.setMeasuresMinStaffEntriesWidth = function (measures, minimumStaffEntriesWidth) {\n        for (var idx = 0, len = measures.length; idx < len; ++idx) {\n            var measure = measures[idx];\n            measure.minimumStaffEntriesWidth = minimumStaffEntriesWidth;\n        }\n    };\n    MusicSheetCalculator.prototype.initialize = function (graphicalMusicSheet) {\n        this.graphicalMusicSheet = graphicalMusicSheet;\n        this.rules = graphicalMusicSheet.ParentMusicSheet.rules;\n        this.prepareGraphicalMusicSheet();\n        this.calculate();\n    };\n    MusicSheetCalculator.prototype.prepareGraphicalMusicSheet = function () {\n        //this.graphicalMusicSheet.SystemImages.length = 0;\n        var musicSheet = this.graphicalMusicSheet.ParentMusicSheet;\n        this.staffEntriesWithGraphicalTies = [];\n        this.staffEntriesWithOrnaments = [];\n        this.staffEntriesWithChordSymbols = [];\n        this.staffLinesWithLyricWords = [];\n        this.staffLinesWithGraphicalExpressions = [];\n        this.graphicalMusicSheet.Initialize();\n        var measureList = this.graphicalMusicSheet.MeasureList;\n        var accidentalCalculators = this.createAccidentalCalculators();\n        var activeClefs = this.graphicalMusicSheet.initializeActiveClefs();\n        var lyricWords = [];\n        var completeNumberOfStaves = musicSheet.getCompleteNumberOfStaves();\n        var openOctaveShifts = [];\n        var tieTimestampListDictList = [];\n        for (var i = 0; i < completeNumberOfStaves; i++) {\n            var tieTimestampListDict = new Dictionary_1.default();\n            tieTimestampListDictList.push(tieTimestampListDict);\n            openOctaveShifts.push(undefined);\n        }\n        for (var idx = 0, len = musicSheet.SourceMeasures.length; idx < len; ++idx) {\n            var sourceMeasure = musicSheet.SourceMeasures[idx];\n            var graphicalMeasures = this.createGraphicalMeasuresForSourceMeasure(sourceMeasure, accidentalCalculators, lyricWords, tieTimestampListDictList, openOctaveShifts, activeClefs);\n            measureList.push(graphicalMeasures);\n        }\n        this.handleStaffEntries();\n        this.calculateVerticalContainersList();\n        this.setIndecesToVerticalGraphicalContainers();\n    };\n    MusicSheetCalculator.prototype.calculate = function () {\n        this.clearSystemsAndMeasures();\n        this.clearRecreatedObjects();\n        this.createGraphicalTies();\n        this.calculateSheetLabelBoundingBoxes();\n        this.calculateXLayout(this.graphicalMusicSheet, this.maxInstrNameLabelLength());\n        this.graphicalMusicSheet.MusicPages.length = 0;\n        this.calculateMusicSystems();\n        this.graphicalMusicSheet.MusicPages[0].PositionAndShape.BorderMarginBottom += 9;\n        GraphicalMusicSheet_1.GraphicalMusicSheet.transformRelativeToAbsolutePosition(this.graphicalMusicSheet);\n    };\n    MusicSheetCalculator.prototype.calculateXLayout = function (graphicalMusicSheet, maxInstrNameLabelLength) {\n        var minLength = 0;\n        var maxInstructionsLength = this.rules.MaxInstructionsConstValue;\n        if (this.graphicalMusicSheet.MeasureList.length > 0) {\n            var measures = this.graphicalMusicSheet.MeasureList[0];\n            var minimumStaffEntriesWidth = this.calculateMeasureXLayout(measures);\n            MusicSheetCalculator.setMeasuresMinStaffEntriesWidth(measures, minimumStaffEntriesWidth);\n            minLength = minimumStaffEntriesWidth * 1.2 + maxInstrNameLabelLength + maxInstructionsLength;\n            for (var i = 1; i < this.graphicalMusicSheet.MeasureList.length; i++) {\n                measures = this.graphicalMusicSheet.MeasureList[i];\n                minimumStaffEntriesWidth = this.calculateMeasureXLayout(measures);\n                MusicSheetCalculator.setMeasuresMinStaffEntriesWidth(measures, minimumStaffEntriesWidth);\n                minLength = Math.max(minLength, minimumStaffEntriesWidth * 1.2 + maxInstructionsLength);\n            }\n        }\n        this.graphicalMusicSheet.MinAllowedSystemWidth = minLength;\n    };\n    MusicSheetCalculator.prototype.calculateMeasureXLayout = function (measures) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateSystemYLayout = function () {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.initStaffMeasuresCreation = function () {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleBeam = function (graphicalNote, beam, openBeams) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.createGraphicalTieNote = function (beams, activeClef, octaveShiftValue, graphicalStaffEntry, duration, numberOfDots, openTie, isLastTieNote) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleVoiceEntryLyrics = function (lyricsEntries, voiceEntry, graphicalStaffEntry, openLyricWords) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleVoiceEntryOrnaments = function (ornamentContainer, voiceEntry, graphicalStaffEntry) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleVoiceEntryArticulations = function (articulations, voiceEntry, graphicalStaffEntry) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleTuplet = function (graphicalNote, tuplet, openTuplets) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.layoutVoiceEntry = function (voiceEntry, graphicalNotes, graphicalStaffEntry, hasPitchedNote, isGraceStaffEntry) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.layoutStaffEntry = function (graphicalStaffEntry) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleTie = function (tie, startGraphicalStaffEntry, staffIndex, measureIndex) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.updateStaffLineBorders = function (staffLine) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateMeasureNumberPlacement = function (musicSystem) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.layoutGraphicalTie = function (tie, tieIsAtSystemBreak) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateSingleStaffLineLyricsPosition = function (staffLine, lyricVersesNumber) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateSingleOctaveShift = function (sourceMeasure, multiExpression, measureIndex, staffIndex) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateWordRepetitionInstruction = function (repetitionInstruction, measureIndex) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateMoodAndUnknownExpression = function (multiExpression, measureIndex, staffIndex) {\n        throw new Error(\"abstract, not implemented\");\n    };\n    MusicSheetCalculator.prototype.clearRecreatedObjects = function () {\n        logging_1.Logging.log(\"clearRecreatedObjects not implemented\");\n    };\n    MusicSheetCalculator.prototype.handleStaffEntryLink = function (graphicalStaffEntry, staffEntryLinks) {\n        logging_1.Logging.log(\"handleStaffEntryLink not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateMusicSystems = function () {\n        if (this.graphicalMusicSheet.MeasureList === undefined) {\n            return;\n        }\n        var allMeasures = this.graphicalMusicSheet.MeasureList;\n        if (allMeasures === undefined) {\n            return;\n        }\n        var visibleMeasureList = [];\n        for (var idx = 0, len = allMeasures.length; idx < len; ++idx) {\n            var staffMeasures = allMeasures[idx];\n            var visibleStaffMeasures = [];\n            for (var idx2 = 0, len2 = staffMeasures.length; idx2 < len2; ++idx2) {\n                var staffMeasure = allMeasures[idx][idx2];\n                if (staffMeasure.isVisible()) {\n                    visibleStaffMeasures.push(staffMeasure);\n                }\n            }\n            visibleMeasureList.push(visibleStaffMeasures);\n        }\n        var numberOfStaffLines = 0;\n        for (var idx = 0, len = visibleMeasureList.length; idx < len; ++idx) {\n            var gmlist = visibleMeasureList[idx];\n            numberOfStaffLines = Math.max(gmlist.length, numberOfStaffLines);\n            break;\n        }\n        if (numberOfStaffLines === 0) {\n            return;\n        }\n        var musicSystemBuilder = new MusicSystemBuilder_1.MusicSystemBuilder();\n        musicSystemBuilder.initialize(this.graphicalMusicSheet, visibleMeasureList, numberOfStaffLines, this.symbolFactory);\n        musicSystemBuilder.buildMusicSystems();\n        this.checkMeasuresForWholeRestNotes();\n        if (!this.leadSheet) {\n            this.calculateBeams();\n            this.optimizeRestPlacement();\n            this.calculateStaffEntryArticulationMarks();\n            this.calculateTieCurves();\n        }\n        this.calculateSkyBottomLines();\n        this.calculateTupletNumbers();\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                this.calculateMeasureNumberPlacement(musicSystem);\n            }\n        }\n        if (!this.leadSheet) {\n            this.calculateSlurs();\n        }\n        if (!this.leadSheet) {\n            this.calculateOrnaments();\n        }\n        this.updateSkyBottomLines();\n        this.calculateChordSymbols();\n        if (!this.leadSheet) {\n            this.calculateDynamicExpressions();\n            this.optimizeStaffLineDynamicExpressionsPositions();\n            this.calculateMoodAndUnknownExpressions();\n            this.calculateOctaveShifts();\n            this.calculateWordRepetitionInstructions();\n        }\n        this.calculateRepetitionEndings();\n        if (!this.leadSheet) {\n            this.calculateTempoExpressions();\n        }\n        this.calculateLyricsPosition();\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    this.updateStaffLineBorders(staffLine);\n                }\n            }\n        }\n        this.calculateComments();\n        this.calculateSystemYLayout();\n        this.calculateMarkedAreas();\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                musicSystem.setMusicSystemLabelsYPosition();\n                if (!this.leadSheet) {\n                    musicSystem.setYPositionsToVerticalLineObjectsAndCreateLines(this.rules);\n                    musicSystem.createSystemLeftLine(this.rules.SystemThinLineWidth, this.rules.SystemLabelsRightMargin);\n                    musicSystem.createInstrumentBrackets(this.graphicalMusicSheet.ParentMusicSheet.Instruments, this.rules.StaffHeight);\n                    musicSystem.createGroupBrackets(this.graphicalMusicSheet.ParentMusicSheet.InstrumentalGroups, this.rules.StaffHeight, 0);\n                    musicSystem.alignBeginInstructions();\n                }\n                else if (musicSystem === musicSystem.Parent.MusicSystems[0]) {\n                    musicSystem.createSystemLeftLine(this.rules.SystemThinLineWidth, this.rules.SystemLabelsRightMargin);\n                }\n                musicSystem.calculateBorders(this.rules);\n            }\n            var distance = graphicalMusicPage.MusicSystems[0].PositionAndShape.BorderTop;\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                // let newPosition: PointF2D = new PointF2D(musicSystem.PositionAndShape.RelativePosition.x,\n                // musicSystem.PositionAndShape.RelativePosition.y - distance);\n                musicSystem.PositionAndShape.RelativePosition =\n                    new PointF2D_1.PointF2D(musicSystem.PositionAndShape.RelativePosition.x, musicSystem.PositionAndShape.RelativePosition.y - distance);\n            }\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    staffLine.addActivitySymbolClickArea();\n                }\n            }\n            if (graphicalMusicPage === this.graphicalMusicSheet.MusicPages[0]) {\n                this.calculatePageLabels(graphicalMusicPage);\n            }\n            graphicalMusicPage.PositionAndShape.calculateTopBottomBorders();\n        }\n    };\n    MusicSheetCalculator.prototype.updateSkyBottomLine = function (staffLine) {\n        logging_1.Logging.log(\"updateSkyBottomLine not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateSkyBottomLine = function (staffLine) {\n        logging_1.Logging.log(\"calculateSkyBottomLine not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateMarkedAreas = function () {\n        logging_1.Logging.log(\"calculateMarkedAreas not implemented\");\n    };\n    MusicSheetCalculator.prototype.calculateComments = function () {\n        logging_1.Logging.log(\"calculateComments not implemented\");\n    };\n    MusicSheetCalculator.prototype.optimizeStaffLineDynamicExpressionsPositions = function () {\n        return;\n    };\n    MusicSheetCalculator.prototype.calculateChordSymbols = function () {\n        return;\n    };\n    MusicSheetCalculator.prototype.layoutMeasureWithWholeRest = function (rest, gse, measure) {\n        return;\n    };\n    MusicSheetCalculator.prototype.layoutBeams = function (staffEntry) {\n        return;\n    };\n    MusicSheetCalculator.prototype.layoutArticulationMarks = function (articulations, voiceEntry, graphicalStaffEntry) {\n        return;\n    };\n    MusicSheetCalculator.prototype.layoutOrnament = function (ornaments, voiceEntry, graphicalStaffEntry) {\n        return;\n    };\n    MusicSheetCalculator.prototype.calculateRestNotePlacementWithinGraphicalBeam = function (graphicalStaffEntry, restNote, previousNote, nextStaffEntry, nextNote) {\n        return;\n    };\n    MusicSheetCalculator.prototype.calculateTupletNumbers = function () {\n        return;\n    };\n    MusicSheetCalculator.prototype.calculateSlurs = function () {\n        return;\n    };\n    MusicSheetCalculator.prototype.calculateDynamicExpressionsForSingleMultiExpression = function (multiExpression, measureIndex, staffIndex) {\n        return;\n    };\n    MusicSheetCalculator.prototype.calcGraphicalRepetitionEndingsRecursively = function (repetition) {\n        return;\n    };\n    MusicSheetCalculator.prototype.layoutSingleRepetitionEnding = function (start, end, numberText, offset, leftOpen, rightOpen) {\n        return;\n    };\n    MusicSheetCalculator.prototype.calculateTempoExpressionsForSingleMultiTempoExpression = function (sourceMeasure, multiTempoExpression, measureIndex) {\n        return;\n    };\n    MusicSheetCalculator.prototype.clearSystemsAndMeasures = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    for (var idx4 = 0, len4 = staffLine.Measures.length; idx4 < len4; ++idx4) {\n                        var graphicalMeasure = staffLine.Measures[idx4];\n                        if (graphicalMeasure.FirstInstructionStaffEntry !== undefined) {\n                            var index = graphicalMeasure.PositionAndShape.ChildElements.indexOf(graphicalMeasure.FirstInstructionStaffEntry.PositionAndShape);\n                            if (index > -1) {\n                                graphicalMeasure.PositionAndShape.ChildElements.splice(index, 1);\n                            }\n                            graphicalMeasure.FirstInstructionStaffEntry = undefined;\n                            graphicalMeasure.beginInstructionsWidth = 0.0;\n                        }\n                        if (graphicalMeasure.LastInstructionStaffEntry !== undefined) {\n                            var index = graphicalMeasure.PositionAndShape.ChildElements.indexOf(graphicalMeasure.LastInstructionStaffEntry.PositionAndShape);\n                            if (index > -1) {\n                                graphicalMeasure.PositionAndShape.ChildElements.splice(index, 1);\n                            }\n                            graphicalMeasure.LastInstructionStaffEntry = undefined;\n                            graphicalMeasure.endInstructionsWidth = 0.0;\n                        }\n                    }\n                    staffLine.Measures = [];\n                    staffLine.PositionAndShape.ChildElements = [];\n                }\n                musicSystem.StaffLines.length = 0;\n                musicSystem.PositionAndShape.ChildElements = [];\n            }\n            graphicalMusicPage.MusicSystems = [];\n            graphicalMusicPage.PositionAndShape.ChildElements = [];\n        }\n        this.graphicalMusicSheet.MusicPages = [];\n    };\n    MusicSheetCalculator.prototype.handleVoiceEntry = function (voiceEntry, graphicalStaffEntry, accidentalCalculator, openLyricWords, tieTimestampListDict, activeClef, openTuplets, openBeams, octaveShiftValue, grace, linkedNotes, sourceStaffEntry) {\n        if (grace === void 0) { grace = false; }\n        if (linkedNotes === void 0) { linkedNotes = undefined; }\n        if (sourceStaffEntry === void 0) { sourceStaffEntry = undefined; }\n        var graphicalNotes = graphicalStaffEntry.findOrCreateGraphicalNotesListFromVoiceEntry(voiceEntry);\n        for (var idx = 0, len = voiceEntry.Notes.length; idx < len; ++idx) {\n            var note = voiceEntry.Notes[idx];\n            if (sourceStaffEntry !== undefined && sourceStaffEntry.Link !== undefined && linkedNotes !== undefined && linkedNotes.indexOf(note) > -1) {\n                continue;\n            }\n            var graphicalNote = void 0;\n            var numberOfDots = note.calculateNumberOfNeededDots();\n            if (grace) {\n                graphicalNote = this.symbolFactory.createGraceNote(note, numberOfDots, graphicalStaffEntry, activeClef, octaveShiftValue);\n            }\n            else {\n                graphicalNote = this.symbolFactory.createNote(note, numberOfDots, graphicalStaffEntry, activeClef, octaveShiftValue);\n            }\n            if (note.NoteTie !== undefined) {\n                MusicSheetCalculator.addTieToTieTimestampsDict(tieTimestampListDict, note);\n            }\n            if (note.Pitch !== undefined) {\n                this.checkNoteForAccidental(graphicalNote, accidentalCalculator, activeClef, octaveShiftValue, grace);\n            }\n            this.resetYPositionForLeadSheet(graphicalNote.PositionAndShape);\n            graphicalStaffEntry.addGraphicalNoteToListAtCorrectYPosition(graphicalNotes, graphicalNote);\n            graphicalStaffEntry.PositionAndShape.ChildElements.push(graphicalNote.PositionAndShape);\n            graphicalNote.PositionAndShape.calculateBoundingBox();\n            if (!this.leadSheet) {\n                if (note.NoteBeam !== undefined) {\n                    this.handleBeam(graphicalNote, note.NoteBeam, openBeams);\n                }\n                if (note.NoteTuplet !== undefined) {\n                    this.handleTuplet(graphicalNote, note.NoteTuplet, openTuplets);\n                }\n            }\n        }\n        if (voiceEntry.Articulations.length > 0) {\n            this.handleVoiceEntryArticulations(voiceEntry.Articulations, voiceEntry, graphicalStaffEntry);\n        }\n        if (voiceEntry.TechnicalInstructions.length > 0) {\n            this.checkVoiceEntriesForTechnicalInstructions(voiceEntry, graphicalStaffEntry);\n        }\n        if (voiceEntry.LyricsEntries.size() > 0) {\n            this.handleVoiceEntryLyrics(voiceEntry.LyricsEntries, voiceEntry, graphicalStaffEntry, openLyricWords);\n        }\n        if (voiceEntry.OrnamentContainer !== undefined) {\n            this.handleVoiceEntryOrnaments(voiceEntry.OrnamentContainer, voiceEntry, graphicalStaffEntry);\n        }\n        return octaveShiftValue;\n    };\n    MusicSheetCalculator.prototype.handleVoiceEntryGraceNotes = function (graceEntries, graphicalGraceEntries, graphicalStaffEntry, accidentalCalculator, activeClef, octaveShiftValue, lyricWords, tieTimestampListDict, tuplets, beams) {\n        if (graceEntries !== undefined) {\n            for (var idx = 0, len = graceEntries.length; idx < len; ++idx) {\n                var graceVoiceEntry = graceEntries[idx];\n                var graceStaffEntry = this.symbolFactory.createGraceStaffEntry(graphicalStaffEntry, graphicalStaffEntry.parentMeasure);\n                graphicalGraceEntries.push(graceStaffEntry);\n                graphicalStaffEntry.PositionAndShape.ChildElements.push(graceStaffEntry.PositionAndShape);\n                this.handleVoiceEntry(graceVoiceEntry, graceStaffEntry, accidentalCalculator, lyricWords, tieTimestampListDict, activeClef, tuplets, beams, octaveShiftValue, true);\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.handleOpenTies = function (measure, beams, tieTimestampListDict, activeClef, octaveShiftParams) {\n        collectionUtil_1.CollectionUtil.removeDictElementIfTrue(tieTimestampListDict, function (openTie, tieTimestamps) {\n            // for (let m: number = tieTimestampListDict.size() - 1; m >= 0; m--) {\n            //     let keyValuePair: KeyValuePair<Tie, Fraction[]> = tieTimestampListDict.ElementAt(m);\n            //     let openTie: Tie = keyValuePair.Key;\n            //    let tieTimestamps: Fraction[] = keyValuePair.Value;\n            var absoluteTimestamp = undefined;\n            var k;\n            var removeTie = false;\n            for (; k < tieTimestamps.length; k++) {\n                if (!openTie.NoteHasBeenCreated[k]) {\n                    absoluteTimestamp = tieTimestamps[k];\n                    if (absoluteTimestamp >= fraction_1.Fraction.plus(measure.parentSourceMeasure.AbsoluteTimestamp, measure.parentSourceMeasure.Duration)) {\n                        continue;\n                    }\n                    var graphicalStaffEntry = undefined;\n                    if (absoluteTimestamp !== undefined) {\n                        for (var idx = 0, len = measure.staffEntries.length; idx < len; ++idx) {\n                            var gse = measure.staffEntries[idx];\n                            if (gse.getAbsoluteTimestamp() === absoluteTimestamp) {\n                                graphicalStaffEntry = gse;\n                                break;\n                            }\n                        }\n                        if (graphicalStaffEntry === undefined) {\n                            graphicalStaffEntry = this.createStaffEntryForTieNote(measure, absoluteTimestamp, openTie);\n                        }\n                    }\n                    if (graphicalStaffEntry !== undefined) {\n                        var octaveShiftValue = octaveShift_1.OctaveEnum.NONE;\n                        if (octaveShiftParams !== undefined) {\n                            if (graphicalStaffEntry.getAbsoluteTimestamp() >= octaveShiftParams.getAbsoluteStartTimestamp &&\n                                graphicalStaffEntry.getAbsoluteTimestamp() <= octaveShiftParams.getAbsoluteEndTimestamp) {\n                                octaveShiftValue = octaveShiftParams.getOpenOctaveShift.Type;\n                            }\n                        }\n                        var isLastTieNote = k === tieTimestamps.length - 1;\n                        var tieFraction = openTie.Fractions[k];\n                        var numberOfDots = openTie.Start.calculateNumberOfNeededDots();\n                        this.createGraphicalTieNote(beams, activeClef, octaveShiftValue, graphicalStaffEntry, tieFraction, numberOfDots, openTie, isLastTieNote);\n                        var tieStartNote = openTie.Start;\n                        if (isLastTieNote && tieStartNote.ParentVoiceEntry.Articulations.length === 1 &&\n                            tieStartNote.ParentVoiceEntry.Articulations[0] === VoiceEntry_1.ArticulationEnum.fermata) {\n                            this.symbolFactory.addFermataAtTiedEndNote(tieStartNote, graphicalStaffEntry);\n                        }\n                        openTie.NoteHasBeenCreated[k] = true;\n                        if (openTie.allGraphicalNotesHaveBeenCreated()) {\n                            removeTie = true;\n                        }\n                    }\n                }\n            }\n            return removeTie;\n        });\n    };\n    MusicSheetCalculator.prototype.resetYPositionForLeadSheet = function (psi) {\n        if (this.leadSheet) {\n            psi.RelativePosition = new PointF2D_1.PointF2D(psi.RelativePosition.x, 0.0);\n        }\n    };\n    MusicSheetCalculator.prototype.layoutVoiceEntries = function (graphicalStaffEntry) {\n        graphicalStaffEntry.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, 0.0);\n        var isGraceStaffEntry = graphicalStaffEntry.staffEntryParent !== undefined;\n        if (!this.leadSheet) {\n            var graphicalStaffEntryNotes = graphicalStaffEntry.notes;\n            for (var idx4 = 0, len4 = graphicalStaffEntryNotes.length; idx4 < len4; ++idx4) {\n                var graphicalNotes = graphicalStaffEntryNotes[idx4];\n                if (graphicalNotes.length === 0) {\n                    continue;\n                }\n                var voiceEntry = graphicalNotes[0].sourceNote.ParentVoiceEntry;\n                var hasPitchedNote = graphicalNotes[0].sourceNote.Pitch !== undefined;\n                this.layoutVoiceEntry(voiceEntry, graphicalNotes, graphicalStaffEntry, hasPitchedNote, isGraceStaffEntry);\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.maxInstrNameLabelLength = function () {\n        var maxLabelLength = 0.0;\n        for (var _i = 0, _a = this.graphicalMusicSheet.ParentMusicSheet.Instruments; _i < _a.length; _i++) {\n            var instrument = _a[_i];\n            if (instrument.Voices.length > 0 && instrument.Voices[0].Visible) {\n                var graphicalLabel = new GraphicalLabel_1.GraphicalLabel(instrument.NameLabel, this.rules.InstrumentLabelTextHeight, TextAlignment_1.TextAlignment.LeftCenter);\n                graphicalLabel.setLabelPositionAndShapeBorders();\n                maxLabelLength = Math.max(maxLabelLength, graphicalLabel.PositionAndShape.MarginSize.width);\n            }\n        }\n        return maxLabelLength;\n    };\n    MusicSheetCalculator.prototype.calculateSheetLabelBoundingBoxes = function () {\n        var musicSheet = this.graphicalMusicSheet.ParentMusicSheet;\n        if (musicSheet.Title !== undefined) {\n            var title = new GraphicalLabel_1.GraphicalLabel(musicSheet.Title, this.rules.SheetTitleHeight, TextAlignment_1.TextAlignment.CenterBottom);\n            this.graphicalMusicSheet.Title = title;\n            title.setLabelPositionAndShapeBorders();\n        }\n        if (musicSheet.Subtitle !== undefined) {\n            var subtitle = new GraphicalLabel_1.GraphicalLabel(musicSheet.Subtitle, this.rules.SheetSubtitleHeight, TextAlignment_1.TextAlignment.CenterCenter);\n            this.graphicalMusicSheet.Subtitle = subtitle;\n            subtitle.setLabelPositionAndShapeBorders();\n        }\n        if (musicSheet.Composer !== undefined) {\n            var composer = new GraphicalLabel_1.GraphicalLabel(musicSheet.Composer, this.rules.SheetComposerHeight, TextAlignment_1.TextAlignment.RightCenter);\n            this.graphicalMusicSheet.Composer = composer;\n            composer.setLabelPositionAndShapeBorders();\n        }\n        if (musicSheet.Lyricist !== undefined) {\n            var lyricist = new GraphicalLabel_1.GraphicalLabel(musicSheet.Lyricist, this.rules.SheetAuthorHeight, TextAlignment_1.TextAlignment.LeftCenter);\n            this.graphicalMusicSheet.Lyricist = lyricist;\n            lyricist.setLabelPositionAndShapeBorders();\n        }\n    };\n    MusicSheetCalculator.prototype.checkMeasuresForWholeRestNotes = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var musicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = musicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = musicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    for (var idx4 = 0, len4 = staffLine.Measures.length; idx4 < len4; ++idx4) {\n                        var measure = staffLine.Measures[idx4];\n                        if (measure.staffEntries.length === 1) {\n                            var gse = measure.staffEntries[0];\n                            if (gse.notes.length > 0 && gse.notes[0].length > 0) {\n                                var graphicalNote = gse.notes[0][0];\n                                if (graphicalNote.sourceNote.Pitch === undefined && (new fraction_1.Fraction(1, 2)).lt(graphicalNote.sourceNote.Length)) {\n                                    this.layoutMeasureWithWholeRest(graphicalNote, gse, measure);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.optimizeRestNotePlacement = function (graphicalStaffEntry, measure) {\n        if (graphicalStaffEntry.notes.length === 0) {\n            return;\n        }\n        var voice1Notes = graphicalStaffEntry.notes[0];\n        if (voice1Notes.length === 0) {\n            return;\n        }\n        var voice1Note1 = voice1Notes[0];\n        var voice1Note1IsRest = voice1Note1.sourceNote.Pitch === undefined;\n        if (graphicalStaffEntry.notes.length === 2) {\n            var voice2Note1IsRest = false;\n            var voice2Notes = graphicalStaffEntry.notes[1];\n            if (voice2Notes.length > 0) {\n                var voice2Note1 = voice1Notes[0];\n                voice2Note1IsRest = voice2Note1.sourceNote.Pitch === undefined;\n            }\n            if (voice1Note1IsRest && voice2Note1IsRest) {\n                this.calculateTwoRestNotesPlacementWithCollisionDetection(graphicalStaffEntry);\n            }\n            else if (voice1Note1IsRest || voice2Note1IsRest) {\n                this.calculateRestNotePlacementWithCollisionDetectionFromGraphicalNote(graphicalStaffEntry);\n            }\n        }\n        else if (voice1Note1IsRest && graphicalStaffEntry !== measure.staffEntries[0] &&\n            graphicalStaffEntry !== measure.staffEntries[measure.staffEntries.length - 1]) {\n            var staffEntryIndex = measure.staffEntries.indexOf(graphicalStaffEntry);\n            var previousStaffEntry = measure.staffEntries[staffEntryIndex - 1];\n            var nextStaffEntry = measure.staffEntries[staffEntryIndex + 1];\n            if (previousStaffEntry.notes.length === 1) {\n                var previousNote = previousStaffEntry.notes[0][0];\n                if (previousNote.sourceNote.NoteBeam !== undefined && nextStaffEntry.notes.length === 1) {\n                    var nextNote = nextStaffEntry.notes[0][0];\n                    if (nextNote.sourceNote.NoteBeam !== undefined && previousNote.sourceNote.NoteBeam === nextNote.sourceNote.NoteBeam) {\n                        this.calculateRestNotePlacementWithinGraphicalBeam(graphicalStaffEntry, voice1Note1, previousNote, nextStaffEntry, nextNote);\n                        graphicalStaffEntry.PositionAndShape.calculateBoundingBox();\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.getRelativePositionInStaffLineFromTimestamp = function (timestamp, verticalIndex, staffLine, multiStaffInstrument, firstVisibleMeasureRelativeX) {\n        if (firstVisibleMeasureRelativeX === void 0) { firstVisibleMeasureRelativeX = 0.0; }\n        var relative = new PointF2D_1.PointF2D();\n        var leftStaffEntry = undefined;\n        var rightStaffEntry = undefined;\n        var numEntries = this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length;\n        var index = this.graphicalMusicSheet.GetInterpolatedIndexInVerticalContainers(timestamp);\n        var leftIndex = Math.min(Math.floor(index), numEntries - 1);\n        var rightIndex = Math.min(Math.ceil(index), numEntries - 1);\n        if (leftIndex < 0 || verticalIndex < 0) {\n            return relative;\n        }\n        leftStaffEntry = this.getFirstLeftNotNullStaffEntryFromContainer(leftIndex, verticalIndex, multiStaffInstrument);\n        rightStaffEntry = this.getFirstRightNotNullStaffEntryFromContainer(rightIndex, verticalIndex, multiStaffInstrument);\n        if (leftStaffEntry !== undefined && rightStaffEntry !== undefined) {\n            var measureRelativeX = leftStaffEntry.parentMeasure.PositionAndShape.RelativePosition.x;\n            if (firstVisibleMeasureRelativeX > 0) {\n                measureRelativeX = firstVisibleMeasureRelativeX;\n            }\n            var leftX = leftStaffEntry.PositionAndShape.RelativePosition.x + measureRelativeX;\n            var rightX = rightStaffEntry.PositionAndShape.RelativePosition.x + rightStaffEntry.parentMeasure.PositionAndShape.RelativePosition.x;\n            if (firstVisibleMeasureRelativeX > 0) {\n                rightX = rightStaffEntry.PositionAndShape.RelativePosition.x + measureRelativeX;\n            }\n            var timestampQuotient = 0.0;\n            if (leftStaffEntry !== rightStaffEntry) {\n                var leftTimestamp = leftStaffEntry.getAbsoluteTimestamp();\n                var rightTimestamp = rightStaffEntry.getAbsoluteTimestamp();\n                var leftDifference = fraction_1.Fraction.minus(timestamp, leftTimestamp);\n                timestampQuotient = leftDifference.RealValue / fraction_1.Fraction.minus(rightTimestamp, leftTimestamp).RealValue;\n            }\n            if (leftStaffEntry.parentMeasure.ParentStaffLine !== rightStaffEntry.parentMeasure.ParentStaffLine) {\n                if (leftStaffEntry.parentMeasure.ParentStaffLine === staffLine) {\n                    rightX = staffLine.PositionAndShape.Size.width;\n                }\n                else {\n                    leftX = staffLine.PositionAndShape.RelativePosition.x;\n                }\n            }\n            relative = new PointF2D_1.PointF2D(leftX + (rightX - leftX) * timestampQuotient, 0.0);\n        }\n        return relative;\n    };\n    MusicSheetCalculator.prototype.getRelativeXPositionFromTimestamp = function (timestamp) {\n        var numEntries = this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length;\n        var index = this.graphicalMusicSheet.GetInterpolatedIndexInVerticalContainers(timestamp);\n        var discreteIndex = Math.max(0, Math.min(Math.round(index), numEntries - 1));\n        var gse = this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[discreteIndex].getFirstNonNullStaffEntry();\n        var posX = gse.PositionAndShape.RelativePosition.x + gse.parentMeasure.PositionAndShape.RelativePosition.x;\n        return posX;\n    };\n    MusicSheetCalculator.prototype.calculatePageLabels = function (page) {\n        var relative = new PointF2D_1.PointF2D();\n        var firstSystemAbsoluteTopMargin = 10;\n        if (page.MusicSystems.length > 0) {\n            var firstMusicSystem = page.MusicSystems[0];\n            firstSystemAbsoluteTopMargin = firstMusicSystem.PositionAndShape.RelativePosition.y + firstMusicSystem.PositionAndShape.BorderTop;\n        }\n        if (this.graphicalMusicSheet.Title !== undefined) {\n            var title = this.graphicalMusicSheet.Title;\n            title.PositionAndShape.Parent = page.PositionAndShape;\n            page.PositionAndShape.ChildElements.push(title.PositionAndShape);\n            relative.x = this.graphicalMusicSheet.ParentMusicSheet.pageWidth / 2;\n            relative.y = this.rules.TitleTopDistance + this.rules.SheetTitleHeight;\n            title.PositionAndShape.RelativePosition = relative;\n            page.Labels.push(title);\n        }\n        if (this.graphicalMusicSheet.Subtitle !== undefined) {\n            var subtitle = this.graphicalMusicSheet.Subtitle;\n            subtitle.PositionAndShape.Parent = page.PositionAndShape;\n            page.PositionAndShape.ChildElements.push(subtitle.PositionAndShape);\n            relative.x = this.graphicalMusicSheet.ParentMusicSheet.pageWidth / 2;\n            relative.y = this.rules.TitleTopDistance + this.rules.SheetTitleHeight + this.rules.SheetMinimumDistanceBetweenTitleAndSubtitle;\n            subtitle.PositionAndShape.RelativePosition = relative;\n            page.Labels.push(subtitle);\n        }\n        if (this.graphicalMusicSheet.Composer !== undefined) {\n            var composer = this.graphicalMusicSheet.Composer;\n            composer.PositionAndShape.Parent = page.PositionAndShape;\n            page.PositionAndShape.ChildElements.push(composer.PositionAndShape);\n            composer.setLabelPositionAndShapeBorders();\n            relative.x = this.graphicalMusicSheet.ParentMusicSheet.pageWidth - this.rules.PageRightMargin;\n            relative.y = firstSystemAbsoluteTopMargin - this.rules.SystemComposerDistance;\n            composer.PositionAndShape.RelativePosition = relative;\n            page.Labels.push(composer);\n        }\n        if (this.graphicalMusicSheet.Lyricist !== undefined) {\n            var lyricist = this.graphicalMusicSheet.Lyricist;\n            lyricist.PositionAndShape.Parent = page.PositionAndShape;\n            page.PositionAndShape.ChildElements.push(lyricist.PositionAndShape);\n            lyricist.setLabelPositionAndShapeBorders();\n            relative.x = this.rules.PageLeftMargin;\n            relative.y = firstSystemAbsoluteTopMargin - this.rules.SystemComposerDistance;\n            lyricist.PositionAndShape.RelativePosition = relative;\n            page.Labels.push(lyricist);\n        }\n    };\n    MusicSheetCalculator.prototype.createGraphicalTies = function () {\n        for (var measureIndex = 0; measureIndex < this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length; measureIndex++) {\n            var sourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[measureIndex];\n            for (var staffIndex = 0; staffIndex < sourceMeasure.CompleteNumberOfStaves; staffIndex++) {\n                for (var j = 0; j < sourceMeasure.VerticalSourceStaffEntryContainers.length; j++) {\n                    var sourceStaffEntry = sourceMeasure.VerticalSourceStaffEntryContainers[j].StaffEntries[staffIndex];\n                    if (sourceStaffEntry !== undefined) {\n                        var startStaffEntry = this.graphicalMusicSheet.findGraphicalStaffEntryFromMeasureList(staffIndex, measureIndex, sourceStaffEntry);\n                        for (var idx = 0, len = sourceStaffEntry.VoiceEntries.length; idx < len; ++idx) {\n                            var voiceEntry = sourceStaffEntry.VoiceEntries[idx];\n                            for (var idx2 = 0, len2 = voiceEntry.Notes.length; idx2 < len2; ++idx2) {\n                                var note = voiceEntry.Notes[idx2];\n                                if (note.NoteTie !== undefined) {\n                                    var tie = note.NoteTie;\n                                    this.handleTie(tie, startStaffEntry, staffIndex, measureIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.createAccidentalCalculators = function () {\n        var accidentalCalculators = [];\n        var firstSourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.getFirstSourceMeasure();\n        if (firstSourceMeasure !== undefined) {\n            for (var i = 0; i < firstSourceMeasure.CompleteNumberOfStaves; i++) {\n                var accidentalCalculator = new AccidentalCalculator_1.AccidentalCalculator(this.symbolFactory);\n                accidentalCalculators.push(accidentalCalculator);\n                if (firstSourceMeasure.FirstInstructionsStaffEntries[i] !== undefined) {\n                    for (var idx = 0, len = firstSourceMeasure.FirstInstructionsStaffEntries[i].Instructions.length; idx < len; ++idx) {\n                        var abstractNotationInstruction = firstSourceMeasure.FirstInstructionsStaffEntries[i].Instructions[idx];\n                        if (abstractNotationInstruction instanceof KeyInstruction_1.KeyInstruction) {\n                            var keyInstruction = abstractNotationInstruction;\n                            accidentalCalculator.ActiveKeyInstruction = keyInstruction;\n                        }\n                    }\n                }\n            }\n        }\n        return accidentalCalculators;\n    };\n    MusicSheetCalculator.prototype.calculateVerticalContainersList = function () {\n        var numberOfEntries = this.graphicalMusicSheet.MeasureList[0].length;\n        for (var i = 0; i < this.graphicalMusicSheet.MeasureList.length; i++) {\n            for (var j = 0; j < numberOfEntries; j++) {\n                var measure = this.graphicalMusicSheet.MeasureList[i][j];\n                for (var idx = 0, len = measure.staffEntries.length; idx < len; ++idx) {\n                    var graphicalStaffEntry = measure.staffEntries[idx];\n                    var verticalContainer = this.graphicalMusicSheet.getOrCreateVerticalContainer(graphicalStaffEntry.getAbsoluteTimestamp());\n                    if (verticalContainer !== undefined) {\n                        verticalContainer.StaffEntries[j] = graphicalStaffEntry;\n                        graphicalStaffEntry.parentVerticalContainer = verticalContainer;\n                    }\n                    else {\n                        ;\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.setIndecesToVerticalGraphicalContainers = function () {\n        for (var i = 0; i < this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length; i++) {\n            this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].Index = i;\n        }\n    };\n    MusicSheetCalculator.prototype.createGraphicalMeasuresForSourceMeasure = function (sourceMeasure, accidentalCalculators, openLyricWords, tieTimestampListDictList, openOctaveShifts, activeClefs) {\n        this.initStaffMeasuresCreation();\n        var verticalMeasureList = [];\n        var openBeams = [];\n        var openTuplets = [];\n        var staffEntryLinks = [];\n        for (var staffIndex = 0; staffIndex < sourceMeasure.CompleteNumberOfStaves; staffIndex++) {\n            var measure = this.createGraphicalMeasure(sourceMeasure, tieTimestampListDictList[staffIndex], openTuplets, openBeams, accidentalCalculators[staffIndex], activeClefs, openOctaveShifts, openLyricWords, staffIndex, staffEntryLinks);\n            verticalMeasureList.push(measure);\n        }\n        this.graphicalMusicSheet.sourceToGraphicalMeasureLinks.setValue(sourceMeasure, verticalMeasureList);\n        return verticalMeasureList;\n    };\n    MusicSheetCalculator.prototype.createGraphicalMeasure = function (sourceMeasure, tieTimestampListDict, openTuplets, openBeams, accidentalCalculator, activeClefs, openOctaveShifts, openLyricWords, staffIndex, staffEntryLinks) {\n        var staff = this.graphicalMusicSheet.ParentMusicSheet.getStaffFromIndex(staffIndex);\n        var measure = this.symbolFactory.createStaffMeasure(sourceMeasure, staff);\n        measure.hasError = sourceMeasure.getErrorInMeasure(staffIndex);\n        if (sourceMeasure.FirstInstructionsStaffEntries[staffIndex] !== undefined) {\n            for (var idx = 0, len = sourceMeasure.FirstInstructionsStaffEntries[staffIndex].Instructions.length; idx < len; ++idx) {\n                var instruction = sourceMeasure.FirstInstructionsStaffEntries[staffIndex].Instructions[idx];\n                if (instruction instanceof KeyInstruction_1.KeyInstruction) {\n                    var key = KeyInstruction_1.KeyInstruction.copy(instruction);\n                    if (this.graphicalMusicSheet.ParentMusicSheet.Transpose !== 0 &&\n                        measure.ParentStaff.ParentInstrument.MidiInstrumentId !== ClefInstruction_3.MidiInstrument.Percussion &&\n                        MusicSheetCalculator.transposeCalculator !== undefined) {\n                        MusicSheetCalculator.transposeCalculator.transposeKey(key, this.graphicalMusicSheet.ParentMusicSheet.Transpose);\n                    }\n                    accidentalCalculator.ActiveKeyInstruction = key;\n                }\n            }\n        }\n        for (var idx = 0, len = sourceMeasure.StaffLinkedExpressions[staffIndex].length; idx < len; ++idx) {\n            var multiExpression = sourceMeasure.StaffLinkedExpressions[staffIndex][idx];\n            if (multiExpression.OctaveShiftStart !== undefined) {\n                var openOctaveShift = multiExpression.OctaveShiftStart;\n                openOctaveShifts[staffIndex] = new OctaveShiftParams_1.OctaveShiftParams(openOctaveShift, multiExpression.AbsoluteTimestamp, openOctaveShift.ParentEndMultiExpression.AbsoluteTimestamp);\n            }\n        }\n        for (var entryIndex = 0; entryIndex < sourceMeasure.VerticalSourceStaffEntryContainers.length; entryIndex++) {\n            var sourceStaffEntry = sourceMeasure.VerticalSourceStaffEntryContainers[entryIndex].StaffEntries[staffIndex];\n            if (sourceStaffEntry !== undefined) {\n                for (var idx = 0, len = sourceStaffEntry.Instructions.length; idx < len; ++idx) {\n                    var abstractNotationInstruction = sourceStaffEntry.Instructions[idx];\n                    if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                        activeClefs[staffIndex] = abstractNotationInstruction;\n                    }\n                }\n                var graphicalStaffEntry = this.symbolFactory.createStaffEntry(sourceStaffEntry, measure);\n                if (measure.staffEntries.length > entryIndex) {\n                    measure.addGraphicalStaffEntryAtTimestamp(graphicalStaffEntry);\n                }\n                else {\n                    measure.addGraphicalStaffEntry(graphicalStaffEntry);\n                }\n                var linkedNotes = [];\n                if (sourceStaffEntry.Link !== undefined) {\n                    sourceStaffEntry.findLinkedNotes(linkedNotes);\n                    this.handleStaffEntryLink(graphicalStaffEntry, staffEntryLinks);\n                }\n                var octaveShiftValue = octaveShift_1.OctaveEnum.NONE;\n                if (openOctaveShifts[staffIndex] !== undefined) {\n                    var octaveShiftParams = openOctaveShifts[staffIndex];\n                    if (sourceStaffEntry.AbsoluteTimestamp >= octaveShiftParams.getAbsoluteStartTimestamp &&\n                        sourceStaffEntry.AbsoluteTimestamp <= octaveShiftParams.getAbsoluteEndTimestamp) {\n                        octaveShiftValue = octaveShiftParams.getOpenOctaveShift.Type;\n                    }\n                }\n                for (var idx = 0, len = sourceStaffEntry.VoiceEntries.length; idx < len; ++idx) {\n                    var voiceEntry = sourceStaffEntry.VoiceEntries[idx];\n                    this.handleVoiceEntryGraceNotes(voiceEntry.graceVoiceEntriesBefore, graphicalStaffEntry.graceStaffEntriesBefore, graphicalStaffEntry, accidentalCalculator, activeClefs[staffIndex], octaveShiftValue, openLyricWords, tieTimestampListDict, openTuplets, openBeams);\n                    octaveShiftValue = this.handleVoiceEntry(voiceEntry, graphicalStaffEntry, accidentalCalculator, openLyricWords, tieTimestampListDict, activeClefs[staffIndex], openTuplets, openBeams, octaveShiftValue, false, linkedNotes, sourceStaffEntry);\n                    this.handleVoiceEntryGraceNotes(voiceEntry.graceVoiceEntriesAfter, graphicalStaffEntry.graceStaffEntriesAfter, graphicalStaffEntry, accidentalCalculator, activeClefs[staffIndex], octaveShiftValue, openLyricWords, tieTimestampListDict, openTuplets, openBeams);\n                }\n                if (sourceStaffEntry.Instructions.length > 0) {\n                    var clefInstruction = sourceStaffEntry.Instructions[0];\n                    this.symbolFactory.createInStaffClef(graphicalStaffEntry, clefInstruction);\n                }\n                if (sourceStaffEntry.ChordContainer !== undefined) {\n                    sourceStaffEntry.ParentStaff.ParentInstrument.HasChordSymbols = true;\n                    this.symbolFactory.createChordSymbol(sourceStaffEntry, graphicalStaffEntry, this.graphicalMusicSheet.ParentMusicSheet.Transpose);\n                }\n            }\n        }\n        if (tieTimestampListDict.size() > 0) {\n            this.handleOpenTies(measure, openBeams, tieTimestampListDict, activeClefs[staffIndex], openOctaveShifts[staffIndex]);\n        }\n        accidentalCalculator.doCalculationsAtEndOfMeasure();\n        if (sourceMeasure.LastInstructionsStaffEntries[staffIndex] !== undefined) {\n            var lastStaffEntry = sourceMeasure.LastInstructionsStaffEntries[staffIndex];\n            for (var idx = 0, len = lastStaffEntry.Instructions.length; idx < len; ++idx) {\n                var abstractNotationInstruction = lastStaffEntry.Instructions[idx];\n                if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                    activeClefs[staffIndex] = abstractNotationInstruction;\n                }\n            }\n        }\n        for (var idx = 0, len = sourceMeasure.StaffLinkedExpressions[staffIndex].length; idx < len; ++idx) {\n            var multiExpression = sourceMeasure.StaffLinkedExpressions[staffIndex][idx];\n            if (multiExpression.OctaveShiftEnd !== undefined && openOctaveShifts[staffIndex] !== undefined &&\n                multiExpression.OctaveShiftEnd === openOctaveShifts[staffIndex].getOpenOctaveShift) {\n                openOctaveShifts[staffIndex] = undefined;\n            }\n        }\n        if (measure.staffEntries.length === 0) {\n            var sourceStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, staff);\n            var note = new Note_1.Note(undefined, sourceStaffEntry, fraction_1.Fraction.createFromFraction(sourceMeasure.Duration), undefined);\n            var graphicalStaffEntry = this.symbolFactory.createStaffEntry(sourceStaffEntry, measure);\n            measure.addGraphicalStaffEntry(graphicalStaffEntry);\n            graphicalStaffEntry.relInMeasureTimestamp = new fraction_1.Fraction(0, 1);\n            var graphicalNotes = [];\n            graphicalStaffEntry.notes.push(graphicalNotes);\n            var numberOfDots = note.calculateNumberOfNeededDots();\n            var graphicalNote = this.symbolFactory.createNote(note, numberOfDots, graphicalStaffEntry, new ClefInstruction_1.ClefInstruction(ClefInstruction_2.ClefEnum.G, 0, 2), octaveShift_1.OctaveEnum.NONE);\n            graphicalNotes.push(graphicalNote);\n            graphicalStaffEntry.PositionAndShape.ChildElements.push(graphicalNote.PositionAndShape);\n        }\n        return measure;\n    };\n    MusicSheetCalculator.prototype.checkVoiceEntriesForTechnicalInstructions = function (voiceEntry, graphicalStaffEntry) {\n        for (var idx = 0, len = voiceEntry.TechnicalInstructions.length; idx < len; ++idx) {\n            var technicalInstruction = voiceEntry.TechnicalInstructions[idx];\n            this.symbolFactory.createGraphicalTechnicalInstruction(technicalInstruction, graphicalStaffEntry);\n        }\n    };\n    MusicSheetCalculator.prototype.checkNoteForAccidental = function (graphicalNote, accidentalCalculator, activeClef, octaveEnum, grace) {\n        if (grace === void 0) { grace = false; }\n        var pitch = graphicalNote.sourceNote.Pitch;\n        var transpose = this.graphicalMusicSheet.ParentMusicSheet.Transpose;\n        if (transpose !== 0 && graphicalNote.sourceNote.ParentStaffEntry.ParentStaff.ParentInstrument.MidiInstrumentId !== ClefInstruction_3.MidiInstrument.Percussion) {\n            pitch = graphicalNote.Transpose(accidentalCalculator.ActiveKeyInstruction, activeClef, transpose, octaveEnum);\n            if (graphicalNote.sourceNote.NoteTie !== undefined) {\n                graphicalNote.sourceNote.NoteTie.BaseNoteYPosition = graphicalNote.PositionAndShape.RelativePosition.y;\n            }\n        }\n        graphicalNote.sourceNote.halfTone = pitch.getHalfTone();\n        var scalingFactor = 1.0;\n        if (grace) {\n            scalingFactor = this.rules.GraceNoteScalingFactor;\n        }\n        accidentalCalculator.checkAccidental(graphicalNote, pitch, grace, scalingFactor);\n    };\n    // needed to disable linter, as it doesn't recognize the existing usage of this method.\n    // ToDo: check if a newer version doesn't have the problem.\n    /* tslint:disable:no-unused-variable */\n    MusicSheetCalculator.prototype.createStaffEntryForTieNote = function (measure, absoluteTimestamp, openTie) {\n        /* tslint:enable:no-unused-variable */\n        var graphicalStaffEntry;\n        graphicalStaffEntry = this.symbolFactory.createStaffEntry(openTie.Start.ParentStaffEntry, measure);\n        graphicalStaffEntry.relInMeasureTimestamp = fraction_1.Fraction.minus(absoluteTimestamp, measure.parentSourceMeasure.AbsoluteTimestamp);\n        this.resetYPositionForLeadSheet(graphicalStaffEntry.PositionAndShape);\n        measure.addGraphicalStaffEntry(graphicalStaffEntry);\n        return graphicalStaffEntry;\n    };\n    MusicSheetCalculator.prototype.updateSkyBottomLines = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    this.updateSkyBottomLine(staffLine);\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.handleStaffEntries = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MeasureList.length; idx < len; ++idx) {\n            var measures = this.graphicalMusicSheet.MeasureList[idx];\n            for (var idx2 = 0, len2 = measures.length; idx2 < len2; ++idx2) {\n                var measure = measures[idx2];\n                for (var idx3 = 0, len3 = measure.staffEntries.length; idx3 < len3; ++idx3) {\n                    var graphicalStaffEntry = measure.staffEntries[idx3];\n                    if (graphicalStaffEntry.parentMeasure !== undefined && graphicalStaffEntry.notes.length > 0 && graphicalStaffEntry.notes[0].length > 0) {\n                        this.layoutVoiceEntries(graphicalStaffEntry);\n                        this.layoutStaffEntry(graphicalStaffEntry);\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateSkyBottomLines = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    this.calculateSkyBottomLine(staffLine);\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateBeams = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var musicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = musicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = musicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    for (var idx4 = 0, len4 = staffLine.Measures.length; idx4 < len4; ++idx4) {\n                        var measure = staffLine.Measures[idx4];\n                        for (var idx5 = 0, len5 = measure.staffEntries.length; idx5 < len5; ++idx5) {\n                            var staffEntry = measure.staffEntries[idx5];\n                            this.layoutBeams(staffEntry);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateStaffEntryArticulationMarks = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var page = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = page.MusicSystems.length; idx2 < len2; ++idx2) {\n                var system = page.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = system.StaffLines.length; idx3 < len3; ++idx3) {\n                    var line = system.StaffLines[idx3];\n                    for (var idx4 = 0, len4 = line.Measures.length; idx4 < len4; ++idx4) {\n                        var measure = line.Measures[idx4];\n                        for (var idx5 = 0, len5 = measure.staffEntries.length; idx5 < len5; ++idx5) {\n                            var graphicalStaffEntry = measure.staffEntries[idx5];\n                            for (var idx6 = 0, len6 = graphicalStaffEntry.sourceStaffEntry.VoiceEntries.length; idx6 < len6; ++idx6) {\n                                var voiceEntry = graphicalStaffEntry.sourceStaffEntry.VoiceEntries[idx6];\n                                if (voiceEntry.Articulations.length > 0) {\n                                    this.layoutArticulationMarks(voiceEntry.Articulations, voiceEntry, graphicalStaffEntry);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateOrnaments = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var page = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = page.MusicSystems.length; idx2 < len2; ++idx2) {\n                var system = page.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = system.StaffLines.length; idx3 < len3; ++idx3) {\n                    var line = system.StaffLines[idx3];\n                    for (var idx4 = 0, len4 = line.Measures.length; idx4 < len4; ++idx4) {\n                        var measure = line.Measures[idx4];\n                        for (var idx5 = 0, len5 = measure.staffEntries.length; idx5 < len5; ++idx5) {\n                            var graphicalStaffEntry = measure.staffEntries[idx5];\n                            for (var idx6 = 0, len6 = graphicalStaffEntry.sourceStaffEntry.VoiceEntries.length; idx6 < len6; ++idx6) {\n                                var voiceEntry = graphicalStaffEntry.sourceStaffEntry.VoiceEntries[idx6];\n                                if (voiceEntry.OrnamentContainer !== undefined) {\n                                    if (voiceEntry.hasTie() && graphicalStaffEntry.relInMeasureTimestamp !== voiceEntry.Timestamp) {\n                                        continue;\n                                    }\n                                    this.layoutOrnament(voiceEntry.OrnamentContainer, voiceEntry, graphicalStaffEntry);\n                                    if (!(this.staffEntriesWithOrnaments.indexOf(graphicalStaffEntry) !== -1)) {\n                                        this.staffEntriesWithOrnaments.push(graphicalStaffEntry);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.optimizeRestPlacement = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var page = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = page.MusicSystems.length; idx2 < len2; ++idx2) {\n                var system = page.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = system.StaffLines.length; idx3 < len3; ++idx3) {\n                    var line = system.StaffLines[idx3];\n                    for (var idx4 = 0, len4 = line.Measures.length; idx4 < len4; ++idx4) {\n                        var measure = line.Measures[idx4];\n                        for (var idx5 = 0, len5 = measure.staffEntries.length; idx5 < len5; ++idx5) {\n                            var graphicalStaffEntry = measure.staffEntries[idx5];\n                            this.optimizeRestNotePlacement(graphicalStaffEntry, measure);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateTwoRestNotesPlacementWithCollisionDetection = function (graphicalStaffEntry) {\n        var firstRestNote = graphicalStaffEntry.notes[0][0];\n        var secondRestNote = graphicalStaffEntry.notes[1][0];\n        secondRestNote.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, 2.5);\n        graphicalStaffEntry.PositionAndShape.calculateAbsolutePositionsRecursiveWithoutTopelement();\n        firstRestNote.PositionAndShape.computeNonOverlappingPositionWithMargin(graphicalStaffEntry.PositionAndShape, BoundingBox_1.ColDirEnum.Up, new PointF2D_1.PointF2D(0.0, secondRestNote.PositionAndShape.RelativePosition.y));\n        var relative = firstRestNote.PositionAndShape.RelativePosition;\n        relative.y -= 1.0;\n        firstRestNote.PositionAndShape.RelativePosition = relative;\n        graphicalStaffEntry.PositionAndShape.calculateBoundingBox();\n    };\n    MusicSheetCalculator.prototype.calculateRestNotePlacementWithCollisionDetectionFromGraphicalNote = function (graphicalStaffEntry) {\n        var restNote;\n        var graphicalNotes;\n        if (graphicalStaffEntry.notes[0][0].sourceNote.Pitch === undefined) {\n            restNote = graphicalStaffEntry.notes[0][0];\n            graphicalNotes = graphicalStaffEntry.notes[1];\n        }\n        else {\n            graphicalNotes = graphicalStaffEntry.notes[0];\n            restNote = graphicalStaffEntry.notes[1][0];\n        }\n        var collision = false;\n        graphicalStaffEntry.PositionAndShape.calculateAbsolutePositionsRecursiveWithoutTopelement();\n        for (var idx = 0, len = graphicalNotes.length; idx < len; ++idx) {\n            var graphicalNote = graphicalNotes[idx];\n            if (restNote.PositionAndShape.marginCollisionDetection(graphicalNote.PositionAndShape)) {\n                collision = true;\n                break;\n            }\n        }\n        if (collision) {\n            if (restNote.sourceNote.ParentVoiceEntry.ParentVoice instanceof LinkedVoice_1.LinkedVoice) {\n                var bottomBorder = graphicalNotes[0].PositionAndShape.BorderMarginBottom + graphicalNotes[0].PositionAndShape.RelativePosition.y;\n                restNote.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, bottomBorder - restNote.PositionAndShape.BorderMarginTop + 0.5);\n            }\n            else {\n                var last = graphicalNotes[graphicalNotes.length - 1];\n                var topBorder = last.PositionAndShape.BorderMarginTop + last.PositionAndShape.RelativePosition.y;\n                if (graphicalNotes[0].sourceNote.ParentVoiceEntry.ParentVoice instanceof LinkedVoice_1.LinkedVoice) {\n                    restNote.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, topBorder - restNote.PositionAndShape.BorderMarginBottom - 0.5);\n                }\n                else {\n                    var bottomBorder = graphicalNotes[0].PositionAndShape.BorderMarginBottom + graphicalNotes[0].PositionAndShape.RelativePosition.y;\n                    if (bottomBorder < 2.0) {\n                        restNote.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, bottomBorder - restNote.PositionAndShape.BorderMarginTop + 0.5);\n                    }\n                    else {\n                        restNote.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, topBorder - restNote.PositionAndShape.BorderMarginBottom - 0.0);\n                    }\n                }\n            }\n        }\n        graphicalStaffEntry.PositionAndShape.calculateBoundingBox();\n    };\n    MusicSheetCalculator.prototype.calculateTieCurves = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    for (var idx4 = 0, len5 = staffLine.Measures.length; idx4 < len5; ++idx4) {\n                        var measure = staffLine.Measures[idx4];\n                        for (var idx6 = 0, len6 = measure.staffEntries.length; idx6 < len6; ++idx6) {\n                            var staffEntry = measure.staffEntries[idx6];\n                            var graphicalTies = staffEntry.GraphicalTies;\n                            for (var idx7 = 0, len7 = graphicalTies.length; idx7 < len7; ++idx7) {\n                                var graphicalTie = graphicalTies[idx7];\n                                if (graphicalTie.StartNote !== undefined && graphicalTie.StartNote.parentStaffEntry === staffEntry) {\n                                    var tieIsAtSystemBreak = (graphicalTie.StartNote.parentStaffEntry.parentMeasure.ParentStaffLine !==\n                                        graphicalTie.EndNote.parentStaffEntry.parentMeasure.ParentStaffLine);\n                                    this.layoutGraphicalTie(graphicalTie, tieIsAtSystemBreak);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // Commented because unused:\n    //private calculateFingering(): void {\n    //    for (let idx: number = 0, len: number = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n    //        let graphicalMusicPage: GraphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n    //        for (let idx2: number = 0, len2: number = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n    //            let musicSystem: MusicSystem = graphicalMusicPage.MusicSystems[idx2];\n    //            for (let idx3: number = 0, len3: number = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n    //                let staffLine: StaffLine = musicSystem.StaffLines[idx3];\n    //                let skyBottomLineCalculator: SkyBottomLineCalculator = new SkyBottomLineCalculator(this.rules);\n    //                for (let idx4: number = 0, len4: number = staffLine.Measures.length; idx4 < len4; ++idx4) {\n    //                    let measure: StaffMeasure = staffLine.Measures[idx4];\n    //                    let measureRelativePosition: PointF2D = measure.PositionAndShape.RelativePosition;\n    //                    for (let idx5: number = 0, len5: number = measure.staffEntries.length; idx5 < len5; ++idx5) {\n    //                        let staffEntry: GraphicalStaffEntry = measure.staffEntries[idx5];\n    //                        let hasTechnicalInstruction: boolean = false;\n    //                        for (let idx6: number = 0, len6: number = staffEntry.sourceStaffEntry.VoiceEntries.length; idx6 < len6; ++idx6) {\n    //                            let ve: VoiceEntry = staffEntry.sourceStaffEntry.VoiceEntries[idx6];\n    //                            if (ve.TechnicalInstructions.length > 0) {\n    //                                hasTechnicalInstruction = true;\n    //                                break;\n    //                            }\n    //                        }\n    //                        if (hasTechnicalInstruction) {\n    //                            this.layoutFingering(staffLine, skyBottomLineCalculator, staffEntry, measureRelativePosition);\n    //                        }\n    //                    }\n    //                }\n    //            }\n    //        }\n    //    }\n    //}\n    MusicSheetCalculator.prototype.calculateLyricsPosition = function () {\n        for (var idx = 0, len = this.graphicalMusicSheet.ParentMusicSheet.Instruments.length; idx < len; ++idx) {\n            var instrument = this.graphicalMusicSheet.ParentMusicSheet.Instruments[idx];\n            if (instrument.HasLyrics && instrument.LyricVersesNumbers.length > 0) {\n                instrument.LyricVersesNumbers.sort();\n            }\n        }\n        for (var idx = 0, len = this.graphicalMusicSheet.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.graphicalMusicSheet.MusicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                for (var idx3 = 0, len3 = musicSystem.StaffLines.length; idx3 < len3; ++idx3) {\n                    var staffLine = musicSystem.StaffLines[idx3];\n                    this.calculateSingleStaffLineLyricsPosition(staffLine, staffLine.ParentStaff.ParentInstrument.LyricVersesNumbers);\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateDynamicExpressions = function () {\n        for (var i = 0; i < this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length; i++) {\n            var sourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[i];\n            for (var j = 0; j < sourceMeasure.StaffLinkedExpressions.length; j++) {\n                if (this.graphicalMusicSheet.MeasureList[i][j].ParentStaff.ParentInstrument.Visible) {\n                    for (var k = 0; k < sourceMeasure.StaffLinkedExpressions[j].length; k++) {\n                        if (sourceMeasure.StaffLinkedExpressions[j][k].InstantaniousDynamic !== undefined ||\n                            (sourceMeasure.StaffLinkedExpressions[j][k].StartingContinuousDynamic !== undefined &&\n                                sourceMeasure.StaffLinkedExpressions[j][k].StartingContinuousDynamic.StartMultiExpression ===\n                                    sourceMeasure.StaffLinkedExpressions[j][k] && sourceMeasure.StaffLinkedExpressions[j][k].UnknownList.length === 0)) {\n                            this.calculateDynamicExpressionsForSingleMultiExpression(sourceMeasure.StaffLinkedExpressions[j][k], i, j);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateOctaveShifts = function () {\n        for (var i = 0; i < this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length; i++) {\n            var sourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[i];\n            for (var j = 0; j < sourceMeasure.StaffLinkedExpressions.length; j++) {\n                if (this.graphicalMusicSheet.MeasureList[i][j].ParentStaff.ParentInstrument.Visible) {\n                    for (var k = 0; k < sourceMeasure.StaffLinkedExpressions[j].length; k++) {\n                        if ((sourceMeasure.StaffLinkedExpressions[j][k].OctaveShiftStart !== undefined)) {\n                            this.calculateSingleOctaveShift(sourceMeasure, sourceMeasure.StaffLinkedExpressions[j][k], i, j);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.getFirstLeftNotNullStaffEntryFromContainer = function (horizontalIndex, verticalIndex, multiStaffInstrument) {\n        if (this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[horizontalIndex].StaffEntries[verticalIndex] !== undefined) {\n            return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[horizontalIndex].StaffEntries[verticalIndex];\n        }\n        for (var i = horizontalIndex - 1; i >= 0; i--) {\n            if (this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[verticalIndex] !== undefined) {\n                return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[verticalIndex];\n            }\n        }\n        return undefined;\n    };\n    MusicSheetCalculator.prototype.getFirstRightNotNullStaffEntryFromContainer = function (horizontalIndex, verticalIndex, multiStaffInstrument) {\n        if (this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[horizontalIndex].StaffEntries[verticalIndex] !== undefined) {\n            return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[horizontalIndex].StaffEntries[verticalIndex];\n        }\n        for (var i = horizontalIndex + 1; i < this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length; i++) {\n            if (this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[verticalIndex] !== undefined) {\n                return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[verticalIndex];\n            }\n        }\n        return undefined;\n    };\n    MusicSheetCalculator.prototype.calculateWordRepetitionInstructions = function () {\n        for (var i = 0; i < this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length; i++) {\n            var sourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[i];\n            for (var idx = 0, len = sourceMeasure.FirstRepetitionInstructions.length; idx < len; ++idx) {\n                var instruction = sourceMeasure.FirstRepetitionInstructions[idx];\n                this.calculateWordRepetitionInstruction(instruction, i);\n            }\n            for (var idx = 0, len = sourceMeasure.LastRepetitionInstructions.length; idx < len; ++idx) {\n                var instruction = sourceMeasure.LastRepetitionInstructions[idx];\n                this.calculateWordRepetitionInstruction(instruction, i);\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateRepetitionEndings = function () {\n        var musicsheet = this.graphicalMusicSheet.ParentMusicSheet;\n        for (var idx = 0, len = musicsheet.Repetitions.length; idx < len; ++idx) {\n            var partListEntry = musicsheet.Repetitions[idx];\n            this.calcGraphicalRepetitionEndingsRecursively(partListEntry);\n        }\n    };\n    MusicSheetCalculator.prototype.calculateTempoExpressions = function () {\n        for (var i = 0; i < this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length; i++) {\n            var sourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[i];\n            for (var j = 0; j < sourceMeasure.TempoExpressions.length; j++) {\n                this.calculateTempoExpressionsForSingleMultiTempoExpression(sourceMeasure, sourceMeasure.TempoExpressions[j], i);\n            }\n        }\n    };\n    MusicSheetCalculator.prototype.calculateMoodAndUnknownExpressions = function () {\n        for (var i = 0; i < this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length; i++) {\n            var sourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[i];\n            for (var j = 0; j < sourceMeasure.StaffLinkedExpressions.length; j++) {\n                if (this.graphicalMusicSheet.MeasureList[i][j].ParentStaff.ParentInstrument.Visible) {\n                    for (var k = 0; k < sourceMeasure.StaffLinkedExpressions[j].length; k++) {\n                        if ((sourceMeasure.StaffLinkedExpressions[j][k].MoodList.length > 0) ||\n                            (sourceMeasure.StaffLinkedExpressions[j][k].UnknownList.length > 0)) {\n                            this.calculateMoodAndUnknownExpression(sourceMeasure.StaffLinkedExpressions[j][k], i, j);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return MusicSheetCalculator;\n}());\nexports.MusicSheetCalculator = MusicSheetCalculator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSheetCalculator.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\nvar VerticalGraphicalStaffEntryContainer_1 = require(\"./VerticalGraphicalStaffEntryContainer\");\nvar GraphicalLine_1 = require(\"./GraphicalLine\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar ClefInstruction_1 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar KeyInstruction_1 = require(\"../VoiceData/Instructions/KeyInstruction\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar logging_1 = require(\"../../Common/logging\");\nvar Dictionary_1 = require(\"typescript-collections/dist/lib/Dictionary\");\nvar collectionUtil_1 = require(\"../../Util/collectionUtil\");\nvar GraphicalMusicSheet = (function () {\n    function GraphicalMusicSheet(musicSheet, calculator) {\n        this.musicPages = [];\n        this.measureList = [];\n        this.verticalGraphicalStaffEntryContainers = [];\n        this.cursors = [];\n        this.leadSheet = false;\n        this.musicSheet = musicSheet;\n        this.numberOfStaves = this.musicSheet.Staves.length;\n        this.calculator = calculator;\n        this.sourceToGraphicalMeasureLinks = new Dictionary_1.default();\n        this.calculator.initialize(this);\n    }\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"ParentMusicSheet\", {\n        get: function () {\n            return this.musicSheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"GetCalculator\", {\n        get: function () {\n            return this.calculator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"MusicPages\", {\n        get: function () {\n            return this.musicPages;\n        },\n        set: function (value) {\n            this.musicPages = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"MeasureList\", {\n        //public get FontInfo(): FontInfo {\n        //    return this.fontInfo;\n        //}\n        get: function () {\n            return this.measureList;\n        },\n        set: function (value) {\n            this.measureList = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"VerticalGraphicalStaffEntryContainers\", {\n        get: function () {\n            return this.verticalGraphicalStaffEntryContainers;\n        },\n        set: function (value) {\n            this.verticalGraphicalStaffEntryContainers = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"Title\", {\n        get: function () {\n            return this.title;\n        },\n        set: function (value) {\n            this.title = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"Subtitle\", {\n        get: function () {\n            return this.subtitle;\n        },\n        set: function (value) {\n            this.subtitle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"Composer\", {\n        get: function () {\n            return this.composer;\n        },\n        set: function (value) {\n            this.composer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"Lyricist\", {\n        get: function () {\n            return this.lyricist;\n        },\n        set: function (value) {\n            this.lyricist = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"Cursors\", {\n        get: function () {\n            return this.cursors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"SelectionStartSymbol\", {\n        get: function () {\n            return this.selectionStartSymbol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"SelectionEndSymbol\", {\n        get: function () {\n            return this.selectionEndSymbol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"MinAllowedSystemWidth\", {\n        get: function () {\n            return this.minAllowedSystemWidth;\n        },\n        set: function (value) {\n            this.minAllowedSystemWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"NumberOfStaves\", {\n        // public get SystemImages(): Dictionary<MusicSystem, SystemImageProperties> {\n        //     return this.systemImages;\n        // }\n        get: function () {\n            return this.numberOfStaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicSheet.prototype, \"LeadSheet\", {\n        get: function () {\n            return this.leadSheet;\n        },\n        set: function (value) {\n            this.leadSheet = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicalMusicSheet.transformRelativeToAbsolutePosition = function (graphicalMusicSheet) {\n        for (var i = 0; i < graphicalMusicSheet.MusicPages.length; i++) {\n            var pageAbsolute = graphicalMusicSheet.MusicPages[i].setMusicPageAbsolutePosition(i, graphicalMusicSheet.ParentMusicSheet.rules);\n            var page = graphicalMusicSheet.MusicPages[i];\n            page.PositionAndShape.calculateAbsolutePositionsRecursive(pageAbsolute.x, pageAbsolute.y);\n        }\n    };\n    GraphicalMusicSheet.prototype.Initialize = function () {\n        this.verticalGraphicalStaffEntryContainers = [];\n        this.musicPages = [];\n        this.measureList = [];\n    };\n    GraphicalMusicSheet.prototype.reCalculate = function () {\n        this.calculator.calculate();\n    };\n    GraphicalMusicSheet.prototype.prepare = function () {\n        this.calculator.prepareGraphicalMusicSheet();\n    };\n    GraphicalMusicSheet.prototype.EnforceRedrawOfMusicSystems = function () {\n        for (var idx = 0, len = this.musicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.musicPages[idx];\n            for (var idx2 = 0, len2 = graphicalMusicPage.MusicSystems.length; idx2 < len2; ++idx2) {\n                var musicSystem = graphicalMusicPage.MusicSystems[idx2];\n                musicSystem.needsToBeRedrawn = true;\n            }\n        }\n    };\n    GraphicalMusicSheet.prototype.getClickedObject = function (positionOnMusicSheet) {\n        for (var idx = 0, len = this.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.MusicPages[idx];\n            return graphicalMusicPage.PositionAndShape.getClickedObjectOfType(positionOnMusicSheet);\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.findGraphicalStaffEntryFromMeasureList = function (staffIndex, measureIndex, sourceStaffEntry) {\n        for (var i = measureIndex; i < this.measureList.length; i++) {\n            var graphicalMeasure = this.measureList[i][staffIndex];\n            for (var idx = 0, len = graphicalMeasure.staffEntries.length; idx < len; ++idx) {\n                var graphicalStaffEntry = graphicalMeasure.staffEntries[idx];\n                if (graphicalStaffEntry.sourceStaffEntry === sourceStaffEntry) {\n                    return graphicalStaffEntry;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.findNextGraphicalStaffEntry = function (staffIndex, measureIndex, graphicalStaffEntry) {\n        var graphicalMeasure = graphicalStaffEntry.parentMeasure;\n        var graphicalStaffEntryIndex = graphicalMeasure.staffEntries.indexOf(graphicalStaffEntry);\n        if (graphicalStaffEntryIndex < graphicalMeasure.staffEntries.length - 1) {\n            return graphicalMeasure.staffEntries[graphicalStaffEntryIndex + 1];\n        }\n        else if (measureIndex < this.measureList.length - 1) {\n            var nextMeasure = this.measureList[measureIndex + 1][staffIndex];\n            if (nextMeasure.staffEntries.length > 0) {\n                return nextMeasure.staffEntries[0];\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.getFirstVisibleMeasuresListFromIndeces = function (start, end) {\n        var graphicalMeasures = [];\n        var numberOfStaves = this.measureList[0].length;\n        for (var i = start; i <= end; i++) {\n            for (var j = 0; j < numberOfStaves; j++) {\n                if (this.measureList[i][j].isVisible()) {\n                    graphicalMeasures.push(this.measureList[i][j]);\n                    break;\n                }\n            }\n        }\n        return graphicalMeasures;\n    };\n    GraphicalMusicSheet.prototype.orderMeasuresByStaffLine = function (measures) {\n        var orderedMeasures = [];\n        var mList = [];\n        orderedMeasures.push(mList);\n        for (var i = 0; i < measures.length; i++) {\n            if (i === 0) {\n                mList.push(measures[0]);\n            }\n            else {\n                if (measures[i].ParentStaffLine === measures[i - 1].ParentStaffLine) {\n                    mList.push(measures[i]);\n                }\n                else {\n                    if (orderedMeasures.indexOf(mList) === -1) {\n                        orderedMeasures.push(mList);\n                    }\n                    mList = [];\n                    orderedMeasures.push(mList);\n                    mList.push(measures[i]);\n                }\n            }\n        }\n        return orderedMeasures;\n    };\n    GraphicalMusicSheet.prototype.initializeActiveClefs = function () {\n        var activeClefs = [];\n        var firstSourceMeasure = this.musicSheet.getFirstSourceMeasure();\n        if (firstSourceMeasure !== undefined) {\n            for (var i = 0; i < firstSourceMeasure.CompleteNumberOfStaves; i++) {\n                var clef = new ClefInstruction_1.ClefInstruction();\n                if (firstSourceMeasure.FirstInstructionsStaffEntries[i] !== undefined) {\n                    for (var idx = 0, len = firstSourceMeasure.FirstInstructionsStaffEntries[i].Instructions.length; idx < len; ++idx) {\n                        var abstractNotationInstruction = firstSourceMeasure.FirstInstructionsStaffEntries[i].Instructions[idx];\n                        if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                            clef = abstractNotationInstruction;\n                        }\n                    }\n                }\n                activeClefs.push(clef);\n            }\n        }\n        return activeClefs;\n    };\n    GraphicalMusicSheet.prototype.GetMainKey = function () {\n        var firstSourceMeasure = this.musicSheet.getFirstSourceMeasure();\n        if (firstSourceMeasure !== undefined) {\n            for (var i = 0; i < firstSourceMeasure.CompleteNumberOfStaves; i++) {\n                for (var idx = 0, len = firstSourceMeasure.FirstInstructionsStaffEntries[i].Instructions.length; idx < len; ++idx) {\n                    var abstractNotationInstruction = firstSourceMeasure.FirstInstructionsStaffEntries[i].Instructions[idx];\n                    if (abstractNotationInstruction instanceof KeyInstruction_1.KeyInstruction) {\n                        return abstractNotationInstruction;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.getOrCreateVerticalContainer = function (timestamp) {\n        if (this.verticalGraphicalStaffEntryContainers.length === 0 ||\n            timestamp > collectionUtil_1.CollectionUtil.getLastElement(this.verticalGraphicalStaffEntryContainers).AbsoluteTimestamp) {\n            var verticalGraphicalStaffEntryContainer = new VerticalGraphicalStaffEntryContainer_1.VerticalGraphicalStaffEntryContainer(this.numberOfStaves, timestamp);\n            this.verticalGraphicalStaffEntryContainers.push(verticalGraphicalStaffEntryContainer);\n            return verticalGraphicalStaffEntryContainer;\n        }\n        var i;\n        for (; i >= 0; i--) {\n            if (this.verticalGraphicalStaffEntryContainers[i].AbsoluteTimestamp < timestamp) {\n                var verticalGraphicalStaffEntryContainer = new VerticalGraphicalStaffEntryContainer_1.VerticalGraphicalStaffEntryContainer(this.numberOfStaves, timestamp);\n                this.verticalGraphicalStaffEntryContainers.splice(i + 1, 0, verticalGraphicalStaffEntryContainer);\n                return verticalGraphicalStaffEntryContainer;\n            }\n            if (this.verticalGraphicalStaffEntryContainers[i].AbsoluteTimestamp === timestamp) {\n                return this.verticalGraphicalStaffEntryContainers[i];\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.GetVerticalContainerFromTimestamp = function (timestamp, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        var index = collectionUtil_1.CollectionUtil.binarySearch(this.verticalGraphicalStaffEntryContainers, new VerticalGraphicalStaffEntryContainer_1.VerticalGraphicalStaffEntryContainer(0, timestamp), VerticalGraphicalStaffEntryContainer_1.VerticalGraphicalStaffEntryContainer.compareByTimestamp, startIndex, this.verticalGraphicalStaffEntryContainers.length - startIndex);\n        if (index >= 0) {\n            return this.verticalGraphicalStaffEntryContainers[index];\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.GetInterpolatedIndexInVerticalContainers = function (musicTimestamp) {\n        var containers = this.verticalGraphicalStaffEntryContainers;\n        var leftIndex = 0;\n        var rightIndex = containers.length - 1;\n        var foundIndex;\n        var leftTS = undefined;\n        var rightTS = undefined;\n        if (musicTimestamp <= containers[containers.length - 1].AbsoluteTimestamp) {\n            while (rightIndex - leftIndex > 1) {\n                var middleIndex = (rightIndex + leftIndex) / 2;\n                if (containers[leftIndex].AbsoluteTimestamp === musicTimestamp) {\n                    rightIndex = leftIndex;\n                    break;\n                }\n                else if (containers[rightIndex].AbsoluteTimestamp === musicTimestamp) {\n                    leftIndex = rightIndex;\n                    break;\n                }\n                else if (containers[middleIndex].AbsoluteTimestamp === musicTimestamp) {\n                    return this.verticalGraphicalStaffEntryContainers.indexOf(containers[middleIndex]);\n                }\n                else if (containers[middleIndex].AbsoluteTimestamp > musicTimestamp) {\n                    rightIndex = middleIndex;\n                }\n                else {\n                    leftIndex = middleIndex;\n                }\n            }\n            if (leftIndex === rightIndex) {\n                return this.verticalGraphicalStaffEntryContainers.indexOf(containers[leftIndex]);\n            }\n            leftTS = containers[leftIndex].AbsoluteTimestamp;\n            rightTS = containers[rightIndex].AbsoluteTimestamp;\n        }\n        else {\n            leftTS = containers[containers.length - 1].AbsoluteTimestamp;\n            rightTS = fraction_1.Fraction.plus(this.getLongestStaffEntryDuration(containers.length - 1), leftTS);\n            rightIndex = containers.length;\n        }\n        var diff = rightTS.RealValue - leftTS.RealValue;\n        var diffTS = rightTS.RealValue - musicTimestamp.RealValue;\n        foundIndex = rightIndex - (diffTS / diff);\n        return Math.min(foundIndex, this.verticalGraphicalStaffEntryContainers.length);\n    };\n    GraphicalMusicSheet.prototype.getVisibleStavesIndecesFromSourceMeasure = function (visibleMeasures) {\n        var visibleInstruments = [];\n        var visibleStavesIndeces = [];\n        for (var idx = 0, len = visibleMeasures.length; idx < len; ++idx) {\n            var graphicalMeasure = visibleMeasures[idx];\n            var instrument = graphicalMeasure.ParentStaff.ParentInstrument;\n            if (visibleInstruments.indexOf(instrument) === -1) {\n                visibleInstruments.push(instrument);\n            }\n        }\n        for (var idx = 0, len = visibleInstruments.length; idx < len; ++idx) {\n            var instrument = visibleInstruments[idx];\n            var index = this.musicSheet.getGlobalStaffIndexOfFirstStaff(instrument);\n            for (var j = 0; j < instrument.Staves.length; j++) {\n                visibleStavesIndeces.push(index + j);\n            }\n        }\n        return visibleStavesIndeces;\n    };\n    GraphicalMusicSheet.prototype.getGraphicalMeasureFromSourceMeasureAndIndex = function (sourceMeasure, index) {\n        for (var i = 0; i < this.measureList.length; i++) {\n            if (this.measureList[i][0].parentSourceMeasure === sourceMeasure) {\n                return this.measureList[i][index];\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.getMeasureIndex = function (graphicalMeasure, measureIndex, inListIndex) {\n        measureIndex = 0;\n        inListIndex = 0;\n        for (; measureIndex < this.measureList.length; measureIndex++) {\n            for (var idx = 0, len = this.measureList[measureIndex].length; idx < len; ++idx) {\n                var measure = this.measureList[measureIndex][idx];\n                if (measure === graphicalMeasure) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    GraphicalMusicSheet.prototype.GetNearesNote = function (clickPosition, maxClickDist) {\n        var initialSearchArea = 10;\n        var foundNotes = [];\n        var region = new BoundingBox_1.BoundingBox();\n        region.BorderLeft = clickPosition.x - initialSearchArea;\n        region.BorderTop = clickPosition.y - initialSearchArea;\n        region.BorderRight = clickPosition.x + initialSearchArea;\n        region.BorderBottom = clickPosition.y + initialSearchArea;\n        region.AbsolutePosition = new PointF2D_1.PointF2D(0, 0);\n        for (var idx = 0, len = this.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.MusicPages[idx];\n            var entries = graphicalMusicPage.PositionAndShape.getObjectsInRegion(region);\n            //let entriesArr: GraphicalNote[] = __as__<GraphicalNote[]>(entries, GraphicalNote[]) ? ? entries;\n            if (entries === undefined) {\n                continue;\n            }\n            else {\n                for (var idx2 = 0, len2 = entries.length; idx2 < len2; ++idx2) {\n                    var note = entries[idx2];\n                    if (Math.abs(note.PositionAndShape.AbsolutePosition.x - clickPosition.x) < maxClickDist.x\n                        && Math.abs(note.PositionAndShape.AbsolutePosition.y - clickPosition.y) < maxClickDist.y) {\n                        foundNotes.push(note);\n                    }\n                }\n            }\n        }\n        var closest = undefined;\n        for (var idx = 0, len = foundNotes.length; idx < len; ++idx) {\n            var note = foundNotes[idx];\n            if (closest === undefined) {\n                closest = note;\n            }\n            else {\n                if (note.parentStaffEntry.relInMeasureTimestamp === undefined) {\n                    continue;\n                }\n                var deltaNew = this.CalculateDistance(note.PositionAndShape.AbsolutePosition, clickPosition);\n                var deltaOld = this.CalculateDistance(closest.PositionAndShape.AbsolutePosition, clickPosition);\n                if (deltaNew < deltaOld) {\n                    closest = note;\n                }\n            }\n        }\n        if (closest !== undefined) {\n            return closest;\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.GetClickableLabel = function (clickPosition) {\n        var initialSearchAreaX = 4;\n        var initialSearchAreaY = 4;\n        var region = new BoundingBox_1.BoundingBox();\n        region.BorderLeft = clickPosition.x - initialSearchAreaX;\n        region.BorderTop = clickPosition.y - initialSearchAreaY;\n        region.BorderRight = clickPosition.x + initialSearchAreaX;\n        region.BorderBottom = clickPosition.y + initialSearchAreaY;\n        region.AbsolutePosition = new PointF2D_1.PointF2D(0, 0);\n        for (var idx = 0, len = this.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.MusicPages[idx];\n            var entries = graphicalMusicPage.PositionAndShape.getObjectsInRegion(region);\n            if (entries.length !== 1) {\n                continue;\n            }\n            else {\n                for (var idx2 = 0, len2 = entries.length; idx2 < len2; ++idx2) {\n                    var clickedLabel = entries[idx2];\n                    return clickedLabel;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.GetNearestStaffEntry = function (clickPosition) {\n        var initialSearchArea = 10;\n        var foundEntries = [];\n        var region = new BoundingBox_1.BoundingBox(undefined);\n        region.BorderLeft = clickPosition.x - initialSearchArea;\n        region.BorderTop = clickPosition.y - initialSearchArea;\n        region.BorderRight = clickPosition.x + initialSearchArea;\n        region.BorderBottom = clickPosition.y + initialSearchArea;\n        region.AbsolutePosition = new PointF2D_1.PointF2D(0, 0);\n        for (var idx = 0, len = this.MusicPages.length; idx < len; ++idx) {\n            var graphicalMusicPage = this.MusicPages[idx];\n            var entries = graphicalMusicPage.PositionAndShape.getObjectsInRegion(region, false);\n            if (entries === undefined || entries.length === 0) {\n                continue;\n            }\n            else {\n                for (var idx2 = 0, len2 = entries.length; idx2 < len2; ++idx2) {\n                    var gse = entries[idx2];\n                    foundEntries.push(gse);\n                }\n            }\n        }\n        var closest = undefined;\n        for (var idx = 0, len = foundEntries.length; idx < len; ++idx) {\n            var gse = foundEntries[idx];\n            if (closest === undefined) {\n                closest = gse;\n            }\n            else {\n                if (gse.relInMeasureTimestamp === undefined) {\n                    continue;\n                }\n                var deltaNew = this.CalculateDistance(gse.PositionAndShape.AbsolutePosition, clickPosition);\n                var deltaOld = this.CalculateDistance(closest.PositionAndShape.AbsolutePosition, clickPosition);\n                if (deltaNew < deltaOld) {\n                    closest = gse;\n                }\n            }\n        }\n        if (closest !== undefined) {\n            return closest;\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.GetPossibleCommentAnchor = function (clickPosition) {\n        var entry = this.GetNearestStaffEntry(clickPosition);\n        if (entry === undefined) {\n            return undefined;\n        }\n        return entry.sourceStaffEntry;\n    };\n    GraphicalMusicSheet.prototype.getClickedObjectOfType = function (positionOnMusicSheet) {\n        for (var idx = 0, len = this.musicPages.length; idx < len; ++idx) {\n            var page = this.musicPages[idx];\n            var o = page.PositionAndShape.getClickedObjectOfType(positionOnMusicSheet);\n            if (o !== undefined) {\n                return o;\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.tryGetTimestampFromPosition = function (positionOnMusicSheet) {\n        var entry = this.getClickedObjectOfType(positionOnMusicSheet);\n        if (entry === undefined) {\n            return undefined;\n        }\n        return entry.getAbsoluteTimestamp();\n    };\n    GraphicalMusicSheet.prototype.tryGetClickableLabel = function (positionOnMusicSheet) {\n        try {\n            return this.GetClickableLabel(positionOnMusicSheet);\n        }\n        catch (ex) {\n            logging_1.Logging.log(\"GraphicalMusicSheet.tryGetClickableObject\", \"positionOnMusicSheet: \" + positionOnMusicSheet, ex);\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.tryGetTimeStampFromPosition = function (positionOnMusicSheet) {\n        try {\n            var entry = this.GetNearestStaffEntry(positionOnMusicSheet);\n            if (entry === undefined) {\n                return undefined;\n            }\n            return entry.getAbsoluteTimestamp();\n        }\n        catch (ex) {\n            logging_1.Logging.log(\"GraphicalMusicSheet.tryGetTimeStampFromPosition\", \"positionOnMusicSheet: \" + positionOnMusicSheet, ex);\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.getStaffEntry = function (index) {\n        var container = this.VerticalGraphicalStaffEntryContainers[index];\n        var staffEntry = undefined;\n        try {\n            for (var idx = 0, len = container.StaffEntries.length; idx < len; ++idx) {\n                var entry = container.StaffEntries[idx];\n                if (entry === undefined || !entry.sourceStaffEntry.ParentStaff.ParentInstrument.Visible) {\n                    continue;\n                }\n                if (staffEntry === undefined) {\n                    staffEntry = entry;\n                }\n                else if (entry.PositionAndShape !== undefined && staffEntry.PositionAndShape !== undefined) {\n                    if (staffEntry.PositionAndShape.RelativePosition.x > entry.PositionAndShape.RelativePosition.x) {\n                        staffEntry = entry;\n                    }\n                }\n            }\n        }\n        catch (ex) {\n            logging_1.Logging.log(\"GraphicalMusicSheet.getStaffEntry\", ex);\n        }\n        return staffEntry;\n    };\n    GraphicalMusicSheet.prototype.GetPreviousVisibleContainerIndex = function (index) {\n        for (var i = index - 1; i >= 0; i--) {\n            var entries = this.verticalGraphicalStaffEntryContainers[i].StaffEntries;\n            for (var idx = 0, len = entries.length; idx < len; ++idx) {\n                var entry = entries[idx];\n                if (entry !== undefined && entry.sourceStaffEntry.ParentStaff.ParentInstrument.Visible) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    GraphicalMusicSheet.prototype.GetNextVisibleContainerIndex = function (index) {\n        for (var i = index + 1; i < this.verticalGraphicalStaffEntryContainers.length; ++i) {\n            var entries = this.verticalGraphicalStaffEntryContainers[i].StaffEntries;\n            for (var idx = 0, len = entries.length; idx < len; ++idx) {\n                var entry = entries[idx];\n                if (entry !== undefined && entry.sourceStaffEntry.ParentStaff.ParentInstrument.Visible) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    GraphicalMusicSheet.prototype.findClosestLeftStaffEntry = function (fractionalIndex, searchOnlyVisibleEntries) {\n        var foundEntry = undefined;\n        var leftIndex = Math.floor(fractionalIndex);\n        leftIndex = Math.min(this.VerticalGraphicalStaffEntryContainers.length - 1, leftIndex);\n        for (var i = leftIndex; i >= 0; i--) {\n            foundEntry = this.getStaffEntry(i);\n            if (foundEntry !== undefined) {\n                if (searchOnlyVisibleEntries) {\n                    if (foundEntry.sourceStaffEntry.ParentStaff.ParentInstrument.Visible) {\n                        return foundEntry;\n                    }\n                }\n                else {\n                    return foundEntry;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.findClosestRightStaffEntry = function (fractionalIndex, returnOnlyVisibleEntries) {\n        var foundEntry = undefined;\n        var rightIndex = Math.max(0, Math.ceil(fractionalIndex));\n        for (var i = rightIndex; i < this.VerticalGraphicalStaffEntryContainers.length; i++) {\n            foundEntry = this.getStaffEntry(i);\n            if (foundEntry !== undefined) {\n                if (returnOnlyVisibleEntries) {\n                    if (foundEntry.sourceStaffEntry.ParentStaff.ParentInstrument.Visible) {\n                        return foundEntry;\n                    }\n                }\n                else {\n                    return foundEntry;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.calculateCursorLineAtTimestamp = function (musicTimestamp, styleEnum) {\n        var result = this.calculateXPositionFromTimestamp(musicTimestamp);\n        var xPos = result[0];\n        var correspondingMusicSystem = result[1];\n        if (correspondingMusicSystem === undefined || correspondingMusicSystem.StaffLines.length === 0) {\n            return undefined;\n        }\n        var yCoordinate = correspondingMusicSystem.PositionAndShape.AbsolutePosition.y;\n        var height = collectionUtil_1.CollectionUtil.last(correspondingMusicSystem.StaffLines).PositionAndShape.RelativePosition.y + 4;\n        return new GraphicalLine_1.GraphicalLine(new PointF2D_1.PointF2D(xPos, yCoordinate), new PointF2D_1.PointF2D(xPos, yCoordinate + height), 3, styleEnum);\n    };\n    GraphicalMusicSheet.prototype.calculateXPositionFromTimestamp = function (timeStamp) {\n        var currentMusicSystem = undefined;\n        var fractionalIndex = this.GetInterpolatedIndexInVerticalContainers(timeStamp);\n        var previousStaffEntry = this.findClosestLeftStaffEntry(fractionalIndex, true);\n        var nextStaffEntry = this.findClosestRightStaffEntry(fractionalIndex, true);\n        var currentTimeStamp = timeStamp.RealValue;\n        if (previousStaffEntry === undefined && nextStaffEntry === undefined) {\n            return [0, undefined];\n        }\n        var previousStaffEntryMusicSystem = undefined;\n        if (previousStaffEntry !== undefined) {\n            previousStaffEntryMusicSystem = previousStaffEntry.parentMeasure.ParentStaffLine.ParentMusicSystem;\n        }\n        else {\n            previousStaffEntryMusicSystem = nextStaffEntry.parentMeasure.ParentStaffLine.ParentMusicSystem;\n        }\n        var nextStaffEntryMusicSystem = undefined;\n        if (nextStaffEntry !== undefined) {\n            nextStaffEntryMusicSystem = nextStaffEntry.parentMeasure.ParentStaffLine.ParentMusicSystem;\n        }\n        else {\n            nextStaffEntryMusicSystem = previousStaffEntry.parentMeasure.ParentStaffLine.ParentMusicSystem;\n        }\n        if (previousStaffEntryMusicSystem === nextStaffEntryMusicSystem) {\n            currentMusicSystem = previousStaffEntryMusicSystem;\n            var fraction = void 0;\n            var previousStaffEntryPositionX = void 0;\n            var nextStaffEntryPositionX = void 0;\n            if (previousStaffEntry === undefined) {\n                previousStaffEntryPositionX = nextStaffEntryPositionX = nextStaffEntry.PositionAndShape.AbsolutePosition.x;\n                fraction = 0;\n            }\n            else if (nextStaffEntry === undefined) {\n                previousStaffEntryPositionX = previousStaffEntry.PositionAndShape.AbsolutePosition.x;\n                nextStaffEntryPositionX = currentMusicSystem.GetRightBorderAbsoluteXPosition();\n                var sm = previousStaffEntry.parentMeasure.parentSourceMeasure;\n                fraction = (currentTimeStamp - previousStaffEntry.getAbsoluteTimestamp().RealValue) / (fraction_1.Fraction.plus(sm.AbsoluteTimestamp, sm.Duration).RealValue - previousStaffEntry.getAbsoluteTimestamp().RealValue);\n            }\n            else {\n                previousStaffEntryPositionX = previousStaffEntry.PositionAndShape.AbsolutePosition.x;\n                nextStaffEntryPositionX = nextStaffEntry.PositionAndShape.AbsolutePosition.x;\n                if (previousStaffEntry === nextStaffEntry) {\n                    fraction = 0;\n                }\n                else {\n                    fraction = (currentTimeStamp - previousStaffEntry.getAbsoluteTimestamp().RealValue) /\n                        (nextStaffEntry.getAbsoluteTimestamp().RealValue - previousStaffEntry.getAbsoluteTimestamp().RealValue);\n                }\n            }\n            fraction = Math.min(1, Math.max(0, fraction));\n            var interpolatedXPosition = previousStaffEntryPositionX + fraction * (nextStaffEntryPositionX - previousStaffEntryPositionX);\n            return [interpolatedXPosition, currentMusicSystem];\n        }\n        else {\n            var nextSystemLeftBorderTimeStamp = nextStaffEntry.parentMeasure.parentSourceMeasure.AbsoluteTimestamp.RealValue;\n            var fraction = void 0;\n            var interpolatedXPosition = void 0;\n            if (currentTimeStamp < nextSystemLeftBorderTimeStamp) {\n                currentMusicSystem = previousStaffEntryMusicSystem;\n                var previousStaffEntryPositionX = previousStaffEntry.PositionAndShape.AbsolutePosition.x;\n                var previousSystemRightBorderX = currentMusicSystem.GetRightBorderAbsoluteXPosition();\n                fraction = (currentTimeStamp - previousStaffEntry.getAbsoluteTimestamp().RealValue) /\n                    (nextSystemLeftBorderTimeStamp - previousStaffEntry.getAbsoluteTimestamp().RealValue);\n                fraction = Math.min(1, Math.max(0, fraction));\n                interpolatedXPosition = previousStaffEntryPositionX + fraction * (previousSystemRightBorderX - previousStaffEntryPositionX);\n            }\n            else {\n                currentMusicSystem = nextStaffEntryMusicSystem;\n                var nextStaffEntryPositionX = nextStaffEntry.PositionAndShape.AbsolutePosition.x;\n                var nextSystemLeftBorderX = currentMusicSystem.GetLeftBorderAbsoluteXPosition();\n                fraction = (currentTimeStamp - nextSystemLeftBorderTimeStamp) /\n                    (nextStaffEntry.getAbsoluteTimestamp().RealValue - nextSystemLeftBorderTimeStamp);\n                fraction = Math.min(1, Math.max(0, fraction));\n                interpolatedXPosition = nextSystemLeftBorderX + fraction * (nextStaffEntryPositionX - nextSystemLeftBorderX);\n            }\n            return [interpolatedXPosition, currentMusicSystem];\n        }\n    };\n    GraphicalMusicSheet.prototype.GetNumberOfVisibleInstruments = function () {\n        var visibleInstrumentCount = 0;\n        for (var idx = 0, len = this.musicSheet.Instruments.length; idx < len; ++idx) {\n            var instrument = this.musicSheet.Instruments[idx];\n            if (instrument.Visible === true) {\n                visibleInstrumentCount++;\n            }\n        }\n        return visibleInstrumentCount;\n    };\n    GraphicalMusicSheet.prototype.GetNumberOfFollowedInstruments = function () {\n        var followedInstrumentCount = 0;\n        for (var idx = 0, len = this.musicSheet.Instruments.length; idx < len; ++idx) {\n            var instrument = this.musicSheet.Instruments[idx];\n            if (instrument.Following === true) {\n                followedInstrumentCount++;\n            }\n        }\n        return followedInstrumentCount;\n    };\n    GraphicalMusicSheet.prototype.GetGraphicalFromSourceMeasure = function (sourceMeasure) {\n        return this.sourceToGraphicalMeasureLinks.getValue(sourceMeasure);\n    };\n    GraphicalMusicSheet.prototype.GetGraphicalFromSourceStaffEntry = function (sourceStaffEntry) {\n        var graphicalMeasure = this.GetGraphicalFromSourceMeasure(sourceStaffEntry.VerticalContainerParent.ParentMeasure)[sourceStaffEntry.ParentStaff.idInMusicSheet];\n        return graphicalMeasure.findGraphicalStaffEntryFromTimestamp(sourceStaffEntry.Timestamp);\n    };\n    GraphicalMusicSheet.prototype.GetGraphicalNoteFromSourceNote = function (note, containingGse) {\n        for (var idx = 0, len = containingGse.notes.length; idx < len; ++idx) {\n            var graphicalNotes = containingGse.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                if (graphicalNote.sourceNote === note) {\n                    return graphicalNote;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalMusicSheet.prototype.CalculateDistance = function (pt1, pt2) {\n        var deltaX = pt1.x - pt2.x;\n        var deltaY = pt1.y - pt2.y;\n        return (deltaX * deltaX) + (deltaY * deltaY);\n    };\n    GraphicalMusicSheet.prototype.getLongestStaffEntryDuration = function (index) {\n        var maxLength = new fraction_1.Fraction(0, 1);\n        for (var idx = 0, len = this.verticalGraphicalStaffEntryContainers[index].StaffEntries.length; idx < len; ++idx) {\n            var graphicalStaffEntry = this.verticalGraphicalStaffEntryContainers[index].StaffEntries[idx];\n            if (graphicalStaffEntry === undefined) {\n                continue;\n            }\n            for (var idx2 = 0, len2 = graphicalStaffEntry.notes.length; idx2 < len2; ++idx2) {\n                var graphicalNotes = graphicalStaffEntry.notes[idx2];\n                for (var idx3 = 0, len3 = graphicalNotes.length; idx3 < len3; ++idx3) {\n                    var note = graphicalNotes[idx3];\n                    if (note.graphicalNoteLength > maxLength) {\n                        maxLength = note.graphicalNoteLength;\n                    }\n                }\n            }\n        }\n        return maxLength;\n    };\n    return GraphicalMusicSheet;\n}());\nexports.GraphicalMusicSheet = GraphicalMusicSheet;\nvar SystemImageProperties = (function () {\n    function SystemImageProperties() {\n    }\n    return SystemImageProperties;\n}());\nexports.SystemImageProperties = SystemImageProperties;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalMusicSheet.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\nvar VerticalGraphicalStaffEntryContainer = (function () {\n    function VerticalGraphicalStaffEntryContainer(numberOfEntries, absoluteTimestamp) {\n        this.staffEntries = [];\n        this.absoluteTimestamp = absoluteTimestamp;\n        for (var i = 0; i < numberOfEntries; i++) {\n            this.staffEntries.push(undefined);\n        }\n    }\n    Object.defineProperty(VerticalGraphicalStaffEntryContainer.prototype, \"Index\", {\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VerticalGraphicalStaffEntryContainer.prototype, \"AbsoluteTimestamp\", {\n        get: function () {\n            return this.absoluteTimestamp;\n        },\n        set: function (value) {\n            this.absoluteTimestamp = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VerticalGraphicalStaffEntryContainer.prototype, \"StaffEntries\", {\n        get: function () {\n            return this.staffEntries;\n        },\n        set: function (value) {\n            this.staffEntries = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VerticalGraphicalStaffEntryContainer.compareByTimestamp = function (x, y) {\n        var xValue = x.absoluteTimestamp.RealValue;\n        var yValue = y.absoluteTimestamp.RealValue;\n        if (xValue < yValue) {\n            return -1;\n        }\n        else if (xValue > yValue) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    VerticalGraphicalStaffEntryContainer.prototype.getFirstNonNullStaffEntry = function () {\n        for (var idx = 0, len = this.staffEntries.length; idx < len; ++idx) {\n            var graphicalStaffEntry = this.staffEntries[idx];\n            if (graphicalStaffEntry !== undefined) {\n                return graphicalStaffEntry;\n            }\n        }\n        return undefined;\n    };\n    return VerticalGraphicalStaffEntryContainer;\n}());\nexports.VerticalGraphicalStaffEntryContainer = VerticalGraphicalStaffEntryContainer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VerticalGraphicalStaffEntryContainer.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\nvar DrawingEnums_1 = require(\"./DrawingEnums\");\nvar GraphicalLine = (function () {\n    function GraphicalLine(start, end, width, styleEnum) {\n        if (width === void 0) { width = 0; }\n        if (styleEnum === void 0) { styleEnum = DrawingEnums_1.OutlineAndFillStyleEnum.BaseWritingColor; }\n        this.start = start;\n        this.end = end;\n        this.width = width;\n        this.styleId = styleEnum;\n    }\n    Object.defineProperty(GraphicalLine.prototype, \"Start\", {\n        get: function () {\n            return this.start;\n        },\n        set: function (value) {\n            this.start = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalLine.prototype, \"End\", {\n        get: function () {\n            return this.end;\n        },\n        set: function (value) {\n            this.end = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalLine.prototype, \"Width\", {\n        get: function () {\n            return this.width;\n        },\n        set: function (value) {\n            this.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GraphicalLine;\n}());\nexports.GraphicalLine = GraphicalLine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalLine.js\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\n(function (OutlineAndFillStyleEnum) {\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"BaseWritingColor\"] = 0] = \"BaseWritingColor\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"FollowingCursor\"] = 1] = \"FollowingCursor\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"AlternativeFollowingCursor\"] = 2] = \"AlternativeFollowingCursor\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"PlaybackCursor\"] = 3] = \"PlaybackCursor\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Highlighted\"] = 4] = \"Highlighted\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"ErrorUnderlay\"] = 5] = \"ErrorUnderlay\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Selected\"] = 6] = \"Selected\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"SelectionSymbol\"] = 7] = \"SelectionSymbol\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"DebugColor1\"] = 8] = \"DebugColor1\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"DebugColor2\"] = 9] = \"DebugColor2\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"DebugColor3\"] = 10] = \"DebugColor3\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"SplitScreenDivision\"] = 11] = \"SplitScreenDivision\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"GreyTransparentOverlay\"] = 12] = \"GreyTransparentOverlay\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea1\"] = 13] = \"MarkedArea1\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea2\"] = 14] = \"MarkedArea2\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea3\"] = 15] = \"MarkedArea3\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea4\"] = 16] = \"MarkedArea4\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea5\"] = 17] = \"MarkedArea5\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea6\"] = 18] = \"MarkedArea6\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea7\"] = 19] = \"MarkedArea7\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea8\"] = 20] = \"MarkedArea8\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea9\"] = 21] = \"MarkedArea9\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"MarkedArea10\"] = 22] = \"MarkedArea10\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment1\"] = 23] = \"Comment1\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment2\"] = 24] = \"Comment2\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment3\"] = 25] = \"Comment3\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment4\"] = 26] = \"Comment4\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment5\"] = 27] = \"Comment5\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment6\"] = 28] = \"Comment6\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment7\"] = 29] = \"Comment7\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment8\"] = 30] = \"Comment8\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment9\"] = 31] = \"Comment9\";\n    OutlineAndFillStyleEnum[OutlineAndFillStyleEnum[\"Comment10\"] = 32] = \"Comment10\";\n})(exports.OutlineAndFillStyleEnum || (exports.OutlineAndFillStyleEnum = {}));\nvar OutlineAndFillStyleEnum = exports.OutlineAndFillStyleEnum;\n(function (StyleSets) {\n    StyleSets[StyleSets[\"MarkedArea\"] = 0] = \"MarkedArea\";\n    StyleSets[StyleSets[\"Comment\"] = 1] = \"Comment\";\n})(exports.StyleSets || (exports.StyleSets = {}));\nvar StyleSets = exports.StyleSets;\n(function (GraphicalLayers) {\n    GraphicalLayers[GraphicalLayers[\"Background\"] = 0] = \"Background\";\n    GraphicalLayers[GraphicalLayers[\"Highlight\"] = 1] = \"Highlight\";\n    GraphicalLayers[GraphicalLayers[\"MeasureError\"] = 2] = \"MeasureError\";\n    GraphicalLayers[GraphicalLayers[\"SelectionSymbol\"] = 3] = \"SelectionSymbol\";\n    GraphicalLayers[GraphicalLayers[\"Cursor\"] = 4] = \"Cursor\";\n    GraphicalLayers[GraphicalLayers[\"PSI_Debug\"] = 5] = \"PSI_Debug\";\n    GraphicalLayers[GraphicalLayers[\"Notes\"] = 6] = \"Notes\";\n    GraphicalLayers[GraphicalLayers[\"Comment\"] = 7] = \"Comment\";\n    GraphicalLayers[GraphicalLayers[\"Debug_above\"] = 8] = \"Debug_above\";\n})(exports.GraphicalLayers || (exports.GraphicalLayers = {}));\nvar GraphicalLayers = exports.GraphicalLayers;\n(function (NoteState) {\n    NoteState[NoteState[\"Normal\"] = 0] = \"Normal\";\n    NoteState[NoteState[\"Selected\"] = 1] = \"Selected\";\n    NoteState[NoteState[\"Follow_Confirmed\"] = 2] = \"Follow_Confirmed\";\n    NoteState[NoteState[\"QFeedback_NotFound\"] = 3] = \"QFeedback_NotFound\";\n    NoteState[NoteState[\"QFeedback_OK\"] = 4] = \"QFeedback_OK\";\n    NoteState[NoteState[\"QFeedback_Perfect\"] = 5] = \"QFeedback_Perfect\";\n    NoteState[NoteState[\"Debug1\"] = 6] = \"Debug1\";\n    NoteState[NoteState[\"Debug2\"] = 7] = \"Debug2\";\n    NoteState[NoteState[\"Debug3\"] = 8] = \"Debug3\";\n})(exports.NoteState || (exports.NoteState = {}));\nvar NoteState = exports.NoteState;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/DrawingEnums.js\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nvar PointF2D = (function () {\n    function PointF2D(x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        this.x = 0;\n        this.y = 0;\n        this.x = x;\n        this.y = y;\n    }\n    Object.defineProperty(PointF2D, \"Empty\", {\n        get: function () {\n            return new PointF2D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointF2D.pointsAreEqual = function (p1, p2) {\n        return (p1.x === p2.x && p1.y === p2.y);\n    };\n    PointF2D.prototype.ToString = function () {\n        return \"[\" + this.x + \", \" + this.y + \"]\";\n    };\n    return PointF2D;\n}());\nexports.PointF2D = PointF2D;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/DataObjects/PointF2D.js\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar pitch_1 = require(\"../../../Common/DataObjects/pitch\");\nvar AbstractNotationInstruction_1 = require(\"./AbstractNotationInstruction\");\nvar pitch_2 = require(\"../../../Common/DataObjects/pitch\");\nvar pitch_3 = require(\"../../../Common/DataObjects/pitch\");\nvar Exceptions_1 = require(\"../../Exceptions\");\nvar ClefInstruction = (function (_super) {\n    __extends(ClefInstruction, _super);\n    function ClefInstruction(clefType, octaveOffset, line) {\n        if (clefType === void 0) { clefType = ClefEnum.G; }\n        if (octaveOffset === void 0) { octaveOffset = 0; }\n        if (line === void 0) { line = 2; }\n        _super.call(this, undefined); // FIXME? Missing SourceStaffEntry!\n        this.clefType = ClefEnum.G;\n        this.line = 2;\n        this.octaveOffset = 0;\n        this.line = line;\n        this.clefType = clefType;\n        this.octaveOffset = octaveOffset;\n        this.calcParameters();\n    }\n    ClefInstruction.getDefaultClefFromMidiInstrument = function (instrument) {\n        switch (instrument) {\n            case MidiInstrument.Acoustic_Grand_Piano:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Electric_Bass_finger:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Electric_Bass_pick:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Fretless_Bass:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Slap_Bass_1:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Slap_Bass_2:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Synth_Bass_1:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Synth_Bass_2:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            case MidiInstrument.Contrabass:\n                return new ClefInstruction(ClefEnum.F, 0, 4);\n            default:\n                return new ClefInstruction(ClefEnum.G, 0, 2);\n        }\n    };\n    ClefInstruction.getAllPossibleClefs = function () {\n        var clefList = [];\n        for (var i = 0; i <= 2; i++) {\n            var clefInstructionG = new ClefInstruction(ClefEnum.G, i, 2);\n            clefList.push(clefInstructionG);\n        }\n        for (var j = -2; j <= 0; j++) {\n            var clefInstructionF = new ClefInstruction(ClefEnum.F, j, 4);\n            clefList.push(clefInstructionF);\n        }\n        return clefList;\n    };\n    ClefInstruction.isSupportedClef = function (clef) {\n        switch (clef) {\n            case ClefEnum.G:\n            case ClefEnum.F:\n            case ClefEnum.C:\n            case ClefEnum.percussion:\n                return true;\n            default:\n                return false;\n        }\n    };\n    Object.defineProperty(ClefInstruction.prototype, \"ClefType\", {\n        get: function () {\n            return this.clefType;\n        },\n        set: function (value) {\n            this.clefType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClefInstruction.prototype, \"Line\", {\n        get: function () {\n            return this.line;\n        },\n        set: function (value) {\n            this.line = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClefInstruction.prototype, \"OctaveOffset\", {\n        get: function () {\n            return this.octaveOffset;\n        },\n        set: function (value) {\n            this.octaveOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClefInstruction.prototype, \"ClefPitch\", {\n        get: function () {\n            return this.clefPitch;\n        },\n        set: function (value) {\n            this.clefPitch = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClefInstruction.prototype, \"ReferenceCyPosition\", {\n        get: function () {\n            return this.referenceCyPosition;\n        },\n        set: function (value) {\n            this.referenceCyPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClefInstruction.prototype.Equals = function (other) {\n        if (this === other) {\n            return true;\n        }\n        if (this === undefined || other === undefined) {\n            return false;\n        }\n        return (this.ClefPitch === other.ClefPitch && this.Line === other.Line);\n    };\n    ClefInstruction.prototype.NotEqual = function (clef2) {\n        return !this.Equals(clef2);\n    };\n    ClefInstruction.prototype.ToString = function () {\n        return \"ClefType: \" + this.clefType;\n    };\n    ClefInstruction.prototype.calcParameters = function () {\n        switch (this.clefType) {\n            case ClefEnum.G:\n                this.clefPitch = new pitch_1.Pitch(pitch_2.NoteEnum.G, 1 + this.octaveOffset, pitch_3.AccidentalEnum.NONE);\n                this.referenceCyPosition = (5 - this.line) + 2;\n                break;\n            case ClefEnum.F:\n                this.clefPitch = new pitch_1.Pitch(pitch_2.NoteEnum.F, 0 + this.octaveOffset, pitch_3.AccidentalEnum.NONE);\n                this.referenceCyPosition = (5 - this.line) + 1.5;\n                break;\n            case ClefEnum.C:\n                this.clefPitch = new pitch_1.Pitch(pitch_2.NoteEnum.C, 1 + this.octaveOffset, pitch_3.AccidentalEnum.NONE);\n                this.referenceCyPosition = (5 - this.line);\n                break;\n            case ClefEnum.percussion:\n                this.clefPitch = new pitch_1.Pitch(pitch_2.NoteEnum.C, 2, pitch_3.AccidentalEnum.NONE);\n                this.referenceCyPosition = 2;\n                break;\n            default:\n                throw new Exceptions_1.ArgumentOutOfRangeException(\"clefType\");\n        }\n    };\n    return ClefInstruction;\n}(AbstractNotationInstruction_1.AbstractNotationInstruction));\nexports.ClefInstruction = ClefInstruction;\n(function (ClefEnum) {\n    ClefEnum[ClefEnum[\"G\"] = 0] = \"G\";\n    ClefEnum[ClefEnum[\"F\"] = 1] = \"F\";\n    ClefEnum[ClefEnum[\"C\"] = 2] = \"C\";\n    ClefEnum[ClefEnum[\"percussion\"] = 3] = \"percussion\";\n    ClefEnum[ClefEnum[\"TAB\"] = 4] = \"TAB\";\n})(exports.ClefEnum || (exports.ClefEnum = {}));\nvar ClefEnum = exports.ClefEnum;\n(function (MidiInstrument) {\n    MidiInstrument[MidiInstrument[\"None\"] = -1] = \"None\";\n    MidiInstrument[MidiInstrument[\"Acoustic_Grand_Piano\"] = 0] = \"Acoustic_Grand_Piano\";\n    MidiInstrument[MidiInstrument[\"Bright_Acoustic_Piano\"] = 1] = \"Bright_Acoustic_Piano\";\n    MidiInstrument[MidiInstrument[\"Electric_Grand_Piano\"] = 2] = \"Electric_Grand_Piano\";\n    MidiInstrument[MidiInstrument[\"Honky_tonk_Piano\"] = 3] = \"Honky_tonk_Piano\";\n    MidiInstrument[MidiInstrument[\"Electric_Piano_1\"] = 4] = \"Electric_Piano_1\";\n    MidiInstrument[MidiInstrument[\"Electric_Piano_2\"] = 5] = \"Electric_Piano_2\";\n    MidiInstrument[MidiInstrument[\"Harpsichord\"] = 6] = \"Harpsichord\";\n    MidiInstrument[MidiInstrument[\"Clavinet\"] = 7] = \"Clavinet\";\n    MidiInstrument[MidiInstrument[\"Celesta\"] = 8] = \"Celesta\";\n    MidiInstrument[MidiInstrument[\"Glockenspiel\"] = 9] = \"Glockenspiel\";\n    MidiInstrument[MidiInstrument[\"Music_Box\"] = 10] = \"Music_Box\";\n    MidiInstrument[MidiInstrument[\"Vibraphone\"] = 11] = \"Vibraphone\";\n    MidiInstrument[MidiInstrument[\"Marimba\"] = 12] = \"Marimba\";\n    MidiInstrument[MidiInstrument[\"Xylophone\"] = 13] = \"Xylophone\";\n    MidiInstrument[MidiInstrument[\"Tubular_Bells\"] = 14] = \"Tubular_Bells\";\n    MidiInstrument[MidiInstrument[\"Dulcimer\"] = 15] = \"Dulcimer\";\n    MidiInstrument[MidiInstrument[\"Drawbar_Organ\"] = 16] = \"Drawbar_Organ\";\n    MidiInstrument[MidiInstrument[\"Percussive_Organ\"] = 17] = \"Percussive_Organ\";\n    MidiInstrument[MidiInstrument[\"Rock_Organ\"] = 18] = \"Rock_Organ\";\n    MidiInstrument[MidiInstrument[\"Church_Organ\"] = 19] = \"Church_Organ\";\n    MidiInstrument[MidiInstrument[\"Reed_Organ\"] = 20] = \"Reed_Organ\";\n    MidiInstrument[MidiInstrument[\"Accordion\"] = 21] = \"Accordion\";\n    MidiInstrument[MidiInstrument[\"Harmonica\"] = 22] = \"Harmonica\";\n    MidiInstrument[MidiInstrument[\"Tango_Accordion\"] = 23] = \"Tango_Accordion\";\n    MidiInstrument[MidiInstrument[\"Acoustic_Guitar_nylon\"] = 24] = \"Acoustic_Guitar_nylon\";\n    MidiInstrument[MidiInstrument[\"Acoustic_Guitar_steel\"] = 25] = \"Acoustic_Guitar_steel\";\n    MidiInstrument[MidiInstrument[\"Electric_Guitar_jazz\"] = 26] = \"Electric_Guitar_jazz\";\n    MidiInstrument[MidiInstrument[\"Electric_Guitar_clean\"] = 27] = \"Electric_Guitar_clean\";\n    MidiInstrument[MidiInstrument[\"Electric_Guitar_muted\"] = 28] = \"Electric_Guitar_muted\";\n    MidiInstrument[MidiInstrument[\"Overdriven_Guitar\"] = 29] = \"Overdriven_Guitar\";\n    MidiInstrument[MidiInstrument[\"Distortion_Guitar\"] = 30] = \"Distortion_Guitar\";\n    MidiInstrument[MidiInstrument[\"Guitar_harmonics\"] = 31] = \"Guitar_harmonics\";\n    MidiInstrument[MidiInstrument[\"Acoustic_Bass\"] = 32] = \"Acoustic_Bass\";\n    MidiInstrument[MidiInstrument[\"Electric_Bass_finger\"] = 33] = \"Electric_Bass_finger\";\n    MidiInstrument[MidiInstrument[\"Electric_Bass_pick\"] = 34] = \"Electric_Bass_pick\";\n    MidiInstrument[MidiInstrument[\"Fretless_Bass\"] = 35] = \"Fretless_Bass\";\n    MidiInstrument[MidiInstrument[\"Slap_Bass_1\"] = 36] = \"Slap_Bass_1\";\n    MidiInstrument[MidiInstrument[\"Slap_Bass_2\"] = 37] = \"Slap_Bass_2\";\n    MidiInstrument[MidiInstrument[\"Synth_Bass_1\"] = 38] = \"Synth_Bass_1\";\n    MidiInstrument[MidiInstrument[\"Synth_Bass_2\"] = 39] = \"Synth_Bass_2\";\n    MidiInstrument[MidiInstrument[\"Violin\"] = 40] = \"Violin\";\n    MidiInstrument[MidiInstrument[\"Viola\"] = 41] = \"Viola\";\n    MidiInstrument[MidiInstrument[\"Cello\"] = 42] = \"Cello\";\n    MidiInstrument[MidiInstrument[\"Contrabass\"] = 43] = \"Contrabass\";\n    MidiInstrument[MidiInstrument[\"Tremolo_Strings\"] = 44] = \"Tremolo_Strings\";\n    MidiInstrument[MidiInstrument[\"Pizzicato_Strings\"] = 45] = \"Pizzicato_Strings\";\n    MidiInstrument[MidiInstrument[\"Orchestral_Harp\"] = 46] = \"Orchestral_Harp\";\n    MidiInstrument[MidiInstrument[\"Timpani\"] = 47] = \"Timpani\";\n    MidiInstrument[MidiInstrument[\"String_Ensemble_1\"] = 48] = \"String_Ensemble_1\";\n    MidiInstrument[MidiInstrument[\"String_Ensemble_2\"] = 49] = \"String_Ensemble_2\";\n    MidiInstrument[MidiInstrument[\"Synth_Strings_1\"] = 50] = \"Synth_Strings_1\";\n    MidiInstrument[MidiInstrument[\"Synth_Strings_2\"] = 51] = \"Synth_Strings_2\";\n    MidiInstrument[MidiInstrument[\"Choir_Aahs\"] = 52] = \"Choir_Aahs\";\n    MidiInstrument[MidiInstrument[\"Voice_Oohs\"] = 53] = \"Voice_Oohs\";\n    MidiInstrument[MidiInstrument[\"Synth_Voice\"] = 54] = \"Synth_Voice\";\n    MidiInstrument[MidiInstrument[\"Orchestra_Hit\"] = 55] = \"Orchestra_Hit\";\n    MidiInstrument[MidiInstrument[\"Trumpet\"] = 56] = \"Trumpet\";\n    MidiInstrument[MidiInstrument[\"Trombone\"] = 57] = \"Trombone\";\n    MidiInstrument[MidiInstrument[\"Tuba\"] = 58] = \"Tuba\";\n    MidiInstrument[MidiInstrument[\"Muted_Trumpet\"] = 59] = \"Muted_Trumpet\";\n    MidiInstrument[MidiInstrument[\"French_Horn\"] = 60] = \"French_Horn\";\n    MidiInstrument[MidiInstrument[\"Brass_Section\"] = 61] = \"Brass_Section\";\n    MidiInstrument[MidiInstrument[\"Synth_Brass_1\"] = 62] = \"Synth_Brass_1\";\n    MidiInstrument[MidiInstrument[\"Synth_Brass_2\"] = 63] = \"Synth_Brass_2\";\n    MidiInstrument[MidiInstrument[\"Soprano_Sax\"] = 64] = \"Soprano_Sax\";\n    MidiInstrument[MidiInstrument[\"Alto_Sax\"] = 65] = \"Alto_Sax\";\n    MidiInstrument[MidiInstrument[\"Tenor_Sax\"] = 66] = \"Tenor_Sax\";\n    MidiInstrument[MidiInstrument[\"Baritone_Sax\"] = 67] = \"Baritone_Sax\";\n    MidiInstrument[MidiInstrument[\"Oboe\"] = 68] = \"Oboe\";\n    MidiInstrument[MidiInstrument[\"English_Horn\"] = 69] = \"English_Horn\";\n    MidiInstrument[MidiInstrument[\"Bassoon\"] = 70] = \"Bassoon\";\n    MidiInstrument[MidiInstrument[\"Clarinet\"] = 71] = \"Clarinet\";\n    MidiInstrument[MidiInstrument[\"Piccolo\"] = 72] = \"Piccolo\";\n    MidiInstrument[MidiInstrument[\"Flute\"] = 73] = \"Flute\";\n    MidiInstrument[MidiInstrument[\"Recorder\"] = 74] = \"Recorder\";\n    MidiInstrument[MidiInstrument[\"Pan_Flute\"] = 75] = \"Pan_Flute\";\n    MidiInstrument[MidiInstrument[\"Blown_Bottle\"] = 76] = \"Blown_Bottle\";\n    MidiInstrument[MidiInstrument[\"Shakuhachi\"] = 77] = \"Shakuhachi\";\n    MidiInstrument[MidiInstrument[\"Whistle\"] = 78] = \"Whistle\";\n    MidiInstrument[MidiInstrument[\"Ocarina\"] = 79] = \"Ocarina\";\n    MidiInstrument[MidiInstrument[\"Lead_1_square\"] = 80] = \"Lead_1_square\";\n    MidiInstrument[MidiInstrument[\"Lead_2_sawtooth\"] = 81] = \"Lead_2_sawtooth\";\n    MidiInstrument[MidiInstrument[\"Lead_3_calliope\"] = 82] = \"Lead_3_calliope\";\n    MidiInstrument[MidiInstrument[\"Lead_4_chiff\"] = 83] = \"Lead_4_chiff\";\n    MidiInstrument[MidiInstrument[\"Lead_5_charang\"] = 84] = \"Lead_5_charang\";\n    MidiInstrument[MidiInstrument[\"Lead_6_voice\"] = 85] = \"Lead_6_voice\";\n    MidiInstrument[MidiInstrument[\"Lead_7_fifths\"] = 86] = \"Lead_7_fifths\";\n    MidiInstrument[MidiInstrument[\"Lead_8_bass_lead\"] = 87] = \"Lead_8_bass_lead\";\n    MidiInstrument[MidiInstrument[\"Pad_1_new_age\"] = 88] = \"Pad_1_new_age\";\n    MidiInstrument[MidiInstrument[\"Pad_2_warm\"] = 89] = \"Pad_2_warm\";\n    MidiInstrument[MidiInstrument[\"Pad_3_polysynth\"] = 90] = \"Pad_3_polysynth\";\n    MidiInstrument[MidiInstrument[\"Pad_4_choir\"] = 91] = \"Pad_4_choir\";\n    MidiInstrument[MidiInstrument[\"Pad_5_bowed\"] = 92] = \"Pad_5_bowed\";\n    MidiInstrument[MidiInstrument[\"Pad_6_metallic\"] = 93] = \"Pad_6_metallic\";\n    MidiInstrument[MidiInstrument[\"Pad_7_halo\"] = 94] = \"Pad_7_halo\";\n    MidiInstrument[MidiInstrument[\"Pad_8_sweep\"] = 95] = \"Pad_8_sweep\";\n    MidiInstrument[MidiInstrument[\"FX_1_rain\"] = 96] = \"FX_1_rain\";\n    MidiInstrument[MidiInstrument[\"FX_2_soundtrack\"] = 97] = \"FX_2_soundtrack\";\n    MidiInstrument[MidiInstrument[\"FX_3_crystal\"] = 98] = \"FX_3_crystal\";\n    MidiInstrument[MidiInstrument[\"FX_4_atmosphere\"] = 99] = \"FX_4_atmosphere\";\n    MidiInstrument[MidiInstrument[\"FX_5_brightness\"] = 100] = \"FX_5_brightness\";\n    MidiInstrument[MidiInstrument[\"FX_6_goblins\"] = 101] = \"FX_6_goblins\";\n    MidiInstrument[MidiInstrument[\"FX_7_echoes\"] = 102] = \"FX_7_echoes\";\n    MidiInstrument[MidiInstrument[\"FX_8_scifi\"] = 103] = \"FX_8_scifi\";\n    MidiInstrument[MidiInstrument[\"Sitar\"] = 104] = \"Sitar\";\n    MidiInstrument[MidiInstrument[\"Banjo\"] = 105] = \"Banjo\";\n    MidiInstrument[MidiInstrument[\"Shamisen\"] = 106] = \"Shamisen\";\n    MidiInstrument[MidiInstrument[\"Koto\"] = 107] = \"Koto\";\n    MidiInstrument[MidiInstrument[\"Kalimba\"] = 108] = \"Kalimba\";\n    MidiInstrument[MidiInstrument[\"Bag_pipe\"] = 109] = \"Bag_pipe\";\n    MidiInstrument[MidiInstrument[\"Fiddle\"] = 110] = \"Fiddle\";\n    MidiInstrument[MidiInstrument[\"Shanai\"] = 111] = \"Shanai\";\n    MidiInstrument[MidiInstrument[\"Tinkle_Bell\"] = 112] = \"Tinkle_Bell\";\n    MidiInstrument[MidiInstrument[\"Agogo\"] = 113] = \"Agogo\";\n    MidiInstrument[MidiInstrument[\"Steel_Drums\"] = 114] = \"Steel_Drums\";\n    MidiInstrument[MidiInstrument[\"Woodblock\"] = 115] = \"Woodblock\";\n    MidiInstrument[MidiInstrument[\"Taiko_Drum\"] = 116] = \"Taiko_Drum\";\n    MidiInstrument[MidiInstrument[\"Melodic_Tom\"] = 117] = \"Melodic_Tom\";\n    MidiInstrument[MidiInstrument[\"Synth_Drum\"] = 118] = \"Synth_Drum\";\n    MidiInstrument[MidiInstrument[\"Reverse_Cymbal\"] = 119] = \"Reverse_Cymbal\";\n    MidiInstrument[MidiInstrument[\"Guitar_Fret_Noise\"] = 120] = \"Guitar_Fret_Noise\";\n    MidiInstrument[MidiInstrument[\"Breath_Noise\"] = 121] = \"Breath_Noise\";\n    MidiInstrument[MidiInstrument[\"Seashore\"] = 122] = \"Seashore\";\n    MidiInstrument[MidiInstrument[\"Bird_Tweet\"] = 123] = \"Bird_Tweet\";\n    MidiInstrument[MidiInstrument[\"Telephone_Ring\"] = 124] = \"Telephone_Ring\";\n    MidiInstrument[MidiInstrument[\"Helicopter\"] = 125] = \"Helicopter\";\n    MidiInstrument[MidiInstrument[\"Applause\"] = 126] = \"Applause\";\n    MidiInstrument[MidiInstrument[\"Gunshot\"] = 127] = \"Gunshot\";\n    MidiInstrument[MidiInstrument[\"Percussion\"] = 128] = \"Percussion\";\n})(exports.MidiInstrument || (exports.MidiInstrument = {}));\nvar MidiInstrument = exports.MidiInstrument;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/ClefInstruction.js\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\n(function (NoteEnum) {\n    NoteEnum[NoteEnum[\"C\"] = 0] = \"C\";\n    NoteEnum[NoteEnum[\"D\"] = 2] = \"D\";\n    NoteEnum[NoteEnum[\"E\"] = 4] = \"E\";\n    NoteEnum[NoteEnum[\"F\"] = 5] = \"F\";\n    NoteEnum[NoteEnum[\"G\"] = 7] = \"G\";\n    NoteEnum[NoteEnum[\"A\"] = 9] = \"A\";\n    NoteEnum[NoteEnum[\"B\"] = 11] = \"B\";\n})(exports.NoteEnum || (exports.NoteEnum = {}));\nvar NoteEnum = exports.NoteEnum;\n(function (AccidentalEnum) {\n    AccidentalEnum[AccidentalEnum[\"DOUBLEFLAT\"] = -2] = \"DOUBLEFLAT\";\n    AccidentalEnum[AccidentalEnum[\"FLAT\"] = -1] = \"FLAT\";\n    AccidentalEnum[AccidentalEnum[\"NONE\"] = 0] = \"NONE\";\n    AccidentalEnum[AccidentalEnum[\"SHARP\"] = 1] = \"SHARP\";\n    AccidentalEnum[AccidentalEnum[\"DOUBLESHARP\"] = 2] = \"DOUBLESHARP\";\n})(exports.AccidentalEnum || (exports.AccidentalEnum = {}));\nvar AccidentalEnum = exports.AccidentalEnum;\nvar Pitch = (function () {\n    function Pitch(fundamentalNote, octave, accidental) {\n        this.accidental = AccidentalEnum.NONE;\n        this.fundamentalNote = fundamentalNote;\n        this.octave = octave;\n        this.accidental = accidental;\n        this.halfTone = (fundamentalNote) + (octave + Pitch.octXmlDiff) * 12 + accidental;\n        this.frequency = Pitch.calcFrequency(this);\n    }\n    Pitch.getNoteEnumString = function (note) {\n        switch (note) {\n            case NoteEnum.C:\n                return \"C\";\n            case NoteEnum.D:\n                return \"D\";\n            case NoteEnum.E:\n                return \"E\";\n            case NoteEnum.F:\n                return \"F\";\n            case NoteEnum.G:\n                return \"G\";\n            case NoteEnum.A:\n                return \"A\";\n            case NoteEnum.B:\n                return \"B\";\n            default:\n                return \"\";\n        }\n    };\n    /**\n     * @param the input pitch\n     * @param the number of halftones to transpose with\n     * @returns ret[0] = the transposed fundamental.\n     *          ret[1] = the octave shift (not the new octave!)\n     * @constructor\n     */\n    Pitch.CalculateTransposedHalfTone = function (pitch, transpose) {\n        var newHalfTone = pitch.fundamentalNote + pitch.accidental + transpose;\n        return Pitch.WrapAroundCheck(newHalfTone, 12);\n    };\n    Pitch.WrapAroundCheck = function (value, limit) {\n        var overflow = 0;\n        while (value < 0) {\n            value += limit;\n            overflow--; // the octave change\n        }\n        while (value >= limit) {\n            value -= limit;\n            overflow++; // the octave change\n        }\n        return { overflow: overflow, value: value };\n    };\n    //public static calcFrequency(pitch: Pitch): number;\n    //public static calcFrequency(fractionalKey: number): number;\n    Pitch.calcFrequency = function (obj) {\n        var octaveSteps = 0;\n        var halftoneSteps;\n        if (obj instanceof Pitch) {\n            // obj is a pitch\n            var pitch = obj;\n            octaveSteps = pitch.octave - 1;\n            halftoneSteps = pitch.fundamentalNote - NoteEnum.A + pitch.accidental;\n        }\n        else if (typeof obj === \"number\") {\n            // obj is a fractional key\n            var fractionalKey = obj;\n            halftoneSteps = fractionalKey - 57.0;\n        }\n        // Return frequency:\n        return 440.0 * Math.pow(2, octaveSteps) * Math.pow(2, halftoneSteps / 12.0);\n    };\n    Pitch.calcFractionalKey = function (frequency) {\n        // Return half-tone frequency:\n        return Math.log(frequency / 440.0) / Math.LN10 * Pitch.halftoneFactor + 57.0;\n    };\n    Pitch.fromFrequency = function (frequency) {\n        var key = Pitch.calcFractionalKey(frequency) + 0.5;\n        var octave = Math.floor(key / 12) - Pitch.octXmlDiff;\n        var halftone = Math.floor(key) % 12;\n        var fundamentalNote = halftone;\n        var accidental = AccidentalEnum.NONE;\n        if (this.pitchEnumValues.indexOf(fundamentalNote) === -1) {\n            fundamentalNote = (halftone - 1);\n            accidental = AccidentalEnum.SHARP;\n        }\n        return new Pitch(fundamentalNote, octave, accidental);\n    };\n    Pitch.fromHalftone = function (halftone) {\n        var octave = Math.floor(halftone / 12) - Pitch.octXmlDiff;\n        var halftoneInOctave = halftone % 12;\n        var fundamentalNote = halftoneInOctave;\n        var accidental = AccidentalEnum.NONE;\n        if (this.pitchEnumValues.indexOf(fundamentalNote) === -1) {\n            fundamentalNote = (halftoneInOctave - 1);\n            accidental = AccidentalEnum.SHARP;\n        }\n        return new Pitch(fundamentalNote, octave, accidental);\n    };\n    Pitch.ceiling = function (halftone) {\n        halftone = (halftone) % 12;\n        var fundamentalNote = halftone;\n        if (this.pitchEnumValues.indexOf(fundamentalNote) === -1) {\n            fundamentalNote = (halftone + 1);\n        }\n        return fundamentalNote;\n    };\n    Pitch.floor = function (halftone) {\n        halftone = halftone % 12;\n        var fundamentalNote = halftone;\n        if (this.pitchEnumValues.indexOf(fundamentalNote) === -1) {\n            fundamentalNote = (halftone - 1);\n        }\n        return fundamentalNote;\n    };\n    Object.defineProperty(Pitch.prototype, \"Octave\", {\n        get: function () {\n            return this.octave;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pitch.prototype, \"FundamentalNote\", {\n        get: function () {\n            return this.fundamentalNote;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pitch.prototype, \"Accidental\", {\n        get: function () {\n            return this.accidental;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pitch.prototype, \"Frequency\", {\n        get: function () {\n            return this.frequency;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pitch, \"OctaveXmlDifference\", {\n        get: function () {\n            return Pitch.octXmlDiff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Pitch.prototype.getHalfTone = function () {\n        return this.halfTone;\n    };\n    Pitch.prototype.getTransposedPitch = function (factor) {\n        if (factor > 12) {\n            throw new Error(\"rewrite this method to handle bigger octave changes or don't use is with bigger octave changes!\");\n        }\n        if (factor > 0) {\n            return this.getHigherPitchByTransposeFactor(factor);\n        }\n        if (factor < 0) {\n            return this.getLowerPitchByTransposeFactor(-factor);\n        }\n        return this;\n    };\n    Pitch.prototype.DoEnharmonicChange = function () {\n        switch (this.accidental) {\n            case AccidentalEnum.FLAT:\n            case AccidentalEnum.DOUBLEFLAT:\n                this.fundamentalNote = this.getPreviousFundamentalNote(this.fundamentalNote);\n                this.accidental = (this.halfTone - ((this.fundamentalNote) +\n                    (this.octave + Pitch.octXmlDiff) * 12));\n                break;\n            case AccidentalEnum.SHARP:\n            case AccidentalEnum.DOUBLESHARP:\n                this.fundamentalNote = this.getNextFundamentalNote(this.fundamentalNote);\n                this.accidental = (this.halfTone - ((this.fundamentalNote) +\n                    (this.octave + Pitch.octXmlDiff) * 12));\n                break;\n            default:\n                return;\n        }\n    };\n    Pitch.prototype.ToString = function () {\n        return \"Note: \" + this.fundamentalNote + \", octave: \" + this.octave.toString() + \", alter: \" +\n            this.accidental;\n    };\n    Pitch.prototype.OperatorEquals = function (p2) {\n        var p1 = this;\n        // if (ReferenceEquals(p1, p2)) {\n        //     return true;\n        // }\n        if ((p1 === undefined) || (p2 === undefined)) {\n            return false;\n        }\n        return (p1.FundamentalNote === p2.FundamentalNote && p1.Octave === p2.Octave && p1.Accidental === p2.Accidental);\n    };\n    Pitch.prototype.OperatorNotEqual = function (p2) {\n        var p1 = this;\n        return !(p1 === p2);\n    };\n    Pitch.prototype.getHigherPitchByTransposeFactor = function (factor) {\n        var noteEnumIndex = Pitch.pitchEnumValues.indexOf(this.fundamentalNote);\n        var newOctave = this.octave;\n        var newNoteEnum;\n        if (noteEnumIndex + factor > Pitch.pitchEnumValues.length - 1) {\n            newNoteEnum = Pitch.pitchEnumValues[noteEnumIndex + factor - Pitch.pitchEnumValues.length];\n            newOctave++;\n        }\n        else {\n            newNoteEnum = Pitch.pitchEnumValues[noteEnumIndex + factor];\n        }\n        return new Pitch(newNoteEnum, newOctave, AccidentalEnum.NONE);\n    };\n    Pitch.prototype.getLowerPitchByTransposeFactor = function (factor) {\n        var noteEnumIndex = Pitch.pitchEnumValues.indexOf(this.fundamentalNote);\n        var newOctave = this.octave;\n        var newNoteEnum;\n        if (noteEnumIndex - factor < 0) {\n            newNoteEnum = Pitch.pitchEnumValues[Pitch.pitchEnumValues.length + noteEnumIndex - factor];\n            newOctave--;\n        }\n        else {\n            newNoteEnum = Pitch.pitchEnumValues[noteEnumIndex - factor];\n        }\n        return new Pitch(newNoteEnum, newOctave, AccidentalEnum.NONE);\n    };\n    Pitch.prototype.getNextFundamentalNote = function (fundamental) {\n        var i = Pitch.pitchEnumValues.indexOf(fundamental);\n        i = (i + 1) % Pitch.pitchEnumValues.length;\n        return Pitch.pitchEnumValues[i];\n    };\n    Pitch.prototype.getPreviousFundamentalNote = function (fundamental) {\n        var i = Pitch.pitchEnumValues.indexOf(fundamental);\n        if (i > 0) {\n            return Pitch.pitchEnumValues[i - 1];\n        }\n        else {\n            return Pitch.pitchEnumValues[Pitch.pitchEnumValues.length - 1];\n        }\n    };\n    Pitch.pitchEnumValues = [\n        NoteEnum.C, NoteEnum.D, NoteEnum.E, NoteEnum.F, NoteEnum.G, NoteEnum.A, NoteEnum.B,\n    ];\n    Pitch.halftoneFactor = 12 / (Math.LN2 / Math.LN10);\n    Pitch.octXmlDiff = 3;\n    return Pitch;\n}());\nexports.Pitch = Pitch;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/DataObjects/pitch.js\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\nvar AbstractNotationInstruction = (function () {\n    function AbstractNotationInstruction(parent) {\n        this.parent = parent;\n    }\n    Object.defineProperty(AbstractNotationInstruction.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        set: function (value) {\n            this.parent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractNotationInstruction;\n}());\nexports.AbstractNotationInstruction = AbstractNotationInstruction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/AbstractNotationInstruction.js\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\nvar MusicSheetReadingException = (function () {\n    function MusicSheetReadingException(message, e) {\n        //super(message);\n        this.message = message;\n        if (e !== undefined) {\n            this.message += \" \" + e.toString();\n        }\n    }\n    return MusicSheetReadingException;\n}());\nexports.MusicSheetReadingException = MusicSheetReadingException;\nvar ArgumentOutOfRangeException = (function () {\n    function ArgumentOutOfRangeException(message) {\n        //super(message);\n        this.message = message;\n    }\n    return ArgumentOutOfRangeException;\n}());\nexports.ArgumentOutOfRangeException = ArgumentOutOfRangeException;\nvar InvalidEnumArgumentException = (function () {\n    function InvalidEnumArgumentException(message) {\n        this.message = message;\n    }\n    return InvalidEnumArgumentException;\n}());\nexports.InvalidEnumArgumentException = InvalidEnumArgumentException;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Exceptions.js\n ** module id = 13\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractNotationInstruction_1 = require(\"./AbstractNotationInstruction\");\nvar pitch_1 = require(\"../../../Common/DataObjects/pitch\");\nvar pitch_2 = require(\"../../../Common/DataObjects/pitch\");\nvar KeyInstruction = (function (_super) {\n    __extends(KeyInstruction, _super);\n    function KeyInstruction(sourceStaffEntry, key, mode) {\n        if (sourceStaffEntry === void 0) { sourceStaffEntry = undefined; }\n        if (key === void 0) { key = 0; }\n        if (mode === void 0) { mode = KeyEnum.major; }\n        _super.call(this, sourceStaffEntry);\n        this.Key = key;\n        this.mode = mode;\n    }\n    KeyInstruction.copy = function (keyInstruction) {\n        var newKeyInstruction = new KeyInstruction(keyInstruction.parent, keyInstruction.Key, keyInstruction.Mode);\n        return newKeyInstruction;\n    };\n    KeyInstruction.getNoteEnumList = function (instruction) {\n        var enums = [];\n        if (instruction.keyType > 0) {\n            for (var i = 0; i < instruction.keyType; i++) {\n                enums.push(KeyInstruction.sharpPositionList[i]);\n            }\n        }\n        if (instruction.keyType < 0) {\n            for (var i = 0; i < Math.abs(instruction.keyType); i++) {\n                enums.push(KeyInstruction.flatPositionList[i]);\n            }\n        }\n        return enums;\n    };\n    KeyInstruction.getAllPossibleMajorKeyInstructions = function () {\n        var keyInstructionList = [];\n        for (var keyType = -7; keyType < 7; keyType++) {\n            var currentKeyInstruction = new KeyInstruction(undefined, keyType, KeyEnum.major);\n            keyInstructionList.push(currentKeyInstruction);\n        }\n        return keyInstructionList;\n    };\n    Object.defineProperty(KeyInstruction.prototype, \"Key\", {\n        get: function () {\n            return this.keyType;\n        },\n        set: function (value) {\n            this.keyType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KeyInstruction.prototype, \"Mode\", {\n        get: function () {\n            return this.mode;\n        },\n        set: function (value) {\n            this.mode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyInstruction.prototype.getFundamentalNotesOfAccidentals = function () {\n        var noteList = [];\n        if (this.keyType > 0) {\n            for (var i = 0; i < this.keyType; i++) {\n                noteList.push(KeyInstruction.sharpPositionList[i]);\n            }\n        }\n        else if (this.keyType < 0) {\n            for (var i = 0; i < -this.keyType; i++) {\n                noteList.push(KeyInstruction.flatPositionList[i]);\n            }\n        }\n        return noteList;\n    };\n    KeyInstruction.prototype.getAlterationForPitch = function (pitch) {\n        if (this.keyType > 0 && KeyInstruction.sharpPositionList.indexOf(pitch.FundamentalNote) <= this.keyType) {\n            return pitch_2.AccidentalEnum.SHARP;\n        }\n        else if (this.keyType < 0 && KeyInstruction.flatPositionList.indexOf(pitch.FundamentalNote) <= Math.abs(this.keyType)) {\n            return pitch_2.AccidentalEnum.FLAT;\n        }\n        return pitch_2.AccidentalEnum.NONE;\n    };\n    KeyInstruction.prototype.ToString = function () {\n        return \"Key: \" + this.keyType + \"\" + this.mode;\n    };\n    KeyInstruction.prototype.OperatorEquals = function (key2) {\n        var key1 = this;\n        if (key1 === key2) {\n            return true;\n        }\n        if ((key1 === undefined) || (key2 === undefined)) {\n            return false;\n        }\n        return (key1.Key === key2.Key && key1.Mode === key2.Mode);\n    };\n    KeyInstruction.prototype.OperatorNotEqual = function (key2) {\n        return !(this.OperatorEquals(key2));\n    };\n    KeyInstruction.sharpPositionList = [pitch_1.NoteEnum.F, pitch_1.NoteEnum.C, pitch_1.NoteEnum.G, pitch_1.NoteEnum.D, pitch_1.NoteEnum.A, pitch_1.NoteEnum.E, pitch_1.NoteEnum.B];\n    KeyInstruction.flatPositionList = [pitch_1.NoteEnum.B, pitch_1.NoteEnum.E, pitch_1.NoteEnum.A, pitch_1.NoteEnum.D, pitch_1.NoteEnum.G, pitch_1.NoteEnum.C, pitch_1.NoteEnum.F];\n    return KeyInstruction;\n}(AbstractNotationInstruction_1.AbstractNotationInstruction));\nexports.KeyInstruction = KeyInstruction;\nvar NoteEnumToHalfToneLink = (function () {\n    function NoteEnumToHalfToneLink(note, halftone) {\n        this.note = note;\n        this.halfTone = halftone;\n    }\n    return NoteEnumToHalfToneLink;\n}());\nexports.NoteEnumToHalfToneLink = NoteEnumToHalfToneLink;\n(function (KeyEnum) {\n    KeyEnum[KeyEnum[\"major\"] = 0] = \"major\";\n    KeyEnum[KeyEnum[\"minor\"] = 1] = \"minor\";\n    KeyEnum[KeyEnum[\"none\"] = 2] = \"none\";\n})(exports.KeyEnum || (exports.KeyEnum = {}));\nvar KeyEnum = exports.KeyEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/KeyInstruction.js\n ** module id = 14\n ** module chunks = 0\n **/","// FIXME: Check the operators' names\n// FIXME: This class should probably be immutable?\n\"use strict\";\nvar Fraction = (function () {\n    function Fraction(numerator, denominator, simplify) {\n        if (numerator === void 0) { numerator = 0; }\n        if (denominator === void 0) { denominator = 1; }\n        if (simplify === void 0) { simplify = true; }\n        this.numerator = 0;\n        this.denominator = 1;\n        this.numerator = numerator;\n        this.denominator = denominator;\n        if (simplify) {\n            this.simplify();\n        }\n        this.setRealValue();\n    }\n    Fraction.max = function (f1, f2) {\n        if (f1.RealValue > f2.RealValue) {\n            return f1;\n        }\n        else {\n            return f2;\n        }\n    };\n    Fraction.Equal = function (f1, f2) {\n        // FIXME\n        return f1.Denominator === f2.Denominator && f1.Numerator === f2.Numerator;\n    };\n    Fraction.createFromFraction = function (fraction) {\n        return new Fraction(fraction.numerator, fraction.denominator);\n    };\n    Fraction.plus = function (f1, f2) {\n        var sum = f1.clone();\n        sum.Add(f2);\n        return sum;\n    };\n    Fraction.minus = function (f1, f2) {\n        var sum = f1.clone();\n        sum.Sub(f2);\n        return sum;\n    };\n    Fraction.greatestCommonDenominator = function (a, b) {\n        if (a === 0) {\n            return b;\n        }\n        if (b === 1) {\n            return 1;\n        }\n        while (b !== 0) {\n            if (a > b) {\n                a -= b;\n            }\n            else {\n                b -= a;\n            }\n        }\n        return a;\n    };\n    Fraction.prototype.toString = function () {\n        return this.numerator + \"/\" + this.denominator;\n    };\n    Fraction.prototype.clone = function () {\n        return new Fraction(this.numerator, this.denominator, false);\n    };\n    Object.defineProperty(Fraction.prototype, \"Numerator\", {\n        get: function () {\n            return this.numerator;\n        },\n        set: function (value) {\n            if (this.numerator !== value) {\n                this.numerator = value;\n                this.simplify();\n                this.setRealValue();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Fraction.prototype, \"Denominator\", {\n        get: function () {\n            return this.denominator;\n        },\n        set: function (value) {\n            if (this.denominator !== value) {\n                this.denominator = value;\n                if (this.numerator !== 0) {\n                    this.simplify();\n                }\n                this.setRealValue();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Fraction.prototype, \"RealValue\", {\n        get: function () {\n            return this.realValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Fraction.prototype.multiplyWithFactor = function (factor) {\n        this.numerator *= factor;\n        this.denominator *= factor;\n    };\n    Fraction.prototype.multiplyDenominatorWithFactor = function (factor) {\n        this.denominator *= factor;\n        this.setRealValue();\n    };\n    Fraction.prototype.Add = function (fraction) {\n        this.numerator = this.numerator * fraction.denominator + fraction.numerator * this.denominator;\n        this.denominator = this.denominator * fraction.denominator;\n        this.simplify();\n        this.setRealValue();\n    };\n    Fraction.prototype.Sub = function (fraction) {\n        this.numerator = this.numerator * fraction.denominator - fraction.numerator * this.denominator;\n        this.denominator = this.denominator * fraction.denominator;\n        this.simplify();\n        this.setRealValue();\n    };\n    Fraction.prototype.Quantize = function (maxAllowedDenominator) {\n        if (this.denominator <= maxAllowedDenominator) {\n            return this;\n        }\n        var upTestFraction = new Fraction(this.numerator + 1, this.denominator);\n        while (upTestFraction.Denominator > maxAllowedDenominator) {\n            upTestFraction.Numerator++;\n        }\n        if (this.numerator > this.denominator) {\n            var downTestFraction = new Fraction(this.numerator - 1, this.denominator);\n            while (downTestFraction.Denominator > maxAllowedDenominator) {\n                downTestFraction.Numerator--;\n            }\n            if (downTestFraction.Denominator < upTestFraction.Denominator) {\n                return downTestFraction;\n            }\n        }\n        return upTestFraction;\n    };\n    Fraction.prototype.Equals = function (obj) {\n        return this.RealValue === obj.RealValue;\n    };\n    Fraction.prototype.CompareTo = function (obj) {\n        var diff = this.numerator * obj.Denominator - this.denominator * obj.Numerator;\n        // Return the sign of diff\n        return diff ? diff < 0 ? -1 : 1 : 0;\n    };\n    Fraction.prototype.lt = function (frac) {\n        return (this.numerator * frac.Denominator - this.denominator * frac.Numerator) < 0;\n    };\n    Fraction.prototype.lte = function (frac) {\n        return (this.numerator * frac.Denominator - this.denominator * frac.Numerator) <= 0;\n    };\n    //public Equals(f: Fraction): boolean {\n    //    if (ReferenceEquals(this, f))\n    //        return true;\n    //    if (ReferenceEquals(f, undefined))\n    //        return false;\n    //    return <number>this.numerator * f.denominator === <number>f.numerator * this.denominator;\n    //}\n    Fraction.prototype.GetInversion = function () {\n        return new Fraction(this.denominator, this.numerator);\n    };\n    Fraction.prototype.setRealValue = function () {\n        this.realValue = this.numerator / this.denominator;\n    };\n    Fraction.prototype.simplify = function () {\n        if (this.numerator === 0) {\n            this.denominator = 1;\n            return;\n        }\n        var i = Fraction.greatestCommonDenominator(Math.abs(this.numerator), Math.abs(this.denominator));\n        this.numerator /= i;\n        this.denominator /= i;\n        if (this.denominator > Fraction.maximumAllowedNumber) {\n            var factor = this.denominator / Fraction.maximumAllowedNumber;\n            this.numerator = Math.round(this.numerator / factor);\n            this.denominator = Math.round(this.denominator / factor);\n        }\n        if (this.numerator > Fraction.maximumAllowedNumber) {\n            var factor = this.numerator / Fraction.maximumAllowedNumber;\n            this.numerator = Math.round(this.numerator / factor);\n            this.denominator = Math.round(this.denominator / factor);\n        }\n    };\n    Fraction.maximumAllowedNumber = 46340;\n    return Fraction;\n}());\nexports.Fraction = Fraction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/DataObjects/fraction.js\n ** module id = 15\n ** module chunks = 0\n **/","\"use strict\";\nvar Exceptions_1 = require(\"../Exceptions\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar SizeF2D_1 = require(\"../../Common/DataObjects/SizeF2D\");\nvar RectangleF2D_1 = require(\"../../Common/DataObjects/RectangleF2D\");\nvar BoundingBox = (function () {\n    function BoundingBox(dataObject, parent) {\n        if (dataObject === void 0) { dataObject = undefined; }\n        if (parent === void 0) { parent = undefined; }\n        this.isSymbol = false;\n        this.relativePositionHasBeenSet = false;\n        this.xBordersHaveBeenSet = false;\n        this.yBordersHaveBeenSet = false;\n        this.absolutePosition = new PointF2D_1.PointF2D();\n        this.relativePosition = new PointF2D_1.PointF2D();\n        this.size = new SizeF2D_1.SizeF2D();\n        this.borderLeft = 0;\n        this.borderRight = 0;\n        this.borderTop = 0;\n        this.borderBottom = 0;\n        this.borderMarginLeft = 0;\n        this.borderMarginRight = 0;\n        this.borderMarginTop = 0;\n        this.borderMarginBottom = 0;\n        this.childElements = [];\n        this.parent = parent;\n        this.dataObject = dataObject;\n        this.xBordersHaveBeenSet = false;\n        this.yBordersHaveBeenSet = false;\n    }\n    Object.defineProperty(BoundingBox.prototype, \"RelativePositionHasBeenSet\", {\n        get: function () {\n            return this.relativePositionHasBeenSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"XBordersHaveBeenSet\", {\n        get: function () {\n            return this.xBordersHaveBeenSet;\n        },\n        set: function (value) {\n            this.xBordersHaveBeenSet = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"YBordersHaveBeenSet\", {\n        get: function () {\n            return this.yBordersHaveBeenSet;\n        },\n        set: function (value) {\n            this.yBordersHaveBeenSet = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"AbsolutePosition\", {\n        get: function () {\n            return this.absolutePosition;\n        },\n        set: function (value) {\n            this.absolutePosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"RelativePosition\", {\n        get: function () {\n            return this.relativePosition;\n        },\n        set: function (value) {\n            this.relativePosition = value;\n            this.relativePositionHasBeenSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"Size\", {\n        get: function () {\n            return this.size;\n        },\n        set: function (value) {\n            this.size = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"MarginSize\", {\n        get: function () {\n            return this.marginSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"UpperLeftCorner\", {\n        get: function () {\n            return this.upperLeftCorner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"UpperLeftMarginCorner\", {\n        get: function () {\n            return this.upperLeftMarginCorner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderLeft\", {\n        get: function () {\n            return this.borderLeft;\n        },\n        set: function (value) {\n            this.borderLeft = value;\n            this.calculateRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderRight\", {\n        get: function () {\n            return this.borderRight;\n        },\n        set: function (value) {\n            this.borderRight = value;\n            this.calculateRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderTop\", {\n        get: function () {\n            return this.borderTop;\n        },\n        set: function (value) {\n            this.borderTop = value;\n            this.calculateRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderBottom\", {\n        get: function () {\n            return this.borderBottom;\n        },\n        set: function (value) {\n            this.borderBottom = value;\n            this.calculateRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderMarginLeft\", {\n        get: function () {\n            return this.borderMarginLeft;\n        },\n        set: function (value) {\n            this.borderMarginLeft = value;\n            this.calculateMarginRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderMarginRight\", {\n        get: function () {\n            return this.borderMarginRight;\n        },\n        set: function (value) {\n            this.borderMarginRight = value;\n            this.calculateMarginRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderMarginTop\", {\n        get: function () {\n            return this.borderMarginTop;\n        },\n        set: function (value) {\n            this.borderMarginTop = value;\n            this.calculateMarginRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BorderMarginBottom\", {\n        get: function () {\n            return this.borderMarginBottom;\n        },\n        set: function (value) {\n            this.borderMarginBottom = value;\n            this.calculateMarginRectangle();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BoundingRectangle\", {\n        get: function () {\n            return this.boundingRectangle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"BoundingMarginRectangle\", {\n        get: function () {\n            return this.boundingMarginRectangle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"ChildElements\", {\n        get: function () {\n            return this.childElements;\n        },\n        set: function (value) {\n            this.childElements = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        set: function (value) {\n            this.parent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundingBox.prototype, \"DataObject\", {\n        get: function () {\n            return this.dataObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BoundingBox.prototype.setAbsolutePositionFromParent = function () {\n        if (this.parent !== undefined) {\n            this.absolutePosition.x = this.parent.AbsolutePosition.x + this.relativePosition.x;\n            this.absolutePosition.y = this.parent.AbsolutePosition.y + this.relativePosition.y;\n        }\n        else {\n            this.absolutePosition = this.relativePosition;\n        }\n    };\n    BoundingBox.prototype.calculateAbsolutePositionsRecursiveWithoutTopelement = function () {\n        this.absolutePosition.x = 0.0;\n        this.absolutePosition.y = 0.0;\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var child = this.ChildElements[idx];\n            child.calculateAbsolutePositionsRecursive(this.absolutePosition.x, this.absolutePosition.y);\n        }\n    };\n    BoundingBox.prototype.calculateAbsolutePositionsRecursive = function (x, y) {\n        this.absolutePosition.x = this.relativePosition.x + x;\n        this.absolutePosition.y = this.relativePosition.y + y;\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var child = this.ChildElements[idx];\n            child.calculateAbsolutePositionsRecursive(this.absolutePosition.x, this.absolutePosition.y);\n        }\n    };\n    BoundingBox.prototype.calculateBoundingBox = function () {\n        if (this.childElements.length === 0) {\n            return;\n        }\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var childElement = this.ChildElements[idx];\n            childElement.calculateBoundingBox();\n        }\n        var minLeft = Number.MAX_VALUE;\n        var maxRight = Number.MIN_VALUE;\n        var minTop = Number.MAX_VALUE;\n        var maxBottom = Number.MIN_VALUE;\n        var minMarginLeft = Number.MAX_VALUE;\n        var maxMarginRight = Number.MIN_VALUE;\n        var minMarginTop = Number.MAX_VALUE;\n        var maxMarginBottom = Number.MIN_VALUE;\n        if (this.isSymbol) {\n            minLeft = this.borderLeft;\n            maxRight = this.borderRight;\n            minTop = this.borderTop;\n            maxBottom = this.borderBottom;\n            minMarginLeft = this.borderMarginLeft;\n            maxMarginRight = this.borderMarginRight;\n            minMarginTop = this.borderMarginTop;\n            maxMarginBottom = this.borderMarginBottom;\n        }\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var childElement = this.ChildElements[idx];\n            minLeft = Math.min(minLeft, childElement.relativePosition.x + childElement.borderLeft);\n            maxRight = Math.max(maxRight, childElement.relativePosition.x + childElement.borderRight);\n            minTop = Math.min(minTop, childElement.relativePosition.y + childElement.borderTop);\n            maxBottom = Math.max(maxBottom, childElement.relativePosition.y + childElement.borderBottom);\n            minMarginLeft = Math.min(minMarginLeft, childElement.relativePosition.x + childElement.borderMarginLeft);\n            maxMarginRight = Math.max(maxMarginRight, childElement.relativePosition.x + childElement.borderMarginRight);\n            minMarginTop = Math.min(minMarginTop, childElement.relativePosition.y + childElement.borderMarginTop);\n            maxMarginBottom = Math.max(maxMarginBottom, childElement.relativePosition.y + childElement.borderMarginBottom);\n        }\n        this.borderLeft = minLeft;\n        this.borderRight = maxRight;\n        this.borderTop = minTop;\n        this.borderBottom = maxBottom;\n        this.borderMarginLeft = minMarginLeft;\n        this.borderMarginRight = maxMarginRight;\n        this.borderMarginTop = minMarginTop;\n        this.borderMarginBottom = maxMarginBottom;\n        this.calculateRectangle();\n        this.calculateMarginRectangle();\n        this.xBordersHaveBeenSet = true;\n        this.yBordersHaveBeenSet = true;\n    };\n    BoundingBox.prototype.calculateTopBottomBorders = function () {\n        if (this.childElements.length === 0) {\n            return;\n        }\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var childElement = this.ChildElements[idx];\n            childElement.calculateTopBottomBorders();\n        }\n        var minTop = Number.MAX_VALUE;\n        var maxBottom = Number.MIN_VALUE;\n        var minMarginTop = Number.MAX_VALUE;\n        var maxMarginBottom = Number.MIN_VALUE;\n        if (this.yBordersHaveBeenSet) {\n            minTop = this.borderTop;\n            maxBottom = this.borderBottom;\n            minMarginTop = this.borderMarginTop;\n            maxMarginBottom = this.borderMarginBottom;\n        }\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var childElement = this.ChildElements[idx];\n            minTop = Math.min(minTop, childElement.relativePosition.y + childElement.borderTop);\n            maxBottom = Math.max(maxBottom, childElement.relativePosition.y + childElement.borderBottom);\n            minMarginTop = Math.min(minMarginTop, childElement.relativePosition.y + childElement.borderMarginTop);\n            maxMarginBottom = Math.max(maxMarginBottom, childElement.relativePosition.y + childElement.borderMarginBottom);\n        }\n        this.borderTop = minTop;\n        this.borderBottom = maxBottom;\n        this.borderMarginTop = minMarginTop;\n        this.borderMarginBottom = maxMarginBottom;\n        this.calculateRectangle();\n        this.calculateMarginRectangle();\n    };\n    BoundingBox.prototype.computeNonOverlappingPositionWithMargin = function (placementPsi, direction, position) {\n        this.RelativePosition = new PointF2D_1.PointF2D(position.x, position.y);\n        this.setAbsolutePositionFromParent();\n        var currentPosition = 0.0;\n        var hasBeenMoved = false;\n        do {\n            switch (direction) {\n                case ColDirEnum.Left:\n                case ColDirEnum.Right:\n                    currentPosition = this.relativePosition.x;\n                    placementPsi.calculateMarginPositionAlongDirection(this, direction);\n                    hasBeenMoved = Math.abs(currentPosition - this.relativePosition.x) > 0.001;\n                    break;\n                case ColDirEnum.Up:\n                case ColDirEnum.Down:\n                    currentPosition = this.relativePosition.y;\n                    placementPsi.calculateMarginPositionAlongDirection(this, direction);\n                    hasBeenMoved = Math.abs(currentPosition - this.relativePosition.y) > 0.001;\n                    break;\n                default:\n                    throw new Exceptions_1.ArgumentOutOfRangeException(\"direction\");\n            }\n        } while (hasBeenMoved);\n    };\n    BoundingBox.prototype.collisionDetection = function (psi) {\n        var overlapWidth = Math.min(this.AbsolutePosition.x + this.borderRight, psi.absolutePosition.x + psi.borderRight)\n            - Math.max(this.AbsolutePosition.x + this.borderLeft, psi.absolutePosition.x + psi.borderLeft);\n        var overlapHeight = Math.min(this.AbsolutePosition.y + this.borderBottom, psi.absolutePosition.y + psi.borderBottom)\n            - Math.max(this.AbsolutePosition.y + this.borderTop, psi.absolutePosition.y + psi.borderTop);\n        if (overlapWidth > 0 && overlapHeight > 0) {\n            return true;\n        }\n        return false;\n    };\n    BoundingBox.prototype.liesInsideBorders = function (psi) {\n        var leftBorderInside = (this.AbsolutePosition.x + this.borderLeft) <= (psi.absolutePosition.x + psi.borderLeft)\n            && (psi.absolutePosition.x + psi.borderLeft) <= (this.AbsolutePosition.x + this.borderRight);\n        var rightBorderInside = (this.AbsolutePosition.x + this.borderLeft) <= (psi.absolutePosition.x + psi.borderRight)\n            && (psi.absolutePosition.x + psi.borderRight) <= (this.AbsolutePosition.x + this.borderRight);\n        if (leftBorderInside && rightBorderInside) {\n            var topBorderInside = (this.AbsolutePosition.y + this.borderTop) <= (psi.absolutePosition.y + psi.borderTop)\n                && (psi.absolutePosition.y + psi.borderTop) <= (this.AbsolutePosition.y + this.borderBottom);\n            var bottomBorderInside = (this.AbsolutePosition.y + this.borderTop) <= (psi.absolutePosition.y + psi.borderBottom)\n                && (psi.absolutePosition.y + psi.borderBottom) <= (this.AbsolutePosition.y + this.borderBottom);\n            if (topBorderInside && bottomBorderInside) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BoundingBox.prototype.pointLiesInsideBorders = function (position) {\n        var xInside = (this.AbsolutePosition.x + this.borderLeft) <= position.x && position.x <= (this.AbsolutePosition.x + this.borderRight);\n        if (xInside) {\n            var yInside = (this.AbsolutePosition.y + this.borderTop) <= position.y && position.y <= (this.AbsolutePosition.y + this.borderBottom);\n            if (yInside) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BoundingBox.prototype.marginCollisionDetection = function (psi) {\n        var overlapWidth = Math.min(this.AbsolutePosition.x + this.borderMarginRight, psi.absolutePosition.x + psi.borderMarginRight)\n            - Math.max(this.AbsolutePosition.x + this.borderMarginLeft, psi.absolutePosition.x + psi.borderMarginLeft);\n        var overlapHeight = Math.min(this.AbsolutePosition.y + this.borderMarginBottom, psi.absolutePosition.y + psi.borderMarginBottom)\n            - Math.max(this.AbsolutePosition.y + this.borderMarginTop, psi.absolutePosition.y + psi.borderMarginTop);\n        if (overlapWidth > 0 && overlapHeight > 0) {\n            return true;\n        }\n        return false;\n    };\n    BoundingBox.prototype.liesInsideMargins = function (psi) {\n        var leftMarginInside = (this.AbsolutePosition.x + this.borderMarginLeft) <= (psi.absolutePosition.x + psi.borderMarginLeft)\n            && (psi.absolutePosition.x + psi.borderMarginLeft) <= (this.AbsolutePosition.x + this.borderMarginRight);\n        var rightMarginInside = (this.AbsolutePosition.x + this.borderMarginLeft) <= (psi.absolutePosition.x + psi.borderMarginRight)\n            && (psi.absolutePosition.x + psi.borderMarginRight) <= (this.AbsolutePosition.x + this.borderMarginRight);\n        if (leftMarginInside && rightMarginInside) {\n            var topMarginInside = (this.AbsolutePosition.y + this.borderMarginTop) <= (psi.absolutePosition.y + psi.borderMarginTop)\n                && (psi.absolutePosition.y + psi.borderMarginTop) <= (this.AbsolutePosition.y + this.borderMarginBottom);\n            var bottomMarginInside = (this.AbsolutePosition.y + this.borderMarginTop) <= (psi.absolutePosition.y + psi.borderMarginBottom)\n                && (psi.absolutePosition.y + psi.borderMarginBottom) <= (this.AbsolutePosition.y + this.borderMarginBottom);\n            if (topMarginInside && bottomMarginInside) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BoundingBox.prototype.pointLiesInsideMargins = function (position) {\n        var xInside = (this.AbsolutePosition.x + this.borderMarginLeft) <= position.x\n            && position.x <= (this.AbsolutePosition.x + this.borderMarginRight);\n        if (xInside) {\n            var yInside = (this.AbsolutePosition.y + this.borderMarginTop) <= position.y\n                && position.y <= (this.AbsolutePosition.y + this.borderMarginBottom);\n            if (yInside) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BoundingBox.prototype.computeNonOverlappingPosition = function (placementPsi, direction, position) {\n        this.RelativePosition = new PointF2D_1.PointF2D(position.x, position.y);\n        this.setAbsolutePositionFromParent();\n        var currentPosition = 0.0;\n        var hasBeenMoved = false;\n        do {\n            switch (direction) {\n                case ColDirEnum.Left:\n                case ColDirEnum.Right:\n                    currentPosition = this.relativePosition.x;\n                    placementPsi.calculatePositionAlongDirection(this, direction);\n                    hasBeenMoved = Math.abs(currentPosition - this.relativePosition.x) > 0.0001;\n                    break;\n                case ColDirEnum.Up:\n                case ColDirEnum.Down:\n                    currentPosition = this.relativePosition.y;\n                    placementPsi.calculatePositionAlongDirection(this, direction);\n                    hasBeenMoved = Math.abs(currentPosition - this.relativePosition.y) > 0.0001;\n                    break;\n                default:\n                    throw new Exceptions_1.ArgumentOutOfRangeException(\"direction\");\n            }\n        } while (hasBeenMoved);\n    };\n    BoundingBox.prototype.getClickedObjectOfType = function (clickPosition) {\n        var obj = this.dataObject;\n        if (this.pointLiesInsideBorders(clickPosition) && (obj !== undefined)) {\n            return obj;\n        }\n        for (var idx = 0, len = this.childElements.length; idx < len; ++idx) {\n            var psi = this.childElements[idx];\n            var innerObject = psi.getClickedObjectOfType(clickPosition);\n            if (innerObject !== undefined) {\n                return innerObject;\n            }\n        }\n        return undefined;\n    };\n    BoundingBox.prototype.getObjectsInRegion = function (region, liesInside) {\n        if (liesInside === void 0) { liesInside = true; }\n        if (this.dataObject !== undefined) {\n            if (liesInside) {\n                if (region.liesInsideBorders(this)) {\n                    return [this.dataObject];\n                }\n            }\n            else {\n                if (region.collisionDetection(this)) {\n                    return [this.dataObject];\n                }\n            }\n        }\n        var result = [];\n        for (var _i = 0, _a = this.childElements; _i < _a.length; _i++) {\n            var child = _a[_i];\n            result.concat(child.getObjectsInRegion(region, liesInside));\n        }\n        return result;\n        //return this.childElements.SelectMany(psi => psi.getObjectsInRegion<T>(region, liesInside));\n    };\n    BoundingBox.prototype.calculateRectangle = function () {\n        this.upperLeftCorner = new PointF2D_1.PointF2D(this.borderLeft, this.borderTop);\n        this.size = new SizeF2D_1.SizeF2D(this.borderRight - this.borderLeft, this.borderBottom - this.borderTop);\n        this.boundingRectangle = RectangleF2D_1.RectangleF2D.createFromLocationAndSize(this.upperLeftCorner, this.size);\n    };\n    BoundingBox.prototype.calculateMarginRectangle = function () {\n        this.upperLeftMarginCorner = new PointF2D_1.PointF2D(this.borderMarginLeft, this.borderMarginTop);\n        this.marginSize = new SizeF2D_1.SizeF2D(this.borderMarginRight - this.borderMarginLeft, this.borderMarginBottom - this.borderMarginTop);\n        this.boundingMarginRectangle = RectangleF2D_1.RectangleF2D.createFromLocationAndSize(this.upperLeftMarginCorner, this.marginSize);\n    };\n    BoundingBox.prototype.calculateMarginPositionAlongDirection = function (toBePlaced, direction) {\n        if (this === toBePlaced) {\n            return;\n        }\n        if (this.isSymbol && this.marginCollisionDetection(toBePlaced)) {\n            var shiftDistance = 0;\n            switch (direction) {\n                case ColDirEnum.Left:\n                    shiftDistance = (this.absolutePosition.x + this.borderMarginLeft) - (toBePlaced.absolutePosition.x + toBePlaced.borderMarginRight);\n                    toBePlaced.relativePosition.x += shiftDistance;\n                    toBePlaced.absolutePosition.x += shiftDistance;\n                    return;\n                case ColDirEnum.Right:\n                    shiftDistance = (this.absolutePosition.x + this.borderMarginRight) - (toBePlaced.absolutePosition.x + toBePlaced.borderMarginLeft);\n                    toBePlaced.relativePosition.x += shiftDistance;\n                    toBePlaced.absolutePosition.x += shiftDistance;\n                    return;\n                case ColDirEnum.Up:\n                    shiftDistance = (this.absolutePosition.y + this.borderMarginTop) - (toBePlaced.absolutePosition.y + toBePlaced.borderMarginBottom);\n                    toBePlaced.relativePosition.y += shiftDistance;\n                    toBePlaced.absolutePosition.y += shiftDistance;\n                    return;\n                case ColDirEnum.Down:\n                    shiftDistance = (this.absolutePosition.y + this.borderMarginBottom) - (toBePlaced.absolutePosition.y + toBePlaced.borderMarginTop);\n                    toBePlaced.relativePosition.y += shiftDistance;\n                    toBePlaced.absolutePosition.y += shiftDistance;\n                    return;\n                default:\n                    throw new Exceptions_1.ArgumentOutOfRangeException(\"direction\");\n            }\n        }\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var childElement = this.ChildElements[idx];\n            childElement.calculateMarginPositionAlongDirection(toBePlaced, direction);\n        }\n    };\n    BoundingBox.prototype.calculatePositionAlongDirection = function (toBePlaced, direction) {\n        if (this === toBePlaced) {\n            return;\n        }\n        if (this.isSymbol && this.collisionDetection(toBePlaced)) {\n            var shiftDistance = void 0;\n            switch (direction) {\n                case ColDirEnum.Left:\n                    shiftDistance = (this.absolutePosition.x + this.borderLeft) - (toBePlaced.absolutePosition.x + toBePlaced.borderRight);\n                    toBePlaced.relativePosition.x += shiftDistance;\n                    toBePlaced.absolutePosition.x += shiftDistance;\n                    return;\n                case ColDirEnum.Right:\n                    shiftDistance = (this.absolutePosition.x + this.borderRight) - (toBePlaced.absolutePosition.x + toBePlaced.borderLeft);\n                    toBePlaced.relativePosition.x += shiftDistance;\n                    toBePlaced.absolutePosition.x += shiftDistance;\n                    return;\n                case ColDirEnum.Up:\n                    shiftDistance = (this.absolutePosition.y + this.borderTop) - (toBePlaced.absolutePosition.y + toBePlaced.borderBottom);\n                    toBePlaced.relativePosition.y += shiftDistance;\n                    toBePlaced.absolutePosition.y += shiftDistance;\n                    return;\n                case ColDirEnum.Down:\n                    shiftDistance = (this.absolutePosition.y + this.borderBottom) - (toBePlaced.absolutePosition.y + toBePlaced.borderTop);\n                    toBePlaced.relativePosition.y += shiftDistance;\n                    toBePlaced.absolutePosition.y += shiftDistance;\n                    return;\n                default:\n                    throw new Exceptions_1.ArgumentOutOfRangeException(\"direction\");\n            }\n        }\n        for (var idx = 0, len = this.ChildElements.length; idx < len; ++idx) {\n            var childElement = this.ChildElements[idx];\n            childElement.calculatePositionAlongDirection(toBePlaced, direction);\n        }\n    };\n    return BoundingBox;\n}());\nexports.BoundingBox = BoundingBox;\n(function (ColDirEnum) {\n    ColDirEnum[ColDirEnum[\"Left\"] = 0] = \"Left\";\n    ColDirEnum[ColDirEnum[\"Right\"] = 1] = \"Right\";\n    ColDirEnum[ColDirEnum[\"Up\"] = 2] = \"Up\";\n    ColDirEnum[ColDirEnum[\"Down\"] = 3] = \"Down\";\n})(exports.ColDirEnum || (exports.ColDirEnum = {}));\nvar ColDirEnum = exports.ColDirEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/BoundingBox.js\n ** module id = 16\n ** module chunks = 0\n **/","\"use strict\";\nvar SizeF2D = (function () {\n    function SizeF2D(width, height) {\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        this.width = width;\n        this.height = height;\n    }\n    return SizeF2D;\n}());\nexports.SizeF2D = SizeF2D;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/DataObjects/SizeF2D.js\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\nvar SizeF2D_1 = require(\"./SizeF2D\");\nvar PointF2D_1 = require(\"./PointF2D\");\nvar RectangleF2D = (function () {\n    function RectangleF2D(x, y, width, height) {\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    RectangleF2D.createFromLocationAndSize = function (location, size) {\n        return new RectangleF2D(location.x, location.y, size.width, size.height);\n    };\n    Object.defineProperty(RectangleF2D.prototype, \"Location\", {\n        get: function () {\n            return new PointF2D_1.PointF2D(this.x, this.y);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RectangleF2D.prototype, \"Size\", {\n        get: function () {\n            return new SizeF2D_1.SizeF2D(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RectangleF2D;\n}());\nexports.RectangleF2D = RectangleF2D;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/DataObjects/RectangleF2D.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Created by acondolu on 26/04/16.\n */\n\"use strict\";\nvar Logging = (function () {\n    function Logging() {\n    }\n    Logging.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        console.log(\"[OSMD] DEBUG: \", args.join(\" \"));\n    };\n    Logging.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        console.log(\"[OSMD] \", args.join(\" \"));\n    };\n    return Logging;\n}());\nexports.Logging = Logging;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/logging.js\n ** module id = 19\n ** module chunks = 0\n **/","\"use strict\";\nvar util = require('./util');\nvar Dictionary = (function () {\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function Dictionary(toStrFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStrFunction || util.defaultToString;\n    }\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (util.isUndefined(pair)) {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (util.isUndefined(previousElement)) {\n            this.nElements++;\n            ret = undefined;\n        }\n        else {\n            ret = previousElement.value;\n        }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (!util.isUndefined(previousElement)) {\n            delete this.table[k];\n            this.nElements--;\n            return previousElement.value;\n        }\n        return undefined;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    Dictionary.prototype.keys = function () {\n        var array = [];\n        for (var name_1 in this.table) {\n            if (util.has(this.table, name_1)) {\n                var pair = this.table[name_1];\n                array.push(pair.key);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    Dictionary.prototype.values = function () {\n        var array = [];\n        for (var name_2 in this.table) {\n            if (util.has(this.table, name_2)) {\n                var pair = this.table[name_2];\n                array.push(pair.value);\n            }\n        }\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this dictionary.\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    Dictionary.prototype.forEach = function (callback) {\n        for (var name_3 in this.table) {\n            if (util.has(this.table, name_3)) {\n                var pair = this.table[name_3];\n                var ret = callback(pair.key, pair.value);\n                if (ret === false) {\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Returns true if this dictionary contains a mapping for the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary contains a mapping for the\n     * specified key.\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        return !util.isUndefined(this.getValue(key));\n    };\n    /**\n    * Removes all mappings from this dictionary.\n    * @this {collections.Dictionary}\n    */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    Dictionary.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    Dictionary.prototype.toString = function () {\n        var toret = '{';\n        this.forEach(function (k, v) {\n            toret += \"\\n\\t\" + k + \" : \" + v;\n        });\n        return toret + '\\n}';\n    };\n    return Dictionary;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Dictionary; // End of dictionary\n//# sourceMappingURL=Dictionary.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/typescript-collections/dist/lib/Dictionary.js\n ** module id = 20\n ** module chunks = 0\n **/","\"use strict\";\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.has = function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n};\n/**\n * Default function to compare element order.\n * @function\n */\nfunction defaultCompare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a === b) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\n/**\n * Default function to test equality.\n * @function\n */\nfunction defaultEquals(a, b) {\n    return a === b;\n}\nexports.defaultEquals = defaultEquals;\n/**\n * Default function to convert an object to a string.\n * @function\n */\nfunction defaultToString(item) {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\nexports.defaultToString = defaultToString;\n/**\n* Joins all the properies of the object using the provided join string\n*/\nfunction makeString(item, join) {\n    if (join === void 0) { join = ','; }\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return item.toString();\n    }\n    else {\n        var toret = '{';\n        var first = true;\n        for (var prop in item) {\n            if (exports.has(item, prop)) {\n                if (first) {\n                    first = false;\n                }\n                else {\n                    toret = toret + join;\n                }\n                toret = toret + prop + ':' + item[prop];\n            }\n        }\n        return toret + '}';\n    }\n}\nexports.makeString = makeString;\n/**\n * Checks if the given argument is a function.\n * @function\n */\nfunction isFunction(func) {\n    return (typeof func) === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks if the given argument is undefined.\n * @function\n */\nfunction isUndefined(obj) {\n    return (typeof obj) === 'undefined';\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks if the given argument is a string.\n * @function\n */\nfunction isString(obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Reverses a compare function.\n * @function\n */\nfunction reverseCompareFunction(compareFunction) {\n    if (!isFunction(compareFunction)) {\n        return function (a, b) {\n            if (a < b) {\n                return 1;\n            }\n            else if (a === b) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        };\n    }\n    else {\n        return function (d, v) {\n            return compareFunction(d, v) * -1;\n        };\n    }\n}\nexports.reverseCompareFunction = reverseCompareFunction;\n/**\n * Returns an equal function given a compare function.\n * @function\n */\nfunction compareToEquals(compareFunction) {\n    return function (a, b) {\n        return compareFunction(a, b) === 0;\n    };\n}\nexports.compareToEquals = compareToEquals;\n//# sourceMappingURL=util.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/typescript-collections/dist/lib/util.js\n ** module id = 21\n ** module chunks = 0\n **/","\"use strict\";\nvar CollectionUtil = (function () {\n    function CollectionUtil() {\n    }\n    CollectionUtil.contains2 = function (array, object) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === object) {\n                return true;\n            }\n        }\n        return false;\n    };\n    CollectionUtil.last = function (array) {\n        return array[array.length - 1];\n    };\n    /**\n     * Iterates through a dictionary and calls iterationFunction.\n     * If iterationFunction returns true the key gets stored.\n     * all stored key will finally be removed from the dictionary.\n     * @param dict\n     * @param iterationFunction\n     */\n    CollectionUtil.removeDictElementIfTrue = function (dict, iterationFunction) {\n        var toDeleteEntries = [];\n        dict.forEach(function (key, value) {\n            var shallDelete = iterationFunction(key, value);\n            if (shallDelete) {\n                toDeleteEntries.push(key);\n            }\n        });\n        for (var i = 0; i < toDeleteEntries.length; i++) {\n            dict.remove(toDeleteEntries[i]);\n        }\n    };\n    CollectionUtil.getLastElement = function (array) {\n        return array[array.length - 1];\n    };\n    CollectionUtil.binarySearch = function (array, element, cmp, startIndex, endIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        if (endIndex === void 0) { endIndex = array.length; }\n        var mid = 1;\n        while (startIndex < endIndex) {\n            mid = Math.floor((startIndex + endIndex) / 2);\n            var c = cmp(array[mid], element);\n            if (c === 0) {\n                return mid;\n            }\n            if (c < 0) {\n                startIndex = mid + 1;\n            }\n            if (0 < c) {\n                endIndex = mid;\n            }\n        }\n        return -mid;\n    };\n    return CollectionUtil;\n}());\nexports.CollectionUtil = CollectionUtil;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Util/collectionUtil.js\n ** module id = 22\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar Note = (function () {\n    function Note(voiceEntry, parentStaffEntry, length, pitch) {\n        this.slurs = [];\n        this.graceNoteSlash = false;\n        this.playbackInstrumentId = undefined;\n        this.voiceEntry = voiceEntry;\n        this.parentStaffEntry = parentStaffEntry;\n        this.length = length;\n        this.pitch = pitch;\n        if (pitch !== undefined) {\n            this.halfTone = pitch.getHalfTone();\n        }\n        else {\n            this.halfTone = 0;\n        }\n    }\n    Object.defineProperty(Note.prototype, \"GraceNoteSlash\", {\n        get: function () {\n            return this.graceNoteSlash;\n        },\n        set: function (value) {\n            this.graceNoteSlash = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"ParentVoiceEntry\", {\n        get: function () {\n            return this.voiceEntry;\n        },\n        set: function (value) {\n            this.voiceEntry = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"ParentStaffEntry\", {\n        get: function () {\n            return this.parentStaffEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"ParentStaff\", {\n        get: function () {\n            return this.parentStaffEntry.ParentStaff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"Length\", {\n        get: function () {\n            return this.length;\n        },\n        set: function (value) {\n            this.length = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"Pitch\", {\n        get: function () {\n            return this.pitch;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"NoteBeam\", {\n        get: function () {\n            return this.beam;\n        },\n        set: function (value) {\n            this.beam = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"NoteTuplet\", {\n        get: function () {\n            return this.tuplet;\n        },\n        set: function (value) {\n            this.tuplet = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"NoteTie\", {\n        get: function () {\n            return this.tie;\n        },\n        set: function (value) {\n            this.tie = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"NoteSlurs\", {\n        get: function () {\n            return this.slurs;\n        },\n        set: function (value) {\n            this.slurs = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"PlaybackInstrumentId\", {\n        get: function () {\n            return this.playbackInstrumentId;\n        },\n        set: function (value) {\n            this.playbackInstrumentId = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Note.prototype.calculateNoteLengthWithoutTie = function () {\n        var withoutTieLength = this.length.clone();\n        if (this.tie !== undefined) {\n            for (var _i = 0, _a = this.tie.Fractions; _i < _a.length; _i++) {\n                var fraction = _a[_i];\n                withoutTieLength.Sub(fraction);\n            }\n        }\n        return withoutTieLength;\n    };\n    Note.prototype.calculateNoteOriginalLength = function (originalLength) {\n        if (originalLength === void 0) { originalLength = this.length; }\n        if (this.tie !== undefined) {\n            originalLength = this.calculateNoteLengthWithoutTie();\n        }\n        if (this.tuplet !== undefined) {\n            return this.length;\n        }\n        if (originalLength.Numerator > 1) {\n            var exp = Math.floor(Math.log(originalLength.Denominator) / Math.LN2) - this.calculateNumberOfNeededDots(originalLength);\n            originalLength.Denominator = Math.pow(2, exp);\n            originalLength.Numerator = 1;\n        }\n        return originalLength;\n    };\n    Note.prototype.calculateNoteLengthWithDots = function () {\n        // FIXME is this function the same as this.calculateNoteLengthWithoutTie?\n        if (this.tie !== undefined) {\n            return this.calculateNoteLengthWithoutTie();\n        }\n        return this.length;\n    };\n    Note.prototype.calculateNumberOfNeededDots = function (fraction) {\n        if (fraction === void 0) { fraction = this.length; }\n        // FIXME (Andrea) Test if correct\n        if (this.tuplet === undefined) {\n            return Math.floor(Math.log(fraction.Numerator) / Math.LN2);\n        }\n        else {\n            return 0;\n        }\n    };\n    Note.prototype.ToString = function () {\n        if (this.pitch !== undefined) {\n            return this.Pitch.ToString() + \", length: \" + this.length.toString();\n        }\n        else {\n            return \"rest note, length: \" + this.length.toString();\n        }\n    };\n    Note.prototype.getAbsoluteTimestamp = function () {\n        return fraction_1.Fraction.plus(this.voiceEntry.Timestamp, this.parentStaffEntry.VerticalContainerParent.ParentMeasure.AbsoluteTimestamp);\n    };\n    Note.prototype.checkForDoubleSlur = function (slur) {\n        for (var idx = 0, len = this.slurs.length; idx < len; ++idx) {\n            var noteSlur = this.slurs[idx];\n            if (noteSlur.StartNote !== undefined &&\n                noteSlur.EndNote !== undefined &&\n                slur.StartNote !== undefined &&\n                slur.StartNote === noteSlur.StartNote &&\n                noteSlur.EndNote === this) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return Note;\n}());\nexports.Note = Note;\n(function (Appearance) {\n    Appearance[Appearance[\"Normal\"] = 0] = \"Normal\";\n    Appearance[Appearance[\"Grace\"] = 1] = \"Grace\";\n    Appearance[Appearance[\"Cue\"] = 2] = \"Cue\";\n})(exports.Appearance || (exports.Appearance = {}));\nvar Appearance = exports.Appearance;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Note.js\n ** module id = 23\n ** module chunks = 0\n **/","\"use strict\";\nvar OctaveShift = (function () {\n    function OctaveShift(type, octave) {\n        this.setOctaveShiftValue(type, octave);\n    }\n    Object.defineProperty(OctaveShift.prototype, \"Type\", {\n        get: function () {\n            return this.octaveValue;\n        },\n        set: function (value) {\n            this.octaveValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OctaveShift.prototype, \"StaffNumber\", {\n        get: function () {\n            return this.staffNumber;\n        },\n        set: function (value) {\n            this.staffNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OctaveShift.prototype, \"ParentStartMultiExpression\", {\n        get: function () {\n            return this.startMultiExpression;\n        },\n        set: function (value) {\n            this.startMultiExpression = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OctaveShift.prototype, \"ParentEndMultiExpression\", {\n        get: function () {\n            return this.endMultiExpression;\n        },\n        set: function (value) {\n            this.endMultiExpression = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OctaveShift.prototype.setOctaveShiftValue = function (type, octave) {\n        if (octave === 1 && type === \"down\") {\n            this.octaveValue = OctaveEnum.VA8;\n        }\n        else if (octave === 1 && type === \"up\") {\n            this.octaveValue = OctaveEnum.VB8;\n        }\n        else if (octave === 2 && type === \"down\") {\n            this.octaveValue = OctaveEnum.MA15;\n        }\n        else if (octave === 2 && type === \"up\") {\n            this.octaveValue = OctaveEnum.MB15;\n        }\n        else {\n            this.octaveValue = OctaveEnum.NONE;\n        }\n    };\n    return OctaveShift;\n}());\nexports.OctaveShift = OctaveShift;\n(function (OctaveEnum) {\n    OctaveEnum[OctaveEnum[\"VA8\"] = 0] = \"VA8\";\n    OctaveEnum[OctaveEnum[\"VB8\"] = 1] = \"VB8\";\n    OctaveEnum[OctaveEnum[\"MA15\"] = 2] = \"MA15\";\n    OctaveEnum[OctaveEnum[\"MB15\"] = 3] = \"MB15\";\n    OctaveEnum[OctaveEnum[\"NONE\"] = 4] = \"NONE\";\n})(exports.OctaveEnum || (exports.OctaveEnum = {}));\nvar OctaveEnum = exports.OctaveEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/ContinuousExpressions/octaveShift.js\n ** module id = 24\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar Note_1 = require(\"./Note\");\nvar pitch_1 = require(\"../../Common/DataObjects/pitch\");\nvar OrnamentContainer_1 = require(\"./OrnamentContainer\");\nvar pitch_2 = require(\"../../Common/DataObjects/pitch\");\nvar Dictionary_1 = require(\"typescript-collections/dist/lib/Dictionary\");\nvar VoiceEntry = (function () {\n    function VoiceEntry(timestamp, parentVoice, parentSourceStaffEntry) {\n        this.notes = [];\n        this.articulations = [];\n        this.technicalInstructions = [];\n        this.lyricsEntries = new Dictionary_1.default();\n        this.arpeggiosNotesIndices = [];\n        this.timestamp = timestamp;\n        this.parentVoice = parentVoice;\n        this.parentSourceStaffEntry = parentSourceStaffEntry;\n    }\n    Object.defineProperty(VoiceEntry.prototype, \"ParentSourceStaffEntry\", {\n        get: function () {\n            return this.parentSourceStaffEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"ParentVoice\", {\n        get: function () {\n            return this.parentVoice;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"Timestamp\", {\n        get: function () {\n            return this.timestamp;\n        },\n        set: function (value) {\n            this.timestamp = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"Notes\", {\n        get: function () {\n            return this.notes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"Articulations\", {\n        get: function () {\n            return this.articulations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"TechnicalInstructions\", {\n        get: function () {\n            return this.technicalInstructions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"LyricsEntries\", {\n        get: function () {\n            return this.lyricsEntries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"ArpeggiosNotesIndices\", {\n        get: function () {\n            return this.arpeggiosNotesIndices;\n        },\n        set: function (value) {\n            this.arpeggiosNotesIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceEntry.prototype, \"OrnamentContainer\", {\n        get: function () {\n            return this.ornamentContainer;\n        },\n        set: function (value) {\n            this.ornamentContainer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VoiceEntry.isSupportedArticulation = function (articulation) {\n        switch (articulation) {\n            case ArticulationEnum.accent:\n            case ArticulationEnum.strongaccent:\n            case ArticulationEnum.invertedstrongaccent:\n            case ArticulationEnum.staccato:\n            case ArticulationEnum.staccatissimo:\n            case ArticulationEnum.spiccato:\n            case ArticulationEnum.tenuto:\n            case ArticulationEnum.fermata:\n            case ArticulationEnum.invertedfermata:\n            case ArticulationEnum.breathmark:\n            case ArticulationEnum.caesura:\n            case ArticulationEnum.lefthandpizzicato:\n            case ArticulationEnum.naturalharmonic:\n            case ArticulationEnum.snappizzicato:\n            case ArticulationEnum.upbow:\n            case ArticulationEnum.downbow:\n                return true;\n            default:\n                return false;\n        }\n    };\n    VoiceEntry.prototype.hasTie = function () {\n        for (var idx = 0, len = this.Notes.length; idx < len; ++idx) {\n            var note = this.Notes[idx];\n            if (note.NoteTie !== undefined) {\n                return true;\n            }\n        }\n        return false;\n    };\n    VoiceEntry.prototype.hasSlur = function () {\n        for (var idx = 0, len = this.Notes.length; idx < len; ++idx) {\n            var note = this.Notes[idx];\n            if (note.NoteSlurs.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    VoiceEntry.prototype.isStaccato = function () {\n        for (var idx = 0, len = this.Articulations.length; idx < len; ++idx) {\n            var articulation = this.Articulations[idx];\n            if (articulation === ArticulationEnum.staccato) {\n                return true;\n            }\n        }\n        return false;\n    };\n    VoiceEntry.prototype.isAccent = function () {\n        for (var idx = 0, len = this.Articulations.length; idx < len; ++idx) {\n            var articulation = this.Articulations[idx];\n            if (articulation === ArticulationEnum.accent || articulation === ArticulationEnum.strongaccent) {\n                return true;\n            }\n        }\n        return false;\n    };\n    VoiceEntry.prototype.getVerseNumberForLyricEntry = function (lyricsEntry) {\n        var verseNumber = 1;\n        this.lyricsEntries.forEach(function (key, value) {\n            if (lyricsEntry === value) {\n                verseNumber = key;\n            }\n        });\n        return verseNumber;\n    };\n    //public createVoiceEntriesForOrnament(activeKey: KeyInstruction): VoiceEntry[] {\n    //    return this.createVoiceEntriesForOrnament(this, activeKey);\n    //}\n    VoiceEntry.prototype.createVoiceEntriesForOrnament = function (voiceEntryWithOrnament, activeKey) {\n        if (voiceEntryWithOrnament === undefined) {\n            voiceEntryWithOrnament = this;\n        }\n        var voiceEntries = [];\n        if (voiceEntryWithOrnament.ornamentContainer === undefined) {\n            return;\n        }\n        var baseNote = this.notes[0];\n        var baselength = baseNote.calculateNoteLengthWithoutTie();\n        var baseVoice = voiceEntryWithOrnament.ParentVoice;\n        var baseTimestamp = voiceEntryWithOrnament.Timestamp;\n        var currentTimestamp = fraction_1.Fraction.createFromFraction(baseTimestamp);\n        //let length: Fraction;\n        switch (voiceEntryWithOrnament.ornamentContainer.GetOrnament) {\n            case OrnamentContainer_1.OrnamentEnum.Trill:\n                {\n                    var length_1 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 8);\n                    var higherPitch = baseNote.Pitch.getTransposedPitch(1);\n                    var alteration = activeKey.getAlterationForPitch(higherPitch);\n                    if (voiceEntryWithOrnament.OrnamentContainer.AccidentalAbove !== pitch_2.AccidentalEnum.NONE) {\n                        alteration = voiceEntryWithOrnament.ornamentContainer.AccidentalAbove;\n                    }\n                    for (var i = 0; i < 8; i++) {\n                        currentTimestamp = fraction_1.Fraction.plus(baseTimestamp, new fraction_1.Fraction(i * length_1.Numerator, length_1.Denominator));\n                        if ((i % 2) === 0) {\n                            this.createBaseVoiceEntry(currentTimestamp, length_1, baseVoice, baseNote, voiceEntries);\n                        }\n                        else {\n                            this.createAlteratedVoiceEntry(currentTimestamp, length_1, baseVoice, higherPitch, alteration, voiceEntries);\n                        }\n                    }\n                }\n                break;\n            case OrnamentContainer_1.OrnamentEnum.Turn:\n                {\n                    var length_2 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 4);\n                    var lowerPitch = baseNote.Pitch.getTransposedPitch(-1);\n                    var lowerAlteration = activeKey.getAlterationForPitch(lowerPitch);\n                    var higherPitch = baseNote.Pitch.getTransposedPitch(1);\n                    var higherAlteration = activeKey.getAlterationForPitch(higherPitch);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_2, baseVoice, higherPitch, higherAlteration, voiceEntries);\n                    currentTimestamp.Add(length_2);\n                    this.createBaseVoiceEntry(currentTimestamp, length_2, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp.Add(length_2);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_2, baseVoice, lowerPitch, lowerAlteration, voiceEntries);\n                    currentTimestamp.Add(length_2);\n                    this.createBaseVoiceEntry(currentTimestamp, length_2, baseVoice, baseNote, voiceEntries);\n                }\n                break;\n            case OrnamentContainer_1.OrnamentEnum.InvertedTurn:\n                {\n                    var length_3 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 4);\n                    var lowerPitch = baseNote.Pitch.getTransposedPitch(-1);\n                    var lowerAlteration = activeKey.getAlterationForPitch(lowerPitch);\n                    var higherPitch = baseNote.Pitch.getTransposedPitch(1);\n                    var higherAlteration = activeKey.getAlterationForPitch(higherPitch);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_3, baseVoice, lowerPitch, lowerAlteration, voiceEntries);\n                    currentTimestamp.Add(length_3);\n                    this.createBaseVoiceEntry(currentTimestamp, length_3, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp.Add(length_3);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_3, baseVoice, higherPitch, higherAlteration, voiceEntries);\n                    currentTimestamp.Add(length_3);\n                    this.createBaseVoiceEntry(currentTimestamp, length_3, baseVoice, baseNote, voiceEntries);\n                }\n                break;\n            case OrnamentContainer_1.OrnamentEnum.DelayedTurn:\n                {\n                    var length_4 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 2);\n                    var lowerPitch = baseNote.Pitch.getTransposedPitch(-1);\n                    var lowerAlteration = activeKey.getAlterationForPitch(lowerPitch);\n                    var higherPitch = baseNote.Pitch.getTransposedPitch(1);\n                    var higherAlteration = activeKey.getAlterationForPitch(higherPitch);\n                    this.createBaseVoiceEntry(currentTimestamp, length_4, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp = fraction_1.Fraction.plus(baseTimestamp, length_4);\n                    length_4.Denominator = baselength.Denominator * 8;\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_4, baseVoice, higherPitch, higherAlteration, voiceEntries);\n                    currentTimestamp.Add(length_4);\n                    this.createBaseVoiceEntry(currentTimestamp, length_4, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp.Add(length_4);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_4, baseVoice, lowerPitch, lowerAlteration, voiceEntries);\n                    currentTimestamp.Add(length_4);\n                    this.createBaseVoiceEntry(currentTimestamp, length_4, baseVoice, baseNote, voiceEntries);\n                }\n                break;\n            case OrnamentContainer_1.OrnamentEnum.DelayedInvertedTurn:\n                {\n                    var length_5 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 2);\n                    var lowerPitch = baseNote.Pitch.getTransposedPitch(-1);\n                    var lowerAlteration = activeKey.getAlterationForPitch(lowerPitch);\n                    var higherPitch = baseNote.Pitch.getTransposedPitch(1);\n                    var higherAlteration = activeKey.getAlterationForPitch(higherPitch);\n                    this.createBaseVoiceEntry(currentTimestamp, length_5, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp = fraction_1.Fraction.plus(baseTimestamp, length_5);\n                    length_5.Denominator = baselength.Denominator * 8;\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_5, baseVoice, lowerPitch, lowerAlteration, voiceEntries);\n                    currentTimestamp.Add(length_5);\n                    this.createBaseVoiceEntry(currentTimestamp, length_5, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp.Add(length_5);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_5, baseVoice, higherPitch, higherAlteration, voiceEntries);\n                    currentTimestamp.Add(length_5);\n                    this.createBaseVoiceEntry(currentTimestamp, length_5, baseVoice, baseNote, voiceEntries);\n                }\n                break;\n            case OrnamentContainer_1.OrnamentEnum.Mordent:\n                {\n                    var length_6 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 4);\n                    var higherPitch = baseNote.Pitch.getTransposedPitch(1);\n                    var alteration = activeKey.getAlterationForPitch(higherPitch);\n                    this.createBaseVoiceEntry(currentTimestamp, length_6, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp.Add(length_6);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_6, baseVoice, higherPitch, alteration, voiceEntries);\n                    length_6.Denominator = baselength.Denominator * 2;\n                    currentTimestamp = fraction_1.Fraction.plus(baseTimestamp, length_6);\n                    this.createBaseVoiceEntry(currentTimestamp, length_6, baseVoice, baseNote, voiceEntries);\n                }\n                break;\n            case OrnamentContainer_1.OrnamentEnum.InvertedMordent:\n                {\n                    var length_7 = new fraction_1.Fraction(baselength.Numerator, baselength.Denominator * 4);\n                    var lowerPitch = baseNote.Pitch.getTransposedPitch(-1);\n                    var alteration = activeKey.getAlterationForPitch(lowerPitch);\n                    this.createBaseVoiceEntry(currentTimestamp, length_7, baseVoice, baseNote, voiceEntries);\n                    currentTimestamp.Add(length_7);\n                    this.createAlteratedVoiceEntry(currentTimestamp, length_7, baseVoice, lowerPitch, alteration, voiceEntries);\n                    length_7.Denominator = baselength.Denominator * 2;\n                    currentTimestamp = fraction_1.Fraction.plus(baseTimestamp, length_7);\n                    this.createBaseVoiceEntry(currentTimestamp, length_7, baseVoice, baseNote, voiceEntries);\n                }\n                break;\n            default:\n                throw new RangeError();\n        }\n        return voiceEntries;\n    };\n    VoiceEntry.prototype.createBaseVoiceEntry = function (currentTimestamp, length, baseVoice, baseNote, voiceEntries) {\n        var voiceEntry = new VoiceEntry(currentTimestamp, baseVoice, baseNote.ParentStaffEntry);\n        var pitch = new pitch_1.Pitch(baseNote.Pitch.FundamentalNote, baseNote.Pitch.Octave, baseNote.Pitch.Accidental);\n        var note = new Note_1.Note(voiceEntry, undefined, length, pitch);\n        voiceEntry.Notes.push(note);\n        voiceEntries.push(voiceEntry);\n    };\n    VoiceEntry.prototype.createAlteratedVoiceEntry = function (currentTimestamp, length, baseVoice, higherPitch, alteration, voiceEntries) {\n        var voiceEntry = new VoiceEntry(currentTimestamp, baseVoice, undefined);\n        var pitch = new pitch_1.Pitch(higherPitch.FundamentalNote, higherPitch.Octave, alteration);\n        var note = new Note_1.Note(voiceEntry, undefined, length, pitch);\n        voiceEntry.Notes.push(note);\n        voiceEntries.push(voiceEntry);\n    };\n    return VoiceEntry;\n}());\nexports.VoiceEntry = VoiceEntry;\n(function (ArticulationEnum) {\n    ArticulationEnum[ArticulationEnum[\"accent\"] = 0] = \"accent\";\n    ArticulationEnum[ArticulationEnum[\"strongaccent\"] = 1] = \"strongaccent\";\n    ArticulationEnum[ArticulationEnum[\"invertedstrongaccent\"] = 2] = \"invertedstrongaccent\";\n    ArticulationEnum[ArticulationEnum[\"staccato\"] = 3] = \"staccato\";\n    ArticulationEnum[ArticulationEnum[\"staccatissimo\"] = 4] = \"staccatissimo\";\n    ArticulationEnum[ArticulationEnum[\"spiccato\"] = 5] = \"spiccato\";\n    ArticulationEnum[ArticulationEnum[\"tenuto\"] = 6] = \"tenuto\";\n    ArticulationEnum[ArticulationEnum[\"fermata\"] = 7] = \"fermata\";\n    ArticulationEnum[ArticulationEnum[\"invertedfermata\"] = 8] = \"invertedfermata\";\n    ArticulationEnum[ArticulationEnum[\"breathmark\"] = 9] = \"breathmark\";\n    ArticulationEnum[ArticulationEnum[\"caesura\"] = 10] = \"caesura\";\n    ArticulationEnum[ArticulationEnum[\"lefthandpizzicato\"] = 11] = \"lefthandpizzicato\";\n    ArticulationEnum[ArticulationEnum[\"naturalharmonic\"] = 12] = \"naturalharmonic\";\n    ArticulationEnum[ArticulationEnum[\"snappizzicato\"] = 13] = \"snappizzicato\";\n    ArticulationEnum[ArticulationEnum[\"upbow\"] = 14] = \"upbow\";\n    ArticulationEnum[ArticulationEnum[\"downbow\"] = 15] = \"downbow\";\n    ArticulationEnum[ArticulationEnum[\"scoop\"] = 16] = \"scoop\";\n    ArticulationEnum[ArticulationEnum[\"plop\"] = 17] = \"plop\";\n    ArticulationEnum[ArticulationEnum[\"doit\"] = 18] = \"doit\";\n    ArticulationEnum[ArticulationEnum[\"falloff\"] = 19] = \"falloff\";\n    ArticulationEnum[ArticulationEnum[\"stress\"] = 20] = \"stress\";\n    ArticulationEnum[ArticulationEnum[\"unstress\"] = 21] = \"unstress\";\n    ArticulationEnum[ArticulationEnum[\"detachedlegato\"] = 22] = \"detachedlegato\";\n    ArticulationEnum[ArticulationEnum[\"otherarticulation\"] = 23] = \"otherarticulation\";\n})(exports.ArticulationEnum || (exports.ArticulationEnum = {}));\nvar ArticulationEnum = exports.ArticulationEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/VoiceEntry.js\n ** module id = 25\n ** module chunks = 0\n **/","\"use strict\";\nvar pitch_1 = require(\"../../Common/DataObjects/pitch\");\nvar OrnamentContainer = (function () {\n    function OrnamentContainer(ornament) {\n        this.accidentalAbove = pitch_1.AccidentalEnum.NONE;\n        this.accidentalBelow = pitch_1.AccidentalEnum.NONE;\n        this.ornament = ornament;\n    }\n    Object.defineProperty(OrnamentContainer.prototype, \"GetOrnament\", {\n        get: function () {\n            return this.ornament;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrnamentContainer.prototype, \"AccidentalAbove\", {\n        get: function () {\n            return this.accidentalAbove;\n        },\n        set: function (value) {\n            this.accidentalAbove = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrnamentContainer.prototype, \"AccidentalBelow\", {\n        get: function () {\n            return this.accidentalBelow;\n        },\n        set: function (value) {\n            this.accidentalBelow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return OrnamentContainer;\n}());\nexports.OrnamentContainer = OrnamentContainer;\n(function (OrnamentEnum) {\n    OrnamentEnum[OrnamentEnum[\"Trill\"] = 0] = \"Trill\";\n    OrnamentEnum[OrnamentEnum[\"Turn\"] = 1] = \"Turn\";\n    OrnamentEnum[OrnamentEnum[\"InvertedTurn\"] = 2] = \"InvertedTurn\";\n    OrnamentEnum[OrnamentEnum[\"DelayedTurn\"] = 3] = \"DelayedTurn\";\n    OrnamentEnum[OrnamentEnum[\"DelayedInvertedTurn\"] = 4] = \"DelayedInvertedTurn\";\n    OrnamentEnum[OrnamentEnum[\"Mordent\"] = 5] = \"Mordent\";\n    OrnamentEnum[OrnamentEnum[\"InvertedMordent\"] = 6] = \"InvertedMordent\";\n})(exports.OrnamentEnum || (exports.OrnamentEnum = {}));\nvar OrnamentEnum = exports.OrnamentEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/OrnamentContainer.js\n ** module id = 26\n ** module chunks = 0\n **/","\"use strict\";\nvar GraphicalMusicPage_1 = require(\"./GraphicalMusicPage\");\nvar RhythmInstruction_1 = require(\"../VoiceData/Instructions/RhythmInstruction\");\nvar KeyInstruction_1 = require(\"../VoiceData/Instructions/KeyInstruction\");\nvar ClefInstruction_1 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar GraphicalLine_1 = require(\"./GraphicalLine\");\nvar SystemLinesEnum_1 = require(\"./SystemLinesEnum\");\nvar MusicSheetCalculator_1 = require(\"./MusicSheetCalculator\");\nvar ClefInstruction_2 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar collectionUtil_1 = require(\"../../Util/collectionUtil\");\nvar SystemLinePosition_1 = require(\"./SystemLinePosition\");\nvar MusicSystemBuilder = (function () {\n    function MusicSystemBuilder() {\n        this.globalSystemIndex = 0;\n        this.leadSheet = false;\n    }\n    MusicSystemBuilder.prototype.initialize = function (graphicalMusicSheet, measureList, numberOfStaffLines, symbolFactory) {\n        this.leadSheet = graphicalMusicSheet.LeadSheet;\n        this.graphicalMusicSheet = graphicalMusicSheet;\n        this.rules = this.graphicalMusicSheet.ParentMusicSheet.rules;\n        this.measureList = measureList;\n        this.symbolFactory = symbolFactory;\n        this.currentMusicPage = this.createMusicPage();\n        this.currentPageHeight = 0.0;\n        this.numberOfVisibleStaffLines = numberOfStaffLines;\n        this.activeRhythm = new Array(this.numberOfVisibleStaffLines);\n        this.activeKeys = new Array(this.numberOfVisibleStaffLines);\n        this.activeClefs = new Array(this.numberOfVisibleStaffLines);\n        this.initializeActiveInstructions(this.measureList[0]);\n    };\n    MusicSystemBuilder.prototype.buildMusicSystems = function () {\n        var previousMeasureEndsSystem = false;\n        var systemMaxWidth = this.getFullPageSystemWidth();\n        this.measureListIndex = 0;\n        this.currentSystemParams = new SystemBuildParameters();\n        this.currentSystemParams.currentSystem = this.initMusicSystem();\n        this.layoutSystemStaves();\n        this.currentSystemParams.currentSystem.createMusicSystemLabel(this.rules.InstrumentLabelTextHeight, this.rules.SystemLabelsRightMargin, this.rules.LabelMarginBorderFactor);\n        this.currentPageHeight += this.currentSystemParams.currentSystem.PositionAndShape.RelativePosition.y;\n        var numberOfMeasures = 0;\n        for (var idx = 0, len = this.measureList.length; idx < len; ++idx) {\n            if (this.measureList[idx].length > 0) {\n                numberOfMeasures++;\n            }\n        }\n        while (this.measureListIndex < numberOfMeasures) {\n            var staffMeasures = this.measureList[this.measureListIndex];\n            for (var idx = 0, len = staffMeasures.length; idx < len; ++idx) {\n                staffMeasures[idx].resetLayout();\n            }\n            var sourceMeasure = staffMeasures[0].parentSourceMeasure;\n            var sourceMeasureEndsSystem = sourceMeasure.BreakSystemAfter;\n            var isSystemStartMeasure = this.currentSystemParams.IsSystemStartMeasure();\n            var isFirstSourceMeasure = sourceMeasure === this.graphicalMusicSheet.ParentMusicSheet.getFirstSourceMeasure();\n            var currentMeasureBeginInstructionsWidth = this.rules.MeasureLeftMargin;\n            var currentMeasureEndInstructionsWidth = 0;\n            var measureStartLine = this.getMeasureStartLine();\n            currentMeasureBeginInstructionsWidth += this.getLineWidth(staffMeasures[0], measureStartLine, isSystemStartMeasure);\n            if (!this.leadSheet) {\n                currentMeasureBeginInstructionsWidth += this.addBeginInstructions(staffMeasures, isSystemStartMeasure, isFirstSourceMeasure);\n                currentMeasureEndInstructionsWidth += this.addEndInstructions(staffMeasures);\n            }\n            var currentMeasureVarWidth = 0;\n            for (var i = 0; i < this.numberOfVisibleStaffLines; i++) {\n                currentMeasureVarWidth = Math.max(currentMeasureVarWidth, staffMeasures[i].minimumStaffEntriesWidth);\n            }\n            var measureEndLine = this.getMeasureEndLine();\n            currentMeasureEndInstructionsWidth += this.getLineWidth(staffMeasures[0], measureEndLine, isSystemStartMeasure);\n            var nextMeasureBeginInstructionWidth = this.rules.MeasureLeftMargin;\n            if (this.measureListIndex + 1 < this.measureList.length) {\n                var nextStaffMeasures = this.measureList[this.measureListIndex + 1];\n                var nextSourceMeasure = nextStaffMeasures[0].parentSourceMeasure;\n                if (nextSourceMeasure.hasBeginInstructions()) {\n                    nextMeasureBeginInstructionWidth += this.addBeginInstructions(nextStaffMeasures, false, false);\n                }\n            }\n            var totalMeasureWidth = currentMeasureBeginInstructionsWidth + currentMeasureEndInstructionsWidth + currentMeasureVarWidth;\n            var measureFitsInSystem = this.currentSystemParams.currentWidth + totalMeasureWidth + nextMeasureBeginInstructionWidth < systemMaxWidth;\n            if (isSystemStartMeasure || measureFitsInSystem) {\n                this.addMeasureToSystem(staffMeasures, measureStartLine, measureEndLine, totalMeasureWidth, currentMeasureBeginInstructionsWidth, currentMeasureVarWidth, currentMeasureEndInstructionsWidth);\n                this.updateActiveClefs(sourceMeasure, staffMeasures);\n                this.measureListIndex++;\n            }\n            else {\n                this.finalizeCurrentAndCreateNewSystem(staffMeasures, previousMeasureEndsSystem);\n            }\n            previousMeasureEndsSystem = sourceMeasureEndsSystem;\n        }\n        this.finalizeCurrentAndCreateNewSystem(this.measureList[this.measureList.length - 1], true);\n    };\n    MusicSystemBuilder.prototype.setMeasureWidth = function (staffMeasures, width, beginInstrWidth, endInstrWidth) {\n        for (var idx = 0, len = staffMeasures.length; idx < len; ++idx) {\n            var measure = staffMeasures[idx];\n            measure.setWidth(width);\n            if (beginInstrWidth > 0) {\n                measure.beginInstructionsWidth = beginInstrWidth;\n            }\n            if (endInstrWidth > 0) {\n                measure.endInstructionsWidth = endInstrWidth;\n            }\n        }\n    };\n    MusicSystemBuilder.prototype.finalizeCurrentAndCreateNewSystem = function (measures, isPartEndingSystem) {\n        if (isPartEndingSystem === void 0) { isPartEndingSystem = false; }\n        this.adaptRepetitionLineWithIfNeeded();\n        if (!isPartEndingSystem) {\n            this.checkAndCreateExtraInstructionMeasure(measures);\n        }\n        this.stretchMusicSystem(isPartEndingSystem);\n        if (this.currentPageHeight + this.currentSystemParams.currentSystem.PositionAndShape.Size.height + this.rules.SystemDistance <= this.rules.PageHeight) {\n            this.currentPageHeight += this.currentSystemParams.currentSystem.PositionAndShape.Size.height + this.rules.SystemDistance;\n            if (this.currentPageHeight + this.currentSystemParams.currentSystem.PositionAndShape.Size.height\n                + this.rules.SystemDistance >= this.rules.PageHeight) {\n                this.currentMusicPage = this.createMusicPage();\n                this.currentPageHeight = this.rules.PageTopMargin + this.rules.TitleTopDistance;\n            }\n        }\n        else {\n            this.currentMusicPage = this.createMusicPage();\n            this.currentPageHeight = this.rules.PageTopMargin + this.rules.TitleTopDistance;\n        }\n        this.currentSystemParams = new SystemBuildParameters();\n        if (this.measureListIndex < this.measureList.length) {\n            this.currentSystemParams.currentSystem = this.initMusicSystem();\n            this.layoutSystemStaves();\n        }\n    };\n    MusicSystemBuilder.prototype.adaptRepetitionLineWithIfNeeded = function () {\n        var systemMeasures = this.currentSystemParams.systemMeasures;\n        if (systemMeasures.length >= 1) {\n            var measures = this.currentSystemParams.currentSystem.GraphicalMeasures[this.currentSystemParams.currentSystem.GraphicalMeasures.length - 1];\n            var measureParams = systemMeasures[systemMeasures.length - 1];\n            var diff = 0.0;\n            if (measureParams.endLine === SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots) {\n                measureParams.endLine = SystemLinesEnum_1.SystemLinesEnum.DotsThinBold;\n                diff = measures[0].getLineWidth(SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots) / 2 - measures[0].getLineWidth(SystemLinesEnum_1.SystemLinesEnum.DotsThinBold);\n            }\n            this.currentSystemParams.currentSystemFixWidth -= diff;\n            for (var idx = 0, len = measures.length; idx < len; ++idx) {\n                var measure = measures[idx];\n                measure.endInstructionsWidth -= diff;\n            }\n        }\n    };\n    MusicSystemBuilder.prototype.addMeasureToSystem = function (staffMeasures, measureStartLine, measureEndLine, totalMeasureWidth, currentMeasureBeginInstructionsWidth, currentVarWidth, currentMeasureEndInstructionsWidth) {\n        this.currentSystemParams.systemMeasures.push({ beginLine: measureStartLine, endLine: measureEndLine });\n        this.setMeasureWidth(staffMeasures, totalMeasureWidth, currentMeasureBeginInstructionsWidth, currentMeasureEndInstructionsWidth);\n        this.addStaveMeasuresToSystem(staffMeasures);\n        this.currentSystemParams.currentWidth += totalMeasureWidth;\n        this.currentSystemParams.currentSystemFixWidth += currentMeasureBeginInstructionsWidth + currentMeasureEndInstructionsWidth;\n        this.currentSystemParams.currentSystemVarWidth += currentVarWidth;\n        this.currentSystemParams.systemMeasureIndex++;\n    };\n    MusicSystemBuilder.prototype.createMusicPage = function () {\n        var page = new GraphicalMusicPage_1.GraphicalMusicPage(this.graphicalMusicSheet);\n        this.graphicalMusicSheet.MusicPages.push(page);\n        page.PositionAndShape.BorderLeft = 0.0;\n        page.PositionAndShape.BorderRight = this.graphicalMusicSheet.ParentMusicSheet.pageWidth;\n        page.PositionAndShape.BorderTop = 0.0;\n        page.PositionAndShape.BorderBottom = this.rules.PageHeight;\n        page.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, 0.0);\n        return page;\n    };\n    MusicSystemBuilder.prototype.initMusicSystem = function () {\n        var musicSystem = this.symbolFactory.createMusicSystem(this.currentMusicPage, this.globalSystemIndex++);\n        this.currentMusicPage.MusicSystems.push(musicSystem);\n        var boundingBox = musicSystem.PositionAndShape;\n        this.currentMusicPage.PositionAndShape.ChildElements.push(boundingBox);\n        return musicSystem;\n    };\n    MusicSystemBuilder.prototype.getFullPageSystemWidth = function () {\n        return this.currentMusicPage.PositionAndShape.Size.width - this.rules.PageLeftMargin\n            - this.rules.PageRightMargin - this.rules.SystemLeftMargin - this.rules.SystemRightMargin;\n    };\n    MusicSystemBuilder.prototype.layoutSystemStaves = function () {\n        var systemWidth = this.getFullPageSystemWidth();\n        var musicSystem = this.currentSystemParams.currentSystem;\n        var boundingBox = musicSystem.PositionAndShape;\n        boundingBox.BorderLeft = 0.0;\n        boundingBox.BorderRight = systemWidth;\n        boundingBox.BorderTop = 0.0;\n        var staffList = [];\n        var instruments = this.graphicalMusicSheet.ParentMusicSheet.Instruments;\n        for (var idx = 0, len = instruments.length; idx < len; ++idx) {\n            var instrument = instruments[idx];\n            if (instrument.Voices.length === 0 || !instrument.Visible) {\n                continue;\n            }\n            for (var idx2 = 0, len2 = instrument.Staves.length; idx2 < len2; ++idx2) {\n                var staff = instrument.Staves[idx2];\n                staffList.push(staff);\n            }\n        }\n        var multiLyrics = false;\n        if (this.leadSheet) {\n            for (var idx = 0, len = staffList.length; idx < len; ++idx) {\n                var staff = staffList[idx];\n                if (staff.ParentInstrument.LyricVersesNumbers.length > 1) {\n                    multiLyrics = true;\n                    break;\n                }\n            }\n        }\n        var yOffsetSum = 0;\n        for (var i = 0; i < staffList.length; i++) {\n            this.addStaffLineToMusicSystem(musicSystem, yOffsetSum, staffList[i]);\n            yOffsetSum += this.rules.StaffHeight;\n            if (i + 1 < staffList.length) {\n                var yOffset = 0;\n                if (this.leadSheet && !multiLyrics) {\n                    yOffset = 2.5;\n                }\n                else {\n                    if (staffList[i].ParentInstrument === staffList[i + 1].ParentInstrument) {\n                        yOffset = this.rules.BetweenStaffDistance;\n                    }\n                    else {\n                        yOffset = this.rules.StaffDistance;\n                    }\n                }\n                yOffsetSum += yOffset;\n            }\n        }\n        boundingBox.BorderBottom = yOffsetSum;\n    };\n    MusicSystemBuilder.prototype.addStaffLineToMusicSystem = function (musicSystem, relativeYPosition, staff) {\n        if (musicSystem !== undefined) {\n            var staffLine = this.symbolFactory.createStaffLine(musicSystem, staff);\n            musicSystem.StaffLines.push(staffLine);\n            var boundingBox = staffLine.PositionAndShape;\n            musicSystem.PositionAndShape.ChildElements.push(boundingBox);\n            var relativePosition = new PointF2D_1.PointF2D();\n            if (musicSystem.Parent.MusicSystems[0] === musicSystem && musicSystem.Parent === musicSystem.Parent.Parent.MusicPages[0]) {\n                relativePosition.x = this.rules.FirstSystemMargin;\n            }\n            else {\n                relativePosition.x = 0.0;\n            }\n            relativePosition.y = relativeYPosition;\n            boundingBox.RelativePosition = relativePosition;\n            if (musicSystem.Parent.MusicSystems[0] === musicSystem && musicSystem.Parent === musicSystem.Parent.Parent.MusicPages[0]) {\n                boundingBox.BorderRight = musicSystem.PositionAndShape.Size.width - this.rules.FirstSystemMargin;\n            }\n            else {\n                boundingBox.BorderRight = musicSystem.PositionAndShape.Size.width;\n            }\n            boundingBox.BorderLeft = 0.0;\n            boundingBox.BorderTop = 0.0;\n            boundingBox.BorderBottom = this.rules.StaffHeight;\n            for (var i = 0; i < 5; i++) {\n                var start = new PointF2D_1.PointF2D();\n                start.x = 0.0;\n                start.y = i * this.rules.StaffHeight / 4;\n                var end = new PointF2D_1.PointF2D();\n                end.x = staffLine.PositionAndShape.Size.width;\n                end.y = i * this.rules.StaffHeight / 4;\n                if (this.leadSheet) {\n                    start.y = end.y = 0;\n                }\n                staffLine.StaffLines[i] = new GraphicalLine_1.GraphicalLine(start, end, this.rules.StaffLineWidth);\n            }\n        }\n    };\n    MusicSystemBuilder.prototype.initializeActiveInstructions = function (measureList) {\n        var firstSourceMeasure = this.graphicalMusicSheet.ParentMusicSheet.getFirstSourceMeasure();\n        if (firstSourceMeasure !== undefined) {\n            this.visibleStaffIndices = this.graphicalMusicSheet.getVisibleStavesIndecesFromSourceMeasure(measureList);\n            for (var i = 0, len = this.visibleStaffIndices.length; i < len; i++) {\n                var staffIndex = this.visibleStaffIndices[i];\n                var graphicalMeasure = this.graphicalMusicSheet.getGraphicalMeasureFromSourceMeasureAndIndex(firstSourceMeasure, staffIndex);\n                this.activeClefs[i] = firstSourceMeasure.FirstInstructionsStaffEntries[staffIndex].Instructions[0];\n                var keyInstruction = KeyInstruction_1.KeyInstruction.copy(firstSourceMeasure.FirstInstructionsStaffEntries[staffIndex].Instructions[1]);\n                keyInstruction = this.transposeKeyInstruction(keyInstruction, graphicalMeasure);\n                this.activeKeys[i] = keyInstruction;\n                this.activeRhythm[i] = firstSourceMeasure.FirstInstructionsStaffEntries[staffIndex].Instructions[2];\n            }\n        }\n    };\n    MusicSystemBuilder.prototype.transposeKeyInstruction = function (keyInstruction, graphicalMeasure) {\n        if (this.graphicalMusicSheet.ParentMusicSheet.Transpose !== 0\n            && graphicalMeasure.ParentStaff.ParentInstrument.MidiInstrumentId !== ClefInstruction_2.MidiInstrument.Percussion\n            && MusicSheetCalculator_1.MusicSheetCalculator.transposeCalculator !== undefined) {\n            MusicSheetCalculator_1.MusicSheetCalculator.transposeCalculator.transposeKey(keyInstruction, this.graphicalMusicSheet.ParentMusicSheet.Transpose);\n        }\n        return keyInstruction;\n    };\n    MusicSystemBuilder.prototype.addBeginInstructions = function (measures, isSystemFirstMeasure, isFirstSourceMeasure) {\n        var measureCount = measures.length;\n        if (measureCount === 0) {\n            return 0;\n        }\n        var totalBeginInstructionLengthX = 0.0;\n        var sourceMeasure = measures[0].parentSourceMeasure;\n        for (var idx = 0; idx < measureCount; ++idx) {\n            var measure = measures[idx];\n            var staffIndex = this.visibleStaffIndices[idx];\n            var beginInstructionsStaffEntry = sourceMeasure.FirstInstructionsStaffEntries[staffIndex];\n            var beginInstructionLengthX = this.AddInstructionsAtMeasureBegin(beginInstructionsStaffEntry, measure, idx, isFirstSourceMeasure, isSystemFirstMeasure);\n            totalBeginInstructionLengthX = Math.max(totalBeginInstructionLengthX, beginInstructionLengthX);\n        }\n        return totalBeginInstructionLengthX;\n    };\n    MusicSystemBuilder.prototype.addEndInstructions = function (measures) {\n        var measureCount = measures.length;\n        if (measureCount === 0) {\n            return 0;\n        }\n        var totalEndInstructionLengthX = 0.5;\n        var sourceMeasure = measures[0].parentSourceMeasure;\n        for (var idx = 0; idx < measureCount; idx++) {\n            var measure = measures[idx];\n            var staffIndex = this.visibleStaffIndices[idx];\n            var endInstructionsStaffEntry = sourceMeasure.LastInstructionsStaffEntries[staffIndex];\n            var endInstructionLengthX = this.addInstructionsAtMeasureEnd(endInstructionsStaffEntry, measure);\n            totalEndInstructionLengthX = Math.max(totalEndInstructionLengthX, endInstructionLengthX);\n        }\n        return totalEndInstructionLengthX;\n    };\n    MusicSystemBuilder.prototype.AddInstructionsAtMeasureBegin = function (firstEntry, measure, visibleStaffIdx, isFirstSourceMeasure, isSystemStartMeasure) {\n        var instructionsLengthX = 0;\n        var currentClef = undefined;\n        var currentKey = undefined;\n        var currentRhythm = undefined;\n        if (firstEntry !== undefined) {\n            for (var idx = 0, len = firstEntry.Instructions.length; idx < len; ++idx) {\n                var abstractNotationInstruction = firstEntry.Instructions[idx];\n                if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                    currentClef = abstractNotationInstruction;\n                }\n                else if (abstractNotationInstruction instanceof KeyInstruction_1.KeyInstruction) {\n                    currentKey = abstractNotationInstruction;\n                }\n                else if (abstractNotationInstruction instanceof RhythmInstruction_1.RhythmInstruction) {\n                    currentRhythm = abstractNotationInstruction;\n                }\n            }\n        }\n        if (isSystemStartMeasure) {\n            if (currentClef === undefined) {\n                currentClef = this.activeClefs[visibleStaffIdx];\n            }\n            if (currentKey === undefined) {\n                currentKey = this.activeKeys[visibleStaffIdx];\n            }\n            if (isFirstSourceMeasure && currentRhythm === undefined) {\n                currentRhythm = this.activeRhythm[visibleStaffIdx];\n            }\n        }\n        var clefAdded = false;\n        var keyAdded = false;\n        var rhythmAdded = false;\n        if (currentClef !== undefined) {\n            measure.addClefAtBegin(currentClef);\n            clefAdded = true;\n        }\n        else {\n            currentClef = this.activeClefs[visibleStaffIdx];\n        }\n        if (currentKey !== undefined) {\n            currentKey = this.transposeKeyInstruction(currentKey, measure);\n            var previousKey = isSystemStartMeasure ? undefined : this.activeKeys[visibleStaffIdx];\n            measure.addKeyAtBegin(currentKey, previousKey, currentClef);\n            keyAdded = true;\n        }\n        if (currentRhythm !== undefined) {\n            measure.addRhythmAtBegin(currentRhythm);\n            rhythmAdded = true;\n        }\n        if (clefAdded || keyAdded || rhythmAdded) {\n            instructionsLengthX += measure.beginInstructionsWidth;\n            if (rhythmAdded) {\n                instructionsLengthX += this.rules.RhythmRightMargin;\n            }\n        }\n        return instructionsLengthX;\n    };\n    MusicSystemBuilder.prototype.addInstructionsAtMeasureEnd = function (lastEntry, measure) {\n        if (lastEntry === undefined || lastEntry.Instructions === undefined || lastEntry.Instructions.length === 0) {\n            return 0;\n        }\n        for (var idx = 0, len = lastEntry.Instructions.length; idx < len; ++idx) {\n            var abstractNotationInstruction = lastEntry.Instructions[idx];\n            if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                var activeClef = abstractNotationInstruction;\n                measure.addClefAtEnd(activeClef);\n            }\n        }\n        return this.rules.MeasureRightMargin + measure.endInstructionsWidth;\n    };\n    MusicSystemBuilder.prototype.updateActiveClefs = function (measure, staffMeasures) {\n        for (var visStaffIdx = 0, len = staffMeasures.length; visStaffIdx < len; visStaffIdx++) {\n            var staffIndex = this.visibleStaffIndices[visStaffIdx];\n            var firstEntry = measure.FirstInstructionsStaffEntries[staffIndex];\n            if (firstEntry !== undefined) {\n                for (var idx = 0, len2 = firstEntry.Instructions.length; idx < len2; ++idx) {\n                    var abstractNotationInstruction = firstEntry.Instructions[idx];\n                    if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                        this.activeClefs[visStaffIdx] = abstractNotationInstruction;\n                    }\n                    else if (abstractNotationInstruction instanceof KeyInstruction_1.KeyInstruction) {\n                        this.activeKeys[visStaffIdx] = abstractNotationInstruction;\n                    }\n                    else if (abstractNotationInstruction instanceof RhythmInstruction_1.RhythmInstruction) {\n                        this.activeRhythm[visStaffIdx] = abstractNotationInstruction;\n                    }\n                }\n            }\n            var entries = measure.getEntriesPerStaff(staffIndex);\n            for (var idx = 0, len2 = entries.length; idx < len2; ++idx) {\n                var staffEntry = entries[idx];\n                if (staffEntry.Instructions !== undefined) {\n                    for (var idx2 = 0, len3 = staffEntry.Instructions.length; idx2 < len3; ++idx2) {\n                        var abstractNotationInstruction = staffEntry.Instructions[idx2];\n                        if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                            this.activeClefs[visStaffIdx] = abstractNotationInstruction;\n                        }\n                    }\n                }\n            }\n            var lastEntry = measure.LastInstructionsStaffEntries[staffIndex];\n            if (lastEntry !== undefined) {\n                var instructions = lastEntry.Instructions;\n                for (var idx = 0, len3 = instructions.length; idx < len3; ++idx) {\n                    var abstractNotationInstruction = instructions[idx];\n                    if (abstractNotationInstruction instanceof ClefInstruction_1.ClefInstruction) {\n                        this.activeClefs[visStaffIdx] = abstractNotationInstruction;\n                    }\n                }\n            }\n        }\n    };\n    MusicSystemBuilder.prototype.checkAndCreateExtraInstructionMeasure = function (measures) {\n        var firstStaffEntries = measures[0].parentSourceMeasure.FirstInstructionsStaffEntries;\n        var visibleInstructionEntries = [];\n        for (var idx = 0, len = measures.length; idx < len; ++idx) {\n            var measure = measures[idx];\n            visibleInstructionEntries.push(firstStaffEntries[measure.ParentStaff.idInMusicSheet]);\n        }\n        var maxMeasureWidth = 0;\n        for (var visStaffIdx = 0, len = visibleInstructionEntries.length; visStaffIdx < len; ++visStaffIdx) {\n            var sse = visibleInstructionEntries[visStaffIdx];\n            if (sse === undefined) {\n                continue;\n            }\n            var instructions = sse.Instructions;\n            var keyInstruction = undefined;\n            var rhythmInstruction = undefined;\n            for (var idx2 = 0, len2 = instructions.length; idx2 < len2; ++idx2) {\n                var instruction = instructions[idx2];\n                if (instruction instanceof KeyInstruction_1.KeyInstruction && instruction.Key !== this.activeKeys[visStaffIdx].Key) {\n                    keyInstruction = instruction;\n                }\n                if (instruction instanceof RhythmInstruction_1.RhythmInstruction && instruction !== this.activeRhythm[visStaffIdx]) {\n                    rhythmInstruction = instruction;\n                }\n            }\n            if (keyInstruction !== undefined || rhythmInstruction !== undefined) {\n                var measureWidth = this.addExtraInstructionMeasure(visStaffIdx, keyInstruction, rhythmInstruction);\n                maxMeasureWidth = Math.max(maxMeasureWidth, measureWidth);\n            }\n        }\n        if (maxMeasureWidth > 0) {\n            this.currentSystemParams.systemMeasures.push({\n                beginLine: SystemLinesEnum_1.SystemLinesEnum.None,\n                endLine: SystemLinesEnum_1.SystemLinesEnum.None,\n            });\n            this.currentSystemParams.currentWidth += maxMeasureWidth;\n            this.currentSystemParams.currentSystemFixWidth += maxMeasureWidth;\n        }\n    };\n    MusicSystemBuilder.prototype.addExtraInstructionMeasure = function (visStaffIdx, keyInstruction, rhythmInstruction) {\n        var currentSystem = this.currentSystemParams.currentSystem;\n        var measures = [];\n        var measure = this.symbolFactory.createExtraStaffMeasure(currentSystem.StaffLines[visStaffIdx]);\n        measures.push(measure);\n        if (keyInstruction !== undefined) {\n            measure.addKeyAtBegin(keyInstruction, this.activeKeys[visStaffIdx], this.activeClefs[visStaffIdx]);\n        }\n        if (rhythmInstruction !== undefined) {\n            measure.addRhythmAtBegin(rhythmInstruction);\n        }\n        measure.PositionAndShape.BorderLeft = 0.0;\n        measure.PositionAndShape.BorderTop = 0.0;\n        measure.PositionAndShape.BorderBottom = this.rules.StaffHeight;\n        var width = this.rules.MeasureLeftMargin + measure.beginInstructionsWidth + this.rules.MeasureRightMargin;\n        measure.PositionAndShape.BorderRight = width;\n        currentSystem.StaffLines[visStaffIdx].Measures.push(measure);\n        measure.ParentStaffLine = currentSystem.StaffLines[visStaffIdx];\n        currentSystem.StaffLines[visStaffIdx].PositionAndShape.ChildElements.push(measure.PositionAndShape);\n        return width;\n    };\n    MusicSystemBuilder.prototype.addStaveMeasuresToSystem = function (staffMeasures) {\n        if (staffMeasures[0] !== undefined) {\n            var gmeasures = [];\n            for (var i = 0; i < staffMeasures.length; i++) {\n                gmeasures.push(staffMeasures[i]);\n            }\n            var currentSystem = this.currentSystemParams.currentSystem;\n            for (var visStaffIdx = 0; visStaffIdx < this.numberOfVisibleStaffLines; visStaffIdx++) {\n                var measure = gmeasures[visStaffIdx];\n                currentSystem.StaffLines[visStaffIdx].Measures.push(measure);\n                measure.ParentStaffLine = currentSystem.StaffLines[visStaffIdx];\n                currentSystem.StaffLines[visStaffIdx].PositionAndShape.ChildElements.push(measure.PositionAndShape);\n            }\n            currentSystem.AddStaffMeasures(gmeasures);\n        }\n    };\n    MusicSystemBuilder.prototype.getMeasureStartLine = function () {\n        var thisMeasureBeginsLineRep = this.thisMeasureBeginsLineRepetition();\n        if (thisMeasureBeginsLineRep) {\n            var isSystemStartMeasure = this.currentSystemParams.IsSystemStartMeasure();\n            var isGlobalFirstMeasure = this.measureListIndex === 0;\n            if (this.previousMeasureEndsLineRepetition() && !isSystemStartMeasure) {\n                return SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots;\n            }\n            if (!isGlobalFirstMeasure) {\n                return SystemLinesEnum_1.SystemLinesEnum.BoldThinDots;\n            }\n        }\n        return SystemLinesEnum_1.SystemLinesEnum.None;\n    };\n    MusicSystemBuilder.prototype.getMeasureEndLine = function () {\n        if (this.nextMeasureBeginsLineRepetition() && this.thisMeasureEndsLineRepetition()) {\n            return SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots;\n        }\n        if (this.thisMeasureEndsLineRepetition()) {\n            return SystemLinesEnum_1.SystemLinesEnum.DotsThinBold;\n        }\n        if (this.measureListIndex === this.measureList.length - 1 || this.measureList[this.measureListIndex][0].parentSourceMeasure.endsPiece) {\n            return SystemLinesEnum_1.SystemLinesEnum.ThinBold;\n        }\n        if (this.nextMeasureHasKeyInstructionChange() || this.thisMeasureEndsWordRepetition() || this.nextMeasureBeginsWordRepetition()) {\n            return SystemLinesEnum_1.SystemLinesEnum.DoubleThin;\n        }\n        return SystemLinesEnum_1.SystemLinesEnum.SingleThin;\n    };\n    MusicSystemBuilder.prototype.getLineWidth = function (measure, systemLineEnum, isSystemStartMeasure) {\n        var width = measure.getLineWidth(systemLineEnum);\n        if (systemLineEnum === SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots) {\n            width /= 2;\n        }\n        if (isSystemStartMeasure && systemLineEnum === SystemLinesEnum_1.SystemLinesEnum.BoldThinDots) {\n            width += this.rules.DistanceBetweenLastInstructionAndRepetitionBarline;\n        }\n        return width;\n    };\n    MusicSystemBuilder.prototype.previousMeasureEndsLineRepetition = function () {\n        if (this.measureListIndex === 0) {\n            return false;\n        }\n        for (var idx = 0, len = this.measureList[this.measureListIndex - 1].length; idx < len; ++idx) {\n            var measure = this.measureList[this.measureListIndex - 1][idx];\n            if (measure.endsWithLineRepetition()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSystemBuilder.prototype.thisMeasureBeginsLineRepetition = function () {\n        for (var idx = 0, len = this.measureList[this.measureListIndex].length; idx < len; ++idx) {\n            var measure = this.measureList[this.measureListIndex][idx];\n            if (measure.beginsWithLineRepetition()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSystemBuilder.prototype.nextMeasureBeginsLineRepetition = function () {\n        var nextMeasureIndex = this.measureListIndex + 1;\n        if (nextMeasureIndex >= this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length) {\n            return false;\n        }\n        for (var idx = 0, len = this.measureList[nextMeasureIndex].length; idx < len; ++idx) {\n            var measure = this.measureList[nextMeasureIndex][idx];\n            if (measure.beginsWithLineRepetition()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSystemBuilder.prototype.thisMeasureEndsLineRepetition = function () {\n        for (var idx = 0, len = this.measureList[this.measureListIndex].length; idx < len; ++idx) {\n            var measure = this.measureList[this.measureListIndex][idx];\n            if (measure.endsWithLineRepetition()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSystemBuilder.prototype.nextMeasureBeginsWordRepetition = function () {\n        var nextMeasureIndex = this.measureListIndex + 1;\n        if (nextMeasureIndex >= this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length) {\n            return false;\n        }\n        for (var idx = 0, len = this.measureList[nextMeasureIndex].length; idx < len; ++idx) {\n            var measure = this.measureList[nextMeasureIndex][idx];\n            if (measure.beginsWithWordRepetition()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSystemBuilder.prototype.thisMeasureEndsWordRepetition = function () {\n        for (var idx = 0, len = this.measureList[this.measureListIndex].length; idx < len; ++idx) {\n            var measure = this.measureList[this.measureListIndex][idx];\n            if (measure.endsWithWordRepetition()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSystemBuilder.prototype.nextMeasureHasKeyInstructionChange = function () {\n        return this.getNextMeasureKeyInstruction() !== undefined;\n    };\n    MusicSystemBuilder.prototype.getNextMeasureKeyInstruction = function () {\n        if (this.measureListIndex < this.measureList.length - 1) {\n            for (var visIndex = 0; visIndex < this.measureList[this.measureListIndex].length; visIndex++) {\n                var sourceMeasure = this.measureList[this.measureListIndex + 1][visIndex].parentSourceMeasure;\n                if (sourceMeasure === undefined) {\n                    return undefined;\n                }\n                return sourceMeasure.getKeyInstruction(this.visibleStaffIndices[visIndex]);\n            }\n        }\n        return undefined;\n    };\n    MusicSystemBuilder.prototype.calculateXScalingFactor = function (systemFixWidth, systemVarWidth) {\n        if (Math.abs(systemVarWidth - 0) < 0.00001 || Math.abs(systemFixWidth - 0) < 0.00001) {\n            return 1.0;\n        }\n        var systemEndX;\n        var currentSystem = this.currentSystemParams.currentSystem;\n        systemEndX = currentSystem.StaffLines[0].PositionAndShape.Size.width;\n        var scalingFactor = (systemEndX - systemFixWidth) / systemVarWidth;\n        return scalingFactor;\n    };\n    MusicSystemBuilder.prototype.stretchMusicSystem = function (isPartEndingSystem) {\n        var scalingFactor = this.calculateXScalingFactor(this.currentSystemParams.currentSystemFixWidth, this.currentSystemParams.currentSystemVarWidth);\n        if (isPartEndingSystem) {\n            scalingFactor = Math.min(scalingFactor, this.rules.LastSystemMaxScalingFactor);\n        }\n        var currentSystem = this.currentSystemParams.currentSystem;\n        for (var visStaffIdx = 0, len = currentSystem.StaffLines.length; visStaffIdx < len; ++visStaffIdx) {\n            var staffLine = currentSystem.StaffLines[visStaffIdx];\n            var currentXPosition = 0.0;\n            for (var measureIndex = 0; measureIndex < staffLine.Measures.length; measureIndex++) {\n                var measure = staffLine.Measures[measureIndex];\n                measure.setPositionInStaffline(currentXPosition);\n                measure.setWidth(measure.beginInstructionsWidth + measure.minimumStaffEntriesWidth * scalingFactor + measure.endInstructionsWidth);\n                if (measureIndex < this.currentSystemParams.systemMeasures.length) {\n                    var startLine = this.currentSystemParams.systemMeasures[measureIndex].beginLine;\n                    var lineWidth = measure.getLineWidth(SystemLinesEnum_1.SystemLinesEnum.BoldThinDots);\n                    switch (startLine) {\n                        case SystemLinesEnum_1.SystemLinesEnum.BoldThinDots:\n                            var xPosition = currentXPosition;\n                            if (measureIndex === 0) {\n                                xPosition = currentXPosition + measure.beginInstructionsWidth - lineWidth;\n                            }\n                            currentSystem.createVerticalLineForMeasure(xPosition, lineWidth, startLine, SystemLinePosition_1.SystemLinePosition.MeasureBegin, measureIndex, measure);\n                            break;\n                        default:\n                    }\n                }\n                measure.staffEntriesScaleFactor = scalingFactor;\n                measure.layoutSymbols();\n                var nextMeasureHasRepStartLine = measureIndex + 1 < this.currentSystemParams.systemMeasures.length\n                    && this.currentSystemParams.systemMeasures[measureIndex + 1].beginLine === SystemLinesEnum_1.SystemLinesEnum.BoldThinDots;\n                if (!nextMeasureHasRepStartLine) {\n                    var endLine = SystemLinesEnum_1.SystemLinesEnum.SingleThin;\n                    if (measureIndex < this.currentSystemParams.systemMeasures.length) {\n                        endLine = this.currentSystemParams.systemMeasures[measureIndex].endLine;\n                    }\n                    var lineWidth = measure.getLineWidth(endLine);\n                    var xPos = measure.PositionAndShape.RelativePosition.x + measure.PositionAndShape.BorderRight - lineWidth;\n                    if (endLine === SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots) {\n                        xPos -= lineWidth / 2;\n                    }\n                    currentSystem.createVerticalLineForMeasure(xPos, lineWidth, endLine, SystemLinePosition_1.SystemLinePosition.MeasureEnd, measureIndex, measure);\n                }\n                currentXPosition = measure.PositionAndShape.RelativePosition.x + measure.PositionAndShape.BorderRight;\n            }\n        }\n        if (isPartEndingSystem) {\n            this.decreaseMusicSystemBorders();\n        }\n    };\n    MusicSystemBuilder.prototype.decreaseMusicSystemBorders = function () {\n        var currentSystem = this.currentSystemParams.currentSystem;\n        var bb = collectionUtil_1.CollectionUtil.last(currentSystem.StaffLines[0].Measures).PositionAndShape;\n        var width = bb.RelativePosition.x + bb.Size.width;\n        for (var idx = 0, len = currentSystem.StaffLines.length; idx < len; ++idx) {\n            var staffLine = currentSystem.StaffLines[idx];\n            staffLine.PositionAndShape.BorderRight = width;\n            for (var idx2 = 0, len2 = staffLine.StaffLines.length; idx2 < len2; ++idx2) {\n                var graphicalLine = staffLine.StaffLines[idx2];\n                graphicalLine.End = new PointF2D_1.PointF2D(width, graphicalLine.End.y);\n            }\n        }\n        currentSystem.PositionAndShape.BorderRight = width + this.currentSystemParams.maxLabelLength + this.rules.SystemLabelsRightMargin;\n    };\n    return MusicSystemBuilder;\n}());\nexports.MusicSystemBuilder = MusicSystemBuilder;\nvar SystemBuildParameters = (function () {\n    function SystemBuildParameters() {\n        this.systemMeasures = [];\n        this.systemMeasureIndex = 0;\n        this.currentWidth = 0;\n        this.currentSystemFixWidth = 0;\n        this.currentSystemVarWidth = 0;\n        this.maxLabelLength = 0;\n    }\n    SystemBuildParameters.prototype.IsSystemStartMeasure = function () {\n        return this.systemMeasureIndex === 0;\n    };\n    return SystemBuildParameters;\n}());\nexports.SystemBuildParameters = SystemBuildParameters;\nvar MeasureBuildParameters = (function () {\n    function MeasureBuildParameters() {\n    }\n    return MeasureBuildParameters;\n}());\nexports.MeasureBuildParameters = MeasureBuildParameters;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSystemBuilder.js\n ** module id = 27\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar GraphicalMusicPage = (function (_super) {\n    __extends(GraphicalMusicPage, _super);\n    function GraphicalMusicPage(parent) {\n        _super.call(this);\n        this.musicSystems = [];\n        this.labels = [];\n        this.parent = parent;\n        this.boundingBox = new BoundingBox_1.BoundingBox(this, undefined);\n    }\n    Object.defineProperty(GraphicalMusicPage.prototype, \"MusicSystems\", {\n        get: function () {\n            return this.musicSystems;\n        },\n        set: function (value) {\n            this.musicSystems = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicPage.prototype, \"Labels\", {\n        get: function () {\n            return this.labels;\n        },\n        set: function (value) {\n            this.labels = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalMusicPage.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        set: function (value) {\n            this.parent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicalMusicPage.prototype.setMusicPageAbsolutePosition = function (pageIndex, rules) {\n        if (rules.PagePlacement === PagePlacementEnum.Down) {\n            return new PointF2D_1.PointF2D(0.0, pageIndex * rules.PageHeight);\n        }\n        else if (rules.PagePlacement === PagePlacementEnum.Right) {\n            return new PointF2D_1.PointF2D(pageIndex * this.parent.ParentMusicSheet.pageWidth, 0.0);\n        }\n        else {\n            if (pageIndex % 2 === 0) {\n                if (pageIndex === 0) {\n                    return new PointF2D_1.PointF2D(0.0, pageIndex * rules.PageHeight);\n                }\n                else {\n                    return new PointF2D_1.PointF2D(0.0, (pageIndex - 1) * rules.PageHeight);\n                }\n            }\n            else {\n                if (pageIndex === 1) {\n                    return new PointF2D_1.PointF2D(this.parent.ParentMusicSheet.pageWidth, (pageIndex - 1) * rules.PageHeight);\n                }\n                else {\n                    return new PointF2D_1.PointF2D(this.parent.ParentMusicSheet.pageWidth, (pageIndex - 2) * rules.PageHeight);\n                }\n            }\n        }\n    };\n    return GraphicalMusicPage;\n}(GraphicalObject_1.GraphicalObject));\nexports.GraphicalMusicPage = GraphicalMusicPage;\n(function (PagePlacementEnum) {\n    PagePlacementEnum[PagePlacementEnum[\"Down\"] = 0] = \"Down\";\n    PagePlacementEnum[PagePlacementEnum[\"Right\"] = 1] = \"Right\";\n    PagePlacementEnum[PagePlacementEnum[\"RightDown\"] = 2] = \"RightDown\";\n})(exports.PagePlacementEnum || (exports.PagePlacementEnum = {}));\nvar PagePlacementEnum = exports.PagePlacementEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalMusicPage.js\n ** module id = 28\n ** module chunks = 0\n **/","\"use strict\";\nvar GraphicalObject = (function () {\n    function GraphicalObject() {\n    }\n    Object.defineProperty(GraphicalObject.prototype, \"PositionAndShape\", {\n        get: function () {\n            return this.boundingBox;\n        },\n        set: function (value) {\n            this.boundingBox = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GraphicalObject;\n}());\nexports.GraphicalObject = GraphicalObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalObject.js\n ** module id = 29\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractNotationInstruction_1 = require(\"./AbstractNotationInstruction\");\nvar RhythmInstruction = (function (_super) {\n    __extends(RhythmInstruction, _super);\n    function RhythmInstruction(rhythm, numerator, denominator, rhythmSymbolEnum) {\n        _super.call(this, undefined); // FIXME no parent SourceStaffEntry\n        this.rhythm = rhythm;\n        this.numerator = numerator;\n        this.denominator = denominator;\n        this.symbolEnum = rhythmSymbolEnum;\n    }\n    Object.defineProperty(RhythmInstruction.prototype, \"Rhythm\", {\n        get: function () {\n            return this.rhythm;\n        },\n        set: function (value) {\n            this.rhythm = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RhythmInstruction.prototype, \"SymbolEnum\", {\n        get: function () {\n            return this.symbolEnum;\n        },\n        set: function (value) {\n            this.symbolEnum = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RhythmInstruction.prototype.clone = function () {\n        return new RhythmInstruction(this.rhythm.clone(), this.numerator, this.denominator, this.symbolEnum);\n    };\n    RhythmInstruction.prototype.OperatorEquals = function (rhythm2) {\n        var rhythm1 = this;\n        if (rhythm1 === rhythm2) {\n            return true;\n        }\n        if ((rhythm1 === undefined) || (rhythm2 === undefined)) {\n            return false;\n        }\n        return (rhythm1.numerator === rhythm2.numerator && rhythm1.denominator === rhythm2.denominator);\n    };\n    RhythmInstruction.prototype.OperatorNotEqual = function (rhythm2) {\n        var rhythm1 = this;\n        return !(rhythm1 === rhythm2);\n    };\n    RhythmInstruction.prototype.ToString = function () {\n        return \"Rhythm: \" + this.rhythm.toString();\n    };\n    return RhythmInstruction;\n}(AbstractNotationInstruction_1.AbstractNotationInstruction));\nexports.RhythmInstruction = RhythmInstruction;\n(function (RhythmSymbolEnum) {\n    RhythmSymbolEnum[RhythmSymbolEnum[\"NONE\"] = 0] = \"NONE\";\n    RhythmSymbolEnum[RhythmSymbolEnum[\"COMMON\"] = 1] = \"COMMON\";\n    RhythmSymbolEnum[RhythmSymbolEnum[\"CUT\"] = 2] = \"CUT\";\n})(exports.RhythmSymbolEnum || (exports.RhythmSymbolEnum = {}));\nvar RhythmSymbolEnum = exports.RhythmSymbolEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Instructions/RhythmInstruction.js\n ** module id = 30\n ** module chunks = 0\n **/","\"use strict\";\n(function (SystemLinesEnum) {\n    SystemLinesEnum[SystemLinesEnum[\"SingleThin\"] = 0] = \"SingleThin\";\n    SystemLinesEnum[SystemLinesEnum[\"DoubleThin\"] = 1] = \"DoubleThin\";\n    SystemLinesEnum[SystemLinesEnum[\"ThinBold\"] = 2] = \"ThinBold\";\n    SystemLinesEnum[SystemLinesEnum[\"BoldThinDots\"] = 3] = \"BoldThinDots\";\n    SystemLinesEnum[SystemLinesEnum[\"DotsThinBold\"] = 4] = \"DotsThinBold\";\n    SystemLinesEnum[SystemLinesEnum[\"DotsBoldBoldDots\"] = 5] = \"DotsBoldBoldDots\";\n    SystemLinesEnum[SystemLinesEnum[\"None\"] = 6] = \"None\";\n})(exports.SystemLinesEnum || (exports.SystemLinesEnum = {}));\nvar SystemLinesEnum = exports.SystemLinesEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/SystemLinesEnum.js\n ** module id = 31\n ** module chunks = 0\n **/","\"use strict\";\n(function (SystemLinePosition) {\n    SystemLinePosition[SystemLinePosition[\"MeasureBegin\"] = 0] = \"MeasureBegin\";\n    SystemLinePosition[SystemLinePosition[\"MeasureEnd\"] = 1] = \"MeasureEnd\";\n})(exports.SystemLinePosition || (exports.SystemLinePosition = {}));\nvar SystemLinePosition = exports.SystemLinePosition;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/SystemLinePosition.js\n ** module id = 32\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar ClefInstruction_1 = require(\"./Instructions/ClefInstruction\");\nvar KeyInstruction_1 = require(\"./Instructions/KeyInstruction\");\nvar RhythmInstruction_1 = require(\"./Instructions/RhythmInstruction\");\nvar SourceStaffEntry = (function () {\n    function SourceStaffEntry(verticalContainerParent, parentStaff) {\n        this.voiceEntries = [];\n        this.instructions = [];\n        this.verticalContainerParent = verticalContainerParent;\n        this.parentStaff = parentStaff;\n    }\n    Object.defineProperty(SourceStaffEntry.prototype, \"ParentStaff\", {\n        get: function () {\n            return this.parentStaff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"VerticalContainerParent\", {\n        get: function () {\n            return this.verticalContainerParent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"Timestamp\", {\n        get: function () {\n            if (this.VerticalContainerParent !== undefined) {\n                return this.VerticalContainerParent.Timestamp;\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"AbsoluteTimestamp\", {\n        get: function () {\n            if (this.VerticalContainerParent !== undefined) {\n                return fraction_1.Fraction.plus(this.VerticalContainerParent.ParentMeasure.AbsoluteTimestamp, this.VerticalContainerParent.Timestamp);\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"VoiceEntries\", {\n        get: function () {\n            return this.voiceEntries;\n        },\n        set: function (value) {\n            this.voiceEntries = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"Link\", {\n        get: function () {\n            return this.staffEntryLink;\n        },\n        set: function (value) {\n            this.staffEntryLink = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"Instructions\", {\n        get: function () {\n            return this.instructions;\n        },\n        set: function (value) {\n            this.instructions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceStaffEntry.prototype, \"ChordContainer\", {\n        get: function () {\n            return this.chordSymbolContainer;\n        },\n        set: function (value) {\n            this.chordSymbolContainer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public removeAllInstructionsOfType(type: AbstractNotationInstruction): number {\n    //     let i: number = 0;\n    //     let ret: number = 0;\n    //     while (i < this.instructions.length) {\n    //         let instruction: AbstractNotationInstruction = this.instructions[i];\n    //         if (instruction instanceof type) {\n    //             this.instructions.splice(i, 1);\n    //             ret++;\n    //         } else {\n    //             i++;\n    //         }\n    //     }\n    //     return ret;\n    // }\n    //\n    // public removeFirstInstructionOfType(type: AbstractNotationInstruction): boolean {\n    //     for (let i: number = 0; i < this.instructions.length; i++) {\n    //         if (this.instructions[i] instanceof type) {\n    //             this.instructions.splice(i, 1);\n    //             return true;\n    //         }\n    //     }\n    //     return false;\n    // }\n    SourceStaffEntry.prototype.removeAllInstructionsOfTypeClefInstruction = function () {\n        var i = 0;\n        var ret = 0;\n        while (i < this.instructions.length) {\n            if (this.instructions[i] instanceof ClefInstruction_1.ClefInstruction) {\n                this.instructions.splice(i, 1);\n                ret++;\n            }\n            else {\n                i++;\n            }\n        }\n        return ret;\n    };\n    SourceStaffEntry.prototype.removeFirstInstructionOfTypeClefInstruction = function () {\n        for (var i = 0; i < this.instructions.length; i++) {\n            if (this.instructions[i] instanceof ClefInstruction_1.ClefInstruction) {\n                this.instructions.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceStaffEntry.prototype.removeAllInstructionsOfTypeKeyInstruction = function () {\n        var i = 0;\n        var ret = 0;\n        while (i < this.instructions.length) {\n            if (this.instructions[i] instanceof KeyInstruction_1.KeyInstruction) {\n                this.instructions.splice(i, 1);\n                ret++;\n            }\n            else {\n                i++;\n            }\n        }\n        return ret;\n    };\n    SourceStaffEntry.prototype.removeFirstInstructionOfTypeKeyInstruction = function () {\n        for (var i = 0; i < this.instructions.length; i++) {\n            if (this.instructions[i] instanceof KeyInstruction_1.KeyInstruction) {\n                this.instructions.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceStaffEntry.prototype.removeAllInstructionsOfTypeRhythmInstruction = function () {\n        var i = 0;\n        var ret = 0;\n        while (i < this.instructions.length) {\n            if (this.instructions[i] instanceof RhythmInstruction_1.RhythmInstruction) {\n                this.instructions.splice(i, 1);\n                ret++;\n            }\n            else {\n                i++;\n            }\n        }\n        return ret;\n    };\n    SourceStaffEntry.prototype.removeFirstInstructionOfTypeRhythmInstruction = function () {\n        for (var i = 0; i < this.instructions.length; i++) {\n            if (this.instructions[i] instanceof RhythmInstruction_1.RhythmInstruction) {\n                this.instructions.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceStaffEntry.prototype.calculateMinNoteLength = function () {\n        var duration = new fraction_1.Fraction(Number.MAX_VALUE, 1);\n        for (var idx = 0, len = this.VoiceEntries.length; idx < len; ++idx) {\n            var voiceEntry = this.VoiceEntries[idx];\n            for (var idx2 = 0, len2 = voiceEntry.Notes.length; idx2 < len2; ++idx2) {\n                var note = voiceEntry.Notes[idx2];\n                if (note.NoteTie !== undefined) {\n                    if (duration > note.calculateNoteLengthWithoutTie()) {\n                        duration = note.calculateNoteLengthWithoutTie();\n                    }\n                }\n                else if (duration > note.Length) {\n                    duration = note.Length;\n                }\n            }\n        }\n        return duration;\n    };\n    SourceStaffEntry.prototype.calculateMaxNoteLength = function () {\n        var duration = new fraction_1.Fraction(0, 1);\n        for (var idx = 0, len = this.VoiceEntries.length; idx < len; ++idx) {\n            var voiceEntry = this.VoiceEntries[idx];\n            for (var idx2 = 0, len2 = voiceEntry.Notes.length; idx2 < len2; ++idx2) {\n                var note = voiceEntry.Notes[idx2];\n                if (note.NoteTie !== undefined) {\n                    if (duration < note.calculateNoteLengthWithoutTie()) {\n                        duration = note.calculateNoteLengthWithoutTie();\n                        for (var idx3 = 0, len3 = note.NoteTie.Fractions.length; idx3 < len3; ++idx3) {\n                            var fraction = note.NoteTie.Fractions[idx3];\n                            duration.Add(fraction);\n                        }\n                    }\n                }\n                else if (duration < note.Length) {\n                    duration = note.Length;\n                }\n            }\n        }\n        return duration;\n    };\n    SourceStaffEntry.prototype.hasNotes = function () {\n        for (var idx = 0, len = this.VoiceEntries.length; idx < len; ++idx) {\n            var voiceEntry = this.VoiceEntries[idx];\n            if (voiceEntry.Notes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceStaffEntry.prototype.hasTie = function () {\n        for (var idx = 0, len = this.VoiceEntries.length; idx < len; ++idx) {\n            var voiceEntry = this.VoiceEntries[idx];\n            if (voiceEntry.hasTie()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceStaffEntry.prototype.findLinkedNotes = function (linkedNotes) {\n        for (var idx = 0, len = this.voiceEntries.length; idx < len; ++idx) {\n            var voiceEntry = this.voiceEntries[idx];\n            for (var idx2 = 0, len2 = voiceEntry.Notes.length; idx2 < len2; ++idx2) {\n                var note = voiceEntry.Notes[idx2];\n                if (note.ParentStaffEntry === this) {\n                    linkedNotes.push(note);\n                }\n            }\n        }\n    };\n    return SourceStaffEntry;\n}());\nexports.SourceStaffEntry = SourceStaffEntry;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/SourceStaffEntry.js\n ** module id = 33\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TextAlignment_1 = require(\"../../Common/Enums/TextAlignment\");\nvar Clickable_1 = require(\"./Clickable\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar EngravingRules_1 = require(\"./EngravingRules\");\nvar MusicSheetCalculator_1 = require(\"./MusicSheetCalculator\");\nvar GraphicalLabel = (function (_super) {\n    __extends(GraphicalLabel, _super);\n    function GraphicalLabel(label, textHeight, alignment, parent) {\n        if (parent === void 0) { parent = undefined; }\n        _super.call(this);\n        this.label = label;\n        this.boundingBox = new BoundingBox_1.BoundingBox(this, parent);\n        this.label.fontHeight = textHeight;\n        this.label.textAlignment = alignment;\n    }\n    Object.defineProperty(GraphicalLabel.prototype, \"Label\", {\n        get: function () {\n            return this.label;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicalLabel.prototype.setLabelPositionAndShapeBorders = function () {\n        if (this.Label.text.trim() === \"\") {\n            return;\n        }\n        var labelMarginBorderFactor = EngravingRules_1.EngravingRules.Rules.LabelMarginBorderFactor;\n        var widthToHeightRatio = MusicSheetCalculator_1.MusicSheetCalculator.TextMeasurer.computeTextWidthToHeightRatio(this.Label.text, this.Label.font, this.Label.fontStyle);\n        var height = this.Label.fontHeight;\n        var width = height * widthToHeightRatio;\n        var psi = this.PositionAndShape;\n        switch (this.Label.textAlignment) {\n            case TextAlignment_1.TextAlignment.CenterBottom:\n                psi.BorderTop = -height;\n                psi.BorderLeft = -width / 2;\n                psi.BorderBottom = 0;\n                psi.BorderRight = width / 2;\n                break;\n            case TextAlignment_1.TextAlignment.CenterCenter:\n                psi.BorderTop = -height / 2;\n                psi.BorderLeft = -width / 2;\n                psi.BorderBottom = height / 2;\n                psi.BorderRight = width / 2;\n                break;\n            case TextAlignment_1.TextAlignment.CenterTop:\n                psi.BorderTop = 0;\n                psi.BorderLeft = -width / 2;\n                psi.BorderBottom = height;\n                psi.BorderRight = width / 2;\n                break;\n            case TextAlignment_1.TextAlignment.LeftBottom:\n                psi.BorderTop = -height;\n                psi.BorderLeft = 0;\n                psi.BorderBottom = 0;\n                psi.BorderRight = width;\n                break;\n            case TextAlignment_1.TextAlignment.LeftCenter:\n                psi.BorderTop = -height / 2;\n                psi.BorderLeft = 0;\n                psi.BorderBottom = height / 2;\n                psi.BorderRight = width;\n                break;\n            case TextAlignment_1.TextAlignment.LeftTop:\n                psi.BorderTop = 0;\n                psi.BorderLeft = 0;\n                psi.BorderBottom = height;\n                psi.BorderRight = width;\n                break;\n            case TextAlignment_1.TextAlignment.RightBottom:\n                psi.BorderTop = -height;\n                psi.BorderLeft = -width;\n                psi.BorderBottom = 0;\n                psi.BorderRight = 0;\n                break;\n            case TextAlignment_1.TextAlignment.RightCenter:\n                psi.BorderTop = -height / 2;\n                psi.BorderLeft = -width;\n                psi.BorderBottom = height / 2;\n                psi.BorderRight = 0;\n                break;\n            case TextAlignment_1.TextAlignment.RightTop:\n                psi.BorderTop = 0;\n                psi.BorderLeft = -width;\n                psi.BorderBottom = height;\n                psi.BorderRight = 0;\n                break;\n            default:\n        }\n        psi.BorderMarginTop = psi.BorderTop - height * labelMarginBorderFactor;\n        psi.BorderMarginLeft = psi.BorderLeft - height * labelMarginBorderFactor;\n        psi.BorderMarginBottom = psi.BorderBottom + height * labelMarginBorderFactor;\n        psi.BorderMarginRight = psi.BorderRight + height * labelMarginBorderFactor;\n    };\n    return GraphicalLabel;\n}(Clickable_1.Clickable));\nexports.GraphicalLabel = GraphicalLabel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalLabel.js\n ** module id = 34\n ** module chunks = 0\n **/","\"use strict\";\n(function (TextAlignment) {\n    TextAlignment[TextAlignment[\"LeftTop\"] = 0] = \"LeftTop\";\n    TextAlignment[TextAlignment[\"LeftCenter\"] = 1] = \"LeftCenter\";\n    TextAlignment[TextAlignment[\"LeftBottom\"] = 2] = \"LeftBottom\";\n    TextAlignment[TextAlignment[\"CenterTop\"] = 3] = \"CenterTop\";\n    TextAlignment[TextAlignment[\"CenterCenter\"] = 4] = \"CenterCenter\";\n    TextAlignment[TextAlignment[\"CenterBottom\"] = 5] = \"CenterBottom\";\n    TextAlignment[TextAlignment[\"RightTop\"] = 6] = \"RightTop\";\n    TextAlignment[TextAlignment[\"RightCenter\"] = 7] = \"RightCenter\";\n    TextAlignment[TextAlignment[\"RightBottom\"] = 8] = \"RightBottom\";\n})(exports.TextAlignment || (exports.TextAlignment = {}));\nvar TextAlignment = exports.TextAlignment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/Enums/TextAlignment.js\n ** module id = 35\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar Clickable = (function (_super) {\n    __extends(Clickable, _super);\n    function Clickable() {\n        _super.apply(this, arguments);\n    }\n    return Clickable;\n}(GraphicalObject_1.GraphicalObject));\nexports.Clickable = Clickable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/Clickable.js\n ** module id = 36\n ** module chunks = 0\n **/","\"use strict\";\nvar GraphicalMusicPage_1 = require(\"./GraphicalMusicPage\");\n//import {MusicSymbol} from \"./MusicSymbol\";\nvar logging_1 = require(\"../../Common/logging\");\nvar EngravingRules = (function () {\n    function EngravingRules() {\n        this.noteDistances = [1.0, 1.0, 1.3, 1.6, 2.0, 2.5, 3.0, 4.0];\n        this.noteDistancesScalingFactors = [1.0, 2.0, 4.0, 8.0, 16.0, 32.0, 64.0, 128.0];\n        this.durationDistanceDict = {};\n        this.durationScalingDistanceDict = {};\n        this.samplingUnit = EngravingRules.unit * 3;\n        this.sheetTitleHeight = 4.0;\n        this.sheetSubtitleHeight = 2.0;\n        this.sheetMinimumDistanceBetweenTitleAndSubtitle = 1.0;\n        this.sheetComposerHeight = 2.0;\n        this.sheetAuthorHeight = 2.0;\n        this.pagePlacementEnum = GraphicalMusicPage_1.PagePlacementEnum.Down;\n        this.pageHeight = 100001.0;\n        this.pageTopMargin = 5.0;\n        this.pageBottomMargin = 5.0;\n        this.pageLeftMargin = 5.0;\n        this.pageRightMargin = 5.0;\n        this.titleTopDistance = 9.0;\n        this.titleBottomDistance = 1.0;\n        this.staffDistance = 7.0;\n        this.betweenStaffDistance = 5.0;\n        this.staffHeight = 4.0;\n        this.betweenStaffLinesDistance = EngravingRules.unit;\n        this.systemDistance = 10.0;\n        this.systemLeftMargin = 0.0;\n        this.systemRightMargin = 0.0;\n        this.firstSystemMargin = 15.0;\n        this.systemLabelsRightMargin = 2.0;\n        this.systemComposerDistance = 2.0;\n        this.instrumentLabelTextHeight = 2;\n        this.minimumAllowedDistanceBetweenSystems = 3.0;\n        this.lastSystemMaxScalingFactor = 1.4;\n        this.beamWidth = EngravingRules.unit / 2.0;\n        this.beamSpaceWidth = EngravingRules.unit / 3.0;\n        this.beamForwardLength = 1.25 * EngravingRules.unit;\n        this.clefLeftMargin = 0.5;\n        this.clefRightMargin = 0.75;\n        this.betweenKeySymbolsDistance = 0.2;\n        this.keyRightMargin = 0.75;\n        this.rhythmRightMargin = 1.25;\n        this.inStaffClefScalingFactor = 0.8;\n        this.distanceBetweenNaturalAndSymbolWhenCancelling = 0.4;\n        this.noteHelperLinesOffset = 0.25;\n        this.measureLeftMargin = 0.7;\n        this.measureRightMargin = 0.0;\n        this.distanceBetweenLastInstructionAndRepetitionBarline = 1.0;\n        this.arpeggioDistance = 0.6;\n        this.staccatoShorteningFactor = 2;\n        this.idealStemLength = 3.0;\n        this.stemNoteHeadBorderYOffset = 0.2;\n        this.stemWidth = 0.13;\n        this.stemMargin = 0.2;\n        this.stemMinLength = 2.5;\n        this.stemMaxLength = 4.5;\n        this.beamSlopeMaxAngle = 10.0;\n        this.stemMinAllowedDistanceBetweenNoteHeadAndBeamLine = 1.0;\n        this.graceNoteScalingFactor = 0.6;\n        this.graceNoteXOffset = 0.2;\n        this.wedgeOpeningLength = 1.2;\n        this.wedgeMeasureEndOpeningLength = 0.75;\n        this.wedgeMeasureBeginOpeningLength = 0.75;\n        this.wedgePlacementAboveY = -1.5;\n        this.wedgePlacementBelowY = 1.5;\n        this.wedgeHorizontalMargin = 0.6;\n        this.wedgeVerticalMargin = 0.5;\n        this.distanceOffsetBetweenTwoHorizontallyCrossedWedges = 0.3;\n        this.wedgeMinLength = 2.0;\n        this.distanceBetweenAdjacentDynamics = 0.75;\n        this.tempoChangeMeasureValitidy = 4;\n        this.tempoContinousFactor = 0.7;\n        this.staccatoScalingFactor = 0.8;\n        this.betweenDotsDistance = 0.8;\n        this.ornamentAccidentalScalingFactor = 0.65;\n        this.chordSymbolTextHeight = 2.0;\n        this.fingeringLabelFontHeight = 1.7;\n        this.measureNumberLabelHeight = 1.5 * EngravingRules.unit;\n        this.measureNumberLabelOffset = 2;\n        this.tupletNumberLabelHeight = 1.5 * EngravingRules.unit;\n        this.tupletNumberYOffset = 0.5;\n        this.labelMarginBorderFactor = 0.1;\n        this.tupletVerticalLineLength = 0.5;\n        this.bezierCurveStepSize = 1000;\n        this.calculateCurveParametersArrays();\n        this.tieGhostObjectWidth = 0.75;\n        this.tieYPositionOffsetFactor = 0.3;\n        this.minimumNeededXspaceForTieGhostObject = 1.0;\n        this.tieHeightMinimum = 0.28;\n        this.tieHeightMaximum = 1.2;\n        this.tieHeightInterpolationK = 0.0288;\n        this.tieHeightInterpolationD = 0.136;\n        this.slurNoteHeadYOffset = 0.5;\n        this.slurStemXOffset = 0.3;\n        this.slurSlopeMaxAngle = 15.0;\n        this.slurTangentMinAngle = 30.0;\n        this.slurTangentMaxAngle = 80.0;\n        this.slursStartingAtSameStaffEntryYOffset = 0.8;\n        this.repetitionEndingLabelHeight = 2.0;\n        this.repetitionEndingLabelXOffset = 0.5;\n        this.repetitionEndingLabelYOffset = 0.3;\n        this.repetitionEndingLineYLowerOffset = 0.5;\n        this.repetitionEndingLineYUpperOffset = 0.3;\n        this.lyricsHeight = 2.0;\n        this.verticalBetweenLyricsDistance = 0.5;\n        this.betweenSyllabelMaximumDistance = 10.0;\n        this.minimumDistanceBetweenDashes = 5.0;\n        this.instantaniousTempoTextHeight = 2.3;\n        this.continuousDynamicTextHeight = 2.3;\n        this.moodTextHeight = 2.3;\n        this.unknownTextHeight = 2.0;\n        this.continuousTempoTextHeight = 2.3;\n        this.staffLineWidth = 0.12;\n        this.ledgerLineWidth = 0.12;\n        this.wedgeLineWidth = 0.12;\n        this.tupletLineWidth = 0.12;\n        this.lyricUnderscoreLineWidth = 0.12;\n        this.systemThinLineWidth = 0.12;\n        this.systemBoldLineWidth = EngravingRules.unit / 2.0;\n        this.systemRepetitionEndingLineWidth = 0.12;\n        this.systemDotWidth = EngravingRules.unit / 5.0;\n        this.distanceBetweenVerticalSystemLines = 0.35;\n        this.distanceBetweenDotAndLine = 0.7;\n        this.octaveShiftLineWidth = 0.12;\n        this.octaveShiftVerticalLineLength = EngravingRules.unit;\n        this.graceLineWidth = this.staffLineWidth * this.GraceNoteScalingFactor;\n        this.minimumStaffLineDistance = 1.0;\n        this.minimumCrossedBeamDifferenceMargin = 0.0001;\n        this.displacedNoteMargin = 0.1;\n        this.minNoteDistance = 2.0;\n        this.subMeasureXSpacingThreshold = 35;\n        this.measureDynamicsMaxScalingFactor = 2.5;\n        this.populateDictionaries();\n        try {\n            this.maxInstructionsConstValue = this.ClefLeftMargin + this.ClefRightMargin + this.KeyRightMargin + this.RhythmRightMargin + 11;\n        }\n        catch (ex) {\n            logging_1.Logging.log(\"EngravingRules()\", ex);\n        }\n    }\n    Object.defineProperty(EngravingRules, \"Rules\", {\n        get: function () {\n            return EngravingRules.rules !== undefined ? EngravingRules.rules : (EngravingRules.rules = new EngravingRules());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SamplingUnit\", {\n        get: function () {\n            return this.samplingUnit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SheetTitleHeight\", {\n        get: function () {\n            return this.sheetTitleHeight;\n        },\n        set: function (value) {\n            this.sheetTitleHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SheetSubtitleHeight\", {\n        get: function () {\n            return this.sheetSubtitleHeight;\n        },\n        set: function (value) {\n            this.sheetSubtitleHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SheetMinimumDistanceBetweenTitleAndSubtitle\", {\n        get: function () {\n            return this.sheetMinimumDistanceBetweenTitleAndSubtitle;\n        },\n        set: function (value) {\n            this.sheetMinimumDistanceBetweenTitleAndSubtitle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SheetComposerHeight\", {\n        get: function () {\n            return this.sheetComposerHeight;\n        },\n        set: function (value) {\n            this.sheetComposerHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SheetAuthorHeight\", {\n        get: function () {\n            return this.sheetAuthorHeight;\n        },\n        set: function (value) {\n            this.sheetAuthorHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"PagePlacement\", {\n        get: function () {\n            return this.pagePlacementEnum;\n        },\n        set: function (value) {\n            this.pagePlacementEnum = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"PageHeight\", {\n        get: function () {\n            return this.pageHeight;\n        },\n        set: function (value) {\n            this.pageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"PageTopMargin\", {\n        get: function () {\n            return this.pageTopMargin;\n        },\n        set: function (value) {\n            this.pageTopMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"PageBottomMargin\", {\n        get: function () {\n            return this.pageBottomMargin;\n        },\n        set: function (value) {\n            this.pageBottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"PageLeftMargin\", {\n        get: function () {\n            return this.pageLeftMargin;\n        },\n        set: function (value) {\n            this.pageLeftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"PageRightMargin\", {\n        get: function () {\n            return this.pageRightMargin;\n        },\n        set: function (value) {\n            this.pageRightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TitleTopDistance\", {\n        get: function () {\n            return this.titleTopDistance;\n        },\n        set: function (value) {\n            this.titleTopDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TitleBottomDistance\", {\n        get: function () {\n            return this.titleBottomDistance;\n        },\n        set: function (value) {\n            this.titleBottomDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemComposerDistance\", {\n        get: function () {\n            return this.systemComposerDistance;\n        },\n        set: function (value) {\n            this.systemComposerDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"InstrumentLabelTextHeight\", {\n        get: function () {\n            return this.instrumentLabelTextHeight;\n        },\n        set: function (value) {\n            this.instrumentLabelTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemDistance\", {\n        get: function () {\n            return this.systemDistance;\n        },\n        set: function (value) {\n            this.systemDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemLeftMargin\", {\n        get: function () {\n            return this.systemLeftMargin;\n        },\n        set: function (value) {\n            this.systemLeftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemRightMargin\", {\n        get: function () {\n            return this.systemRightMargin;\n        },\n        set: function (value) {\n            this.systemRightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"FirstSystemMargin\", {\n        get: function () {\n            return this.firstSystemMargin;\n        },\n        set: function (value) {\n            this.firstSystemMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemLabelsRightMargin\", {\n        get: function () {\n            return this.systemLabelsRightMargin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MinimumAllowedDistanceBetweenSystems\", {\n        get: function () {\n            return this.minimumAllowedDistanceBetweenSystems;\n        },\n        set: function (value) {\n            this.minimumAllowedDistanceBetweenSystems = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"LastSystemMaxScalingFactor\", {\n        get: function () {\n            return this.lastSystemMaxScalingFactor;\n        },\n        set: function (value) {\n            this.lastSystemMaxScalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StaffDistance\", {\n        get: function () {\n            return this.staffDistance;\n        },\n        set: function (value) {\n            this.staffDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BetweenStaffDistance\", {\n        get: function () {\n            return this.betweenStaffDistance;\n        },\n        set: function (value) {\n            this.betweenStaffDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StaffHeight\", {\n        get: function () {\n            return this.staffHeight;\n        },\n        set: function (value) {\n            this.staffHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BetweenStaffLinesDistance\", {\n        get: function () {\n            return this.betweenStaffLinesDistance;\n        },\n        set: function (value) {\n            this.betweenStaffLinesDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BeamWidth\", {\n        get: function () {\n            return this.beamWidth;\n        },\n        set: function (value) {\n            this.beamWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BeamSpaceWidth\", {\n        get: function () {\n            return this.beamSpaceWidth;\n        },\n        set: function (value) {\n            this.beamSpaceWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BeamForwardLength\", {\n        get: function () {\n            return this.beamForwardLength;\n        },\n        set: function (value) {\n            this.beamForwardLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BetweenKeySymbolsDistance\", {\n        get: function () {\n            return this.betweenKeySymbolsDistance;\n        },\n        set: function (value) {\n            this.betweenKeySymbolsDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"ClefLeftMargin\", {\n        get: function () {\n            return this.clefLeftMargin;\n        },\n        set: function (value) {\n            this.clefLeftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"ClefRightMargin\", {\n        get: function () {\n            return this.clefRightMargin;\n        },\n        set: function (value) {\n            this.clefRightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"KeyRightMargin\", {\n        get: function () {\n            return this.keyRightMargin;\n        },\n        set: function (value) {\n            this.keyRightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"RhythmRightMargin\", {\n        get: function () {\n            return this.rhythmRightMargin;\n        },\n        set: function (value) {\n            this.rhythmRightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"InStaffClefScalingFactor\", {\n        get: function () {\n            return this.inStaffClefScalingFactor;\n        },\n        set: function (value) {\n            this.inStaffClefScalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DistanceBetweenNaturalAndSymbolWhenCancelling\", {\n        get: function () {\n            return this.distanceBetweenNaturalAndSymbolWhenCancelling;\n        },\n        set: function (value) {\n            this.distanceBetweenNaturalAndSymbolWhenCancelling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"NoteHelperLinesOffset\", {\n        get: function () {\n            return this.noteHelperLinesOffset;\n        },\n        set: function (value) {\n            this.noteHelperLinesOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MeasureLeftMargin\", {\n        get: function () {\n            return this.measureLeftMargin;\n        },\n        set: function (value) {\n            this.measureLeftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MeasureRightMargin\", {\n        get: function () {\n            return this.measureRightMargin;\n        },\n        set: function (value) {\n            this.measureRightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DistanceBetweenLastInstructionAndRepetitionBarline\", {\n        get: function () {\n            return this.distanceBetweenLastInstructionAndRepetitionBarline;\n        },\n        set: function (value) {\n            this.distanceBetweenLastInstructionAndRepetitionBarline = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"ArpeggioDistance\", {\n        get: function () {\n            return this.arpeggioDistance;\n        },\n        set: function (value) {\n            this.arpeggioDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StaccatoShorteningFactor\", {\n        get: function () {\n            return this.staccatoShorteningFactor;\n        },\n        set: function (value) {\n            this.staccatoShorteningFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"IdealStemLength\", {\n        get: function () {\n            return this.idealStemLength;\n        },\n        set: function (value) {\n            this.idealStemLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StemNoteHeadBorderYOffset\", {\n        get: function () {\n            return this.stemNoteHeadBorderYOffset;\n        },\n        set: function (value) {\n            this.stemNoteHeadBorderYOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StemWidth\", {\n        get: function () {\n            return this.stemWidth;\n        },\n        set: function (value) {\n            this.stemWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StemMargin\", {\n        get: function () {\n            return this.stemMargin;\n        },\n        set: function (value) {\n            this.stemMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StemMinLength\", {\n        get: function () {\n            return this.stemMinLength;\n        },\n        set: function (value) {\n            this.stemMinLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StemMaxLength\", {\n        get: function () {\n            return this.stemMaxLength;\n        },\n        set: function (value) {\n            this.stemMaxLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BeamSlopeMaxAngle\", {\n        get: function () {\n            return this.beamSlopeMaxAngle;\n        },\n        set: function (value) {\n            this.beamSlopeMaxAngle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StemMinAllowedDistanceBetweenNoteHeadAndBeamLine\", {\n        get: function () {\n            return this.stemMinAllowedDistanceBetweenNoteHeadAndBeamLine;\n        },\n        set: function (value) {\n            this.stemMinAllowedDistanceBetweenNoteHeadAndBeamLine = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"GraceNoteScalingFactor\", {\n        get: function () {\n            return this.graceNoteScalingFactor;\n        },\n        set: function (value) {\n            this.graceNoteScalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"GraceNoteXOffset\", {\n        get: function () {\n            return this.graceNoteXOffset;\n        },\n        set: function (value) {\n            this.graceNoteXOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeOpeningLength\", {\n        get: function () {\n            return this.wedgeOpeningLength;\n        },\n        set: function (value) {\n            this.wedgeOpeningLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeMeasureEndOpeningLength\", {\n        get: function () {\n            return this.wedgeMeasureEndOpeningLength;\n        },\n        set: function (value) {\n            this.wedgeMeasureEndOpeningLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeMeasureBeginOpeningLength\", {\n        get: function () {\n            return this.wedgeMeasureBeginOpeningLength;\n        },\n        set: function (value) {\n            this.wedgeMeasureBeginOpeningLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgePlacementAboveY\", {\n        get: function () {\n            return this.wedgePlacementAboveY;\n        },\n        set: function (value) {\n            this.wedgePlacementAboveY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgePlacementBelowY\", {\n        get: function () {\n            return this.wedgePlacementBelowY;\n        },\n        set: function (value) {\n            this.wedgePlacementBelowY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeHorizontalMargin\", {\n        get: function () {\n            return this.wedgeHorizontalMargin;\n        },\n        set: function (value) {\n            this.wedgeHorizontalMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeVerticalMargin\", {\n        get: function () {\n            return this.wedgeVerticalMargin;\n        },\n        set: function (value) {\n            this.wedgeVerticalMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DistanceOffsetBetweenTwoHorizontallyCrossedWedges\", {\n        get: function () {\n            return this.distanceOffsetBetweenTwoHorizontallyCrossedWedges;\n        },\n        set: function (value) {\n            this.distanceOffsetBetweenTwoHorizontallyCrossedWedges = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeMinLength\", {\n        get: function () {\n            return this.wedgeMinLength;\n        },\n        set: function (value) {\n            this.wedgeMinLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DistanceBetweenAdjacentDynamics\", {\n        get: function () {\n            return this.distanceBetweenAdjacentDynamics;\n        },\n        set: function (value) {\n            this.distanceBetweenAdjacentDynamics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TempoChangeMeasureValitidy\", {\n        get: function () {\n            return this.tempoChangeMeasureValitidy;\n        },\n        set: function (value) {\n            this.tempoChangeMeasureValitidy = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TempoContinousFactor\", {\n        get: function () {\n            return this.tempoContinousFactor;\n        },\n        set: function (value) {\n            this.tempoContinousFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StaccatoScalingFactor\", {\n        get: function () {\n            return this.staccatoScalingFactor;\n        },\n        set: function (value) {\n            this.staccatoScalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BetweenDotsDistance\", {\n        get: function () {\n            return this.betweenDotsDistance;\n        },\n        set: function (value) {\n            this.betweenDotsDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"OrnamentAccidentalScalingFactor\", {\n        get: function () {\n            return this.ornamentAccidentalScalingFactor;\n        },\n        set: function (value) {\n            this.ornamentAccidentalScalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"ChordSymbolTextHeight\", {\n        get: function () {\n            return this.chordSymbolTextHeight;\n        },\n        set: function (value) {\n            this.chordSymbolTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"FingeringLabelFontHeight\", {\n        get: function () {\n            return this.fingeringLabelFontHeight;\n        },\n        set: function (value) {\n            this.fingeringLabelFontHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MeasureNumberLabelHeight\", {\n        get: function () {\n            return this.measureNumberLabelHeight;\n        },\n        set: function (value) {\n            this.measureNumberLabelHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MeasureNumberLabelOffset\", {\n        get: function () {\n            return this.measureNumberLabelOffset;\n        },\n        set: function (value) {\n            this.measureNumberLabelOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TupletNumberLabelHeight\", {\n        get: function () {\n            return this.tupletNumberLabelHeight;\n        },\n        set: function (value) {\n            this.tupletNumberLabelHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TupletNumberYOffset\", {\n        get: function () {\n            return this.tupletNumberYOffset;\n        },\n        set: function (value) {\n            this.tupletNumberYOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"LabelMarginBorderFactor\", {\n        get: function () {\n            return this.labelMarginBorderFactor;\n        },\n        set: function (value) {\n            this.labelMarginBorderFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TupletVerticalLineLength\", {\n        get: function () {\n            return this.tupletVerticalLineLength;\n        },\n        set: function (value) {\n            this.tupletVerticalLineLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"RepetitionEndingLabelHeight\", {\n        get: function () {\n            return this.repetitionEndingLabelHeight;\n        },\n        set: function (value) {\n            this.repetitionEndingLabelHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"RepetitionEndingLabelXOffset\", {\n        get: function () {\n            return this.repetitionEndingLabelXOffset;\n        },\n        set: function (value) {\n            this.repetitionEndingLabelXOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"RepetitionEndingLabelYOffset\", {\n        get: function () {\n            return this.repetitionEndingLabelYOffset;\n        },\n        set: function (value) {\n            this.repetitionEndingLabelYOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"RepetitionEndingLineYLowerOffset\", {\n        get: function () {\n            return this.repetitionEndingLineYLowerOffset;\n        },\n        set: function (value) {\n            this.repetitionEndingLineYLowerOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"RepetitionEndingLineYUpperOffset\", {\n        get: function () {\n            return this.repetitionEndingLineYUpperOffset;\n        },\n        set: function (value) {\n            this.repetitionEndingLineYUpperOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"LyricsHeight\", {\n        get: function () {\n            return this.lyricsHeight;\n        },\n        set: function (value) {\n            this.lyricsHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"VerticalBetweenLyricsDistance\", {\n        get: function () {\n            return this.verticalBetweenLyricsDistance;\n        },\n        set: function (value) {\n            this.verticalBetweenLyricsDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BetweenSyllabelMaximumDistance\", {\n        get: function () {\n            return this.betweenSyllabelMaximumDistance;\n        },\n        set: function (value) {\n            this.betweenSyllabelMaximumDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MinimumDistanceBetweenDashes\", {\n        get: function () {\n            return this.minimumDistanceBetweenDashes;\n        },\n        set: function (value) {\n            this.minimumDistanceBetweenDashes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BezierCurveStepSize\", {\n        get: function () {\n            return this.bezierCurveStepSize;\n        },\n        set: function (value) {\n            this.bezierCurveStepSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TPow3\", {\n        get: function () {\n            return this.tPower3;\n        },\n        set: function (value) {\n            this.tPower3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"OneMinusTPow3\", {\n        get: function () {\n            return this.oneMinusTPower3;\n        },\n        set: function (value) {\n            this.oneMinusTPower3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BezierFactorOne\", {\n        get: function () {\n            return this.factorOne;\n        },\n        set: function (value) {\n            this.factorOne = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"BezierFactorTwo\", {\n        get: function () {\n            return this.factorTwo;\n        },\n        set: function (value) {\n            this.factorTwo = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TieGhostObjectWidth\", {\n        get: function () {\n            return this.tieGhostObjectWidth;\n        },\n        set: function (value) {\n            this.tieGhostObjectWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TieYPositionOffsetFactor\", {\n        get: function () {\n            return this.tieYPositionOffsetFactor;\n        },\n        set: function (value) {\n            this.tieYPositionOffsetFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MinimumNeededXspaceForTieGhostObject\", {\n        get: function () {\n            return this.minimumNeededXspaceForTieGhostObject;\n        },\n        set: function (value) {\n            this.minimumNeededXspaceForTieGhostObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TieHeightMinimum\", {\n        get: function () {\n            return this.tieHeightMinimum;\n        },\n        set: function (value) {\n            this.tieHeightMinimum = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TieHeightMaximum\", {\n        get: function () {\n            return this.tieHeightMaximum;\n        },\n        set: function (value) {\n            this.tieHeightMaximum = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TieHeightInterpolationK\", {\n        get: function () {\n            return this.tieHeightInterpolationK;\n        },\n        set: function (value) {\n            this.tieHeightInterpolationK = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TieHeightInterpolationD\", {\n        get: function () {\n            return this.tieHeightInterpolationD;\n        },\n        set: function (value) {\n            this.tieHeightInterpolationD = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SlurNoteHeadYOffset\", {\n        get: function () {\n            return this.slurNoteHeadYOffset;\n        },\n        set: function (value) {\n            this.slurNoteHeadYOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SlurStemXOffset\", {\n        get: function () {\n            return this.slurStemXOffset;\n        },\n        set: function (value) {\n            this.slurStemXOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SlurSlopeMaxAngle\", {\n        get: function () {\n            return this.slurSlopeMaxAngle;\n        },\n        set: function (value) {\n            this.slurSlopeMaxAngle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SlurTangentMinAngle\", {\n        get: function () {\n            return this.slurTangentMinAngle;\n        },\n        set: function (value) {\n            this.slurTangentMinAngle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SlurTangentMaxAngle\", {\n        get: function () {\n            return this.slurTangentMaxAngle;\n        },\n        set: function (value) {\n            this.slurTangentMaxAngle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SlursStartingAtSameStaffEntryYOffset\", {\n        get: function () {\n            return this.slursStartingAtSameStaffEntryYOffset;\n        },\n        set: function (value) {\n            this.slursStartingAtSameStaffEntryYOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"InstantaniousTempoTextHeight\", {\n        get: function () {\n            return this.instantaniousTempoTextHeight;\n        },\n        set: function (value) {\n            this.instantaniousTempoTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"ContinuousDynamicTextHeight\", {\n        get: function () {\n            return this.continuousDynamicTextHeight;\n        },\n        set: function (value) {\n            this.continuousDynamicTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MoodTextHeight\", {\n        get: function () {\n            return this.moodTextHeight;\n        },\n        set: function (value) {\n            this.moodTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"ContinuousTempoTextHeight\", {\n        get: function () {\n            return this.continuousTempoTextHeight;\n        },\n        set: function (value) {\n            this.continuousTempoTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"UnknownTextHeight\", {\n        get: function () {\n            return this.unknownTextHeight;\n        },\n        set: function (value) {\n            this.unknownTextHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"StaffLineWidth\", {\n        get: function () {\n            return this.staffLineWidth;\n        },\n        set: function (value) {\n            this.staffLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"LedgerLineWidth\", {\n        get: function () {\n            return this.ledgerLineWidth;\n        },\n        set: function (value) {\n            this.ledgerLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"WedgeLineWidth\", {\n        get: function () {\n            return this.wedgeLineWidth;\n        },\n        set: function (value) {\n            this.wedgeLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"TupletLineWidth\", {\n        get: function () {\n            return this.tupletLineWidth;\n        },\n        set: function (value) {\n            this.tupletLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"LyricUnderscoreLineWidth\", {\n        get: function () {\n            return this.lyricUnderscoreLineWidth;\n        },\n        set: function (value) {\n            this.lyricUnderscoreLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemThinLineWidth\", {\n        get: function () {\n            return this.systemThinLineWidth;\n        },\n        set: function (value) {\n            this.systemThinLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemBoldLineWidth\", {\n        get: function () {\n            return this.systemBoldLineWidth;\n        },\n        set: function (value) {\n            this.systemBoldLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemRepetitionEndingLineWidth\", {\n        get: function () {\n            return this.systemRepetitionEndingLineWidth;\n        },\n        set: function (value) {\n            this.systemRepetitionEndingLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SystemDotWidth\", {\n        get: function () {\n            return this.systemDotWidth;\n        },\n        set: function (value) {\n            this.systemDotWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DistanceBetweenVerticalSystemLines\", {\n        get: function () {\n            return this.distanceBetweenVerticalSystemLines;\n        },\n        set: function (value) {\n            this.distanceBetweenVerticalSystemLines = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DistanceBetweenDotAndLine\", {\n        get: function () {\n            return this.distanceBetweenDotAndLine;\n        },\n        set: function (value) {\n            this.distanceBetweenDotAndLine = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"OctaveShiftLineWidth\", {\n        get: function () {\n            return this.octaveShiftLineWidth;\n        },\n        set: function (value) {\n            this.octaveShiftLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"OctaveShiftVerticalLineLength\", {\n        get: function () {\n            return this.octaveShiftVerticalLineLength;\n        },\n        set: function (value) {\n            this.octaveShiftVerticalLineLength = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"GraceLineWidth\", {\n        get: function () {\n            return this.graceLineWidth;\n        },\n        set: function (value) {\n            this.graceLineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MinimumStaffLineDistance\", {\n        get: function () {\n            return this.minimumStaffLineDistance;\n        },\n        set: function (value) {\n            this.minimumStaffLineDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MinimumCrossedBeamDifferenceMargin\", {\n        get: function () {\n            return this.minimumCrossedBeamDifferenceMargin;\n        },\n        set: function (value) {\n            this.minimumCrossedBeamDifferenceMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DisplacedNoteMargin\", {\n        get: function () {\n            return this.displacedNoteMargin;\n        },\n        set: function (value) {\n            this.displacedNoteMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MinNoteDistance\", {\n        get: function () {\n            return this.minNoteDistance;\n        },\n        set: function (value) {\n            this.minNoteDistance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"SubMeasureXSpacingThreshold\", {\n        get: function () {\n            return this.subMeasureXSpacingThreshold;\n        },\n        set: function (value) {\n            this.subMeasureXSpacingThreshold = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MeasureDynamicsMaxScalingFactor\", {\n        get: function () {\n            return this.measureDynamicsMaxScalingFactor;\n        },\n        set: function (value) {\n            this.measureDynamicsMaxScalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"MaxInstructionsConstValue\", {\n        get: function () {\n            return this.maxInstructionsConstValue;\n        },\n        set: function (value) {\n            this.maxInstructionsConstValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"NoteDistances\", {\n        get: function () {\n            return this.noteDistances;\n        },\n        set: function (value) {\n            this.noteDistances = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"NoteDistancesScalingFactors\", {\n        get: function () {\n            return this.noteDistancesScalingFactors;\n        },\n        set: function (value) {\n            this.noteDistancesScalingFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DurationDistanceDict\", {\n        get: function () {\n            return this.durationDistanceDict;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EngravingRules.prototype, \"DurationScalingDistanceDict\", {\n        get: function () {\n            return this.durationScalingDistanceDict;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EngravingRules.prototype.populateDictionaries = function () {\n        for (var i = 0; i < this.noteDistances.length; i++) {\n            switch (i) {\n                case 0:\n                    this.durationDistanceDict[0.015625] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[0.015625] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 1:\n                    this.durationDistanceDict[0.03125] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[0.03125] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 2:\n                    this.durationDistanceDict[0.0625] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[0.0625] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 3:\n                    this.durationDistanceDict[0.125] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[0.125] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 4:\n                    this.durationDistanceDict[0.25] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[0.25] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 5:\n                    this.durationDistanceDict[0.5] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[0.5] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 6:\n                    this.durationDistanceDict[1.0] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[1.0] = this.noteDistancesScalingFactors[i];\n                    break;\n                case 7:\n                    this.durationDistanceDict[2.0] = this.noteDistances[i];\n                    this.durationScalingDistanceDict[2.0] = this.noteDistancesScalingFactors[i];\n                    break;\n                default:\n            }\n        }\n    };\n    EngravingRules.prototype.calculateCurveParametersArrays = function () {\n        this.tPower3 = new Array(this.bezierCurveStepSize);\n        this.oneMinusTPower3 = new Array(this.bezierCurveStepSize);\n        this.factorOne = new Array(this.bezierCurveStepSize);\n        this.factorTwo = new Array(this.bezierCurveStepSize);\n        for (var i = 0; i < this.bezierCurveStepSize; i++) {\n            var t = i / this.bezierCurveStepSize;\n            this.tPower3[i] = Math.pow(t, 3);\n            this.oneMinusTPower3[i] = Math.pow((1 - t), 3);\n            this.factorOne[i] = 3 * Math.pow((1 - t), 2) * t;\n            this.factorTwo[i] = 3 * (1 - t) * Math.pow(t, 2);\n        }\n    };\n    EngravingRules.unit = 1.0;\n    return EngravingRules;\n}());\nexports.EngravingRules = EngravingRules;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/EngravingRules.js\n ** module id = 37\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Voice_1 = require(\"./Voice\");\nvar LinkedVoice = (function (_super) {\n    __extends(LinkedVoice, _super);\n    function LinkedVoice(parent, voiceId, master) {\n        _super.call(this, parent, voiceId);\n        this.master = master;\n    }\n    Object.defineProperty(LinkedVoice.prototype, \"Master\", {\n        get: function () {\n            return this.master;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LinkedVoice;\n}(Voice_1.Voice));\nexports.LinkedVoice = LinkedVoice;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/LinkedVoice.js\n ** module id = 38\n ** module chunks = 0\n **/","\"use strict\";\nvar Voice = (function () {\n    function Voice(parent, voiceId) {\n        this.voiceEntries = [];\n        this.volume = 1;\n        this.parent = parent;\n        this.visible = true;\n        this.audible = true;\n        this.following = true;\n        this.voiceId = voiceId;\n    }\n    Object.defineProperty(Voice.prototype, \"VoiceEntries\", {\n        get: function () {\n            return this.voiceEntries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Voice.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Voice.prototype, \"Visible\", {\n        get: function () {\n            return this.visible;\n        },\n        set: function (value) {\n            this.visible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Voice.prototype, \"Audible\", {\n        get: function () {\n            return this.audible;\n        },\n        set: function (value) {\n            this.audible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Voice.prototype, \"Following\", {\n        get: function () {\n            return this.following;\n        },\n        set: function (value) {\n            this.following = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Voice.prototype, \"VoiceId\", {\n        get: function () {\n            return this.voiceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Voice.prototype, \"Volume\", {\n        get: function () {\n            return this.volume;\n        },\n        set: function (value) {\n            this.volume = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Voice;\n}());\nexports.Voice = Voice;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Voice.js\n ** module id = 39\n ** module chunks = 0\n **/","\"use strict\";\nvar OctaveShiftParams = (function () {\n    function OctaveShiftParams(openOctaveShift, absoluteStartTimestamp, absoluteEndTimestamp) {\n        this.getOpenOctaveShift = openOctaveShift;\n        this.getAbsoluteStartTimestamp = absoluteStartTimestamp;\n        this.getAbsoluteEndTimestamp = absoluteEndTimestamp;\n    }\n    return OctaveShiftParams;\n}());\nexports.OctaveShiftParams = OctaveShiftParams;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/OctaveShiftParams.js\n ** module id = 40\n ** module chunks = 0\n **/","\"use strict\";\nvar pitch_1 = require(\"../../Common/DataObjects/pitch\");\nvar KeyInstruction_1 = require(\"../VoiceData/Instructions/KeyInstruction\");\nvar Dictionary_1 = require(\"typescript-collections/dist/lib/Dictionary\");\nvar AccidentalCalculator = (function () {\n    function AccidentalCalculator(symbolFactory) {\n        this.keySignatureNoteAlterationsDict = new Dictionary_1.default();\n        this.currentAlterationsComparedToKeyInstructionDict = [];\n        this.currentInMeasureNoteAlterationsDict = new Dictionary_1.default();\n        this.symbolFactory = symbolFactory;\n    }\n    Object.defineProperty(AccidentalCalculator.prototype, \"ActiveKeyInstruction\", {\n        get: function () {\n            return this.activeKeyInstruction;\n        },\n        set: function (value) {\n            this.activeKeyInstruction = value;\n            this.reactOnKeyInstructionChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AccidentalCalculator.prototype.doCalculationsAtEndOfMeasure = function () {\n        this.currentInMeasureNoteAlterationsDict.clear();\n        for (var _i = 0, _a = this.keySignatureNoteAlterationsDict.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.currentInMeasureNoteAlterationsDict.setValue(key, this.keySignatureNoteAlterationsDict.getValue(key));\n        }\n    };\n    AccidentalCalculator.prototype.checkAccidental = function (graphicalNote, pitch, grace, graceScalingFactor) {\n        if (pitch === undefined) {\n            return;\n        }\n        var pitchKey = pitch.FundamentalNote + pitch.Octave * 12;\n        var pitchKeyGivenInMeasureDict = this.currentInMeasureNoteAlterationsDict.containsKey(pitchKey);\n        if ((pitchKeyGivenInMeasureDict && this.currentInMeasureNoteAlterationsDict.getValue(pitchKey) !== pitch.Accidental)\n            || (!pitchKeyGivenInMeasureDict && pitch.Accidental !== pitch_1.AccidentalEnum.NONE)) {\n            if (this.currentAlterationsComparedToKeyInstructionDict.indexOf(pitchKey) === -1) {\n                this.currentAlterationsComparedToKeyInstructionDict.push(pitchKey);\n            }\n            this.currentInMeasureNoteAlterationsDict.setValue(pitchKey, pitch.Accidental);\n            this.symbolFactory.addGraphicalAccidental(graphicalNote, pitch, grace, graceScalingFactor);\n        }\n        else if (this.currentAlterationsComparedToKeyInstructionDict.indexOf(pitchKey) !== -1\n            && ((pitchKeyGivenInMeasureDict && this.currentInMeasureNoteAlterationsDict.getValue(pitchKey) !== pitch.Accidental)\n                || (!pitchKeyGivenInMeasureDict && pitch.Accidental === pitch_1.AccidentalEnum.NONE))) {\n            delete this.currentAlterationsComparedToKeyInstructionDict[pitchKey];\n            this.currentInMeasureNoteAlterationsDict.setValue(pitchKey, pitch.Accidental);\n            this.symbolFactory.addGraphicalAccidental(graphicalNote, pitch, grace, graceScalingFactor);\n        }\n    };\n    AccidentalCalculator.prototype.reactOnKeyInstructionChange = function () {\n        var noteEnums = KeyInstruction_1.KeyInstruction.getNoteEnumList(this.activeKeyInstruction);\n        var keyAccidentalType;\n        if (this.activeKeyInstruction.Key > 0) {\n            keyAccidentalType = pitch_1.AccidentalEnum.SHARP;\n        }\n        else {\n            keyAccidentalType = pitch_1.AccidentalEnum.FLAT;\n        }\n        this.keySignatureNoteAlterationsDict.clear();\n        this.currentAlterationsComparedToKeyInstructionDict.length = 0;\n        for (var octave = -9; octave < 9; octave++) {\n            for (var i = 0; i < noteEnums.length; i++) {\n                this.keySignatureNoteAlterationsDict.setValue(noteEnums[i] + octave * 12, keyAccidentalType);\n            }\n        }\n        this.doCalculationsAtEndOfMeasure();\n    };\n    return AccidentalCalculator;\n}());\nexports.AccidentalCalculator = AccidentalCalculator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/AccidentalCalculator.js\n ** module id = 41\n ** module chunks = 0\n **/","\"use strict\";\nvar VexFlowMusicSystem_1 = require(\"./VexFlowMusicSystem\");\nvar VexFlowStaffLine_1 = require(\"./VexFlowStaffLine\");\nvar VexFlowMeasure_1 = require(\"./VexFlowMeasure\");\nvar VexFlowStaffEntry_1 = require(\"./VexFlowStaffEntry\");\nvar octaveShift_1 = require(\"../../VoiceData/Expressions/ContinuousExpressions/octaveShift\");\nvar GraphicalNote_1 = require(\"../GraphicalNote\");\nvar VexFlowGraphicalNote_1 = require(\"./VexFlowGraphicalNote\");\nvar VexFlowGraphicalSymbolFactory = (function () {\n    function VexFlowGraphicalSymbolFactory() {\n    }\n    /**\n     * Create a new music system for the given page.\n     * Currently only one vertically endless page exists where all systems are put to.\n     * @param page\n     * @param systemIndex\n     * @returns {VexFlowMusicSystem}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createMusicSystem = function (page, systemIndex) {\n        return new VexFlowMusicSystem_1.VexFlowMusicSystem(page, systemIndex);\n    };\n    /**\n     * Create a staffline object containing all staff measures belonging to a given system and staff.\n     * @param parentSystem\n     * @param parentStaff\n     * @returns {VexFlowStaffLine}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createStaffLine = function (parentSystem, parentStaff) {\n        return new VexFlowStaffLine_1.VexFlowStaffLine(parentSystem, parentStaff);\n    };\n    /**\n     * Construct an empty staffMeasure from the given source measure and staff.\n     * @param sourceMeasure\n     * @param staff\n     * @returns {VexFlowMeasure}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createStaffMeasure = function (sourceMeasure, staff) {\n        return new VexFlowMeasure_1.VexFlowMeasure(staff, undefined, sourceMeasure);\n    };\n    /**\n     * Create empty measure, which will be used to show key, rhythm changes at the end of the system.\n     * @param staffLine\n     * @returns {VexFlowMeasure}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createExtraStaffMeasure = function (staffLine) {\n        return new VexFlowMeasure_1.VexFlowMeasure(staffLine.ParentStaff, staffLine);\n    };\n    /**\n     * Create a staffEntry in the given measure for a given sourceStaffEntry.\n     * @param sourceStaffEntry\n     * @param measure\n     * @returns {VexFlowStaffEntry}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createStaffEntry = function (sourceStaffEntry, measure) {\n        return new VexFlowStaffEntry_1.VexFlowStaffEntry(measure, sourceStaffEntry, undefined);\n    };\n    /**\n     * Create an empty staffEntry which will be used for grace notes.\n     * it will be linked to the given staffEntryParent, which is a staffEntry for normal notes.\n     * Grace notes are always given before (rarely also after) normal notes.\n     * @param staffEntryParent\n     * @param measure\n     * @returns {VexFlowStaffEntry}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createGraceStaffEntry = function (staffEntryParent, measure) {\n        return new VexFlowStaffEntry_1.VexFlowStaffEntry(measure, undefined, staffEntryParent);\n    };\n    /**\n     * Create a Graphical Note for given note and clef and as part of graphicalStaffEntry.\n     * @param note\n     * @param numberOfDots  The number of dots the note has to increase its musical duration.\n     * @param graphicalStaffEntry\n     * @param activeClef    The currently active clef, needed for positioning the note vertically\n     * @param octaveShift   The currently active octave transposition enum, needed for positioning the note vertically\n     * @returns {GraphicalNote}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createNote = function (note, numberOfDots, graphicalStaffEntry, activeClef, octaveShift) {\n        if (octaveShift === void 0) { octaveShift = octaveShift_1.OctaveEnum.NONE; }\n        // Creates the note:\n        var graphicalNote = new VexFlowGraphicalNote_1.VexFlowGraphicalNote(note, graphicalStaffEntry, activeClef);\n        // Adds the note to the right (graphical) voice (mynotes)\n        var voiceID = note.ParentVoiceEntry.ParentVoice.VoiceId;\n        var mynotes = graphicalStaffEntry.graphicalNotes;\n        if (!(voiceID in mynotes)) {\n            mynotes[voiceID] = [];\n        }\n        mynotes[voiceID].push(graphicalNote);\n        return graphicalNote;\n    };\n    /**\n     * Create a Graphical Grace Note (smaller head, stem...) for given note and clef and as part of graphicalStaffEntry.\n     * @param note\n     * @param numberOfDots\n     * @param graphicalStaffEntry\n     * @param activeClef\n     * @param octaveShift\n     * @returns {GraphicalNote}\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createGraceNote = function (note, numberOfDots, graphicalStaffEntry, activeClef, octaveShift) {\n        if (octaveShift === void 0) { octaveShift = octaveShift_1.OctaveEnum.NONE; }\n        return new GraphicalNote_1.GraphicalNote(note, graphicalStaffEntry);\n    };\n    /**\n     * Sets a pitch which will be used for rendering the given graphical note (not changing the original pitch of the note!!!).\n     * Will be only called if the displayed accidental is different from the original (e.g. a C# with C# as key instruction)\n     * @param graphicalNote\n     * @param pitch The pitch which will be rendered.\n     * @param grace\n     * @param graceScalingFactor\n     */\n    VexFlowGraphicalSymbolFactory.prototype.addGraphicalAccidental = function (graphicalNote, pitch, grace, graceScalingFactor) {\n        // ToDo: set accidental here from pitch.Accidental\n        var note = graphicalNote;\n        note.setPitch(pitch);\n    };\n    /**\n     * Adds a Fermata symbol at the last note of the given tied Note.\n     * The last graphical note of this tied note is located at the given graphicalStaffEntry.\n     * A Fermata has to be located at the last tied note.\n     * @param tiedNote\n     * @param graphicalStaffEntry\n     */\n    VexFlowGraphicalSymbolFactory.prototype.addFermataAtTiedEndNote = function (tiedNote, graphicalStaffEntry) {\n        return;\n    };\n    /**\n     * Adds a technical instruction at the given staff entry.\n     * @param technicalInstruction\n     * @param graphicalStaffEntry\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createGraphicalTechnicalInstruction = function (technicalInstruction, graphicalStaffEntry) {\n        return;\n    };\n    /**\n     * Adds a clef change within a measure before the given staff entry.\n     * @param graphicalStaffEntry\n     * @param clefInstruction\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createInStaffClef = function (graphicalStaffEntry, clefInstruction) {\n        return;\n    };\n    /**\n     * Adds a chord symbol at the given staff entry\n     * @param sourceStaffEntry\n     * @param graphicalStaffEntry\n     * @param transposeHalftones\n     */\n    VexFlowGraphicalSymbolFactory.prototype.createChordSymbol = function (sourceStaffEntry, graphicalStaffEntry, transposeHalftones) {\n        return;\n    };\n    return VexFlowGraphicalSymbolFactory;\n}());\nexports.VexFlowGraphicalSymbolFactory = VexFlowGraphicalSymbolFactory;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowGraphicalSymbolFactory.js\n ** module id = 42\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MusicSystem_1 = require(\"../MusicSystem\");\nvar SystemLine_1 = require(\"../SystemLine\");\nvar VexFlowConverter_1 = require(\"./VexFlowConverter\");\n//import Vex = require(\"vexflow\");\nvar VexFlowMusicSystem = (function (_super) {\n    __extends(VexFlowMusicSystem, _super);\n    function VexFlowMusicSystem(parent, id) {\n        _super.call(this, parent, id);\n    }\n    /**\n     * This method creates all the graphical lines and dots needed to render a system line (e.g. bold-thin-dots..).\n     * @param xPosition\n     * @param lineWidth\n     * @param lineType\n     * @param linePosition indicates if the line belongs to start or end of measure\n     * @param musicSystem\n     * @param topMeasure\n     * @param bottomMeasure\n     */\n    VexFlowMusicSystem.prototype.createSystemLine = function (xPosition, lineWidth, lineType, linePosition, musicSystem, topMeasure, bottomMeasure) {\n        if (bottomMeasure === void 0) { bottomMeasure = undefined; }\n        // ToDo: create line in Vexflow\n        if (bottomMeasure) {\n            bottomMeasure.lineTo(topMeasure, VexFlowConverter_1.VexFlowConverter.line(lineType));\n        }\n        return new SystemLine_1.SystemLine(lineType, linePosition, this, topMeasure, bottomMeasure);\n    };\n    /**\n     * Calculates the summed x-width of a possibly given Instrument Brace and/or Group Bracket(s).\n     * @returns {number} the x-width\n     */\n    VexFlowMusicSystem.prototype.calcInstrumentsBracketsWidth = function () {\n        return 0;\n    };\n    /**\n     * creates an instrument brace for the given dimension.\n     * The height and positioning can be inferred from the given points.\n     * @param rightUpper the upper right corner point of the bracket to create\n     * @param rightLower the lower right corner point of the bracket to create\n     */\n    VexFlowMusicSystem.prototype.createInstrumentBracket = function (rightUpper, rightLower) {\n        return;\n    };\n    /**\n     * creates an instrument group bracket for the given dimension.\n     * There can be cascaded bracket (e.g. a group of 2 in a group of 4) -\n     * The recursion depth informs about the current depth level (needed for positioning)\n     * @param rightUpper rightUpper the upper right corner point of the bracket to create\n     * @param rightLower rightLower the lower right corner point of the bracket to create\n     * @param staffHeight\n     * @param recursionDepth\n     */\n    VexFlowMusicSystem.prototype.createGroupBracket = function (rightUpper, rightLower, staffHeight, recursionDepth) {\n        return;\n    };\n    return VexFlowMusicSystem;\n}(MusicSystem_1.MusicSystem));\nexports.VexFlowMusicSystem = VexFlowMusicSystem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMusicSystem.js\n ** module id = 43\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Instrument_1 = require(\"../Instrument\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar TextAlignment_1 = require(\"../../Common/Enums/TextAlignment\");\nvar GraphicalLabel_1 = require(\"./GraphicalLabel\");\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar SystemLinesEnum_1 = require(\"./SystemLinesEnum\");\nvar Dictionary_1 = require(\"typescript-collections/dist/lib/Dictionary\");\nvar collectionUtil_1 = require(\"../../Util/collectionUtil\");\nvar SystemLinePosition_1 = require(\"./SystemLinePosition\");\nvar MusicSystem = (function (_super) {\n    __extends(MusicSystem, _super);\n    function MusicSystem(parent, id) {\n        _super.call(this);\n        this.needsToBeRedrawn = true;\n        this.staffLines = [];\n        this.graphicalMeasures = [];\n        this.labels = new Dictionary_1.default();\n        this.measureNumberLabels = [];\n        this.objectsToRedraw = [];\n        this.instrumentBrackets = [];\n        this.groupBrackets = [];\n        this.graphicalMarkedAreas = [];\n        this.graphicalComments = [];\n        this.systemLines = [];\n        this.parent = parent;\n        this.id = id;\n        this.boundingBox = new BoundingBox_1.BoundingBox(this, parent.PositionAndShape);\n        this.maxLabelLength = 0.0;\n        this.rules = this.parent.Parent.ParentMusicSheet.Rules;\n    }\n    Object.defineProperty(MusicSystem.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        set: function (value) {\n            this.parent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"StaffLines\", {\n        get: function () {\n            return this.staffLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"GraphicalMeasures\", {\n        get: function () {\n            return this.graphicalMeasures;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"MeasureNumberLabels\", {\n        get: function () {\n            return this.measureNumberLabels;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"Labels\", {\n        get: function () {\n            return this.labels.keys();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"ObjectsToRedraw\", {\n        get: function () {\n            return this.objectsToRedraw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"InstrumentBrackets\", {\n        get: function () {\n            return this.instrumentBrackets;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"GroupBrackets\", {\n        get: function () {\n            return this.groupBrackets;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"GraphicalMarkedAreas\", {\n        get: function () {\n            return this.graphicalMarkedAreas;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"GraphicalComments\", {\n        get: function () {\n            return this.graphicalComments;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"SystemLines\", {\n        get: function () {\n            return this.systemLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSystem.prototype, \"Id\", {\n        get: function () {\n            return this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method creates the left vertical Line connecting all staves of the MusicSystem.\n     * @param lineWidth\n     * @param systemLabelsRightMargin\n     */\n    MusicSystem.prototype.createSystemLeftLine = function (lineWidth, systemLabelsRightMargin) {\n        var xPosition = -lineWidth / 2;\n        if (this === this.parent.MusicSystems[0] && this.parent === this.parent.Parent.MusicPages[0]) {\n            xPosition = this.maxLabelLength + systemLabelsRightMargin - lineWidth / 2;\n        }\n        var top = this.staffLines[0].Measures[0];\n        var bottom = undefined;\n        if (this.staffLines.length > 1) {\n            bottom = this.staffLines[this.staffLines.length - 1].Measures[0];\n        }\n        var leftSystemLine = this.createSystemLine(xPosition, lineWidth, SystemLinesEnum_1.SystemLinesEnum.SingleThin, SystemLinePosition_1.SystemLinePosition.MeasureBegin, this, top, bottom);\n        this.SystemLines.push(leftSystemLine);\n        this.boundingBox.ChildElements.push(leftSystemLine.PositionAndShape);\n        leftSystemLine.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(xPosition, 0);\n        leftSystemLine.PositionAndShape.BorderLeft = 0;\n        leftSystemLine.PositionAndShape.BorderRight = lineWidth;\n        leftSystemLine.PositionAndShape.BorderTop = 0;\n        leftSystemLine.PositionAndShape.BorderBottom = this.boundingBox.Size.height;\n        this.createLinesForSystemLine(leftSystemLine);\n    };\n    /**\n     * This method creates the vertical Lines after the End of all StaffLine's Measures\n     * @param xPosition\n     * @param lineWidth\n     * @param lineType\n     * @param linePosition indicates if the line belongs to start or end of measure\n     * @param measureIndex the measure index within the staffline\n     * @param measure\n     */\n    MusicSystem.prototype.createVerticalLineForMeasure = function (xPosition, lineWidth, lineType, linePosition, measureIndex, measure) {\n        var staffLine = measure.ParentStaffLine;\n        var staffLineRelative = new PointF2D_1.PointF2D(staffLine.PositionAndShape.RelativePosition.x, staffLine.PositionAndShape.RelativePosition.y);\n        var staves = staffLine.ParentStaff.ParentInstrument.Staves;\n        if (staffLine.ParentStaff === staves[0]) {\n            var bottomMeasure = undefined;\n            if (staves.length > 1) {\n                bottomMeasure = this.getBottomStaffLine(staffLine).Measures[measureIndex];\n            }\n            var singleVerticalLineAfterMeasure = this.createSystemLine(xPosition, lineWidth, lineType, linePosition, this, measure, bottomMeasure);\n            var systemXPosition = staffLineRelative.x + xPosition;\n            singleVerticalLineAfterMeasure.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(systemXPosition, 0);\n            singleVerticalLineAfterMeasure.PositionAndShape.BorderLeft = 0;\n            singleVerticalLineAfterMeasure.PositionAndShape.BorderRight = lineWidth;\n            this.SystemLines.push(singleVerticalLineAfterMeasure);\n            this.boundingBox.ChildElements.push(singleVerticalLineAfterMeasure.PositionAndShape);\n        }\n    };\n    MusicSystem.prototype.setYPositionsToVerticalLineObjectsAndCreateLines = function (rules) {\n        // empty\n    };\n    MusicSystem.prototype.calculateBorders = function (rules) {\n        // empty\n    };\n    MusicSystem.prototype.alignBeginInstructions = function () {\n        // empty\n    };\n    MusicSystem.prototype.GetLeftBorderAbsoluteXPosition = function () {\n        return this.StaffLines[0].PositionAndShape.AbsolutePosition.x + this.StaffLines[0].Measures[0].beginInstructionsWidth;\n    };\n    MusicSystem.prototype.GetRightBorderAbsoluteXPosition = function () {\n        return this.StaffLines[0].PositionAndShape.AbsolutePosition.x + this.StaffLines[0].StaffLines[0].End.x;\n    };\n    MusicSystem.prototype.AddStaffMeasures = function (graphicalMeasures) {\n        for (var idx = 0, len = graphicalMeasures.length; idx < len; ++idx) {\n            var graphicalMeasure = graphicalMeasures[idx];\n            graphicalMeasure.parentMusicSystem = this;\n        }\n        this.graphicalMeasures.push(graphicalMeasures);\n    };\n    MusicSystem.prototype.GetSystemsFirstTimeStamp = function () {\n        return this.graphicalMeasures[0][0].parentSourceMeasure.AbsoluteTimestamp;\n    };\n    MusicSystem.prototype.GetSystemsLastTimeStamp = function () {\n        var m = this.graphicalMeasures[this.graphicalMeasures.length - 1][0].parentSourceMeasure;\n        return fraction_1.Fraction.plus(m.AbsoluteTimestamp, m.Duration);\n    };\n    MusicSystem.prototype.createInstrumentBrackets = function (instruments, staffHeight) {\n        for (var idx = 0, len = instruments.length; idx < len; ++idx) {\n            var instrument = instruments[idx];\n            if (instrument.Staves.length > 1) {\n                var firstStaffLine = undefined, lastStaffLine = undefined;\n                for (var idx2 = 0, len2 = this.staffLines.length; idx2 < len2; ++idx2) {\n                    var staffLine = this.staffLines[idx2];\n                    if (staffLine.ParentStaff === instrument.Staves[0]) {\n                        firstStaffLine = staffLine;\n                    }\n                    if (staffLine.ParentStaff === instrument.Staves[instrument.Staves.length - 1]) {\n                        lastStaffLine = staffLine;\n                    }\n                }\n                if (firstStaffLine !== undefined && lastStaffLine !== undefined) {\n                    var rightUpper = new PointF2D_1.PointF2D(firstStaffLine.PositionAndShape.RelativePosition.x, firstStaffLine.PositionAndShape.RelativePosition.y);\n                    var rightLower = new PointF2D_1.PointF2D(lastStaffLine.PositionAndShape.RelativePosition.x, lastStaffLine.PositionAndShape.RelativePosition.y + staffHeight);\n                    this.createInstrumentBracket(rightUpper, rightLower);\n                }\n            }\n        }\n    };\n    MusicSystem.prototype.createGroupBrackets = function (instrumentGroups, staffHeight, recursionDepth) {\n        for (var idx = 0, len = instrumentGroups.length; idx < len; ++idx) {\n            var instrumentGroup = instrumentGroups[idx];\n            if (instrumentGroup.InstrumentalGroups.length < 1) {\n                continue;\n            }\n            var instrument1 = this.findFirstVisibleInstrumentInInstrumentalGroup(instrumentGroup);\n            var instrument2 = this.findLastVisibleInstrumentInInstrumentalGroup(instrumentGroup);\n            if (instrument1 === undefined || instrument2 === undefined) {\n                continue;\n            }\n            var firstStaffLine = undefined, lastStaffLine = undefined;\n            for (var idx2 = 0, len2 = this.staffLines.length; idx2 < len2; ++idx2) {\n                var staffLine = this.staffLines[idx2];\n                if (staffLine.ParentStaff === instrument1.Staves[0]) {\n                    firstStaffLine = staffLine;\n                }\n                if (staffLine.ParentStaff === collectionUtil_1.CollectionUtil.last(instrument2.Staves)) {\n                    lastStaffLine = staffLine;\n                }\n            }\n            if (firstStaffLine !== undefined && lastStaffLine !== undefined) {\n                var rightUpper = new PointF2D_1.PointF2D(firstStaffLine.PositionAndShape.RelativePosition.x, firstStaffLine.PositionAndShape.RelativePosition.y);\n                var rightLower = new PointF2D_1.PointF2D(lastStaffLine.PositionAndShape.RelativePosition.x, lastStaffLine.PositionAndShape.RelativePosition.y + staffHeight);\n                this.createGroupBracket(rightUpper, rightLower, staffHeight, recursionDepth);\n            }\n            if (instrumentGroup.InstrumentalGroups.length < 1) {\n                continue;\n            }\n            this.createGroupBrackets(instrumentGroup.InstrumentalGroups, staffHeight, recursionDepth + 1);\n        }\n    };\n    MusicSystem.prototype.createMusicSystemLabel = function (instrumentLabelTextHeight, systemLabelsRightMargin, labelMarginBorderFactor) {\n        if (this.parent === this.parent.Parent.MusicPages[0] && this === this.parent.MusicSystems[0]) {\n            var instruments = this.parent.Parent.ParentMusicSheet.getVisibleInstruments();\n            for (var idx = 0, len = instruments.length; idx < len; ++idx) {\n                var instrument = instruments[idx];\n                var graphicalLabel = new GraphicalLabel_1.GraphicalLabel(instrument.NameLabel, instrumentLabelTextHeight, TextAlignment_1.TextAlignment.LeftCenter, this.boundingBox);\n                graphicalLabel.setLabelPositionAndShapeBorders();\n                this.labels.setValue(graphicalLabel, instrument);\n                this.boundingBox.ChildElements.push(graphicalLabel.PositionAndShape);\n                graphicalLabel.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, 0.0);\n            }\n            this.maxLabelLength = 0.0;\n            var labels = this.labels.keys();\n            for (var idx = 0, len = labels.length; idx < len; ++idx) {\n                var label = labels[idx];\n                if (label.PositionAndShape.Size.width > this.maxLabelLength) {\n                    this.maxLabelLength = label.PositionAndShape.Size.width;\n                }\n            }\n            this.updateMusicSystemStaffLineXPosition(systemLabelsRightMargin);\n        }\n    };\n    MusicSystem.prototype.setMusicSystemLabelsYPosition = function () {\n        var _this = this;\n        if (this.parent === this.parent.Parent.MusicPages[0] && this === this.parent.MusicSystems[0]) {\n            this.labels.forEach(function (key, value) {\n                var ypositionSum = 0;\n                var staffCounter = 0;\n                for (var i = 0; i < _this.staffLines.length; i++) {\n                    if (_this.staffLines[i].ParentStaff.ParentInstrument === value) {\n                        for (var j = i; j < _this.staffLines.length; j++) {\n                            var staffLine = _this.staffLines[j];\n                            if (staffLine.ParentStaff.ParentInstrument !== value) {\n                                break;\n                            }\n                            ypositionSum += staffLine.PositionAndShape.RelativePosition.y;\n                            staffCounter++;\n                        }\n                        break;\n                    }\n                }\n                if (staffCounter > 0) {\n                    key.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(0.0, ypositionSum / staffCounter + 2.0);\n                }\n            });\n        }\n    };\n    MusicSystem.prototype.checkStaffEntriesForStaffEntryLink = function () {\n        var first = false;\n        var second = false;\n        for (var i = 0; i < this.staffLines.length - 1; i++) {\n            for (var idx = 0, len = this.staffLines[i].Measures.length; idx < len; ++idx) {\n                var measure = this.staffLines[i].Measures[idx];\n                for (var idx2 = 0, len2 = measure.staffEntries.length; idx2 < len2; ++idx2) {\n                    var staffEntry = measure.staffEntries[idx2];\n                    if (staffEntry.sourceStaffEntry.Link !== undefined) {\n                        first = true;\n                    }\n                }\n            }\n            for (var idx = 0, len = this.staffLines[i + 1].Measures.length; idx < len; ++idx) {\n                var measure = this.staffLines[i + 1].Measures[idx];\n                for (var idx2 = 0, len2 = measure.staffEntries.length; idx2 < len2; ++idx2) {\n                    var staffEntry = measure.staffEntries[idx2];\n                    if (staffEntry.sourceStaffEntry.Link !== undefined) {\n                        second = true;\n                    }\n                }\n            }\n        }\n        if (first && second) {\n            return true;\n        }\n        return false;\n    };\n    MusicSystem.prototype.getBottomStaffLine = function (topStaffLine) {\n        var staves = topStaffLine.ParentStaff.ParentInstrument.Staves;\n        var last = staves[staves.length - 1];\n        for (var _i = 0, _a = topStaffLine.ParentMusicSystem.staffLines; _i < _a.length; _i++) {\n            var line = _a[_i];\n            if (line.ParentStaff === last) {\n                return line;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Here the system line is generated, which acts as the container of graphical lines and dots that will be finally rendered.\n     * It holds al the logical parameters of the system line.\n     * @param xPosition The x position within the system\n     * @param lineWidth The total x width\n     * @param lineType The line type enum\n     * @param linePosition indicates if the line belongs to start or end of measure\n     * @param musicSystem\n     * @param topMeasure\n     * @param bottomMeasure\n     */\n    MusicSystem.prototype.createSystemLine = function (xPosition, lineWidth, lineType, linePosition, musicSystem, topMeasure, bottomMeasure) {\n        if (bottomMeasure === void 0) { bottomMeasure = undefined; }\n        throw new Error(\"not implemented\");\n    };\n    /// <summary>\n    /// This method creates all the graphical lines and dots needed to render a system line (e.g. bold-thin-dots..).\n    /// </summary>\n    /// <param name=\"psSystemLine\"></param>\n    MusicSystem.prototype.createLinesForSystemLine = function (systemLine) {\n        //Empty\n    };\n    MusicSystem.prototype.calcInstrumentsBracketsWidth = function () {\n        throw new Error(\"not implemented\");\n    };\n    MusicSystem.prototype.createInstrumentBracket = function (rightUpper, rightLower) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSystem.prototype.createGroupBracket = function (rightUpper, rightLower, staffHeight, recursionDepth) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSystem.prototype.findFirstVisibleInstrumentInInstrumentalGroup = function (instrumentalGroup) {\n        for (var idx = 0, len = instrumentalGroup.InstrumentalGroups.length; idx < len; ++idx) {\n            var groupOrInstrument = instrumentalGroup.InstrumentalGroups[idx];\n            if (groupOrInstrument instanceof Instrument_1.Instrument) {\n                if (groupOrInstrument.Visible === true) {\n                    return groupOrInstrument;\n                }\n                continue;\n            }\n            return this.findFirstVisibleInstrumentInInstrumentalGroup(groupOrInstrument);\n        }\n        return undefined;\n    };\n    MusicSystem.prototype.findLastVisibleInstrumentInInstrumentalGroup = function (instrumentalGroup) {\n        var groupOrInstrument;\n        for (var i = instrumentalGroup.InstrumentalGroups.length - 1; i >= 0; i--) {\n            groupOrInstrument = instrumentalGroup.InstrumentalGroups[i];\n            if (groupOrInstrument instanceof Instrument_1.Instrument) {\n                if (groupOrInstrument.Visible === true) {\n                    return groupOrInstrument;\n                }\n                continue;\n            }\n            return this.findLastVisibleInstrumentInInstrumentalGroup(groupOrInstrument);\n        }\n        return undefined;\n    };\n    MusicSystem.prototype.updateMusicSystemStaffLineXPosition = function (systemLabelsRightMargin) {\n        for (var idx = 0, len = this.StaffLines.length; idx < len; ++idx) {\n            var staffLine = this.StaffLines[idx];\n            var relative = staffLine.PositionAndShape.RelativePosition;\n            relative.x = this.maxLabelLength + systemLabelsRightMargin;\n            staffLine.PositionAndShape.RelativePosition = relative;\n            staffLine.PositionAndShape.BorderRight = this.boundingBox.Size.width - this.maxLabelLength - systemLabelsRightMargin;\n            for (var i = 0; i < staffLine.StaffLines.length; i++) {\n                var lineEnd = new PointF2D_1.PointF2D(staffLine.PositionAndShape.Size.width, staffLine.StaffLines[i].End.y);\n                staffLine.StaffLines[i].End = lineEnd;\n            }\n        }\n    };\n    return MusicSystem;\n}(GraphicalObject_1.GraphicalObject));\nexports.MusicSystem = MusicSystem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSystem.js\n ** module id = 44\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar InstrumentalGroup_1 = require(\"./InstrumentalGroup\");\nvar Label_1 = require(\"./Label\");\nvar Staff_1 = require(\"./VoiceData/Staff\");\nvar Instrument = (function (_super) {\n    __extends(Instrument, _super);\n    function Instrument(id, idString, musicSheet, parent) {\n        _super.call(this, undefined, musicSheet, parent);\n        this.transpose = 0;\n        this.voices = [];\n        this.staves = [];\n        this.hasLyrics = false;\n        this.hasChordSymbols = false;\n        this.lyricVersesNumbers = [];\n        this.subInstruments = [];\n        this.id = id;\n        this.idString = idString;\n        this.nameLabel = new Label_1.Label(idString);\n    }\n    Object.defineProperty(Instrument.prototype, \"Voices\", {\n        get: function () {\n            return this.voices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"Staves\", {\n        get: function () {\n            return this.staves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"NameLabel\", {\n        get: function () {\n            return this.nameLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"HasLyrics\", {\n        get: function () {\n            return this.hasLyrics;\n        },\n        set: function (value) {\n            this.hasLyrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"HasChordSymbols\", {\n        get: function () {\n            return this.hasChordSymbols;\n        },\n        set: function (value) {\n            this.hasChordSymbols = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"LyricVersesNumbers\", {\n        get: function () {\n            return this.lyricVersesNumbers;\n        },\n        set: function (value) {\n            this.lyricVersesNumbers = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"Name\", {\n        get: function () {\n            return this.nameLabel.text;\n        },\n        set: function (value) {\n            this.nameLabel.text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"IdString\", {\n        get: function () {\n            return this.idString;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"Id\", {\n        get: function () {\n            return this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"MidiInstrumentId\", {\n        get: function () {\n            return this.subInstruments[0].midiInstrumentID;\n        },\n        set: function (value) {\n            this.subInstruments[0].midiInstrumentID = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"Volume\", {\n        get: function () {\n            return this.subInstruments[0].volume;\n        },\n        set: function (value) {\n            for (var idx = 0, len = this.subInstruments.length; idx < len; ++idx) {\n                var subInstrument = this.subInstruments[idx];\n                subInstrument.volume = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"PlaybackTranspose\", {\n        get: function () {\n            return this.playbackTranspose;\n        },\n        set: function (value) {\n            this.playbackTranspose = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"SubInstruments\", {\n        get: function () {\n            return this.subInstruments;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Instrument.prototype.getSubInstrument = function (subInstrumentIdString) {\n        for (var idx = 0, len = this.subInstruments.length; idx < len; ++idx) {\n            var subInstrument = this.subInstruments[idx];\n            if (subInstrument.idString === subInstrumentIdString) {\n                return subInstrument;\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(Instrument.prototype, \"Visible\", {\n        get: function () {\n            if (this.voices.length > 0) {\n                return this.Voices[0].Visible;\n            }\n            else {\n                return false;\n            }\n        },\n        set: function (value) {\n            for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n                var v = this.Voices[idx];\n                v.Visible = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"Audible\", {\n        get: function () {\n            var result = false;\n            for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n                var v = this.Voices[idx];\n                result = result || v.Audible;\n            }\n            return result;\n        },\n        set: function (value) {\n            for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n                var v = this.Voices[idx];\n                v.Audible = value;\n            }\n            for (var idx = 0, len = this.staves.length; idx < len; ++idx) {\n                var staff = this.staves[idx];\n                staff.audible = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"Following\", {\n        get: function () {\n            var result = false;\n            for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n                var v = this.Voices[idx];\n                result = result || v.Following;\n            }\n            return result;\n        },\n        set: function (value) {\n            for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n                var v = this.Voices[idx];\n                v.Following = value;\n            }\n            for (var idx = 0, len = this.staves.length; idx < len; ++idx) {\n                var staff = this.staves[idx];\n                staff.following = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Instrument.prototype.SetVoiceAudible = function (voiceId, audible) {\n        for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n            var v = this.Voices[idx];\n            if (v.VoiceId === voiceId) {\n                v.Audible = audible;\n                break;\n            }\n        }\n    };\n    Instrument.prototype.SetVoiceFollowing = function (voiceId, following) {\n        for (var idx = 0, len = this.Voices.length; idx < len; ++idx) {\n            var v = this.Voices[idx];\n            if (v.VoiceId === voiceId) {\n                v.Following = following;\n                break;\n            }\n        }\n    };\n    Instrument.prototype.SetStaffAudible = function (staffId, audible) {\n        var staff = this.staves[staffId - 1];\n        staff.audible = audible;\n        if (audible) {\n            for (var idx = 0, len = staff.Voices.length; idx < len; ++idx) {\n                var v = staff.Voices[idx];\n                v.Audible = true;\n            }\n        }\n        else {\n            for (var idx = 0, len = staff.Voices.length; idx < len; ++idx) {\n                var voice = staff.Voices[idx];\n                var isAudibleInOtherStaves = false;\n                for (var idx2 = 0, len2 = this.Staves.length; idx2 < len2; ++idx2) {\n                    var st = this.Staves[idx2];\n                    if (st.Id === staffId || !st.audible) {\n                        continue;\n                    }\n                    for (var idx3 = 0, len3 = st.Voices.length; idx3 < len3; ++idx3) {\n                        var v = st.Voices[idx3];\n                        if (v === voice) {\n                            isAudibleInOtherStaves = true;\n                        }\n                    }\n                }\n                if (!isAudibleInOtherStaves) {\n                    voice.Audible = false;\n                }\n            }\n        }\n    };\n    Instrument.prototype.SetStaffFollow = function (staffId, follow) {\n        var staff = this.staves[staffId - 1];\n        staff.following = follow;\n        if (follow) {\n            for (var idx = 0, len = staff.Voices.length; idx < len; ++idx) {\n                var v = staff.Voices[idx];\n                v.Following = true;\n            }\n        }\n        else {\n            for (var idx = 0, len = staff.Voices.length; idx < len; ++idx) {\n                var voice = staff.Voices[idx];\n                var isFollowingInOtherStaves = false;\n                for (var idx2 = 0, len2 = this.Staves.length; idx2 < len2; ++idx2) {\n                    var st = this.Staves[idx2];\n                    if (st.Id === staffId || !st.following) {\n                        continue;\n                    }\n                    for (var idx3 = 0, len3 = st.Voices.length; idx3 < len3; ++idx3) {\n                        var v = st.Voices[idx3];\n                        if (v === voice) {\n                            isFollowingInOtherStaves = true;\n                        }\n                    }\n                }\n                if (!isFollowingInOtherStaves) {\n                    voice.Following = false;\n                }\n            }\n        }\n    };\n    Instrument.prototype.areAllVoiceVisible = function () {\n        for (var _i = 0, _a = this.Voices; _i < _a.length; _i++) {\n            var voice = _a[_i];\n            if (!voice.Visible) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Instrument.prototype.createStaves = function (numberOfStaves) {\n        for (var i = 0; i < numberOfStaves; i++) {\n            this.staves.push(new Staff_1.Staff(this, i + 1));\n        }\n    };\n    return Instrument;\n}(InstrumentalGroup_1.InstrumentalGroup));\nexports.Instrument = Instrument;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Instrument.js\n ** module id = 45\n ** module chunks = 0\n **/","\"use strict\";\nvar InstrumentalGroup = (function () {\n    function InstrumentalGroup(name, musicSheet, parent) {\n        this.instrumentalGroups = [];\n        this.name = name;\n        this.musicSheet = musicSheet;\n        this.parent = parent;\n    }\n    Object.defineProperty(InstrumentalGroup.prototype, \"InstrumentalGroups\", {\n        get: function () {\n            return this.instrumentalGroups;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstrumentalGroup.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstrumentalGroup.prototype, \"Name\", {\n        get: function () {\n            return this.name;\n        },\n        set: function (value) {\n            this.name = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstrumentalGroup.prototype, \"GetMusicSheet\", {\n        get: function () {\n            return this.musicSheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return InstrumentalGroup;\n}());\nexports.InstrumentalGroup = InstrumentalGroup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/InstrumentalGroup.js\n ** module id = 46\n ** module chunks = 0\n **/","\"use strict\";\nvar TextAlignment_1 = require(\"../Common/Enums/TextAlignment\");\nvar Fonts_1 = require(\"../Common/Enums/Fonts\");\nvar Label = (function () {\n    function Label(text, alignment, font) {\n        if (text === void 0) { text = \"\"; }\n        if (alignment === void 0) { alignment = TextAlignment_1.TextAlignment.LeftBottom; }\n        if (font === void 0) { font = Fonts_1.Fonts.TimesNewRoman; }\n        this.text = text;\n        this.textAlignment = alignment;\n        this.font = font;\n    }\n    Label.prototype.ToString = function () {\n        return this.text;\n    };\n    return Label;\n}());\nexports.Label = Label;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Label.js\n ** module id = 47\n ** module chunks = 0\n **/","\"use strict\";\n(function (Fonts) {\n    Fonts[Fonts[\"TimesNewRoman\"] = 0] = \"TimesNewRoman\";\n    Fonts[Fonts[\"Kokila\"] = 1] = \"Kokila\";\n})(exports.Fonts || (exports.Fonts = {}));\nvar Fonts = exports.Fonts;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/Enums/Fonts.js\n ** module id = 48\n ** module chunks = 0\n **/","\"use strict\";\nvar Staff = (function () {\n    function Staff(parentInstrument, instrumentStaffId) {\n        this.voices = [];\n        this.volume = 1;\n        this.parentInstrument = parentInstrument;\n        this.id = instrumentStaffId;\n        this.audible = true;\n        this.following = true;\n    }\n    Object.defineProperty(Staff.prototype, \"ParentInstrument\", {\n        get: function () {\n            return this.parentInstrument;\n        },\n        set: function (value) {\n            this.parentInstrument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Staff.prototype, \"Voices\", {\n        get: function () {\n            return this.voices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Staff.prototype, \"Id\", {\n        get: function () {\n            return this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Staff.prototype, \"Volume\", {\n        get: function () {\n            return this.volume;\n        },\n        set: function (value) {\n            this.volume = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Staff;\n}());\nexports.Staff = Staff;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Staff.js\n ** module id = 49\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SystemLinesEnum_1 = require(\"./SystemLinesEnum\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar SystemLine = (function (_super) {\n    __extends(SystemLine, _super);\n    function SystemLine(lineType, linePosition, musicSystem, topMeasure, bottomMeasure) {\n        if (bottomMeasure === void 0) { bottomMeasure = undefined; }\n        _super.call(this);\n        this.lineType = lineType;\n        this.linePosition = linePosition;\n        this.parentMusicSystem = musicSystem;\n        this.topMeasure = topMeasure;\n        this.bottomMeasure = bottomMeasure;\n        this.parentTopStaffLine = topMeasure.ParentStaffLine;\n        this.boundingBox = new BoundingBox_1.BoundingBox(this, musicSystem.PositionAndShape);\n    }\n    SystemLine.getObjectWidthForLineType = function (rules, systemLineType) {\n        switch (systemLineType) {\n            case SystemLinesEnum_1.SystemLinesEnum.SingleThin:\n                return rules.SystemThinLineWidth;\n            case SystemLinesEnum_1.SystemLinesEnum.DoubleThin:\n                return rules.SystemThinLineWidth * 2 + rules.DistanceBetweenVerticalSystemLines;\n            case SystemLinesEnum_1.SystemLinesEnum.ThinBold:\n                return rules.SystemThinLineWidth + rules.SystemBoldLineWidth + rules.DistanceBetweenVerticalSystemLines;\n            case SystemLinesEnum_1.SystemLinesEnum.BoldThinDots:\n                return rules.SystemThinLineWidth + rules.SystemBoldLineWidth + rules.DistanceBetweenVerticalSystemLines + rules.SystemDotWidth +\n                    rules.DistanceBetweenDotAndLine;\n            case SystemLinesEnum_1.SystemLinesEnum.DotsThinBold:\n                return rules.SystemThinLineWidth + rules.SystemBoldLineWidth + rules.DistanceBetweenVerticalSystemLines + rules.SystemDotWidth +\n                    rules.DistanceBetweenDotAndLine;\n            case SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots:\n                return 2 * rules.SystemBoldLineWidth + 2 * rules.SystemDotWidth + 2 * rules.DistanceBetweenDotAndLine +\n                    rules.DistanceBetweenVerticalSystemLines;\n            default:\n                return 0;\n        }\n    };\n    return SystemLine;\n}(GraphicalObject_1.GraphicalObject));\nexports.SystemLine = SystemLine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/SystemLine.js\n ** module id = 50\n ** module chunks = 0\n **/","\"use strict\";\nvar Vex = require(\"vexflow\");\nvar ClefInstruction_1 = require(\"../../VoiceData/Instructions/ClefInstruction\");\nvar RhythmInstruction_1 = require(\"../../VoiceData/Instructions/RhythmInstruction\");\nvar KeyInstruction_1 = require(\"../../VoiceData/Instructions/KeyInstruction\");\nvar pitch_1 = require(\"../../../Common/DataObjects/pitch\");\nvar pitch_2 = require(\"../../../Common/DataObjects/pitch\");\nvar SystemLinesEnum_1 = require(\"../SystemLinesEnum\");\nvar VexFlowConverter = (function () {\n    function VexFlowConverter() {\n    }\n    VexFlowConverter.duration = function (fraction) {\n        var dur = fraction.RealValue;\n        if (dur >= 1) {\n            return \"w\";\n        }\n        else if (dur < 1 && dur >= 0.5) {\n            return \"h\";\n        }\n        else if (dur < 0.5 && dur >= 0.25) {\n            return \"q\";\n        }\n        else if (dur < 0.25 && dur >= 0.125) {\n            return \"8\";\n        }\n        else if (dur < 0.125 && dur >= 0.0625) {\n            return \"16\";\n        }\n        else if (dur < 0.0625 && dur >= 0.03125) {\n            return \"32\";\n        }\n        return \"128\";\n    };\n    /**\n     * Takes a Pitch and returns a string representing a VexFlow pitch,\n     * which has the form \"b/4\", plus its alteration (accidental)\n     * @param pitch\n     * @returns {string[]}\n     */\n    VexFlowConverter.pitch = function (pitch, clef) {\n        var fund = pitch_2.NoteEnum[pitch.FundamentalNote].toLowerCase();\n        // The octave seems to need a shift of three FIXME?\n        var octave = pitch.Octave + clef.OctaveOffset + 3;\n        var acc = VexFlowConverter.accidental(pitch.Accidental);\n        return [fund + \"n/\" + octave, acc, clef];\n    };\n    /**\n     * Converts AccidentalEnum to vexFlow accidental string\n     * @param accidental\n     * @returns {string}\n     */\n    VexFlowConverter.accidental = function (accidental) {\n        var acc;\n        switch (accidental) {\n            case pitch_1.AccidentalEnum.NONE:\n                acc = \"n\";\n                break;\n            case pitch_1.AccidentalEnum.FLAT:\n                acc = \"b\";\n                break;\n            case pitch_1.AccidentalEnum.SHARP:\n                acc = \"#\";\n                break;\n            case pitch_1.AccidentalEnum.DOUBLESHARP:\n                acc = \"##\";\n                break;\n            case pitch_1.AccidentalEnum.DOUBLEFLAT:\n                acc = \"bb\";\n                break;\n            default:\n        }\n        return acc;\n    };\n    VexFlowConverter.StaveNote = function (notes) {\n        var keys = [];\n        var accidentals = [];\n        var frac = notes[0].sourceNote.Length;\n        var duration = VexFlowConverter.duration(frac);\n        var vfclef;\n        for (var _i = 0, notes_1 = notes; _i < notes_1.length; _i++) {\n            var note = notes_1[_i];\n            var res = note.vfpitch;\n            if (res === undefined) {\n                keys = [\"b/4\"];\n                duration += \"r\";\n                break;\n            }\n            keys.push(res[0]);\n            accidentals.push(res[1]);\n            if (!vfclef) {\n                vfclef = VexFlowConverter.Clef(res[2]);\n            }\n        }\n        var vfnote = new Vex.Flow.StaveNote({\n            auto_stem: true,\n            clef: vfclef,\n            duration: duration,\n            duration_override: {\n                denominator: frac.Denominator,\n                numerator: frac.Numerator,\n            },\n            keys: keys,\n        });\n        for (var i = 0, len = notes.length; i < len; i += 1) {\n            notes[i].setIndex(vfnote, i);\n            if (accidentals[i]) {\n                vfnote.addAccidental(i, new Vex.Flow.Accidental(accidentals[i]));\n            }\n        }\n        return vfnote;\n    };\n    VexFlowConverter.Clef = function (clef) {\n        var type;\n        switch (clef.ClefType) {\n            case ClefInstruction_1.ClefEnum.G:\n                type = \"treble\";\n                break;\n            case ClefInstruction_1.ClefEnum.F:\n                type = \"bass\";\n                break;\n            case ClefInstruction_1.ClefEnum.C:\n                type = \"alto\";\n                break;\n            case ClefInstruction_1.ClefEnum.percussion:\n                type = \"percussion\";\n                break;\n            case ClefInstruction_1.ClefEnum.TAB:\n                type = \"tab\";\n                break;\n            default:\n        }\n        return type;\n    };\n    VexFlowConverter.TimeSignature = function (rhythm) {\n        var timeSpec;\n        switch (rhythm.SymbolEnum) {\n            case RhythmInstruction_1.RhythmSymbolEnum.NONE:\n                timeSpec = rhythm.Rhythm.Numerator + \"/\" + rhythm.Rhythm.Denominator;\n                break;\n            case RhythmInstruction_1.RhythmSymbolEnum.COMMON:\n                timeSpec = \"C\";\n                break;\n            case RhythmInstruction_1.RhythmSymbolEnum.CUT:\n                timeSpec = \"C|\";\n                break;\n            default:\n        }\n        return new Vex.Flow.TimeSignature(timeSpec);\n    };\n    VexFlowConverter.keySignature = function (key) {\n        if (key === undefined) {\n            return undefined;\n        }\n        var ret;\n        switch (key.Mode) {\n            case KeyInstruction_1.KeyEnum.none:\n                ret = undefined;\n                break;\n            case KeyInstruction_1.KeyEnum.minor:\n                ret = VexFlowConverter.minorMap[key.Key] + \"m\";\n                break;\n            case KeyInstruction_1.KeyEnum.major:\n                ret = VexFlowConverter.majorMap[key.Key];\n                break;\n            default:\n        }\n        return ret;\n    };\n    VexFlowConverter.line = function (lineType) {\n        switch (lineType) {\n            case SystemLinesEnum_1.SystemLinesEnum.SingleThin:\n                return Vex.Flow.StaveConnector.type.SINGLE;\n            case SystemLinesEnum_1.SystemLinesEnum.DoubleThin:\n                return Vex.Flow.StaveConnector.type.DOUBLE;\n            case SystemLinesEnum_1.SystemLinesEnum.ThinBold:\n                return Vex.Flow.StaveConnector.type.SINGLE;\n            case SystemLinesEnum_1.SystemLinesEnum.BoldThinDots:\n                return Vex.Flow.StaveConnector.type.DOUBLE;\n            case SystemLinesEnum_1.SystemLinesEnum.DotsThinBold:\n                return Vex.Flow.StaveConnector.type.DOUBLE;\n            case SystemLinesEnum_1.SystemLinesEnum.DotsBoldBoldDots:\n                return Vex.Flow.StaveConnector.type.DOUBLE;\n            case SystemLinesEnum_1.SystemLinesEnum.None:\n                return Vex.Flow.StaveConnector.type.NONE;\n            default:\n        }\n    };\n    VexFlowConverter.majorMap = {\n        \"0\": \"C\", 1: \"G\", 2: \"D\", 3: \"A\", 4: \"E\", 5: \"B\", 6: \"F#\", 7: \"C#\",\n        8: \"G#\", \"-1\": \"F\", \"-8\": \"Fb\", \"-7\": \"Cb\", \"-6\": \"Gb\", \"-5\": \"Db\", \"-4\": \"Ab\", \"-3\": \"Eb\", \"-2\": \"Bb\",\n    };\n    VexFlowConverter.minorMap = {\n        \"1\": \"E\", \"7\": \"A#\", \"0\": \"A\", \"6\": \"D#\", \"3\": \"F#\", \"-5\": \"Bb\", \"-4\": \"F\", \"-7\": \"Ab\", \"-6\": \"Eb\",\n        \"-1\": \"D\", \"4\": \"C#\", \"-3\": \"C\", \"-2\": \"G\", \"2\": \"B\", \"5\": \"G#\", \"-8\": \"Db\", \"8\": \"E#\",\n    };\n    return VexFlowConverter;\n}());\nexports.VexFlowConverter = VexFlowConverter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowConverter.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * VexFlow 1.2.53 built on 2016-06-30.\n * Copyright (c) 2010 Mohit Muthanna Cheppudira <mohit@muthanna.com>\n *\n * http://www.vexflow.com  http://github.com/0xfe/vexflow\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vex = factory());\n}(this, function () { 'use strict';\n\n  // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n  //\n  // ## Description\n  // This file implements utility methods used by the rest of the VexFlow\n  // codebase.\n  //\n  // ## JSHint Settings\n  //\n  /* global window: false */\n  /* global document: false */\n  /* global Vex: true */\n\n  var Vex$1 = function Vex() {};\n\n  // Default log function sends all arguments to console.\n  Vex$1.L = function (block, args) {\n    if (!args) return;\n    var line = Array.prototype.slice.call(args).join(' ');\n    window.console.log(block + ': ' + line);\n  };\n\n  // Default runtime exception.\n  Vex$1.RuntimeError = function (code, message) {\n    this.code = code;\n    this.message = message;\n  };\n\n  Vex$1.RuntimeError.prototype.toString = function () {\n    return 'RuntimeError: ' + this.message;\n  };\n\n  // Shortcut method for `RuntimeError`.\n  Vex$1.RERR = Vex$1.RuntimeError;\n\n  // Merge `destination` hash with `source` hash, overwriting like keys\n  // in `source` if necessary.\n  Vex$1.Merge = function (destination, source) {\n    for (var property in source) {\n      destination[property] = source[property];\n    }return destination;\n  };\n\n  // DEPRECATED. Use `Math.*`.\n  Vex$1.Min = Math.min;\n  Vex$1.Max = Math.max;\n  Vex$1.forEach = function (a, fn) {\n    for (var i = 0; i < a.length; i++) {\n      fn(a[i], i);\n    }\n  };\n\n  // Round number to nearest fractional value (`.5`, `.25`, etc.)\n  Vex$1.RoundN = function (x, n) {\n    return x % n >= n / 2 ? parseInt(x / n, 10) * n + n : parseInt(x / n, 10) * n;\n  };\n\n  // Locate the mid point between stave lines. Returns a fractional line if a space.\n  Vex$1.MidLine = function (a, b) {\n    var mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n      mid_line = Vex$1.RoundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n  };\n\n  // Take `arr` and return a new list consisting of the sorted, unique,\n  // contents of arr. Does not modify `arr`.\n  Vex$1.SortAndUnique = function (arr, cmp, eq) {\n    if (arr.length > 1) {\n      var newArr = [];\n      var last = void 0;\n      arr.sort(cmp);\n\n      for (var i = 0; i < arr.length; ++i) {\n        if (i === 0 || !eq(arr[i], last)) {\n          newArr.push(arr[i]);\n        }\n        last = arr[i];\n      }\n\n      return newArr;\n    } else {\n      return arr;\n    }\n  };\n\n  // Check if array `a` contains `obj`.\n  Vex$1.Contains = function (a, obj) {\n    var i = a.length;\n    while (i--) {\n      if (a[i] === obj) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Get the 2D Canvas context from DOM element `canvas_sel`.\n  Vex$1.getCanvasContext = function (canvas_sel) {\n    if (!canvas_sel) throw new Vex$1.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n\n    var canvas = document.getElementById(canvas_sel);\n    if (!(canvas && canvas.getContext)) {\n      throw new Vex$1.RERR('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n    }\n\n    return canvas.getContext('2d');\n  };\n\n  // Draw a tiny dot marker on the specified canvas. A great debugging aid.\n  //\n  // `ctx`: Canvas context.\n  // `x`, `y`: Dot coordinates.\n  Vex$1.drawDot = function (ctx, x, y, color) {\n    var c = color || '#f55';\n    ctx.save();\n    ctx.setFillStyle(c);\n\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  };\n\n  // Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\n  Vex$1.BM = function (s, f) {\n    var start_time = new Date().getTime();\n    f();\n    var elapsed = new Date().getTime() - start_time;\n    Vex$1.L(s + elapsed + 'ms');\n  };\n\n  // Basic classical inheritance helper. Usage:\n  // ```\n  // // Vex.Inherit(Child, Parent, {\n  // //   getName: function() {return this.name;},\n  // //   setName: function(name) {this.name = name}\n  // // });\n  // //\n  // // Returns 'Child'.\n  // ```\n  Vex$1.Inherit = function () {\n    var F = function F() {};\n    // `C` is Child. `P` is parent. `O` is an object to\n    // to extend `C` with.\n    return function (C, P, O) {\n      F.prototype = P.prototype;\n      C.prototype = new F();\n      C.superclass = P.prototype;\n      C.prototype.constructor = C;\n      Vex$1.Merge(C.prototype, O);\n      return C;\n    };\n  }();\n\n  // Get stack trace.\n  Vex$1.StackTrace = function () {\n    var err = new Error();\n    return err.stack;\n  };\n\n  // Dump warning to console.\n  Vex$1.W = function () {\n    var line = Array.prototype.slice.call(arguments).join(' ');\n    window.console.log('Warning: ', line, Vex$1.StackTrace());\n  };\n\n  // Used by various classes (e.g., SVGContext) to provide a\n  // unique prefix to element names (or other keys in shared namespaces).\n  Vex$1.Prefix = function (text) {\n    return Vex$1.Prefix.prefix + text;\n  };\n  Vex$1.Prefix.prefix = 'vf-';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var Fraction = function () {\n    createClass(Fraction, null, [{\n      key: 'GCD',\n\n\n      /**\n       * GCD: Find greatest common divisor using Euclidean algorithm\n       */\n      value: function GCD(a, b) {\n        if (typeof a !== 'number' || typeof b !== 'number') {\n          throw new Vex$1.RERR('BadArgument', 'Invalid numbers: ' + a + ', ' + b);\n        }\n\n        var t = void 0;\n\n        while (b !== 0) {\n          t = b;\n          b = a % b;\n          a = t;\n        }\n\n        return a;\n      }\n\n      /**\n       * LCM: Lowest common multiple\n       */\n\n    }, {\n      key: 'LCM',\n      value: function LCM(a, b) {\n        return a * b / Fraction.GCD(a, b);\n      }\n\n      /**\n       * LCMM: Lowest common multiple for more than two numbers\n       */\n\n    }, {\n      key: 'LCMM',\n      value: function LCMM(args) {\n        if (args.length === 0) {\n          return 0;\n        } else if (args.length == 1) {\n          return args[0];\n        } else if (args.length == 2) {\n          return Fraction.LCM(args[0], args[1]);\n        } else {\n          var arg0 = args[0];\n          args.shift();\n          return Fraction.LCM(arg0, Fraction.LCMM(args));\n        }\n      }\n    }]);\n\n    function Fraction(numerator, denominator) {\n      classCallCheck(this, Fraction);\n\n      this.set(numerator, denominator);\n    }\n\n    createClass(Fraction, [{\n      key: 'set',\n      value: function set(numerator, denominator) {\n        this.numerator = numerator === undefined ? 1 : numerator;\n        this.denominator = denominator === undefined ? 1 : denominator;\n        return this;\n      }\n    }, {\n      key: 'value',\n      value: function value() {\n        return this.numerator / this.denominator;\n      }\n    }, {\n      key: 'simplify',\n      value: function simplify() {\n        var u = this.numerator;\n        var d = this.denominator;\n\n        var gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n\n        if (d < 0) {\n          d = -d;\n          u = -u;\n        }\n        return this.set(u, d);\n      }\n    }, {\n      key: 'add',\n      value: function add(param1, param2) {\n        var otherNumerator = void 0;\n        var otherDenominator = void 0;\n\n        if (param1 instanceof Fraction) {\n          otherNumerator = param1.numerator;\n          otherDenominator = param1.denominator;\n        } else {\n          if (param1 !== undefined) {\n            otherNumerator = param1;\n          } else {\n            otherNumerator = 0;\n          }\n\n          if (param2 !== undefined) {\n            otherDenominator = param2;\n          } else {\n            otherDenominator = 1;\n          }\n        }\n\n        var lcm = Fraction.LCM(this.denominator, otherDenominator);\n        var a = lcm / this.denominator;\n        var b = lcm / otherDenominator;\n\n        var u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n      }\n    }, {\n      key: 'subtract',\n      value: function subtract(param1, param2) {\n        var otherNumerator = void 0;\n        var otherDenominator = void 0;\n\n        if (param1 instanceof Fraction) {\n          otherNumerator = param1.numerator;\n          otherDenominator = param1.denominator;\n        } else {\n          if (param1 !== undefined) {\n            otherNumerator = param1;\n          } else {\n            otherNumerator = 0;\n          }\n\n          if (param2 !== undefined) {\n            otherDenominator = param2;\n          } else {\n            otherDenominator = 1;\n          }\n        }\n\n        var lcm = Fraction.LCM(this.denominator, otherDenominator);\n        var a = lcm / this.denominator;\n        var b = lcm / otherDenominator;\n\n        var u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n      }\n    }, {\n      key: 'multiply',\n      value: function multiply(param1, param2) {\n        var otherNumerator = void 0;\n        var otherDenominator = void 0;\n\n        if (param1 instanceof Fraction) {\n          otherNumerator = param1.numerator;\n          otherDenominator = param1.denominator;\n        } else {\n          if (param1 !== undefined) {\n            otherNumerator = param1;\n          } else {\n            otherNumerator = 1;\n          }\n\n          if (param2 !== undefined) {\n            otherDenominator = param2;\n          } else {\n            otherDenominator = 1;\n          }\n        }\n\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n      }\n    }, {\n      key: 'divide',\n      value: function divide(param1, param2) {\n        var otherNumerator = void 0;\n        var otherDenominator = void 0;\n\n        if (param1 instanceof Fraction) {\n          otherNumerator = param1.numerator;\n          otherDenominator = param1.denominator;\n        } else {\n          if (param1 !== undefined) {\n            otherNumerator = param1;\n          } else {\n            otherNumerator = 1;\n          }\n\n          if (param2 !== undefined) {\n            otherDenominator = param2;\n          } else {\n            otherDenominator = 1;\n          }\n        }\n\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n      }\n\n      // Simplifies both sides and checks if they are equal.\n\n    }, {\n      key: 'equals',\n      value: function equals(compare) {\n        var a = Fraction.__compareA.copy(compare).simplify();\n        var b = Fraction.__compareB.copy(this).simplify();\n\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n      }\n\n      // Greater than operator.\n\n    }, {\n      key: 'greaterThan',\n      value: function greaterThan(compare) {\n        var a = Fraction.__compareB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n      }\n\n      // Greater than or equals operator.\n\n    }, {\n      key: 'greaterThanEquals',\n      value: function greaterThanEquals(compare) {\n        var a = Fraction.__compareB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n      }\n\n      // Less than operator.\n\n    }, {\n      key: 'lessThan',\n      value: function lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n      }\n\n      // Less than or equals operator.\n\n    }, {\n      key: 'lessThanEquals',\n      value: function lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n      }\n\n      // Creates a new copy with this current values.\n\n    }, {\n      key: 'clone',\n      value: function clone() {\n        return new Fraction(this.numerator, this.denominator);\n      }\n\n      // Copies value of another Fraction into itself.\n\n    }, {\n      key: 'copy',\n      value: function copy(_copy) {\n        return this.set(_copy.numerator, _copy.denominator);\n      }\n\n      // Returns the integer component eg. (4/2) == 2\n\n    }, {\n      key: 'quotient',\n      value: function quotient() {\n        return Math.floor(this.numerator / this.denominator);\n      }\n\n      // Returns the fraction component when reduced to a mixed number\n\n    }, {\n      key: 'fraction',\n      value: function fraction() {\n        return this.numerator % this.denominator;\n      }\n\n      // Returns the absolute value\n\n    }, {\n      key: 'abs',\n      value: function abs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n      }\n\n      // Returns a raw string representation\n\n    }, {\n      key: 'toString',\n      value: function toString() {\n        return this.numerator + '/' + this.denominator;\n      }\n\n      // Returns a simplified string respresentation\n\n    }, {\n      key: 'toSimplifiedString',\n      value: function toSimplifiedString() {\n        return Fraction.__tmp.copy(this).simplify().toString();\n      }\n\n      // Returns string representation in mixed form\n\n    }, {\n      key: 'toMixedString',\n      value: function toMixedString() {\n        var s = '';\n        var q = this.quotient();\n        var f = Fraction.__tmp.copy(this);\n\n        if (q < 0) {\n          f.abs().fraction();\n        } else {\n          f.fraction();\n        }\n\n        if (q !== 0) {\n          s += q;\n\n          if (f.numerator !== 0) {\n            s += ' ' + f.toSimplifiedString();\n          }\n        } else {\n          if (f.numerator === 0) {\n            s = '0';\n          } else {\n            s = f.toSimplifiedString();\n          }\n        }\n\n        return s;\n      }\n\n      // Parses a fraction string\n\n    }, {\n      key: 'parse',\n      value: function parse(str) {\n        var i = str.split('/');\n        var n = parseInt(i[0], 10);\n        var d = i[1] ? parseInt(i[1], 10) : 1;\n\n        return this.set(n, d);\n      }\n    }]);\n    return Fraction;\n  }();\n\n  Fraction.__compareA = new Fraction();\n  Fraction.__compareB = new Fraction();\n  Fraction.__tmp = new Fraction();\n\n  var Flow = {};\n  Flow.STEM_WIDTH = 1.5;\n  Flow.STEM_HEIGHT = 32;\n  Flow.STAVE_LINE_THICKNESS = 2;\n  Flow.RESOLUTION = 16384;\n\n  /* Kerning (DEPRECATED) */\n  Flow.IsKerned = true;\n\n  Flow.clefProperties = function (clef) {\n    if (!clef) throw new Vex$1.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n    var props = Flow.clefProperties.values[clef];\n    if (!props) throw new Vex$1.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n    return props;\n  };\n\n  Flow.clefProperties.values = {\n    'treble': { line_shift: 0 },\n    'bass': { line_shift: 6 },\n    'tenor': { line_shift: 4 },\n    'alto': { line_shift: 3 },\n    'soprano': { line_shift: 1 },\n    'percussion': { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    'subbass': { line_shift: 7 },\n    'french': { line_shift: -1 }\n  };\n\n  /*\n    Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n    The last argument, params, is a struct the currently can contain one option,\n    octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n  */\n  Flow.keyProperties = function (key, clef, params) {\n    if (clef === undefined) {\n      clef = 'treble';\n    }\n    var options = {\n      octave_shift: 0\n    };\n    if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) == 'object') {\n      Vex$1.Merge(options, params);\n    }\n\n    var pieces = key.split('/');\n\n    if (pieces.length < 2) {\n      throw new Vex$1.RERR('BadArguments', 'Key must have note + octave and an optional glyph: ' + key);\n    }\n\n    var k = pieces[0].toUpperCase();\n    var value = Flow.keyProperties.note_values[k];\n    if (!value) throw new Vex$1.RERR('BadArguments', 'Invalid key name: ' + k);\n    if (value.octave) pieces[1] = value.octave;\n\n    var o = parseInt(pieces[1]);\n\n    // Octave_shift is the shift to compensate for clef 8va/8vb.\n    o += -1 * options.octave_shift;\n\n    var base_index = o * 7 - 4 * 7;\n    var line = (base_index + value.index) / 2;\n    line += Flow.clefProperties(clef).line_shift;\n\n    var stroke = 0;\n\n    if (line <= 0 && line * 2 % 2 === 0) stroke = 1; // stroke up\n    if (line >= 6 && line * 2 % 2 === 0) stroke = -1; // stroke down\n\n    // Integer value for note arithmetic.\n    var int_value = typeof value.int_val != 'undefined' ? o * 12 + value.int_val : null;\n\n    /* Check if the user specified a glyph. */\n    var code = value.code;\n    var shift_right = value.shift_right;\n    if (pieces.length > 2 && pieces[2]) {\n      var glyph_name = pieces[2].toUpperCase();\n      var note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n      if (note_glyph) {\n        code = note_glyph.code;\n        shift_right = note_glyph.shift_right;\n      }\n    }\n\n    return {\n      key: k,\n      octave: o,\n      line: line,\n      int_value: int_value,\n      accidental: value.accidental,\n      code: code,\n      stroke: stroke,\n      shift_right: shift_right,\n      displaced: false\n    };\n  };\n\n  Flow.keyProperties.note_values = {\n    'C': { index: 0, int_val: 0, accidental: null },\n    'CN': { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    'CB': { index: 0, int_val: -1, accidental: 'b' },\n    'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n    'D': { index: 1, int_val: 2, accidental: null },\n    'DN': { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    'DB': { index: 1, int_val: 1, accidental: 'b' },\n    'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n    'E': { index: 2, int_val: 4, accidental: null },\n    'EN': { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    'EB': { index: 2, int_val: 3, accidental: 'b' },\n    'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n    'F': { index: 3, int_val: 5, accidental: null },\n    'FN': { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    'FB': { index: 3, int_val: 4, accidental: 'b' },\n    'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n    'G': { index: 4, int_val: 7, accidental: null },\n    'GN': { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    'GB': { index: 4, int_val: 6, accidental: 'b' },\n    'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n    'A': { index: 5, int_val: 9, accidental: null },\n    'AN': { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    'AB': { index: 5, int_val: 8, accidental: 'b' },\n    'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n    'B': { index: 6, int_val: 11, accidental: null },\n    'BN': { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    'BB': { index: 6, int_val: 10, accidental: 'b' },\n    'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n    'R': { index: 6, int_val: 9, rest: true }, // Rest\n    'X': {\n      index: 6,\n      accidental: '',\n      octave: 4,\n      code: 'v3e',\n      shift_right: 5.5\n    }\n  };\n\n  Flow.keyProperties.note_glyph = {\n    /* Diamond */\n    'D0': { code: 'v27', shift_right: -0.5 },\n    'D1': { code: 'v2d', shift_right: -0.5 },\n    'D2': { code: 'v22', shift_right: -0.5 },\n    'D3': { code: 'v70', shift_right: -0.5 },\n\n    /* Triangle */\n    'T0': { code: 'v49', shift_right: -2 },\n    'T1': { code: 'v93', shift_right: 0.5 },\n    'T2': { code: 'v40', shift_right: 0.5 },\n    'T3': { code: 'v7d', shift_right: 0.5 },\n\n    /* Cross */\n    'X0': { code: 'v92', shift_right: -2 },\n    'X1': { code: 'v95', shift_right: -0.5 },\n    'X2': { code: 'v7f', shift_right: 0.5 },\n    'X3': { code: 'v3b', shift_right: -2 }\n  };\n\n  Flow.integerToNote = function (integer) {\n    if (typeof integer == 'undefined') throw new Vex$1.RERR('BadArguments', 'Undefined integer for integerToNote');\n\n    if (integer < -2) throw new Vex$1.RERR('BadArguments', 'integerToNote requires integer > -2: ' + integer);\n\n    var noteValue = Flow.integerToNote.table[integer];\n    if (!noteValue) throw new Vex$1.RERR('BadArguments', 'Unknown note value for integer: ' + integer);\n\n    return noteValue;\n  };\n\n  Flow.integerToNote.table = {\n    0: 'C',\n    1: 'C#',\n    2: 'D',\n    3: 'D#',\n    4: 'E',\n    5: 'F',\n    6: 'F#',\n    7: 'G',\n    8: 'G#',\n    9: 'A',\n    10: 'A#',\n    11: 'B'\n  };\n\n  Flow.tabToGlyph = function (fret) {\n    var glyph = null;\n    var width = 0;\n    var shift_y = 0;\n\n    if (fret.toString().toUpperCase() == 'X') {\n      glyph = 'v7f';\n      width = 7;\n      shift_y = -4.5;\n    } else {\n      width = Flow.textWidth(fret.toString());\n    }\n\n    return {\n      text: fret,\n      code: glyph,\n      width: width,\n      shift_y: shift_y\n    };\n  };\n\n  Flow.textWidth = function (text) {\n    return 6 * text.toString().length;\n  };\n\n  Flow.articulationCodes = function (artic) {\n    return Flow.articulationCodes.articulations[artic];\n  };\n\n  Flow.articulationCodes.articulations = {\n    'a.': { // Staccato\n      code: 'v23',\n      width: 4,\n      shift_right: -2,\n      shift_up: 8,\n      shift_down: 0,\n      between_lines: true\n    },\n    'av': { // Staccatissimo\n      code: 'v28',\n      width: 4,\n      shift_right: 0,\n      shift_up: 11,\n      shift_down: 5,\n      between_lines: true\n    },\n    'a>': { // Accent\n      code: 'v42',\n      width: 10,\n      shift_right: 5,\n      shift_up: 8,\n      shift_down: 1,\n      between_lines: true\n    },\n    'a-': { // Tenuto\n      code: 'v25',\n      width: 9,\n      shift_right: -4,\n      shift_up: 17,\n      shift_down: 10,\n      between_lines: true\n    },\n    'a^': { // Marcato\n      code: 'va',\n      width: 8,\n      shift_right: 0,\n      shift_up: -4,\n      shift_down: -2,\n      between_lines: false\n    },\n    'a+': { // Left hand pizzicato\n      code: 'v8b',\n      width: 9,\n      shift_right: -4,\n      shift_up: 12,\n      shift_down: 12,\n      between_lines: false\n    },\n    'ao': { // Snap pizzicato\n      code: 'v94',\n      width: 8,\n      shift_right: 0,\n      shift_up: -4,\n      shift_down: 6,\n      between_lines: false\n    },\n    'ah': { // Natural harmonic or open note\n      code: 'vb9',\n      width: 7,\n      shift_right: 0,\n      shift_up: -4,\n      shift_down: 4,\n      between_lines: false\n    },\n    'a@a': { // Fermata above staff\n      code: 'v43',\n      width: 25,\n      shift_right: 0,\n      shift_up: 8,\n      shift_down: 10,\n      between_lines: false\n    },\n    'a@u': { // Fermata below staff\n      code: 'v5b',\n      width: 25,\n      shift_right: 0,\n      shift_up: 0,\n      shift_down: -4,\n      between_lines: false\n    },\n    'a|': { // Bow up - up stroke\n      code: 'v75',\n      width: 8,\n      shift_right: 0,\n      shift_up: 8,\n      shift_down: 10,\n      between_lines: false\n    },\n    'am': { // Bow down - down stroke\n      code: 'v97',\n      width: 13,\n      shift_right: 0,\n      shift_up: 10,\n      shift_down: 12,\n      between_lines: false\n    },\n    'a,': { // Choked\n      code: 'vb3',\n      width: 6,\n      shift_right: 8,\n      shift_up: -4,\n      shift_down: 4,\n      between_lines: false\n    }\n  };\n\n  Flow.accidentalCodes = function (acc) {\n    return Flow.accidentalCodes.accidentals[acc];\n  };\n\n  Flow.accidentalCodes.accidentals = {\n    '#': {\n      code: 'v18',\n      width: 10,\n      gracenote_width: 4.5,\n      shift_right: 0,\n      shift_down: 0\n    },\n    '##': {\n      code: 'v7f',\n      width: 13,\n      gracenote_width: 6,\n      shift_right: -1,\n      shift_down: 0\n    },\n    'b': {\n      code: 'v44',\n      width: 8,\n      gracenote_width: 4.5,\n      shift_right: 0,\n      shift_down: 0\n    },\n    'bb': {\n      code: 'v26',\n      width: 14,\n      gracenote_width: 8,\n      shift_right: -3,\n      shift_down: 0\n    },\n    'n': {\n      code: 'v4e',\n      width: 8,\n      gracenote_width: 4.5,\n      shift_right: 0,\n      shift_down: 0\n    },\n    '{': { // Left paren for cautionary accidentals\n      code: 'v9c',\n      width: 5,\n      shift_right: 2,\n      shift_down: 0\n    },\n    '}': { // Right paren for cautionary accidentals\n      code: 'v84',\n      width: 5,\n      shift_right: 0,\n      shift_down: 0\n    },\n    'db': {\n      code: 'v9e',\n      width: 16,\n      shift_right: 0,\n      shift_down: 0\n    },\n    'd': {\n      code: 'vab',\n      width: 10,\n      shift_right: 0,\n      shift_down: 0\n    },\n    'bbs': {\n      code: 'v90',\n      width: 13,\n      shift_right: 0,\n      shift_down: 0\n    },\n    '++': {\n      code: 'v51',\n      width: 13,\n      shift_right: 0,\n      shift_down: 0\n    },\n    '+': {\n      code: 'v78',\n      width: 8,\n      shift_right: 0,\n      shift_down: 0\n    },\n    '+-': {\n      code: 'v8d',\n      width: 7,\n      shift_right: 0,\n      shift_down: 0\n    },\n    '++-': {\n      code: 'v7a',\n      width: 10,\n      shift_right: 0,\n      shift_down: 0\n    },\n    'bs': {\n      code: 'vb7',\n      width: 10,\n      shift_right: 0,\n      shift_down: 0\n    },\n    'bss': {\n      code: 'v39',\n      width: 10,\n      shift_right: 0,\n      shift_down: 0\n    }\n  };\n\n  Flow.accidentalColumnsTable = {\n    1: { a: [1], b: [1] },\n    2: { a: [1, 2] },\n    3: { a: [1, 3, 2], b: [1, 2, 1], second_on_bottom: [1, 2, 3] },\n    4: { a: [1, 3, 4, 2], b: [1, 2, 3, 1], spaced_out_tetrachord: [1, 2, 1, 2] },\n    5: { a: [1, 3, 5, 4, 2], b: [1, 2, 4, 3, 1],\n      spaced_out_pentachord: [1, 2, 3, 2, 1],\n      very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n    6: { a: [1, 3, 5, 6, 4, 2], b: [1, 2, 4, 5, 3, 1],\n      spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n      very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2] }\n  };\n\n  Flow.ornamentCodes = function (acc) {\n    return Flow.ornamentCodes.ornaments[acc];\n  };\n\n  Flow.ornamentCodes.ornaments = {\n    'mordent': {\n      code: 'v1e',\n      shift_right: 1,\n      shift_up: 0,\n      shift_down: 5,\n      width: 14\n    },\n    'mordent_inverted': {\n      code: 'v45',\n      shift_right: 1,\n      shift_up: 0,\n      shift_down: 5,\n      width: 14\n    },\n    'turn': {\n      code: 'v72',\n      shift_right: 1,\n      shift_up: 0,\n      shift_down: 5,\n      width: 20\n    },\n    'turn_inverted': {\n      code: 'v33',\n      shift_right: 1,\n      shift_up: 0,\n      shift_down: 6,\n      width: 20\n    },\n    'tr': {\n      code: 'v1f',\n      shift_right: 0,\n      shift_up: 5,\n      shift_down: 15,\n      width: 10\n    },\n    'upprall': {\n      code: 'v60',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'downprall': {\n      code: 'vb4',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'prallup': {\n      code: 'v6d',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'pralldown': {\n      code: 'v2c',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'upmordent': {\n      code: 'v29',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'downmordent': {\n      code: 'v68',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'lineprall': {\n      code: 'v20',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    },\n    'prallprall': {\n      code: 'v86',\n      shift_right: 1,\n      shift_up: -3,\n      shift_down: 6,\n      width: 20\n    }\n  };\n\n  Flow.keySignature = function (spec) {\n    var keySpec = Flow.keySignature.keySpecs[spec];\n\n    if (!keySpec) {\n      throw new Vex$1.RERR('BadKeySignature', \"Bad key signature spec: '\" + spec + \"'\");\n    }\n\n    if (!keySpec.acc) {\n      return [];\n    }\n\n    var notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n    var acc_list = [];\n    for (var i = 0; i < keySpec.num; ++i) {\n      var line = notes[i];\n      acc_list.push({ type: keySpec.acc, line: line });\n    }\n\n    return acc_list;\n  };\n\n  Flow.keySignature.keySpecs = {\n    'C': { acc: null, num: 0 },\n    'Am': { acc: null, num: 0 },\n    'F': { acc: 'b', num: 1 },\n    'Dm': { acc: 'b', num: 1 },\n    'Bb': { acc: 'b', num: 2 },\n    'Gm': { acc: 'b', num: 2 },\n    'Eb': { acc: 'b', num: 3 },\n    'Cm': { acc: 'b', num: 3 },\n    'Ab': { acc: 'b', num: 4 },\n    'Fm': { acc: 'b', num: 4 },\n    'Db': { acc: 'b', num: 5 },\n    'Bbm': { acc: 'b', num: 5 },\n    'Gb': { acc: 'b', num: 6 },\n    'Ebm': { acc: 'b', num: 6 },\n    'Cb': { acc: 'b', num: 7 },\n    'Abm': { acc: 'b', num: 7 },\n    'G': { acc: '#', num: 1 },\n    'Em': { acc: '#', num: 1 },\n    'D': { acc: '#', num: 2 },\n    'Bm': { acc: '#', num: 2 },\n    'A': { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    'E': { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    'B': { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 }\n  };\n\n  Flow.unicode = {\n    // Unicode accidentals\n    'sharp': String.fromCharCode(parseInt('266F', 16)),\n    'flat': String.fromCharCode(parseInt('266D', 16)),\n    'natural': String.fromCharCode(parseInt('266E', 16)),\n    // Major Chord\n    'triangle': String.fromCharCode(parseInt('25B3', 16)),\n    // half-diminished\n    'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n    // Diminished\n    'degrees': String.fromCharCode(parseInt('00B0', 16)),\n    'circle': String.fromCharCode(parseInt('25CB', 16))\n  };\n\n  Flow.keySignature.accidentalList = function (acc) {\n    if (acc == 'b') {\n      return [2, 0.5, 2.5, 1, 3, 1.5, 3.5];\n    } else if (acc == '#') {\n      return [0, 1.5, -0.5, 1, 2.5, 0.5, 2];\n    }\n  };\n\n  Flow.parseNoteDurationString = function (durationString) {\n    if (typeof durationString !== 'string') {\n      return null;\n    }\n\n    var regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n    var result = regexp.exec(durationString);\n    if (!result) {\n      return null;\n    }\n\n    var duration = result[1];\n    var dots = result[2].length;\n    var type = result[3];\n\n    if (type.length === 0) {\n      type = 'n';\n    }\n\n    return {\n      duration: duration,\n      dots: dots,\n      type: type\n    };\n  };\n\n  Flow.parseNoteData = function (noteData) {\n    var duration = noteData.duration;\n\n    // Preserve backwards-compatibility\n    var durationStringData = Flow.parseNoteDurationString(duration);\n    if (!durationStringData) {\n      return null;\n    }\n\n    var ticks = Flow.durationToTicks(durationStringData.duration);\n    if (ticks == null) {\n      return null;\n    }\n\n    var type = noteData.type;\n\n    if (type) {\n      if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n        return null;\n      }\n    } else {\n      type = durationStringData.type;\n      if (!type) {\n        type = 'n';\n      }\n    }\n\n    var dots = 0;\n    if (noteData.dots) {\n      dots = noteData.dots;\n    } else {\n      dots = durationStringData.dots;\n    }\n\n    if (typeof dots !== 'number') {\n      return null;\n    }\n\n    var currentTicks = ticks;\n\n    for (var i = 0; i < dots; i++) {\n      if (currentTicks <= 1) {\n        return null;\n      }\n\n      currentTicks = currentTicks / 2;\n      ticks += currentTicks;\n    }\n\n    return {\n      duration: durationStringData.duration,\n      type: type,\n      dots: dots,\n      ticks: ticks\n    };\n  };\n\n  // Used to convert duration aliases to the number based duration.\n  // If the input isn't an alias, simply return the input.\n  //\n  // example: 'q' -> '4', '8' -> '8'\n  Flow.sanitizeDuration = function (duration) {\n    var alias = Flow.durationAliases[duration];\n    if (alias !== undefined) {\n      duration = alias;\n    }\n\n    if (Flow.durationToTicks.durations[duration] === undefined) {\n      throw new Vex$1.RERR('BadArguments', 'The provided duration is not valid: ' + duration);\n    }\n\n    return duration;\n  };\n\n  // Convert the `duration` to an fraction\n  Flow.durationToFraction = function (duration) {\n    return new Fraction().parse(Flow.sanitizeDuration(duration));\n  };\n\n  // Convert the `duration` to an number\n  Flow.durationToNumber = function (duration) {\n    return Flow.durationToFraction(duration).value();\n  };\n\n  // Convert the `duration` to total ticks\n  Flow.durationToTicks = function (duration) {\n    duration = Flow.sanitizeDuration(duration);\n\n    var ticks = Flow.durationToTicks.durations[duration];\n    if (ticks === undefined) {\n      return null;\n    }\n\n    return ticks;\n  };\n\n  Flow.durationToTicks.durations = {\n    '1/2': Flow.RESOLUTION * 2,\n    '1': Flow.RESOLUTION / 1,\n    '2': Flow.RESOLUTION / 2,\n    '4': Flow.RESOLUTION / 4,\n    '8': Flow.RESOLUTION / 8,\n    '16': Flow.RESOLUTION / 16,\n    '32': Flow.RESOLUTION / 32,\n    '64': Flow.RESOLUTION / 64,\n    '128': Flow.RESOLUTION / 128,\n    '256': Flow.RESOLUTION / 256\n  };\n\n  Flow.durationAliases = {\n    'w': '1',\n    'h': '2',\n    'q': '4',\n\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    //\n    // TODO(0xfe): This needs to be cleaned up.\n    'b': '256'\n  };\n\n  Flow.durationToGlyph = function (duration, type) {\n    duration = Flow.sanitizeDuration(duration);\n\n    var code = Flow.durationToGlyph.duration_codes[duration];\n    if (code === undefined) {\n      return null;\n    }\n\n    if (!type) {\n      type = 'n';\n    }\n\n    var glyphTypeProperties = code.type[type];\n    if (glyphTypeProperties === undefined) {\n      return null;\n    }\n\n    return Vex$1.Merge(Vex$1.Merge({}, code.common), glyphTypeProperties);\n  };\n\n  Flow.durationToGlyph.duration_codes = {\n    '1/2': {\n      common: {\n        head_width: 22,\n        stem: false,\n        stem_offset: 0,\n        flag: false,\n        stem_up_extension: -Flow.STEM_HEIGHT,\n        stem_down_extension: -Flow.STEM_HEIGHT,\n        gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n        gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n        tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n        tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Breve note\n          code_head: 'v53'\n        },\n        'h': { // Breve note harmonic\n          code_head: 'v59'\n        },\n        'm': { // Breve note muted -\n          code_head: 'vf',\n          stem_offset: 0\n        },\n        'r': { // Breve rest\n          code_head: 'v31',\n          head_width: 24,\n          rest: true,\n          position: 'B/5',\n          dot_shiftY: 0.5\n        },\n        's': { // Breve note slash -\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '1': {\n      common: {\n        head_width: 16,\n        stem: false,\n        stem_offset: 0,\n        flag: false,\n        stem_up_extension: -Flow.STEM_HEIGHT,\n        stem_down_extension: -Flow.STEM_HEIGHT,\n        gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n        gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n        tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n        tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Whole note\n          code_head: 'v1d'\n        },\n        'h': { // Whole note harmonic\n          code_head: 'v46'\n        },\n        'm': { // Whole note muted\n          code_head: 'v92',\n          stem_offset: -3\n        },\n        'r': { // Whole rest\n          code_head: 'v5c',\n          head_width: 12,\n          rest: true,\n          position: 'D/5',\n          dot_shiftY: 0.5\n        },\n        's': { // Whole note slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '2': {\n      common: {\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: false,\n        stem_up_extension: 0,\n        stem_down_extension: 0,\n        gracenote_stem_up_extension: -14,\n        gracenote_stem_down_extension: -14,\n        tabnote_stem_up_extension: 0,\n        tabnote_stem_down_extension: 0,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Half note\n          code_head: 'v81'\n        },\n        'h': { // Half note harmonic\n          code_head: 'v2d'\n        },\n        'm': { // Half note muted\n          code_head: 'v95',\n          stem_offset: -3\n        },\n        'r': { // Half rest\n          code_head: 'vc',\n          head_width: 12,\n          stem: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: -0.5\n        },\n        's': { // Half note slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '4': {\n      common: {\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: false,\n        stem_up_extension: 0,\n        stem_down_extension: 0,\n        gracenote_stem_up_extension: -14,\n        gracenote_stem_down_extension: -14,\n        tabnote_stem_up_extension: 0,\n        tabnote_stem_down_extension: 0,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Quarter note\n          code_head: 'vb'\n        },\n        'h': { // Quarter harmonic\n          code_head: 'v22'\n        },\n        'm': { // Quarter muted\n          code_head: 'v3e',\n          stem_offset: -3\n        },\n        'r': { // Quarter rest\n          code_head: 'v7c',\n          head_width: 8,\n          stem: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: -0.5,\n          line_above: 1.5,\n          line_below: 1.5\n        },\n        's': { // Quarter slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '8': {\n      common: {\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: true,\n        beam_count: 1,\n        code_flag_upstem: 'v54',\n        code_flag_downstem: 'v9a',\n        stem_up_extension: 0,\n        stem_down_extension: 0,\n        gracenote_stem_up_extension: -14,\n        gracenote_stem_down_extension: -14,\n        tabnote_stem_up_extension: 0,\n        tabnote_stem_down_extension: 0,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Eighth note\n          code_head: 'vb'\n        },\n        'h': { // Eighth note harmonic\n          code_head: 'v22'\n        },\n        'm': { // Eighth note muted\n          code_head: 'v3e'\n        },\n        'r': { // Eighth rest\n          code_head: 'va5',\n          stem: false,\n          flag: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: -0.5,\n          line_above: 1.0,\n          line_below: 1.0\n        },\n        's': { // Eight slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '16': {\n      common: {\n        beam_count: 2,\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: true,\n        code_flag_upstem: 'v3f',\n        code_flag_downstem: 'v8f',\n        stem_up_extension: 4,\n        stem_down_extension: 0,\n        gracenote_stem_up_extension: -14,\n        gracenote_stem_down_extension: -14,\n        tabnote_stem_up_extension: 0,\n        tabnote_stem_down_extension: 0,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Sixteenth note\n          code_head: 'vb'\n        },\n        'h': { // Sixteenth note harmonic\n          code_head: 'v22'\n        },\n        'm': { // Sixteenth note muted\n          code_head: 'v3e'\n        },\n        'r': { // Sixteenth rest\n          code_head: 'v3c',\n          head_width: 13,\n          stem: false,\n          flag: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: -0.5,\n          line_above: 1.0,\n          line_below: 2.0\n        },\n        's': { // Sixteenth slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '32': {\n      common: {\n        beam_count: 3,\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: true,\n        code_flag_upstem: 'v47',\n        code_flag_downstem: 'v2a',\n        stem_up_extension: 13,\n        stem_down_extension: 9,\n        gracenote_stem_up_extension: -12,\n        gracenote_stem_down_extension: -12,\n        tabnote_stem_up_extension: 9,\n        tabnote_stem_down_extension: 5,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Thirty-second note\n          code_head: 'vb'\n        },\n        'h': { // Thirty-second harmonic\n          code_head: 'v22'\n        },\n        'm': { // Thirty-second muted\n          code_head: 'v3e'\n        },\n        'r': { // Thirty-second rest\n          code_head: 'v55',\n          head_width: 16,\n          stem: false,\n          flag: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: -1.5,\n          line_above: 2.0,\n          line_below: 2.0\n        },\n        's': { // Thirty-second slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '64': {\n      common: {\n        beam_count: 4,\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: true,\n        code_flag_upstem: 'va9',\n        code_flag_downstem: 'v58',\n        stem_up_extension: 17,\n        stem_down_extension: 13,\n        gracenote_stem_up_extension: -10,\n        gracenote_stem_down_extension: -10,\n        tabnote_stem_up_extension: 13,\n        tabnote_stem_down_extension: 9,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Sixty-fourth note\n          code_head: 'vb'\n        },\n        'h': { // Sixty-fourth harmonic\n          code_head: 'v22'\n        },\n        'm': { // Sixty-fourth muted\n          code_head: 'v3e'\n        },\n        'r': { // Sixty-fourth rest\n          code_head: 'v38',\n          head_width: 18,\n          stem: false,\n          flag: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: -1.5,\n          line_above: 2.0,\n          line_below: 3.0\n        },\n        's': { // Sixty-fourth slash\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    },\n    '128': {\n      common: {\n        beam_count: 5,\n        head_width: 10,\n        stem: true,\n        stem_offset: 0,\n        flag: true,\n        code_flag_upstem: 'v9b',\n        code_flag_downstem: 'v30',\n        stem_up_extension: 26,\n        stem_down_extension: 22,\n        gracenote_stem_up_extension: -8,\n        gracenote_stem_down_extension: -8,\n        tabnote_stem_up_extension: 22,\n        tabnote_stem_down_extension: 18,\n        dot_shiftY: 0,\n        line_above: 0,\n        line_below: 0\n      },\n      type: {\n        'n': { // Hundred-twenty-eight note\n          code_head: 'vb'\n        },\n        'h': { // Hundred-twenty-eight harmonic\n          code_head: 'v22'\n        },\n        'm': { // Hundred-twenty-eight muted\n          code_head: 'v3e'\n        },\n        'r': { // Hundred-twenty-eight rest\n          code_head: 'vaa',\n          head_width: 20,\n          stem: false,\n          flag: false,\n          rest: true,\n          position: 'B/4',\n          dot_shiftY: 1.5,\n          line_above: 3.0,\n          line_below: 3.0\n        },\n        's': { // Hundred-twenty-eight rest\n          // Drawn with canvas primitives\n          head_width: 15,\n          position: 'B/4'\n        }\n      }\n    }\n  };\n\n  // Some defaults\n  Flow.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: Flow.RESOLUTION\n  };\n\n  // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n  // Mohit Muthanna <mohit@muthanna.com>\n  //\n  // A rendering context for the Raphael backend.\n  //\n  // Copyright Mohit Cheppudira 2010\n\n  /** @constructor */\n  var CanvasContext = function () {\n    createClass(CanvasContext, null, [{\n      key: 'WIDTH',\n      get: function get() {\n        return 600;\n      }\n    }, {\n      key: 'HEIGHT',\n      get: function get() {\n        return 400;\n      }\n    }]);\n\n    function CanvasContext(context) {\n      classCallCheck(this, CanvasContext);\n\n      // Use a name that is unlikely to clash with a canvas context\n      // property\n      this.vexFlowCanvasContext = context;\n      if (!context.canvas) {\n        this.canvas = {\n          width: CanvasContext.WIDTH,\n          height: CanvasContext.HEIGHT\n        };\n      } else {\n        this.canvas = context.canvas;\n      }\n    }\n\n    createClass(CanvasContext, [{\n      key: 'clear',\n      value: function clear() {\n        this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      }\n\n      // Containers not implemented\n\n    }, {\n      key: 'openGroup',\n      value: function openGroup(cls, id, attrs) {}\n    }, {\n      key: 'closeGroup',\n      value: function closeGroup() {}\n    }, {\n      key: 'add',\n      value: function add(elem) {}\n    }, {\n      key: 'setFont',\n      value: function setFont(family, size, weight) {\n        this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n        return this;\n      }\n    }, {\n      key: 'setRawFont',\n      value: function setRawFont(font) {\n        this.vexFlowCanvasContext.font = font;\n        return this;\n      }\n    }, {\n      key: 'setFillStyle',\n      value: function setFillStyle(style) {\n        this.vexFlowCanvasContext.fillStyle = style;\n        return this;\n      }\n    }, {\n      key: 'setBackgroundFillStyle',\n      value: function setBackgroundFillStyle(style) {\n        this.background_fillStyle = style;\n        return this;\n      }\n    }, {\n      key: 'setStrokeStyle',\n      value: function setStrokeStyle(style) {\n        this.vexFlowCanvasContext.strokeStyle = style;\n        return this;\n      }\n    }, {\n      key: 'setShadowColor',\n      value: function setShadowColor(style) {\n        this.vexFlowCanvasContext.shadowColor = style;\n        return this;\n      }\n    }, {\n      key: 'setShadowBlur',\n      value: function setShadowBlur(blur) {\n        this.vexFlowCanvasContext.shadowBlur = blur;\n        return this;\n      }\n    }, {\n      key: 'setLineWidth',\n      value: function setLineWidth(width) {\n        this.vexFlowCanvasContext.lineWidth = width;\n        return this;\n      }\n    }, {\n      key: 'setLineCap',\n      value: function setLineCap(cap_type) {\n        this.vexFlowCanvasContext.lineCap = cap_type;\n        return this;\n      }\n\n      // setLineDash: is the one native method in a canvas context\n      // that begins with set, therefore we don't bolster the method\n      // if it already exists (see renderer.bolsterCanvasContext).\n      // If it doesn't exist, we bolster it and assume it's looking for\n      // a ctx.lineDash method, as previous versions of VexFlow\n      // expected.\n\n    }, {\n      key: 'setLineDash',\n      value: function setLineDash(dash) {\n        this.vexFlowCanvasContext.lineDash = dash;\n        return this;\n      }\n    }, {\n      key: 'scale',\n      value: function scale(x, y) {\n        return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n      }\n    }, {\n      key: 'resize',\n      value: function resize(width, height) {\n        return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n      }\n    }, {\n      key: 'rect',\n      value: function rect(x, y, width, height) {\n        return this.vexFlowCanvasContext.rect(x, y, width, height);\n      }\n    }, {\n      key: 'fillRect',\n      value: function fillRect(x, y, width, height) {\n        return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n      }\n    }, {\n      key: 'clearRect',\n      value: function clearRect(x, y, width, height) {\n        return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n      }\n    }, {\n      key: 'beginPath',\n      value: function beginPath() {\n        return this.vexFlowCanvasContext.beginPath();\n      }\n    }, {\n      key: 'moveTo',\n      value: function moveTo(x, y) {\n        return this.vexFlowCanvasContext.moveTo(x, y);\n      }\n    }, {\n      key: 'lineTo',\n      value: function lineTo(x, y) {\n        return this.vexFlowCanvasContext.lineTo(x, y);\n      }\n    }, {\n      key: 'bezierCurveTo',\n      value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n        return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n      }\n    }, {\n      key: 'quadraticCurveTo',\n      value: function quadraticCurveTo(x1, y1, x, y) {\n        return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n      }\n\n      // This is an attempt (hack) to simulate the HTML5 canvas\n      // arc method.\n\n    }, {\n      key: 'arc',\n      value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n      }\n\n      // Adapted from the source for Raphael's Element.glow\n\n    }, {\n      key: 'glow',\n      value: function glow() {\n        return this.vexFlowCanvasContext.glow();\n      }\n    }, {\n      key: 'fill',\n      value: function fill() {\n        return this.vexFlowCanvasContext.fill();\n      }\n    }, {\n      key: 'stroke',\n      value: function stroke() {\n        return this.vexFlowCanvasContext.stroke();\n      }\n    }, {\n      key: 'closePath',\n      value: function closePath() {\n        return this.vexFlowCanvasContext.closePath();\n      }\n    }, {\n      key: 'measureText',\n      value: function measureText(text) {\n        return this.vexFlowCanvasContext.measureText(text);\n      }\n    }, {\n      key: 'fillText',\n      value: function fillText(text, x, y) {\n        return this.vexFlowCanvasContext.fillText(text, x, y);\n      }\n    }, {\n      key: 'save',\n      value: function save() {\n        return this.vexFlowCanvasContext.save();\n      }\n    }, {\n      key: 'restore',\n      value: function restore() {\n        return this.vexFlowCanvasContext.restore();\n      }\n    }]);\n    return CanvasContext;\n  }();\n\n  // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n  //\n  // ## Description\n  // A rendering context for the Raphael backend.\n  //\n  // ## Warning: Deprecated for SVGContext\n  // Except in instances where SVG support for IE < 9.0 is\n  // needed, SVGContext is recommended.\n\n  var RaphaelContext = function () {\n    function RaphaelContext(element) {\n      classCallCheck(this, RaphaelContext);\n\n      this.element = element;\n      this.paper = Raphael(element);\n      this.path = '';\n      this.pen = { x: 0, y: 0 };\n      this.lineWidth = 1.0;\n      this.state = {\n        scale: { x: 1, y: 1 },\n        font_family: 'Arial',\n        font_size: 8,\n        font_weight: 800\n      };\n\n      this.attributes = {\n        'stroke-width': 0.3,\n        'fill': 'black',\n        'stroke': 'black',\n        'font': '10pt Arial'\n      };\n\n      this.background_attributes = {\n        'stroke-width': 0,\n        'fill': 'white',\n        'stroke': 'white',\n        'font': '10pt Arial'\n      };\n\n      this.shadow_attributes = {\n        width: 0,\n        color: 'black'\n      };\n\n      this.state_stack = [];\n    }\n\n    // Containers not implemented\n\n\n    createClass(RaphaelContext, [{\n      key: 'openGroup',\n      value: function openGroup(cls, id, attrs) {}\n    }, {\n      key: 'closeGroup',\n      value: function closeGroup() {}\n    }, {\n      key: 'add',\n      value: function add(elem) {}\n    }, {\n      key: 'setFont',\n      value: function setFont(family, size, weight) {\n        this.state.font_family = family;\n        this.state.font_size = size;\n        this.state.font_weight = weight;\n        this.attributes.font = (this.state.font_weight || '') + ' ' + this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n        return this;\n      }\n    }, {\n      key: 'setRawFont',\n      value: function setRawFont(font) {\n        this.attributes.font = font;\n        return this;\n      }\n    }, {\n      key: 'setFillStyle',\n      value: function setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n      }\n    }, {\n      key: 'setBackgroundFillStyle',\n      value: function setBackgroundFillStyle(style) {\n        this.background_attributes.fill = style;\n        this.background_attributes.stroke = style;\n        return this;\n      }\n    }, {\n      key: 'setStrokeStyle',\n      value: function setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n      }\n    }, {\n      key: 'setShadowColor',\n      value: function setShadowColor(style) {\n        this.shadow_attributes.color = style;\n        return this;\n      }\n    }, {\n      key: 'setShadowBlur',\n      value: function setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n      }\n    }, {\n      key: 'setLineWidth',\n      value: function setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n      }\n\n      // Empty because there is no equivalent in SVG\n\n    }, {\n      key: 'setLineDash',\n      value: function setLineDash() {\n        return this;\n      }\n    }, {\n      key: 'setLineCap',\n      value: function setLineCap() {\n        return this;\n      }\n    }, {\n      key: 'scale',\n      value: function scale(x, y) {\n        this.state.scale = { x: x, y: y };\n        // The scale() method is deprecated as of Raphael.JS 2.0, and\n        // can no longer be used as an option in an Element.attr() call.\n        // It is preserved here for users running earlier versions of\n        // Raphael.JS, though it has no effect on the SVG output in\n        // Raphael 2 and higher.\n        this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n        this.attributes.scale = x + ',' + y + ',0,0';\n        this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n        this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n        this.background_attributes.font = this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n        return this;\n      }\n    }, {\n      key: 'clear',\n      value: function clear() {\n        this.paper.clear();\n      }\n    }, {\n      key: 'resize',\n      value: function resize(width, height) {\n        this.element.style.width = width;\n        this.paper.setSize(width, height);\n        return this;\n      }\n\n      // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n      // is resized.\n      //\n      // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n\n    }, {\n      key: 'setViewBox',\n      value: function setViewBox(viewBox) {\n        this.paper.canvas.setAttribute('viewBox', viewBox);\n      }\n    }, {\n      key: 'rect',\n      value: function rect(x, y, width, height) {\n        if (height < 0) {\n          y += height;\n          height = -height;\n        }\n\n        this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes).attr('fill', 'none').attr('stroke-width', this.lineWidth);\n        return this;\n      }\n    }, {\n      key: 'fillRect',\n      value: function fillRect(x, y, width, height) {\n        if (height < 0) {\n          y += height;\n          height = -height;\n        }\n\n        this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n        return this;\n      }\n    }, {\n      key: 'clearRect',\n      value: function clearRect(x, y, width, height) {\n        if (height < 0) {\n          y += height;\n          height = -height;\n        }\n\n        this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.background_attributes);\n        return this;\n      }\n    }, {\n      key: 'beginPath',\n      value: function beginPath() {\n        this.path = '';\n        this.pen.x = 0;\n        this.pen.y = 0;\n        return this;\n      }\n    }, {\n      key: 'moveTo',\n      value: function moveTo(x, y) {\n        this.path += 'M' + x + ',' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n    }, {\n      key: 'lineTo',\n      value: function lineTo(x, y) {\n        this.path += 'L' + x + ',' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n    }, {\n      key: 'bezierCurveTo',\n      value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this.path += 'C' + x1 + ',' + y1 + ',' + x2 + ',' + y2 + ',' + x + ',' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n    }, {\n      key: 'quadraticCurveTo',\n      value: function quadraticCurveTo(x1, y1, x, y) {\n        this.path += 'Q' + x1 + ',' + y1 + ',' + x + ',' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n\n      // This is an attempt (hack) to simulate the HTML5 canvas\n      // arc method.\n\n    }, {\n      key: 'arc',\n      value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        function normalizeAngle(angle) {\n          while (angle < 0) {\n            angle += Math.PI * 2;\n          }\n\n          while (angle > Math.PI * 2) {\n            angle -= Math.PI * 2;\n          }\n          return angle;\n        }\n\n        startAngle = normalizeAngle(startAngle);\n        endAngle = normalizeAngle(endAngle);\n\n        if (startAngle > endAngle) {\n          var tmp = startAngle;\n          startAngle = endAngle;\n          endAngle = tmp;\n          antiClockwise = !antiClockwise;\n        }\n\n        var delta = endAngle - startAngle;\n\n        if (delta > Math.PI) {\n          this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n          this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n        } else {\n          this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n        }\n        return this;\n      }\n    }, {\n      key: 'arcHelper',\n      value: function arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n        var x1 = x + radius * Math.cos(startAngle);\n        var y1 = y + radius * Math.sin(startAngle);\n\n        var x2 = x + radius * Math.cos(endAngle);\n        var y2 = y + radius * Math.sin(endAngle);\n\n        var largeArcFlag = 0;\n        var sweepFlag = 0;\n        if (antiClockwise) {\n          sweepFlag = 1;\n          if (endAngle - startAngle < Math.PI) largeArcFlag = 1;\n        } else if (endAngle - startAngle > Math.PI) {\n          largeArcFlag = 1;\n        }\n\n        this.path += 'M' + x1 + ',' + y1 + ',' + 'A' + radius + ',' + radius + ',' + '0,' + largeArcFlag + ',' + sweepFlag + ',' + x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n      }\n\n      // Adapted from the source for Raphael's Element.glow\n\n    }, {\n      key: 'glow',\n      value: function glow() {\n        var out = this.paper.set();\n        if (this.shadow_attributes.width > 0) {\n          var sa = this.shadow_attributes;\n          var num_paths = sa.width / 2;\n          for (var i = 1; i <= num_paths; i++) {\n            out.push(this.paper.path(this.path).attr({\n              stroke: sa.color,\n              'stroke-linejoin': 'round',\n              'stroke-linecap': 'round',\n              'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n              opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n              // See note in this.scale(): In Raphael the scale() method\n              // is deprecated and removed as of Raphael 2.0 and replaced\n              // by the transform() method.  It is preserved here for\n              // users with earlier versions of Raphael, but has no effect\n              // on the output SVG in Raphael 2.0+.\n              transform: this.attributes.transform,\n              scale: this.attributes.scale\n            }));\n          }\n        }\n        return out;\n      }\n    }, {\n      key: 'fill',\n      value: function fill() {\n        var elem = this.paper.path(this.path).attr(this.attributes).attr('stroke-width', 0);\n        this.glow(elem);\n        return this;\n      }\n    }, {\n      key: 'stroke',\n      value: function stroke() {\n        // The first line of code below is, unfortunately, a bit of a hack:\n        // Raphael's transform() scaling does not scale the stroke-width, so\n        // in order to scale a stroke, we have to manually scale the\n        // stroke-width.\n        //\n        // This works well so long as the X & Y states for this.scale() are\n        // relatively similar.  However, if they are very different, we\n        // would expect horizontal and vertical lines to have different\n        // stroke-widths.\n        //\n        // In the future, if we want to support very divergent values for\n        // horizontal and vertical scaling, we may want to consider\n        // implementing SVG scaling with properties of the SVG viewBox &\n        // viewPort and removing it entirely from the Element.attr() calls.\n        // This would more closely parallel the approach taken in\n        // canvascontext.js as well.\n\n        var strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n        var elem = this.paper.path(this.path).attr(this.attributes).attr('fill', 'none').attr('stroke-width', strokeWidth);\n        this.glow(elem);\n        return this;\n      }\n    }, {\n      key: 'closePath',\n      value: function closePath() {\n        this.path += 'Z';\n        return this;\n      }\n    }, {\n      key: 'measureText',\n      value: function measureText(text) {\n        var txt = this.paper.text(0, 0, text).attr(this.attributes).attr('fill', 'none').attr('stroke', 'none');\n        var bounds = txt.getBBox();\n        txt.remove();\n\n        return {\n          width: bounds.width,\n          height: bounds.height\n        };\n      }\n    }, {\n      key: 'fillText',\n      value: function fillText(text, x, y) {\n        this.paper.text(x + this.measureText(text).width / 2, y - this.state.font_size / (2.25 * this.state.scale.y), text).attr(this.attributes);\n        return this;\n      }\n    }, {\n      key: 'save',\n      value: function save() {\n        // TODO(mmuthanna): State needs to be deep-copied.\n        this.state_stack.push({\n          state: {\n            font_family: this.state.font_family\n          },\n          attributes: {\n            font: this.attributes.font,\n            fill: this.attributes.fill,\n            stroke: this.attributes.stroke,\n            'stroke-width': this.attributes['stroke-width']\n          },\n          shadow_attributes: {\n            width: this.shadow_attributes.width,\n            color: this.shadow_attributes.color\n          }\n        });\n        return this;\n      }\n    }, {\n      key: 'restore',\n      value: function restore() {\n        // TODO(0xfe): State needs to be deep-restored.\n        var state = this.state_stack.pop();\n        this.state.font_family = state.state.font_family;\n        this.attributes.font = state.attributes.font;\n        this.attributes.fill = state.attributes.fill;\n        this.attributes.stroke = state.attributes.stroke;\n        this.attributes['stroke-width'] = state.attributes['stroke-width'];\n        this.shadow_attributes.width = state.shadow_attributes.width;\n        this.shadow_attributes.color = state.shadow_attributes.color;\n        return this;\n      }\n    }]);\n    return RaphaelContext;\n  }();\n\n  var SVGContext = function () {\n    function SVGContext(element) {\n      classCallCheck(this, SVGContext);\n\n      // element is the parent DOM object\n      this.element = element;\n      // Create the SVG in the SVG namespace:\n      this.svgNS = 'http://www.w3.org/2000/svg';\n      var svg = this.create('svg');\n      // Add it to the canvas:\n      this.element.appendChild(svg);\n\n      // Point to it:\n      this.svg = svg;\n      this.groups = [this.svg]; // Create the group stack\n      this.parent = this.svg;\n\n      this.path = '';\n      this.pen = { x: 0, y: 0 };\n      this.lineWidth = 1.0;\n      this.state = {\n        scale: { x: 1, y: 1 },\n        'font-family': 'Arial',\n        'font-size': '8pt',\n        'font-weight': 'normal'\n      };\n\n      this.attributes = {\n        'stroke-width': 0.3,\n        'fill': 'black',\n        'stroke': 'black',\n        'stroke-dasharray': 'none',\n        'font-family': 'Arial',\n        'font-size': '10pt',\n        'font-weight': 'normal',\n        'font-style': 'normal'\n      };\n\n      this.background_attributes = {\n        'stroke-width': 0,\n        'fill': 'white',\n        'stroke': 'white',\n        'stroke-dasharray': 'none',\n        'font-family': 'Arial',\n        'font-size': '10pt',\n        'font-weight': 'normal',\n        'font-style': 'normal'\n      };\n\n      this.shadow_attributes = {\n        width: 0,\n        color: 'black'\n      };\n\n      this.state_stack = [];\n\n      // Test for Internet Explorer\n      this.iePolyfill();\n    }\n\n    createClass(SVGContext, [{\n      key: 'create',\n      value: function create(svgElementType) {\n        return document.createElementNS(this.svgNS, svgElementType);\n      }\n\n      // Allow grouping elements in containers for interactivity.\n\n    }, {\n      key: 'openGroup',\n      value: function openGroup(cls, id, attrs) {\n        var group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls) group.setAttribute('class', Vex$1.Prefix(cls));\n        if (id) group.setAttribute('id', Vex$1.Prefix(id));\n\n        if (attrs && attrs.pointerBBox) {\n          group.setAttribute('pointer-events', 'bounding-box');\n        }\n        return group;\n      }\n    }, {\n      key: 'closeGroup',\n      value: function closeGroup() {\n        var group = this.groups.pop();\n        this.parent = this.groups[this.groups.length - 1];\n      }\n    }, {\n      key: 'add',\n      value: function add(elem) {\n        this.parent.appendChild(elem);\n      }\n\n      // Tests if the browser is Internet Explorer; if it is,\n      // we do some tricks to improve text layout.  See the\n      // note at ieMeasureTextFix() for details.\n\n    }, {\n      key: 'iePolyfill',\n      value: function iePolyfill() {\n        if (typeof navigator !== 'undefined') {\n          this.ie = /MSIE 9/i.test(navigator.userAgent) || /MSIE 10/i.test(navigator.userAgent) || /rv:11\\.0/i.test(navigator.userAgent) || /Trident/i.test(navigator.userAgent);\n        }\n      }\n\n      // ### Styling & State Methods:\n\n    }, {\n      key: 'setFont',\n      value: function setFont(family, size, weight) {\n        // Unlike canvas, in SVG italic is handled by font-style,\n        // not weight. So: we search the weight argument and\n        // apply bold and italic to weight and style respectively.\n        var bold = false;\n        var italic = false;\n        var style = 'normal';\n        // Weight might also be a number (200, 400, etc...) so we\n        // test its type to be sure we have access to String methods.\n        if (typeof weight == 'string') {\n          // look for \"italic\" in the weight:\n          if (weight.indexOf('italic') !== -1) {\n            weight = weight.replace(/italic/g, '');\n            italic = true;\n          }\n          // look for \"bold\" in weight\n          if (weight.indexOf('bold') !== -1) {\n            weight = weight.replace(/bold/g, '');\n            bold = true;\n          }\n          // remove any remaining spaces\n          weight = weight.replace(/ /g, '');\n        }\n        weight = bold ? 'bold' : weight;\n        weight = typeof weight === 'undefined' || weight === '' ? 'normal' : weight;\n\n        style = italic ? 'italic' : style;\n\n        var fontAttributes = {\n          'font-family': family,\n          'font-size': size + 'pt',\n          'font-weight': weight,\n          'font-style': style\n        };\n\n        // Store the font size so that if the browser is Internet\n        // Explorer we can fix its calculations of text width.\n        this.fontSize = Number(size);\n\n        Vex$1.Merge(this.attributes, fontAttributes);\n        Vex$1.Merge(this.state, fontAttributes);\n\n        return this;\n      }\n    }, {\n      key: 'setRawFont',\n      value: function setRawFont(font) {\n        font = font.trim();\n        // Assumes size first, splits on space -- which is presently\n        // how all existing modules are calling this.\n        var fontArray = font.split(' ');\n\n        this.attributes['font-family'] = fontArray[1];\n        this.state['font-family'] = fontArray[1];\n\n        this.attributes['font-size'] = fontArray[0];\n        this.state['font-size'] = fontArray[0];\n\n        // Saves fontSize for IE polyfill\n        this.fontSize = Number(fontArray[0].match(/\\d+/));\n        return this;\n      }\n    }, {\n      key: 'setFillStyle',\n      value: function setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n      }\n    }, {\n      key: 'setBackgroundFillStyle',\n      value: function setBackgroundFillStyle(style) {\n        this.background_attributes.fill = style;\n        this.background_attributes.stroke = style;\n        return this;\n      }\n    }, {\n      key: 'setStrokeStyle',\n      value: function setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n      }\n    }, {\n      key: 'setShadowColor',\n      value: function setShadowColor(style) {\n        this.shadow_attributes.color = style;\n        return this;\n      }\n    }, {\n      key: 'setShadowBlur',\n      value: function setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n      }\n    }, {\n      key: 'setLineWidth',\n      value: function setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n      }\n\n      // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n\n    }, {\n      key: 'setLineDash',\n      value: function setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n          lineDash = lineDash.join(', ');\n          this.attributes['stroke-dasharray'] = lineDash;\n          return this;\n        } else {\n          throw new Vex$1.RERR('ArgumentError', 'lineDash must be an array of integers.');\n        }\n      }\n    }, {\n      key: 'setLineCap',\n      value: function setLineCap(lineCap) {\n        this.attributes['stroke-linecap'] = lineCap;\n        return this;\n      }\n\n      // ### Sizing & Scaling Methods:\n\n      // TODO (GCR): See note at scale() -- seperate our internal\n      // conception of pixel-based width/height from the style.width\n      // and style.height properties eventually to allow users to\n      // apply responsive sizing attributes to the SVG.\n\n    }, {\n      key: 'resize',\n      value: function resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width;\n        var attributes = {\n          width: width,\n          height: height\n        };\n        this.applyAttributes(this.svg, attributes);\n        return this;\n      }\n    }, {\n      key: 'scale',\n      value: function scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas or Raphael contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n\n        this.state.scale = { x: x, y: y };\n        var visibleWidth = this.width / x;\n        var visibleHeight = this.height / y;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n        return this;\n      }\n    }, {\n      key: 'setViewBox',\n      value: function setViewBox(xMin, yMin, width, height) {\n        // Override for \"x y w h\" style:\n        if (arguments.length == 1) this.svg.setAttribute('viewBox', viewBox);else {\n          var viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n          this.svg.setAttribute('viewBox', viewBoxString);\n        }\n      }\n\n      // ### Drawing helper methods:\n\n    }, {\n      key: 'applyAttributes',\n      value: function applyAttributes(element, attributes) {\n        for (var propertyName in attributes) {\n          element.setAttributeNS(null, propertyName, attributes[propertyName]);\n        }\n        return element;\n      }\n\n      // ### Shape & Path Methods:\n\n    }, {\n      key: 'clear',\n      value: function clear() {\n        // Clear the SVG by removing all inner children.\n\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n\n        while (this.svg.lastChild) {\n          this.svg.removeChild(this.svg.lastChild);\n        }\n\n        // Replace the viewbox attribute we just removed:\n        this.scale(this.state.scale.x, this.state.scale.y);\n      }\n\n      // ## Rectangles:\n\n    }, {\n      key: 'rect',\n      value: function rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attribs by\n        // flipping the rectangle on its head:\n        if (height < 0) {\n          y += height;\n          height *= -1;\n        }\n\n        // Create the rect & style it:\n        var rectangle = this.create('rect');\n        if (typeof attributes === 'undefined') attributes = {\n          fill: 'none',\n          'stroke-width': this.lineWidth,\n          stroke: 'black'\n        };\n        Vex$1.Merge(attributes, {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n\n        this.applyAttributes(rectangle, attributes);\n\n        this.add(rectangle);\n        return this;\n      }\n    }, {\n      key: 'fillRect',\n      value: function fillRect(x, y, width, height) {\n        if (height < 0) {\n          y += height;\n          height *= -1;\n        }\n\n        this.rect(x, y, width - 0.5, height - 0.5, this.attributes);\n        return this;\n      }\n    }, {\n      key: 'clearRect',\n      value: function clearRect(x, y, width, height) {\n        // TODO(GCR): Improve implementation of this...\n        // Currently it draws a box of the background color, rather\n        // than creating alpha through lower z-levels.\n        //\n        // See the implementation of this in SVGKit:\n        // http://sourceforge.net/projects/svgkit/\n        // as a starting point.\n        //\n        // Adding a large number of transform paths (as we would\n        // have to do) could be a real performance hit.  Since\n        // tabNote seems to be the only module that makes use of this\n        // it may be worth creating a seperate tabStave that would\n        // draw lines around locations of tablature fingering.\n        //\n\n        if (height < 0) this.flipRectangle(arguments);\n\n        this.rect(x, y, width - 0.5, height - 0.5, this.background_attributes);\n        return this;\n      }\n\n      // ## Paths:\n\n    }, {\n      key: 'beginPath',\n      value: function beginPath() {\n        this.path = '';\n        this.pen.x = 0;\n        this.pen.y = 0;\n        return this;\n      }\n    }, {\n      key: 'moveTo',\n      value: function moveTo(x, y) {\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n    }, {\n      key: 'lineTo',\n      value: function lineTo(x, y) {\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n    }, {\n      key: 'bezierCurveTo',\n      value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n    }, {\n      key: 'quadraticCurveTo',\n      value: function quadraticCurveTo(x1, y1, x, y) {\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n      }\n\n      // This is an attempt (hack) to simulate the HTML5 canvas\n      // arc method.\n\n    }, {\n      key: 'arc',\n      value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        function normalizeAngle(angle) {\n          while (angle < 0) {\n            angle += Math.PI * 2;\n          }\n\n          while (angle > Math.PI * 2) {\n            angle -= Math.PI * 2;\n          }\n          return angle;\n        }\n\n        startAngle = normalizeAngle(startAngle);\n        endAngle = normalizeAngle(endAngle);\n\n        if (startAngle > endAngle) {\n          var tmp = startAngle;\n          startAngle = endAngle;\n          endAngle = tmp;\n          antiClockwise = !antiClockwise;\n        }\n\n        var delta = endAngle - startAngle;\n\n        if (delta > Math.PI) {\n          this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n          this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n        } else {\n          this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n        }\n        return this;\n      }\n    }, {\n      key: 'arcHelper',\n      value: function arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n        var x1 = x + radius * Math.cos(startAngle);\n        var y1 = y + radius * Math.sin(startAngle);\n\n        var x2 = x + radius * Math.cos(endAngle);\n        var y2 = y + radius * Math.sin(endAngle);\n\n        var largeArcFlag = 0;\n        var sweepFlag = 0;\n        if (antiClockwise) {\n          sweepFlag = 1;\n          if (endAngle - startAngle < Math.PI) largeArcFlag = 1;\n        } else if (endAngle - startAngle > Math.PI) {\n          largeArcFlag = 1;\n        }\n\n        this.path += 'M' + x1 + ' ' + y1 + ' ' + 'A' + radius + ' ' + radius + ' ' + '0 ' + largeArcFlag + ' ' + sweepFlag + ' ' + x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n      }\n    }, {\n      key: 'closePath',\n      value: function closePath() {\n        this.path += 'Z';\n\n        return this;\n      }\n\n      // Adapted from the source for Raphael's Element.glow\n\n    }, {\n      key: 'glow',\n      value: function glow() {\n        // Calculate the width & paths of the glow:\n        if (this.shadow_attributes.width > 0) {\n          var sa = this.shadow_attributes;\n          var num_paths = sa.width / 2;\n          // Stroke at varying widths to create effect of gaussian blur:\n          for (var i = 1; i <= num_paths; i++) {\n            var attributes = {\n              stroke: sa.color,\n              'stroke-linejoin': 'round',\n              'stroke-linecap': 'round',\n              'stroke-width': +(sa.width * 0.4 / num_paths * i).toFixed(3),\n              opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3)\n            };\n\n            var path = this.create('path');\n            attributes.d = this.path;\n            this.applyAttributes(path, attributes);\n            this.add(path);\n          }\n        }\n        return this;\n      }\n    }, {\n      key: 'fill',\n      value: function fill(attributes) {\n        // If our current path is set to glow, make it glow\n        this.glow();\n\n        var path = this.create('path');\n        if (typeof attributes === 'undefined') {\n          attributes = {};\n          Vex$1.Merge(attributes, this.attributes);\n          attributes.stroke = 'none';\n        }\n\n        attributes.d = this.path;\n\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n      }\n    }, {\n      key: 'stroke',\n      value: function stroke() {\n        // If our current path is set to glow, make it glow.\n        this.glow();\n\n        var path = this.create('path');\n        var attributes = {};\n        Vex$1.Merge(attributes, this.attributes);\n        attributes.fill = 'none';\n        attributes['stroke-width'] = this.lineWidth;\n        attributes.d = this.path;\n\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n      }\n\n      // ## Text Methods:\n    }, {\n      key: 'measureText',\n      value: function measureText(text) {\n        var txt = this.create('text');\n        if (typeof txt.getBBox !== 'function') return { x: 0, y: 0, width: 0, height: 0 };\n\n        txt.textContent = text;\n        this.applyAttributes(txt, this.attributes);\n\n        // Temporarily add it to the document for measurement.\n        this.svg.appendChild(txt);\n\n        var bbox = txt.getBBox();\n        if (this.ie && text !== '' && this.attributes['font-style'] == 'italic') bbox = this.ieMeasureTextFix(bbox, text);\n\n        this.svg.removeChild(txt);\n        return bbox;\n      }\n    }, {\n      key: 'ieMeasureTextFix',\n      value: function ieMeasureTextFix(bbox, text) {\n        // Internet Explorer over-pads text in italics,\n        // resulting in giant width estimates for measureText.\n        // To fix this, we use this formula, tested against\n        // ie 11:\n        // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n        // And then subtract the overestimate from calculated width.\n\n        var fontSize = Number(this.fontSize);\n        var m = 1.196;\n        var b = 1.9598;\n        var widthCorrection = m * fontSize + b;\n        var width = bbox.width - widthCorrection;\n        var height = bbox.height - 1.5;\n\n        // Get non-protected copy:\n        var box = {\n          x: bbox.x,\n          y: bbox.y,\n          width: width,\n          height: height\n        };\n\n        return box;\n      }\n    }, {\n      key: 'fillText',\n      value: function fillText(text, x, y) {\n        var attributes = {};\n        Vex$1.Merge(attributes, this.attributes);\n        attributes.stroke = 'none';\n        attributes.x = x;\n        attributes.y = y;\n\n        var txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n      }\n    }, {\n      key: 'save',\n      value: function save() {\n        // TODO(mmuthanna): State needs to be deep-copied.\n        this.state_stack.push({\n          state: {\n            'font-family': this.state['font-family'],\n            'font-weight': this.state['font-weight'],\n            'font-style': this.state['font-style'],\n            'font-size': this.state['font-size']\n          },\n          attributes: {\n            'font-family': this.attributes['font-family'],\n            'font-weight': this.attributes['font-weight'],\n            'font-style': this.attributes['font-style'],\n            'font-size': this.attributes['font-size'],\n            fill: this.attributes.fill,\n            stroke: this.attributes.stroke,\n            'stroke-width': this.attributes['stroke-width'],\n            'stroke-dasharray': this.attributes['stroke-dasharray']\n          },\n          shadow_attributes: {\n            width: this.shadow_attributes.width,\n            color: this.shadow_attributes.color\n          }\n        });\n        return this;\n      }\n    }, {\n      key: 'restore',\n      value: function restore() {\n        // TODO(0xfe): State needs to be deep-restored.\n        var state = this.state_stack.pop();\n        this.state['font-family'] = state.state['font-family'];\n        this.state['font-weight'] = state.state['font-weight'];\n        this.state['font-style'] = state.state['font-style'];\n        this.state['font-size'] = state.state['font-size'];\n\n        this.attributes['font-family'] = state.attributes['font-family'];\n        this.attributes['font-weight'] = state.attributes['font-weight'];\n        this.attributes['font-style'] = state.attributes['font-style'];\n        this.attributes['font-size'] = state.attributes['font-size'];\n\n        this.attributes.fill = state.attributes.fill;\n        this.attributes.stroke = state.attributes.stroke;\n        this.attributes['stroke-width'] = state.attributes['stroke-width'];\n        this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n        this.shadow_attributes.width = state.shadow_attributes.width;\n        this.shadow_attributes.color = state.shadow_attributes.color;\n        return this;\n      }\n    }]);\n    return SVGContext;\n  }();\n\n  var _lastContext = null;\n\n  var Renderer = function () {\n    createClass(Renderer, null, [{\n      key: 'buildContext',\n      value: function buildContext(sel, backend, width, height, background) {\n        var renderer = new Renderer(sel, backend);\n        if (width && height) {\n          renderer.resize(width, height);\n        }\n\n        if (!background) background = '#FFF';\n        var ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n      }\n    }, {\n      key: 'getCanvasContext',\n      value: function getCanvasContext(sel, width, height, background) {\n        return Renderer.buildContext(sel, Renderer.Backends.CANVAS, width, height, background);\n      }\n    }, {\n      key: 'getRaphaelContext',\n      value: function getRaphaelContext(sel, width, height, background) {\n        return Renderer.buildContext(sel, Renderer.Backends.RAPHAEL, width, height, background);\n      }\n    }, {\n      key: 'getSVGContext',\n      value: function getSVGContext(sel, width, height, background) {\n        return Renderer.buildContext(sel, Renderer.Backends.SVG, width, height, background);\n      }\n    }, {\n      key: 'bolsterCanvasContext',\n      value: function bolsterCanvasContext(ctx) {\n        if (Renderer.USE_CANVAS_PROXY) {\n          return new CanvasContext(ctx);\n        }\n\n        var methods = ['clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle', 'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth', 'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup'];\n        ctx.vexFlowCanvasContext = ctx;\n\n        for (var i in methods) {\n          var method = methods[i];\n          ctx[method] = ctx[method] || CanvasContext.prototype[method];\n        }\n\n        return ctx;\n      }\n\n      // Draw a dashed line (horizontal, vertical or diagonal\n      // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n      // setting the second number to 0 draws a solid line.\n\n    }, {\n      key: 'drawDashedLine',\n      value: function drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n\n        var dx = toX - fromX;\n        var dy = toY - fromY;\n        var angle = Math.atan2(dy, dx);\n        var x = fromX;\n        var y = fromY;\n        context.moveTo(fromX, fromY);\n        var idx = 0;\n        var draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n          var dashLength = dashPattern[idx++ % dashPattern.length];\n          var nx = x + Math.cos(angle) * dashLength;\n          x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n          var ny = y + Math.sin(angle) * dashLength;\n          y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n          if (draw) {\n            context.lineTo(x, y);\n          } else {\n            context.moveTo(x, y);\n          }\n          draw = !draw;\n        }\n\n        context.closePath();\n        context.stroke();\n      }\n    }, {\n      key: 'Backends',\n      get: function get() {\n        return {\n          CANVAS: 1,\n          RAPHAEL: 2,\n          SVG: 3,\n          VML: 4\n        };\n      }\n\n      // End of line types\n\n    }, {\n      key: 'LineEndType',\n      get: function get() {\n        return {\n          NONE: 1, // No leg\n          UP: 2, // Upward leg\n          DOWN: 3 };\n      }\n\n      // Set this to true if you're using VexFlow inside a runtime\n      // that does not allow modifiying canvas objects. There is a small\n      // performance degradation due to the extra indirection.\n\n    }, {\n      key: 'USE_CANVAS_PROXY',\n      // Downward leg\n      get: function get() {\n        return false;\n      }\n    }, {\n      key: 'lastContext',\n      get: function get() {\n        return _lastContext;\n      },\n      set: function set(ctx) {\n        _lastContext = ctx;\n      }\n    }]);\n\n    function Renderer(sel, backend) {\n      classCallCheck(this, Renderer);\n\n      // Verify selector\n      this.sel = sel;\n      if (!this.sel) throw new Vex.RERR('BadArgument', 'Invalid selector for renderer.');\n\n      // Get element from selector\n      this.element = document.getElementById(sel);\n      if (!this.element) this.element = sel;\n\n      // Verify backend and create context\n      this.ctx = null;\n      this.paper = null;\n      this.backend = backend;\n      if (this.backend == Renderer.Backends.CANVAS) {\n        // Create context.\n        if (!this.element.getContext) throw new Vex.RERR('BadElement', \"Can't get canvas context from element: \" + sel);\n        this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      } else if (this.backend == Renderer.Backends.RAPHAEL) {\n        this.ctx = new RaphaelContext(this.element);\n      } else if (this.backend == Renderer.Backends.SVG) {\n        this.ctx = new SVGContext(this.element);\n      } else {\n        throw new Vex.RERR('InvalidBackend', 'No support for backend: ' + this.backend);\n      }\n    }\n\n    createClass(Renderer, [{\n      key: 'resize',\n      value: function resize(width, height) {\n        if (this.backend == Renderer.Backends.CANVAS) {\n          if (!this.element.getContext) throw new Vex.RERR('BadElement', \"Can't get canvas context from element: \" + this.sel);\n          this.element.width = width;\n          this.element.height = height;\n          this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n        } else {\n          this.ctx.resize(width, height);\n        }\n\n        return this;\n      }\n    }, {\n      key: 'getContext',\n      value: function getContext() {\n        return this.ctx;\n      }\n    }]);\n    return Renderer;\n  }();\n\n  var Voice = function () {\n    createClass(Voice, null, [{\n      key: 'Mode',\n\n      // Modes allow the addition of ticks in three different ways:\n      //\n      // STRICT: This is the default. Ticks must fill the voice.\n      // SOFT:   Ticks can be added without restrictions.\n      // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n      //         tick length.\n      get: function get() {\n        return {\n          STRICT: 1,\n          SOFT: 2,\n          FULL: 3\n        };\n      }\n    }]);\n\n    function Voice(time) {\n      classCallCheck(this, Voice);\n\n      this.time = Vex$1.Merge({\n        num_beats: 4,\n        beat_value: 4,\n        resolution: Flow.RESOLUTION\n      }, time);\n\n      // Recalculate total ticks.\n      this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n      this.resolutionMultiplier = 1;\n\n      // Set defaults\n      this.tickables = [];\n      this.ticksUsed = new Fraction(0, 1);\n      this.smallestTickCount = this.totalTicks.clone();\n      this.largestTickWidth = 0;\n      this.stave = null;\n      this.boundingBox = null;\n      // Do we care about strictly timed notes\n      this.mode = Voice.Mode.STRICT;\n\n      // This must belong to a VoiceGroup\n      this.voiceGroup = null;\n    }\n\n    // Get the total ticks in the voice\n\n\n    createClass(Voice, [{\n      key: 'getTotalTicks',\n      value: function getTotalTicks() {\n        return this.totalTicks;\n      }\n\n      // Get the total ticks used in the voice by all the tickables\n\n    }, {\n      key: 'getTicksUsed',\n      value: function getTicksUsed() {\n        return this.ticksUsed;\n      }\n\n      // Get the largest width of all the tickables\n\n    }, {\n      key: 'getLargestTickWidth',\n      value: function getLargestTickWidth() {\n        return this.largestTickWidth;\n      }\n\n      // Get the tick count for the shortest tickable\n\n    }, {\n      key: 'getSmallestTickCount',\n      value: function getSmallestTickCount() {\n        return this.smallestTickCount;\n      }\n\n      // Get the tickables in the voice\n\n    }, {\n      key: 'getTickables',\n      value: function getTickables() {\n        return this.tickables;\n      }\n\n      // Get/set the voice mode, use a value from `Voice.Mode`\n\n    }, {\n      key: 'getMode',\n      value: function getMode() {\n        return this.mode;\n      }\n    }, {\n      key: 'setMode',\n      value: function setMode(mode) {\n        this.mode = mode;return this;\n      }\n\n      // Get the resolution multiplier for the voice\n\n    }, {\n      key: 'getResolutionMultiplier',\n      value: function getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n      }\n\n      // Get the actual tick resolution for the voice\n\n    }, {\n      key: 'getActualResolution',\n      value: function getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n      }\n\n      // Set the voice's stave\n\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        this.stave = stave;\n        this.boundingBox = null; // Reset bounding box so we can reformat\n        return this;\n      }\n\n      // Get the bounding box for the voice\n\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        var stave = void 0,\n            boundingBox = void 0,\n            bb = void 0,\n            i = void 0;\n\n        if (!this.boundingBox) {\n          if (!this.stave) throw Vex$1.RERR('NoStave', \"Can't get bounding box without stave.\");\n          stave = this.stave;\n          boundingBox = null;\n\n          for (i = 0; i < this.tickables.length; ++i) {\n            this.tickables[i].setStave(stave);\n\n            bb = this.tickables[i].getBoundingBox();\n            if (!bb) continue;\n\n            boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n          }\n\n          this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n      }\n\n      // Every tickable must be associated with a voiceGroup. This allows formatters\n      // and preformatters to associate them with the right modifierContexts.\n\n    }, {\n      key: 'getVoiceGroup',\n      value: function getVoiceGroup() {\n        if (!this.voiceGroup) throw new Vex$1.RERR('NoVoiceGroup', 'No voice group for voice.');\n        return this.voiceGroup;\n      }\n\n      // Set the voice group\n\n    }, {\n      key: 'setVoiceGroup',\n      value: function setVoiceGroup(g) {\n        this.voiceGroup = g;return this;\n      }\n\n      // Set the voice mode to strict or soft\n\n    }, {\n      key: 'setStrict',\n      value: function setStrict(strict) {\n        this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n        return this;\n      }\n\n      // Determine if the voice is complete according to the voice mode\n\n    }, {\n      key: 'isComplete',\n      value: function isComplete() {\n        if (this.mode == Voice.Mode.STRICT || this.mode == Voice.Mode.FULL) {\n          return this.ticksUsed.equals(this.totalTicks);\n        } else {\n          return true;\n        }\n      }\n\n      // Add a tickable to the voice\n\n    }, {\n      key: 'addTickable',\n      value: function addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n          var ticks = tickable.getTicks();\n\n          // Update the total ticks for this line.\n          this.ticksUsed.add(ticks);\n\n          if ((this.mode == Voice.Mode.STRICT || this.mode == Voice.Mode.FULL) && this.ticksUsed.greaterThan(this.totalTicks)) {\n            this.totalTicks.subtract(ticks);\n            throw new Vex$1.RERR('BadArgument', 'Too many ticks.');\n          }\n\n          // Track the smallest tickable for formatting.\n          if (ticks.lessThan(this.smallestTickCount)) {\n            this.smallestTickCount = ticks.clone();\n          }\n\n          this.resolutionMultiplier = this.ticksUsed.denominator;\n\n          // Expand total ticks using denominator from ticks used.\n          this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n      }\n\n      // Add an array of tickables to the voice.\n\n    }, {\n      key: 'addTickables',\n      value: function addTickables(tickables) {\n        for (var i = 0; i < tickables.length; ++i) {\n          this.addTickable(tickables[i]);\n        }\n\n        return this;\n      }\n\n      // Preformats the voice by applying the voice's stave to each note.\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return;\n\n        this.tickables.forEach(function (tickable) {\n          if (!tickable.getStave()) {\n            tickable.setStave(this.stave);\n          }\n        }, this);\n\n        this.preFormatted = true;\n        return this;\n      }\n\n      // Render the voice onto the canvas `context` and an optional `stave`.\n      // If `stave` is omitted, it is expected that the notes have staves\n      // already set.\n\n    }, {\n      key: 'draw',\n      value: function draw(context, stave) {\n        var boundingBox = null;\n        for (var i = 0; i < this.tickables.length; ++i) {\n          var tickable = this.tickables[i];\n\n          // Set the stave if provided\n          if (stave) tickable.setStave(stave);\n\n          if (!tickable.getStave()) {\n            throw new Vex$1.RuntimeError('MissingStave', 'The voice cannot draw tickables without staves.');\n          }\n\n          if (i === 0) boundingBox = tickable.getBoundingBox();\n\n          if (i > 0 && boundingBox) {\n            var tickable_bb = tickable.getBoundingBox();\n            if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n          }\n\n          tickable.setContext(context);\n          tickable.draw();\n        }\n\n        this.boundingBox = boundingBox;\n      }\n    }]);\n    return Voice;\n  }();\n\n  // ## Description\n  //\n  // Object which computes metrics for a bounding box by continuously\n  // taking canvas path commands\n\n  // Warning: This file is merely a crutch to get bounding box information without\n  // explicit metadata. This is likely to get deprecated following SMuFL support.\n  //\n  // taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/canvg.js#L449\n\n  var BoundingBoxComputation = function () {\n    function BoundingBoxComputation(x1, y1, x2, y2) {\n      classCallCheck(this, BoundingBoxComputation);\n      // pass in initial points if you want\n      this.x1 = Number.NaN;\n      this.y1 = Number.NaN;\n      this.x2 = Number.NaN;\n      this.y2 = Number.NaN;\n\n      this.addPoint(x1, y1);\n      this.addPoint(x2, y2);\n    }\n\n    createClass(BoundingBoxComputation, [{\n      key: \"width\",\n      value: function width() {\n        return this.x2 - this.x1;\n      }\n    }, {\n      key: \"height\",\n      value: function height() {\n        return this.y2 - this.y1;\n      }\n    }, {\n      key: \"addPoint\",\n      value: function addPoint(x, y) {\n        if (x != null) {\n          if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n          }\n          if (x < this.x1) this.x1 = x;\n          if (x > this.x2) this.x2 = x;\n        }\n\n        if (y != null) {\n          if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n          }\n          if (y < this.y1) this.y1 = y;\n          if (y > this.y2) this.y2 = y;\n        }\n      }\n    }, {\n      key: \"addX\",\n      value: function addX(x) {\n        this.addPoint(x, null);\n      }\n    }, {\n      key: \"addY\",\n      value: function addY(y) {\n        this.addPoint(null, y);\n      }\n    }, {\n      key: \"addQuadraticCurve\",\n      value: function addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n        var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n        var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n        var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n        this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n      }\n    }, {\n      key: \"addBezierCurve\",\n      value: function addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        var p0 = [p0x, p0y];\n        var p1 = [p1x, p1y];\n        var p2 = [p2x, p2y];\n        var p3 = [p3x, p3y];\n        var i = void 0;\n\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n\n        var f = function f(t, i) {\n          return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n        };\n\n        for (i = 0; i <= 1; i++) {\n          var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n          var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n          var c = 3 * p1[i] - 3 * p0[i];\n\n          if (a === 0) {\n            if (b === 0) continue;\n            var t = -c / b;\n            if (0 < t && t < 1) {\n              if (i === 0) this.addX(f(t, i));\n              if (i === 1) this.addY(f(t, i));\n            }\n            continue;\n          }\n\n          var b2ac = Math.pow(b, 2) - 4 * c * a;\n          if (b2ac < 0) continue;\n          var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n          if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(f(t1, i));\n            if (i === 1) this.addY(f(t1, i));\n          }\n          var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n          if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(f(t2, i));\n            if (i === 1) this.addY(f(t2, i));\n          }\n        }\n      }\n    }]);\n    return BoundingBoxComputation;\n  }();\n\n  /** @constructor */\n  var BoundingBox = function () {\n    createClass(BoundingBox, null, [{\n      key: 'copy',\n      value: function copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n      }\n    }]);\n\n    function BoundingBox(x, y, w, h) {\n      classCallCheck(this, BoundingBox);\n\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n    }\n\n    createClass(BoundingBox, [{\n      key: 'getX',\n      value: function getX() {\n        return this.x;\n      }\n    }, {\n      key: 'getY',\n      value: function getY() {\n        return this.y;\n      }\n    }, {\n      key: 'getW',\n      value: function getW() {\n        return this.w;\n      }\n    }, {\n      key: 'getH',\n      value: function getH() {\n        return this.h;\n      }\n    }, {\n      key: 'setX',\n      value: function setX(x) {\n        this.x = x;return this;\n      }\n    }, {\n      key: 'setY',\n      value: function setY(y) {\n        this.y = y;return this;\n      }\n    }, {\n      key: 'setW',\n      value: function setW(w) {\n        this.w = w;return this;\n      }\n    }, {\n      key: 'setH',\n      value: function setH(h) {\n        this.h = h;return this;\n      }\n    }, {\n      key: 'move',\n      value: function move(x, y) {\n        this.x += x;this.y += y;\n      }\n    }, {\n      key: 'clone',\n      value: function clone() {\n        return BoundingBox.copy(this);\n      }\n\n      // Merge my box with given box. Creates a bigger bounding box unless\n      // the given box is contained in this one.\n\n    }, {\n      key: 'mergeWith',\n      value: function mergeWith(boundingBox, ctx) {\n        var that = boundingBox;\n\n        var new_x = this.x < that.x ? this.x : that.x;\n        var new_y = this.y < that.y ? this.y : that.y;\n        var new_w = this.x + this.w < that.x + that.w ? that.x + that.w - this.x : this.x + this.w - Vex$1.Min(this.x, that.x);\n        var new_h = this.y + this.h < that.y + that.h ? that.y + that.h - this.y : this.y + this.h - Vex$1.Min(this.y, that.y);\n\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n\n        if (ctx) this.draw(ctx);\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw(ctx, x, y) {\n        if (!x) x = 0;\n        if (!y) y = 0;\n        ctx.rect(this.x + x, this.y + y, this.w, this.h);\n        ctx.stroke();\n      }\n    }]);\n    return BoundingBox;\n  }();\n\n  var Font={'glyphs':{'v0':{'x_min':0,'x_max':514.5,'ha':525,'o':'m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 '},'v1':{'x_min':-1.359375,'x_max':344.359375,'ha':351,'o':'m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 '},'v2':{'x_min':-1.359375,'x_max':458.6875,'ha':468,'o':'m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 '},'v3':{'x_min':-1.359375,'x_max':409.6875,'ha':418,'o':'m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 '},'v4':{'x_min':0,'x_max':468.21875,'ha':478,'o':'m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 '},'v5':{'x_min':0,'x_max':409.6875,'ha':418,'o':'m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 '},'v6':{'x_min':0,'x_max':475.03125,'ha':485,'o':'m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 '},'v7':{'x_min':0,'x_max':442.359375,'ha':451,'o':'m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 '},'v8':{'x_min':0,'x_max':488.640625,'ha':499,'o':'m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 '},'v9':{'x_min':0,'x_max':475.03125,'ha':485,'o':'m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 '},'va':{'x_min':-149.71875,'x_max':148.359375,'ha':151,'o':'m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 '},'vb':{'x_min':0,'x_max':428.75,'ha':438,'o':'m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 '},'vc':{'x_min':0,'x_max':447.8125,'ha':457,'o':'m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 '},'vd':{'x_min':0,'x_max':343,'ha':350,'o':'m 329 331 b 333 331 330 331 332 331 b 343 322 338 331 343 327 b 343 320 343 322 343 320 b 318 276 341 317 340 313 b 279 223 291 227 294 230 b 202 208 257 212 236 208 b 144 210 186 208 167 208 b 93 212 123 212 107 212 b 19 195 59 212 39 208 b 8 191 14 192 10 191 b 0 198 5 191 2 194 b 0 201 0 199 0 199 b 23 248 0 205 4 213 b 62 301 50 297 47 292 b 140 316 84 312 104 316 b 197 313 155 316 174 315 b 249 310 217 312 234 310 b 322 328 283 310 303 316 b 329 331 325 328 328 331 '},'ve':{'x_min':-390.640625,'x_max':389.28125,'ha':397,'o':'m -378 502 l -374 503 l 0 503 l 372 503 l 377 502 b 387 491 381 499 385 496 l 389 488 l 389 251 l 389 15 l 387 12 b 367 0 383 4 375 0 b 348 12 360 0 352 4 l 347 15 l 347 174 l 347 335 l 0 335 l -348 335 l -348 174 l -348 15 l -349 12 b -368 0 -353 4 -362 0 b -389 12 -377 0 -385 4 l -390 15 l -390 251 l -390 488 l -389 491 b -378 502 -386 496 -382 499 m -13 131 b -1 133 -9 133 -5 133 b 50 105 19 133 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -58 38 -62 55 b -13 131 -62 98 -44 124 '},'vf':{'x_min':0,'x_max':370.21875,'ha':378,'o':'m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 '},'v10':{'x_min':0,'x_max':559.421875,'ha':571,'o':'m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 '},'v11':{'x_min':-155.171875,'x_max':153.8125,'ha':157,'o':'m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 '},'v12':{'x_min':0,'x_max':699.609375,'ha':714,'o':'m 0 0 l 0 563 l 65 563 l 132 563 l 132 0 l 132 -564 l 65 -564 l 0 -564 l 0 0 m 181 0 l 181 563 l 197 563 l 215 563 l 215 294 b 215 24 215 95 215 24 b 228 37 216 24 221 30 b 332 245 274 84 311 159 b 344 262 334 258 338 262 b 349 262 347 262 348 262 b 359 244 356 259 357 256 b 488 91 364 158 424 91 b 519 97 499 91 509 94 b 582 306 570 113 582 156 l 582 308 b 544 501 582 423 573 471 b 464 528 525 520 496 528 b 387 512 439 528 412 523 b 381 508 383 509 381 508 b 383 508 381 508 382 508 b 430 473 400 508 421 491 b 436 445 434 464 436 455 b 372 380 436 412 408 380 b 366 380 370 380 368 380 b 304 449 328 384 304 416 b 323 498 304 467 310 484 b 465 555 362 537 413 555 b 656 453 536 555 611 520 b 699 312 686 410 699 360 b 496 66 699 191 617 74 b 487 66 494 66 490 66 b 412 91 461 66 438 74 b 404 97 408 95 405 97 b 404 95 404 97 404 97 b 348 1 404 95 352 9 l 347 0 l 375 -49 b 405 -98 392 -76 404 -98 l 405 -98 b 415 -91 405 -97 409 -94 b 492 -68 438 -74 464 -68 b 598 -105 526 -68 564 -80 b 688 -238 641 -136 673 -184 b 699 -313 695 -263 699 -290 b 594 -516 699 -395 661 -469 b 465 -556 555 -542 510 -556 b 353 -523 426 -556 386 -545 b 304 -460 321 -501 307 -484 b 304 -451 304 -458 304 -453 b 372 -381 304 -410 337 -381 b 408 -392 383 -381 396 -384 b 436 -445 427 -405 436 -426 b 385 -508 436 -474 417 -503 l 379 -509 l 387 -513 b 464 -530 412 -524 438 -530 b 522 -517 485 -530 506 -526 b 579 -390 558 -501 574 -463 b 582 -299 582 -370 582 -334 b 581 -226 582 -272 582 -242 b 519 -98 575 -144 560 -112 b 488 -93 510 -95 499 -93 b 359 -245 424 -93 364 -158 b 345 -263 357 -258 355 -263 b 332 -244 337 -263 336 -260 b 220 -30 310 -155 268 -73 l 215 -24 l 215 -295 l 215 -564 l 197 -564 l 181 -564 l 181 0 '},'v13':{'x_min':-1.359375,'x_max':455.96875,'ha':465,'o':'m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 '},'v14':{'x_min':-1.359375,'x_max':349.8125,'ha':357,'o':'m 230 287 b 243 287 234 287 238 287 b 266 285 251 287 261 287 b 349 180 319 274 349 227 b 307 95 349 149 336 117 b 208 63 280 74 245 63 b 84 106 166 63 122 79 b 76 113 80 111 77 113 b 76 113 76 113 76 113 b 132 -74 76 112 102 27 b 187 -272 179 -235 187 -263 b 186 -276 187 -273 186 -274 b 166 -288 183 -284 174 -288 b 148 -278 159 -288 152 -285 b -1 231 145 -273 -1 227 b 20 252 -1 244 9 252 b 36 244 25 252 32 249 b 40 234 38 242 39 238 b 167 112 63 174 112 127 l 174 111 l 170 113 b 142 181 152 133 142 158 b 230 287 142 230 176 277 '},'v15':{'x_min':-209.609375,'x_max':208.25,'ha':213,'o':'m -12 248 b -1 249 -9 249 -5 249 b 55 219 20 249 43 237 b 66 180 62 206 66 194 b 36 123 66 158 55 137 b 0 112 25 116 12 112 b -57 142 -21 112 -43 122 b -68 180 -63 154 -68 167 b -12 248 -68 212 -46 242 m -197 19 b 1 20 -194 19 -96 20 b 196 19 98 20 193 19 b 208 -1 204 15 208 6 b 202 -15 208 -5 206 -11 b 95 -22 197 -20 212 -22 b -1 -22 69 -22 38 -22 b -96 -22 -39 -22 -70 -22 b -204 -15 -213 -22 -198 -20 b -209 -1 -208 -11 -209 -5 b -197 19 -209 6 -205 15 '},'v16':{'x_min':-155.171875,'x_max':153.8125,'ha':157,'o':'m -137 353 b -129 355 -134 353 -132 355 b -102 333 -118 355 -111 348 b -8 129 -63 273 -32 205 b 0 106 -4 116 -1 106 b 6 129 0 106 2 116 b 100 333 31 205 62 273 b 114 349 107 344 108 347 b 127 353 118 352 123 353 b 153 327 141 353 153 344 b 144 302 153 320 153 317 b 29 18 96 227 54 123 l 25 -4 b -1 -26 21 -19 13 -26 b -27 -4 -14 -26 -23 -19 l -31 18 b -145 302 -55 123 -98 227 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 '},'v17':{'x_min':0,'x_max':102.078125,'ha':104,'o':'m 42 104 b 47 104 43 104 46 104 b 66 102 54 104 62 102 b 102 51 89 94 102 72 b 76 5 102 33 93 15 b 51 -1 68 1 59 -1 b 10 18 35 -1 20 5 b 0 51 2 27 0 38 b 42 104 0 76 16 99 '},'v18':{'x_min':0,'x_max':323.9375,'ha':331,'o':'m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 '},'v19':{'x_min':-10.890625,'x_max':366.140625,'ha':363,'o':'m 98 172 b 110 173 102 173 106 173 b 210 120 142 173 172 156 b 281 66 235 95 264 74 b 294 63 285 63 289 63 b 341 87 307 63 322 72 b 356 97 348 94 352 97 b 363 93 359 97 362 95 b 366 87 364 90 366 88 b 355 72 366 83 363 79 b 268 2 317 31 288 9 b 243 -1 259 0 251 -1 b 144 52 212 -1 181 16 b 72 106 119 77 91 98 b 61 109 69 108 65 109 b 13 84 47 109 31 101 b 0 76 5 77 2 76 b -10 86 -6 76 -10 80 b -10 88 -10 87 -10 88 b 62 158 -9 95 43 145 b 98 172 73 165 87 170 '},'v1a':{'x_min':-149.71875,'x_max':148.359375,'ha':151,'o':'m -9 151 b -1 152 -6 151 -2 152 b 1 152 0 152 0 152 l 9 151 b 144 37 72 148 127 99 b 148 -62 148 19 148 15 b 148 -111 148 -76 148 -93 l 148 -216 l 147 -219 b 127 -231 144 -227 136 -231 b 108 -219 119 -231 112 -227 l 107 -216 l 107 -104 b 103 26 106 18 107 12 b -1 109 89 76 46 109 b -38 102 -13 109 -25 106 b -104 27 -70 90 -96 62 b -108 -101 -108 15 -108 22 l -108 -216 l -110 -219 b -129 -231 -114 -227 -122 -231 b -148 -219 -137 -231 -145 -227 l -149 -216 l -149 -99 b -149 -63 -149 -87 -149 -74 b -145 37 -149 26 -149 20 b -9 151 -130 101 -74 148 '},'v1b':{'x_min':0,'x_max':559.421875,'ha':571,'o':'m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 '},'v1c':{'x_min':0,'x_max':326.671875,'ha':333,'o':'m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -105 b 239 -262 239 -167 239 -219 b 238 -448 239 -416 239 -445 b 238 -451 238 -449 238 -451 b 238 -452 238 -452 238 -452 b 243 -451 239 -452 240 -451 b 298 -431 262 -448 280 -441 b 308 -427 300 -428 304 -427 b 326 -446 318 -427 326 -435 l 326 -446 l 326 -452 l 321 -462 b 238 -674 283 -520 253 -599 b 219 -695 234 -689 230 -695 b 197 -670 206 -695 202 -689 b 115 -462 179 -591 152 -520 l 110 -452 l 110 -446 l 110 -446 b 127 -427 110 -435 118 -427 b 138 -431 130 -427 134 -428 b 193 -451 155 -441 172 -448 b 198 -452 196 -452 197 -452 b 198 -451 198 -452 198 -452 b 198 -448 198 -451 198 -449 b 197 -323 197 -445 197 -426 b 197 -201 197 -247 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 '},'v1d':{'x_min':0,'x_max':619.3125,'ha':632,'o':'m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 '},'v1e':{'x_min':-402.890625,'x_max':401.53125,'ha':410,'o':'m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 '},'v1f':{'x_min':-340.28125,'x_max':338.921875,'ha':346,'o':'m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 '},'v20':{'x_min':-571.671875,'x_max':570.3125,'ha':582,'o':'m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 '},'v21':{'x_min':-149.71875,'x_max':148.359375,'ha':151,'o':'m -138 229 b -129 230 -136 230 -133 230 b -110 217 -121 230 -114 226 l -108 215 l -108 99 b -104 -29 -108 -23 -108 -16 b -38 -104 -96 -63 -70 -91 b -1 -111 -25 -108 -13 -111 b 103 -27 46 -111 89 -77 b 107 102 107 -13 106 -19 l 107 215 l 108 217 b 127 230 112 226 119 230 b 137 229 130 230 134 230 b 147 217 141 226 145 223 l 148 215 l 148 109 b 148 63 148 91 148 76 b 147 -24 148 -1 148 -13 b -1 -154 134 -101 70 -154 b -38 -148 -13 -154 -25 -151 b -145 -38 -91 -134 -133 -93 b -149 62 -149 -22 -149 -27 b -149 98 -149 73 -149 86 l -149 215 l -148 217 b -138 229 -147 223 -142 226 '},'v22':{'x_min':0,'x_max':432.828125,'ha':442,'o':'m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 '},'v23':{'x_min':0,'x_max':133.390625,'ha':136,'o':'m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '},'v24':{'x_min':-627.46875,'x_max':626.109375,'ha':639,'o':'m -69 173 b -53 174 -62 174 -58 174 b -42 172 -49 174 -44 174 b -28 149 -32 166 -28 158 b -42 126 -28 140 -32 131 b -231 73 -44 124 -29 129 l -371 34 l -469 8 b -499 0 -485 2 -499 0 b -469 -9 -499 -1 -485 -4 l -371 -36 l -231 -74 b -40 -129 -21 -131 -44 -124 b -28 -151 -32 -133 -28 -141 b -40 -172 -28 -159 -32 -167 b -54 -176 -44 -174 -49 -176 b -69 -174 -58 -176 -62 -176 l -288 -113 l -552 -41 b -616 -22 -619 -23 -611 -24 b -627 0 -623 -18 -627 -9 b -616 20 -627 8 -623 16 b -615 22 -615 22 -615 22 b -615 22 -615 22 -615 22 b -288 112 -615 23 -598 27 l -69 173 m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 '},'v25':{'x_min':0,'x_max':318.5,'ha':325,'o':'m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 '},'v26':{'x_min':-21.78125,'x_max':483.1875,'ha':493,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '},'v27':{'x_min':0,'x_max':432.828125,'ha':442,'o':'m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 '},'v28':{'x_min':-73.5,'x_max':72.140625,'ha':74,'o':'m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 '},'v29':{'x_min':-590.71875,'x_max':589.359375,'ha':601,'o':'m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 '},'v2a':{'x_min':-21.78125,'x_max':366.140625,'ha':374,'o':'m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 '},'v2b':{'x_min':0,'x_max':386.5625,'ha':394,'o':'m 0 0 l 0 347 l 193 347 l 386 347 l 386 0 l 386 -348 l 193 -348 l 0 -348 l 0 0 '},'v2c':{'x_min':-597.53125,'x_max':596.171875,'ha':608,'o':'m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 '},'v2d':{'x_min':0,'x_max':438.28125,'ha':447,'o':'m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 '},'v2e':{'x_min':-108.890625,'x_max':251.8125,'ha':257,'o':'m -8 863 b 0 864 -5 864 -2 864 b 12 859 4 864 9 863 b 19 843 16 856 16 853 b 102 631 34 768 65 689 l 107 621 l 107 616 l 107 616 b 89 596 107 605 99 596 b 78 601 85 596 83 598 b 47 614 69 606 55 612 b 19 621 39 617 21 621 b 19 621 19 621 19 621 b 19 619 19 621 19 620 b 20 383 20 616 20 585 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 b -20 619 -21 563 -21 616 b -20 621 -20 620 -20 621 b -20 621 -20 621 -20 621 b -49 614 -23 621 -40 617 b -80 601 -57 612 -70 606 b -91 596 -84 598 -87 596 b -108 616 -100 596 -108 605 l -108 616 l -108 621 l -103 631 b -20 839 -66 689 -38 760 b -8 863 -17 856 -14 859 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'v2f':{'x_min':-1.359375,'x_max':680.5625,'ha':694,'o':'m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 '},'v30':{'x_min':-21.78125,'x_max':367.5,'ha':375,'o':'m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 '},'v31':{'x_min':0,'x_max':386.5625,'ha':394,'o':'m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 '},'v32':{'x_min':-390.640625,'x_max':389.28125,'ha':397,'o':'m -378 573 l -374 576 l 0 576 l 372 576 l 377 573 b 387 563 381 571 385 567 l 389 559 l 389 287 l 389 15 l 387 12 b 367 0 383 4 375 0 b 348 12 360 0 352 4 l 347 15 l 347 210 l 347 406 l 0 406 l -348 406 l -348 210 l -348 15 l -349 12 b -368 0 -353 4 -362 0 b -389 12 -377 0 -385 4 l -390 15 l -390 287 l -390 559 l -389 563 b -378 573 -386 567 -382 571 m -274 337 l -270 338 l 0 338 l 269 338 l 273 337 b 284 326 279 334 281 330 l 285 323 l 285 169 l 285 15 l 284 12 b 265 -1 280 4 272 -1 b 245 12 257 -1 249 4 l 245 15 l 243 108 l 243 201 l 0 201 l -245 201 l -245 108 l -245 15 l -246 12 b -266 -1 -250 4 -258 -1 b -285 12 -273 -1 -281 4 l -287 15 l -287 169 l -287 323 l -285 326 b -274 337 -283 330 -280 334 m -13 131 b -1 133 -9 133 -5 133 b 50 105 19 133 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -58 38 -62 55 b -13 131 -62 98 -44 124 '},'v33':{'x_min':-423.3125,'x_max':421.9375,'ha':431,'o':'m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 '},'v34':{'x_min':0,'x_max':622.03125,'ha':635,'o':'m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 '},'v35':{'x_min':0,'x_max':323.9375,'ha':331,'o':'m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 '},'v36':{'x_min':-1.359375,'x_max':1064.390625,'ha':1086,'o':'m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 '},'v37':{'x_min':0,'x_max':333.46875,'ha':340,'o':'m 219 818 b 225 821 220 820 223 821 b 239 816 231 821 235 818 b 245 800 242 811 243 810 b 328 587 259 725 291 646 l 333 578 l 333 573 l 333 571 b 315 553 333 560 325 553 b 306 556 313 553 308 555 b 251 577 288 567 270 574 b 246 578 249 577 247 578 b 245 577 246 578 245 578 b 246 576 245 577 246 577 b 247 416 246 574 246 542 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 494 87 498 b 114 485 102 498 110 494 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 409 b 206 574 205 546 205 571 b 206 577 206 576 206 577 b 205 578 206 578 206 578 b 200 577 205 578 202 577 b 147 556 181 574 163 567 b 136 553 142 555 138 553 b 118 571 126 553 118 560 l 118 573 l 118 578 l 123 587 b 205 796 160 646 187 717 b 219 818 209 813 210 816 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 '},'v38':{'x_min':-1.359375,'x_max':651.96875,'ha':665,'o':'m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 '},'v39':{'x_min':-171.5,'x_max':251.8125,'ha':257,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'v3a':{'x_min':-1.359375,'x_max':227.3125,'ha':232,'o':'m 182 210 b 196 215 189 213 193 215 b 204 209 200 215 202 212 b 205 204 205 206 205 205 b 193 191 205 199 201 195 b 104 54 137 159 104 105 b 122 -8 104 31 110 11 l 123 -11 l 130 -11 b 202 -45 156 -11 185 -24 b 227 -112 219 -65 227 -88 b 172 -205 227 -149 208 -186 b 127 -216 157 -212 142 -216 b -1 -52 59 -216 -1 -144 b 0 -37 -1 -48 0 -43 b 182 210 6 58 80 155 '},'v3b':{'x_min':0,'x_max':484.5625,'ha':494,'o':'m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 '},'v3c':{'x_min':0,'x_max':450.53125,'ha':460,'o':'m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 '},'v3d':{'x_min':0,'x_max':677.828125,'ha':692,'o':'m 390 1199 b 396 1200 392 1200 394 1200 b 426 1179 404 1200 412 1195 b 528 975 468 1135 507 1059 b 543 863 537 938 543 900 b 401 533 543 743 494 627 l 364 496 l 344 476 l 345 471 l 355 430 l 383 291 l 385 284 l 387 284 b 420 287 398 285 409 287 b 616 192 494 287 567 251 b 677 18 658 140 677 79 b 502 -244 677 -88 615 -195 b 496 -247 499 -245 496 -247 b 514 -334 496 -247 499 -259 l 526 -394 b 537 -467 536 -437 537 -444 b 307 -700 536 -602 428 -700 b 215 -681 276 -700 245 -695 b 114 -595 174 -663 130 -626 b 103 -544 107 -578 103 -562 b 156 -444 103 -505 122 -466 b 219 -424 175 -431 197 -424 b 303 -463 250 -424 283 -438 b 329 -535 321 -485 329 -510 b 234 -644 329 -588 292 -638 l 224 -644 l 225 -645 b 268 -659 235 -650 254 -656 b 307 -663 281 -662 294 -663 b 498 -494 401 -663 484 -592 b 500 -467 499 -484 500 -476 b 491 -406 500 -452 498 -435 l 480 -348 b 461 -259 466 -284 461 -259 b 461 -259 461 -259 461 -259 b 457 -260 460 -259 458 -259 b 374 -270 430 -267 402 -270 b 190 -222 311 -270 246 -254 b 0 115 68 -151 0 -20 b 46 303 0 179 14 242 b 268 581 80 369 182 496 l 281 595 l 280 605 l 254 730 b 236 850 239 799 236 813 b 235 868 235 857 235 863 b 239 927 235 888 236 903 b 340 1153 250 1010 285 1090 b 390 1199 356 1171 383 1197 m 446 1039 b 434 1041 442 1041 438 1041 b 306 921 389 1041 332 989 b 284 810 291 884 284 849 b 296 705 284 780 288 745 l 308 649 b 313 627 311 637 313 627 l 313 627 b 344 657 314 627 332 645 b 487 957 434 757 487 870 b 483 995 487 970 485 982 b 446 1039 477 1021 468 1034 m 315 437 b 314 442 314 440 314 442 b 314 442 314 442 314 442 b 230 345 311 442 255 378 b 104 101 142 234 115 183 b 102 55 103 86 102 70 b 374 -242 102 -108 225 -242 b 420 -238 389 -242 404 -241 b 454 -229 431 -237 453 -230 b 454 -229 454 -229 454 -229 b 451 -213 454 -227 453 -220 l 441 -162 l 426 -93 l 378 136 b 372 149 375 145 375 149 b 364 147 371 149 368 148 b 270 12 306 123 270 70 b 274 -20 270 1 272 -9 b 333 -101 281 -52 302 -80 b 343 -117 340 -105 343 -112 b 330 -133 343 -124 338 -130 b 328 -133 329 -133 328 -133 b 238 -70 308 -133 262 -101 b 193 61 206 -30 193 15 b 340 272 193 151 247 240 b 348 276 345 274 348 276 b 347 284 348 276 348 280 l 315 437 m 443 155 b 421 156 436 156 428 156 b 412 155 416 156 412 156 b 412 155 412 155 412 155 b 420 117 412 154 416 137 l 435 44 l 449 -19 l 460 -72 l 475 -147 b 488 -212 484 -188 488 -208 b 490 -213 488 -212 490 -213 b 494 -210 490 -213 491 -212 b 571 -134 525 -194 553 -165 b 601 -33 592 -102 601 -66 b 443 155 601 56 539 140 '},'v3e':{'x_min':0,'x_max':406.96875,'ha':415,'o':'m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 '},'v3f':{'x_min':-24.5,'x_max':317.140625,'ha':324,'o':'m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 '},'v40':{'x_min':-1.359375,'x_max':436.921875,'ha':446,'o':'m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 '},'v41':{'x_min':-1.359375,'x_max':556.6875,'ha':568,'o':'m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 '},'v42':{'x_min':-348.4375,'x_max':24.5,'ha':25,'o':'m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 '},'v43':{'x_min':-442.359375,'x_max':441,'ha':450,'o':'m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 '},'v44':{'x_min':-21.78125,'x_max':251.8125,'ha':257,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'v45':{'x_min':-402.890625,'x_max':401.53125,'ha':410,'o':'m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 '},'v46':{'x_min':0,'x_max':627.46875,'ha':640,'o':'m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 '},'v47':{'x_min':-24.5,'x_max':315.78125,'ha':322,'o':'m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 '},'v48':{'x_min':0,'x_max':720.03125,'ha':735,'o':'m 251 280 b 269 280 258 280 264 280 b 487 215 348 280 432 255 b 594 -2 558 159 594 87 b 590 -55 594 -19 593 -37 b 44 -598 553 -309 330 -533 b 10 -605 25 -603 16 -605 b 1 -599 5 -605 2 -603 b 0 -594 0 -598 0 -595 b 8 -580 0 -587 2 -580 b 43 -566 9 -580 32 -571 b 453 -54 279 -467 434 -274 b 454 -9 454 -48 454 -29 b 453 34 454 9 454 29 b 351 230 443 129 411 192 b 259 255 323 247 292 255 b 70 133 183 255 103 208 b 68 124 68 127 68 124 b 68 123 68 123 68 123 b 70 126 68 123 69 124 b 126 141 88 137 107 141 b 202 109 153 141 182 131 b 234 33 224 87 234 59 b 126 -77 234 -23 191 -77 b 5 61 53 -77 5 -13 b 27 147 5 88 12 119 b 251 280 68 226 151 274 m 672 172 b 677 173 673 173 676 173 b 720 130 700 173 720 152 b 714 111 720 124 717 117 b 677 88 707 95 692 88 b 642 108 664 88 650 95 b 637 130 638 115 637 123 b 672 172 637 151 650 169 m 672 -90 b 677 -90 673 -90 676 -90 b 720 -131 700 -90 720 -109 b 714 -151 720 -138 717 -144 b 677 -174 707 -166 692 -174 b 642 -154 664 -174 650 -167 b 637 -133 638 -147 637 -140 b 672 -90 637 -112 650 -93 '},'v49':{'x_min':0,'x_max':630.203125,'ha':643,'o':'m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 '},'v4a':{'x_min':70.78125,'x_max':378.390625,'ha':315,'o':'m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 '},'v4b':{'x_min':0,'x_max':503.609375,'ha':514,'o':'m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 '},'v4c':{'x_min':-348.4375,'x_max':24.5,'ha':25,'o':'m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -6 27 -221 95 -117 52 b 10 23 1 26 8 23 b 24 -1 20 18 24 8 b 12 -23 24 -9 20 -19 b -8 -29 9 -26 9 -26 b -298 -148 -112 -52 -223 -97 b -322 -158 -313 -158 -315 -158 b -348 -133 -338 -158 -348 -147 b -343 -115 -348 -127 -347 -120 b -313 -1 -323 -79 -313 -40 b -337 101 -313 34 -321 69 b -343 113 -338 105 -341 111 b -348 131 -347 119 -348 126 b -330 155 -348 142 -343 152 '},'v4d':{'x_min':-311.6875,'x_max':310.328125,'ha':317,'o':'m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 '},'v4e':{'x_min':0,'x_max':239.5625,'ha':244,'o':'m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 '},'v4f':{'x_min':0,'x_max':193.28125,'ha':197,'o':'m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 '},'v50':{'x_min':-111.609375,'x_max':110.25,'ha':113,'o':'m -8 112 b -1 112 -5 112 -2 112 b 110 -1 63 112 110 58 b 87 -69 110 -24 103 -48 b -1 -113 65 -98 32 -113 b -88 -69 -34 -113 -66 -98 b -111 -1 -104 -48 -111 -24 b -8 112 -111 55 -70 108 m 17 94 b 0 95 12 95 6 95 b -53 79 -17 95 -38 90 b -95 -1 -80 61 -95 30 b -72 -63 -95 -23 -88 -45 b -1 -97 -53 -87 -27 -97 b 89 -31 38 -97 74 -73 b 93 0 92 -20 93 -11 b 17 94 93 44 63 83 '},'v51':{'x_min':-1.359375,'x_max':455.96875,'ha':465,'o':'m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 '},'v52':{'x_min':-10.890625,'x_max':298.078125,'ha':294,'o':'m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 '},'v53':{'x_min':0,'x_max':902.421875,'ha':921,'o':'m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 '},'v54':{'x_min':-24.5,'x_max':317.140625,'ha':324,'o':'m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 '},'v55':{'x_min':0,'x_max':551.25,'ha':563,'o':'m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 '},'v56':{'x_min':0,'x_max':1159.671875,'ha':1183,'o':'m 0 0 l 0 347 l 193 347 l 386 347 l 386 0 l 386 -348 l 193 -348 l 0 -348 l 0 0 m 773 -1 l 773 347 l 966 347 l 1159 347 l 1159 -1 l 1159 -348 l 966 -348 l 773 -348 l 773 -1 '},'v57':{'x_min':0,'x_max':272.21875,'ha':278,'o':'m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 '},'v58':{'x_min':-21.78125,'x_max':367.5,'ha':375,'o':'m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 '},'v59':{'x_min':0,'x_max':464.140625,'ha':474,'o':'m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 '},'v5a':{'x_min':-171.5,'x_max':170.140625,'ha':174,'o':'m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 '},'v5b':{'x_min':-441,'x_max':439.640625,'ha':449,'o':'m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 '},'v5c':{'x_min':0,'x_max':447.8125,'ha':457,'o':'m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 '},'v5d':{'x_min':-1.359375,'x_max':592.078125,'ha':604,'o':'m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 '},'v5e':{'x_min':-206.890625,'x_max':428.75,'ha':438,'o':'m -178 811 b -172 811 -175 811 -174 811 b -145 800 -164 811 -157 809 l -114 778 l -50 735 l 13 691 l 77 646 l 141 602 l 205 559 l 269 514 l 332 471 l 394 427 b 428 392 421 409 426 405 b 428 384 428 390 428 387 b 394 349 428 365 412 349 b 375 355 387 349 382 351 b 272 426 372 356 303 403 l 209 469 l 145 513 l 83 556 l -34 638 l -87 674 l -151 718 b -202 759 -196 749 -198 752 b -206 775 -205 764 -206 770 b -178 811 -206 792 -196 809 '},'v5f':{'x_min':-390.640625,'x_max':389.28125,'ha':397,'o':'m -378 -2 b -368 -1 -375 -1 -374 -1 b -349 -13 -360 -1 -353 -5 l -348 -16 l -348 -176 l -348 -337 l 0 -337 l 347 -337 l 347 -176 l 347 -16 l 348 -13 b 367 0 352 -5 360 0 b 387 -13 375 0 383 -5 l 389 -16 l 389 -252 l 389 -489 l 387 -492 b 377 -503 385 -498 381 -501 l 372 -505 l 0 -505 l -374 -505 l -378 -503 b -389 -492 -382 -501 -386 -498 l -390 -489 l -390 -252 l -390 -16 l -389 -13 b -378 -2 -386 -8 -382 -4 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -58 -102 -62 -87 b -13 -9 -62 -44 -44 -16 '},'v60':{'x_min':-590.71875,'x_max':589.359375,'ha':601,'o':'m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 '},'v61':{'x_min':-108.890625,'x_max':251.8125,'ha':257,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 93 -148 206 -40 179 -70 l 38 -199 l 23 -215 l 20 -217 l 20 -241 b 19 -267 20 -260 20 -266 b 19 -270 19 -269 19 -270 b 19 -270 19 -270 19 -270 b 47 -263 21 -270 39 -266 b 78 -249 55 -260 69 -255 b 89 -247 83 -247 85 -247 b 107 -265 99 -247 107 -254 l 107 -265 l 107 -270 l 102 -280 b 19 -492 65 -338 34 -417 b 0 -513 14 -508 10 -513 b -20 -488 -12 -513 -16 -508 b -103 -280 -38 -409 -66 -338 l -108 -270 l -108 -265 l -108 -265 b -91 -247 -108 -254 -100 -247 b -80 -249 -87 -247 -84 -247 b -49 -263 -70 -255 -57 -260 b -20 -270 -40 -266 -23 -270 b -20 -270 -20 -270 -20 -270 b -20 -267 -20 -270 -20 -269 b -21 174 -21 -266 -21 -208 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'v62':{'x_min':46.28125,'x_max':669.671875,'ha':563,'o':'m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 '},'v63':{'x_min':-1.359375,'x_max':392,'ha':400,'o':'m 253 341 b 317 341 276 341 298 341 b 363 341 344 341 362 341 b 392 309 379 340 392 326 l 392 309 b 266 -320 392 305 269 -310 b 246 -341 262 -330 255 -337 b 136 -342 243 -342 189 -342 b 21 -341 80 -342 24 -342 b -1 -310 8 -337 -1 -324 b 0 -310 -1 -310 0 -310 b 123 316 0 -306 118 297 b 144 340 126 327 133 335 b 253 341 147 341 151 341 m 321 276 b 250 277 321 277 307 277 b 179 276 194 277 179 277 b 123 -1 179 276 153 151 l 68 -278 l 140 -278 b 167 -278 149 -278 159 -278 b 210 -278 191 -278 210 -278 b 321 276 210 -278 321 274 '},'v64':{'x_min':-355.25,'x_max':353.890625,'ha':361,'o':'m -355 534 l -355 1068 l 0 1068 l 353 1068 l 353 534 l 353 0 l 0 0 l -355 0 l -355 534 m 325 881 l 325 1041 l -1 1041 l -326 1041 l -326 881 l -326 721 l -1 721 l 325 721 l 325 881 m 325 534 l 325 694 l 0 694 l -326 694 l -326 534 l -326 374 l 0 374 l 325 374 l 325 534 m 325 187 l 325 347 l 0 347 l -326 347 l -326 187 l -326 27 l 0 27 l 325 27 l 325 187 '},'v65':{'x_min':-695.53125,'x_max':694.171875,'ha':708,'o':'m -50 1414 b 1 1415 -32 1414 -16 1415 b 683 828 333 1415 626 1168 b 694 706 690 787 694 746 b -1 0 694 323 389 0 b -695 706 -385 0 -695 315 b -50 1413 -695 1079 -415 1386 l -50 1414 m 44 1385 b -2 1386 28 1386 13 1386 b -526 1124 -204 1386 -400 1289 b -564 1068 -539 1107 -564 1070 b -1 1067 -564 1068 -311 1067 b 563 1068 308 1067 563 1068 b 524 1124 563 1070 537 1107 b 44 1385 406 1276 235 1371 m 590 1021 l 581 1039 l -1 1039 l -582 1039 l -592 1021 b -666 728 -637 931 -666 816 l -666 720 l -1 720 l 665 720 l 665 728 b 590 1021 665 816 635 931 m 665 685 l 665 692 l -1 692 l -666 692 l -666 685 b -590 391 -666 596 -637 480 l -582 374 l -1 374 l 579 374 l 589 391 b 665 685 634 480 665 596 m 558 337 l 563 345 l -1 345 l -564 345 l -559 337 b 0 27 -436 142 -223 27 b 148 44 49 27 99 33 b 558 337 315 83 465 191 '},'v66':{'x_min':-73.5,'x_max':72.140625,'ha':74,'o':'m -36 -126 b 0 0 -17 -56 -1 0 b 70 -254 0 0 70 -249 l 72 -255 l 0 -255 l -73 -255 l -72 -254 b -36 -126 -72 -254 -55 -195 '},'v67':{'x_min':-1.359375,'x_max':549.890625,'ha':561,'o':'m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 495 122 b 534 148 528 148 528 148 b 549 133 544 148 549 142 l 549 133 b 549 130 549 131 549 131 b 509 91 549 124 548 123 l 436 33 b 390 0 397 0 396 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 '},'v68':{'x_min':-597.53125,'x_max':596.171875,'ha':608,'o':'m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 '},'v69':{'x_min':-25.859375,'x_max':347.078125,'ha':354,'o':'m 313 155 b 321 156 315 156 318 156 b 329 156 325 156 328 156 b 347 130 341 152 347 141 b 338 109 347 123 344 115 b 288 79 332 105 307 88 b 126 6 236 49 186 26 b 104 0 114 2 104 0 b 126 -8 104 -1 114 -4 b 326 -104 201 -33 268 -65 b 343 -117 337 -111 340 -112 b 347 -131 345 -122 347 -127 b 321 -158 347 -145 337 -158 b 296 -148 314 -158 311 -158 b 17 -31 223 -99 121 -56 l -4 -27 b -25 0 -19 -23 -25 -15 b -4 26 -25 13 -19 22 l 17 30 b 296 147 121 55 223 98 b 313 155 307 152 310 155 '},'v6a':{'x_min':-85.75,'x_max':84.390625,'ha':86,'o':'m -17 84 b 0 86 -12 86 -6 86 b 84 -1 46 86 84 45 b 83 -18 84 -6 84 -12 b -1 -87 73 -62 36 -87 b -66 -55 -25 -87 -49 -77 b -85 -1 -80 -38 -85 -19 b -17 84 -85 37 -59 74 '},'v6b':{'x_min':-1.359375,'x_max':544.4375,'ha':556,'o':'m 475 834 b 483 835 477 834 480 835 b 514 803 500 835 514 820 b 509 785 514 798 513 791 b 356 742 496 764 424 743 l 341 742 l 341 738 b 344 671 343 716 344 694 b 247 351 344 533 306 401 b 144 315 217 326 185 315 b 121 316 136 315 129 315 b 83 340 98 317 88 323 b 81 348 83 342 81 345 b 114 380 81 366 98 380 b 137 369 122 380 130 377 b 147 365 140 366 142 365 b 191 399 159 365 178 378 b 251 673 230 459 251 560 b 250 739 251 695 251 717 b 239 757 249 756 249 755 b 194 763 224 762 209 763 b 103 712 153 763 121 745 b 68 689 95 696 81 689 b 29 730 47 689 29 703 b 77 785 29 749 43 766 b 198 814 111 805 155 814 b 262 806 220 814 243 811 b 351 793 294 798 323 793 b 462 827 396 793 435 805 b 475 834 466 831 469 832 m 334 290 b 340 290 336 290 338 290 b 386 244 364 290 383 272 b 470 -154 397 115 439 -81 b 509 -195 481 -177 498 -195 b 510 -195 509 -195 510 -195 b 518 -194 513 -194 515 -194 b 544 -223 533 -194 544 -208 b 530 -244 544 -231 540 -240 b 510 -248 526 -247 519 -248 b 450 -235 491 -248 466 -244 b 351 -68 401 -210 381 -176 b 333 5 344 -44 333 1 b 333 5 333 5 333 5 b 326 -8 333 5 329 -1 b 289 -73 313 -34 302 -54 l 281 -84 l 284 -86 b 328 -102 295 -95 313 -102 b 344 -116 340 -104 344 -106 b 323 -131 344 -124 340 -129 b 304 -134 317 -133 311 -134 b 259 -123 289 -134 273 -130 l 254 -120 l 251 -124 b 78 -237 198 -183 141 -222 b 29 -242 63 -241 44 -242 b 16 -241 24 -242 19 -242 b -1 -217 5 -237 -1 -227 b 17 -192 -1 -206 5 -195 b 23 -191 19 -191 20 -191 b 29 -191 24 -191 27 -191 b 32 -191 29 -191 31 -191 b 175 -97 70 -191 132 -152 b 294 237 246 -12 287 105 b 306 273 295 256 298 263 b 334 290 313 281 323 288 m 292 -285 b 311 -285 299 -285 306 -285 b 517 -399 405 -285 496 -334 b 519 -420 518 -406 519 -413 b 427 -535 519 -462 485 -505 l 416 -541 l 427 -546 b 528 -681 491 -580 528 -631 b 518 -724 528 -695 525 -710 b 341 -816 488 -782 417 -816 b 216 -785 299 -816 255 -806 b 186 -750 194 -774 186 -764 b 187 -742 186 -748 186 -745 l 187 -739 l 186 -742 b 66 -784 151 -771 114 -784 b 59 -784 65 -784 62 -784 b 16 -767 31 -784 23 -781 b 13 -753 14 -763 13 -757 b 43 -723 13 -737 27 -723 b 62 -730 50 -723 55 -725 b 70 -734 66 -734 66 -734 b 151 -666 96 -734 130 -705 b 167 -630 153 -660 155 -656 b 213 -444 193 -570 209 -506 b 215 -412 215 -437 215 -426 b 212 -355 215 -385 213 -356 b 212 -353 212 -355 212 -353 b 176 -369 209 -353 187 -363 b 106 -433 145 -385 119 -409 b 69 -458 98 -449 83 -458 b 36 -437 57 -458 44 -451 b 31 -417 32 -431 31 -424 b 53 -378 31 -405 38 -391 b 292 -285 111 -324 191 -294 m 336 -338 b 310 -337 329 -338 318 -337 b 300 -338 304 -337 300 -337 b 300 -338 300 -338 300 -338 b 306 -408 303 -345 306 -381 b 306 -415 306 -410 306 -413 b 247 -657 304 -496 284 -578 b 217 -709 235 -682 228 -695 b 210 -717 215 -713 212 -716 b 210 -717 210 -717 210 -717 b 215 -717 210 -717 212 -717 b 217 -717 215 -717 216 -717 b 220 -717 217 -717 219 -717 b 242 -727 228 -717 232 -718 b 337 -764 273 -752 303 -763 b 341 -764 338 -764 340 -764 b 436 -681 396 -764 436 -728 b 435 -664 436 -675 436 -670 b 319 -566 427 -617 381 -578 b 299 -557 307 -563 304 -562 b 292 -539 294 -552 292 -545 b 317 -513 292 -527 302 -514 b 423 -445 364 -508 409 -480 b 428 -421 427 -437 428 -430 b 336 -338 428 -384 392 -349 '},'v6c':{'x_min':-1.359375,'x_max':193.28125,'ha':197,'o':'m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 '},'v6d':{'x_min':-590.71875,'x_max':589.359375,'ha':601,'o':'m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 '},'v6e':{'x_min':-355.25,'x_max':353.890625,'ha':361,'o':'m -27 720 b -13 721 -24 720 -20 721 b 42 718 4 721 34 720 b 343 446 190 699 308 591 b 353 360 349 417 353 390 b 84 9 353 197 245 49 b 0 0 55 2 27 0 b -344 273 -160 0 -306 109 b -355 359 -351 302 -355 331 b -39 718 -355 539 -221 700 l -27 720 m 39 691 b -13 692 32 691 4 692 b -25 692 -19 692 -23 692 b -326 383 -190 675 -314 548 l -326 374 l -1 374 l 325 374 l 325 383 b 39 691 314 541 197 667 m 325 337 l 325 345 l -1 345 l -326 345 l -326 337 b -55 33 -315 184 -204 58 b -1 29 -34 29 -29 29 b 54 33 28 29 32 29 b 325 337 201 58 314 184 '},'v6f':{'x_min':-80.3125,'x_max':78.9375,'ha':81,'o':'m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 '},'v70':{'x_min':0,'x_max':436.921875,'ha':446,'o':'m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 '},'v71':{'x_min':-25.859375,'x_max':347.078125,'ha':354,'o':'m 313 155 b 321 156 315 156 318 156 b 334 154 325 156 330 155 b 347 131 343 148 347 140 b 341 113 347 126 345 120 b 336 101 340 111 337 105 b 311 -1 319 69 311 34 b 341 -115 311 -40 322 -79 b 347 -133 345 -120 347 -127 b 321 -158 347 -147 337 -158 b 296 -148 314 -158 311 -158 b 6 -29 221 -97 111 -52 b -13 -23 -10 -26 -10 -26 b -25 -1 -21 -19 -25 -9 b -12 23 -25 8 -21 18 b 5 27 -9 23 -2 26 b 296 147 115 52 220 95 b 313 155 307 152 310 155 '},'v72':{'x_min':-423.3125,'x_max':421.9375,'ha':431,'o':'m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 '},'v73':{'x_min':0,'x_max':347.078125,'ha':354,'o':'m 231 818 b 239 821 234 820 236 821 b 251 816 243 821 249 818 b 258 800 255 811 255 810 b 341 587 273 725 304 646 l 347 578 l 347 573 l 347 571 b 329 553 347 560 338 553 b 318 556 325 553 322 555 b 264 577 302 567 283 574 b 258 578 261 577 259 578 b 258 577 258 578 258 578 b 258 576 258 577 258 577 b 259 416 259 574 259 542 l 259 258 l 285 265 b 318 270 302 269 311 270 b 336 259 328 270 332 267 b 337 208 336 256 337 233 b 336 158 337 184 336 159 b 302 140 332 148 329 147 b 259 130 266 131 259 130 b 259 65 259 130 259 104 b 259 20 259 51 259 36 l 259 -88 l 285 -81 b 318 -76 302 -77 311 -76 b 332 -81 325 -76 328 -77 b 337 -123 336 -87 337 -86 l 337 -138 l 337 -154 b 332 -195 337 -191 336 -190 b 281 -210 328 -199 328 -199 b 262 -216 272 -213 264 -216 l 259 -216 l 259 -349 l 259 -483 l 258 -487 b 239 -499 254 -495 246 -499 b 220 -487 231 -499 223 -495 l 219 -483 l 217 -355 l 217 -227 l 216 -227 l 194 -233 l 152 -244 b 129 -249 140 -247 130 -249 b 127 -410 127 -249 127 -258 b 127 -576 127 -548 127 -573 b 126 -578 126 -577 126 -578 b 127 -580 126 -578 126 -580 b 133 -578 129 -580 130 -578 b 186 -557 152 -576 170 -569 b 197 -555 190 -556 194 -555 b 215 -573 206 -555 215 -562 l 215 -574 l 215 -580 l 209 -588 b 126 -802 172 -648 141 -727 b 107 -823 123 -817 118 -823 b 87 -798 95 -823 91 -817 b 5 -588 69 -718 40 -648 l 0 -580 l 0 -574 b 0 -573 0 -574 0 -574 b 16 -555 0 -562 6 -555 b 27 -557 20 -555 24 -556 b 81 -578 44 -569 62 -576 b 87 -580 84 -578 85 -580 b 88 -578 88 -580 88 -580 b 87 -576 88 -578 88 -577 b 87 -416 87 -573 87 -549 b 85 -260 87 -270 87 -260 b 85 -260 85 -260 85 -260 b 32 -273 74 -263 35 -273 b 13 -260 24 -273 16 -267 b 12 -209 12 -256 12 -256 l 12 -162 l 13 -158 b 74 -134 17 -148 17 -148 l 87 -131 l 87 -22 b 85 86 87 79 87 86 b 85 86 85 86 85 86 b 32 74 74 83 35 74 b 13 86 24 74 16 79 b 12 137 12 90 12 90 l 12 184 l 13 188 b 73 212 17 198 17 198 l 87 215 l 87 348 l 87 481 l 88 485 b 107 498 92 494 99 498 b 126 485 115 498 122 494 l 127 481 l 127 353 l 127 226 l 133 226 b 172 235 136 227 153 231 l 212 247 l 217 248 l 217 409 b 219 574 217 546 217 571 b 219 577 219 576 219 577 b 219 578 219 578 219 578 b 213 577 217 578 216 577 b 159 556 194 574 175 567 b 148 553 155 555 152 553 b 130 571 138 553 130 560 l 130 573 l 130 578 l 136 587 b 219 796 172 646 200 717 b 231 818 221 813 224 816 m 217 9 b 217 119 217 70 217 119 l 217 119 b 194 113 217 119 206 116 l 152 102 b 129 97 140 99 130 97 b 127 -12 127 97 127 91 l 127 -122 l 133 -120 b 172 -111 136 -119 153 -115 l 212 -101 l 217 -98 l 217 9 '},'v74':{'x_min':-206.890625,'x_max':428.75,'ha':438,'o':'m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 '},'v75':{'x_min':-149.71875,'x_max':148.359375,'ha':151,'o':'m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 '},'v76':{'x_min':0,'x_max':737.71875,'ha':753,'o':'m 9 13 b 208 15 10 15 51 15 b 368 15 251 15 304 15 l 726 15 l 729 12 b 737 -1 735 9 737 4 b 729 -15 737 -6 735 -11 l 726 -16 l 660 -16 l 592 -16 l 592 -95 l 592 -174 l 368 -174 l 144 -174 l 144 -95 l 144 -16 l 77 -16 l 9 -16 l 6 -15 b 0 -1 1 -11 0 -6 b 9 13 0 5 2 11 '},'v77':{'x_min':-209.609375,'x_max':208.25,'ha':213,'o':'m -197 19 b 1 20 -194 19 -96 20 b 196 19 98 20 193 19 b 208 -1 204 15 208 6 b 202 -15 208 -6 206 -11 b 95 -22 197 -20 212 -22 b -1 -22 69 -22 38 -22 b -96 -22 -39 -22 -70 -22 b -204 -15 -213 -22 -198 -20 b -209 -1 -208 -11 -209 -6 b -197 19 -209 6 -205 15 '},'v78':{'x_min':0,'x_max':193.28125,'ha':197,'o':'m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 '},'v79':{'x_min':-1.359375,'x_max':899.703125,'ha':918,'o':'m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 '},'v7a':{'x_min':-1.359375,'x_max':386.5625,'ha':394,'o':'m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 '},'v7b':{'x_min':-212.328125,'x_max':210.96875,'ha':215,'o':'m -8 216 b -1 217 -6 216 -4 217 b 19 204 8 217 16 212 b 20 111 20 201 20 199 l 20 20 l 107 20 b 142 20 121 20 133 20 b 205 13 205 20 198 19 b 210 0 209 9 210 4 b 198 -20 210 -9 206 -16 b 107 -22 194 -22 193 -22 l 20 -22 l 20 -112 b 20 -148 20 -126 20 -138 b 13 -212 20 -213 19 -206 b 0 -219 9 -216 4 -219 b -20 -205 -8 -219 -16 -213 b -21 -112 -21 -202 -21 -201 l -21 -22 l -108 -22 b -200 -20 -194 -22 -196 -22 b -212 0 -208 -16 -212 -9 b -206 13 -212 4 -210 9 b -144 20 -200 19 -206 20 b -108 20 -134 20 -122 20 l -21 20 l -21 111 b -20 204 -21 199 -21 201 b -8 216 -17 209 -13 213 '},'v7c':{'x_min':0,'x_max':300.8125,'ha':307,'o':'m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 '},'v7d':{'x_min':-1.359375,'x_max':436.921875,'ha':446,'o':'m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 '},'v7e':{'x_min':-390.640625,'x_max':389.28125,'ha':397,'o':'m -377 -1 b -368 0 -375 -1 -372 0 b -362 -1 -366 0 -363 -1 b -343 -24 -356 -4 -352 -8 l -285 -119 l -187 -280 l -88 -444 l -35 -533 b -31 -538 -32 -537 -32 -538 b -28 -534 -31 -538 -29 -537 l -23 -526 l -19 -517 l -13 -509 l -8 -501 l -2 -492 l 2 -483 l 6 -476 l 17 -458 l 23 -449 l 32 -433 l 38 -424 l 42 -416 l 47 -408 l 53 -399 l 58 -391 l 63 -381 l 68 -373 l 73 -365 l 78 -356 l 84 -348 l 89 -340 l 93 -330 l 99 -322 l 104 -315 l 114 -297 l 125 -280 l 129 -272 l 134 -263 l 140 -255 l 145 -247 l 151 -238 l 155 -230 l 160 -220 l 166 -212 l 171 -204 l 176 -195 l 181 -187 l 186 -177 l 191 -169 l 196 -162 l 201 -154 l 206 -144 l 217 -127 l 221 -119 l 227 -111 l 232 -102 l 238 -94 l 242 -86 l 247 -77 l 253 -69 l 258 -59 l 262 -51 l 268 -43 l 273 -34 l 279 -26 l 283 -18 b 321 -1 292 -2 292 -1 b 338 -1 326 -1 332 -1 b 382 -6 378 -1 375 -1 b 389 -20 386 -9 389 -15 b 382 -38 389 -26 386 -31 l 378 -47 l 372 -55 l 367 -63 l 362 -72 l 356 -80 l 351 -90 l 347 -98 l 341 -106 l 336 -115 l 330 -123 l 325 -131 l 321 -141 l 315 -149 l 310 -158 l 304 -166 l 299 -174 b 295 -183 298 -177 296 -181 l 289 -191 l 285 -199 l 280 -208 l 274 -216 l 269 -224 l 264 -233 l 259 -242 l 254 -251 l 249 -259 l 243 -267 l 238 -276 l 234 -284 l 228 -292 l 223 -302 l 217 -310 l 213 -319 l 208 -327 b 202 -335 206 -330 204 -334 l 197 -344 l 193 -351 l 187 -360 l 182 -369 l 176 -377 l 172 -385 l 167 -394 l 161 -403 l 156 -412 l 152 -420 l 147 -428 l 141 -437 l 136 -445 l 130 -455 l 126 -463 l 121 -471 l 115 -480 b 110 -488 114 -483 111 -487 l 106 -496 l 100 -503 l 96 -512 l 89 -521 l 85 -530 l 80 -538 l 74 -546 l 69 -555 l 65 -564 l 59 -573 l 54 -581 l 49 -589 l 43 -598 l 39 -606 l 34 -616 l 28 -624 l 23 -632 b 19 -641 21 -635 20 -638 b 0 -653 14 -649 8 -653 b -25 -631 -10 -653 -14 -649 l -80 -541 l -359 -79 b -389 -29 -375 -52 -389 -30 b -390 -22 -389 -26 -390 -24 b -377 -1 -390 -13 -385 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 51 -36 19 -8 39 -19 b 61 -72 58 -47 61 -59 b 51 -106 61 -84 58 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -127 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 '},'v7f':{'x_min':0,'x_max':367.5,'ha':375,'o':'m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 '},'v80':{'x_min':29.9375,'x_max':420.578125,'ha':371,'o':'m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 '},'v81':{'x_min':0,'x_max':428.75,'ha':438,'o':'m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 '},'v82':{'x_min':0,'x_max':607.0625,'ha':619,'o':'m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 '},'v83':{'x_min':-1.359375,'x_max':847.96875,'ha':865,'o':'m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 '},'v84':{'x_min':25.859375,'x_max':164.6875,'ha':168,'o':'m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 '},'v85':{'x_min':-21.78125,'x_max':251.8125,'ha':257,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'v86':{'x_min':-571.671875,'x_max':570.3125,'ha':582,'o':'m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 '},'v87':{'x_min':0,'x_max':0,'ha':263},'v88':{'x_min':-1.359375,'x_max':413.78125,'ha':422,'o':'m 99 692 b 107 694 102 692 104 694 b 121 688 112 694 117 691 b 126 673 123 685 125 682 b 209 460 141 598 172 519 l 215 451 l 215 445 l 215 445 b 197 426 215 434 206 426 b 186 430 194 426 190 427 b 133 449 170 440 152 446 b 127 451 130 449 129 451 b 126 449 126 451 126 451 b 127 446 126 449 127 448 b 127 324 127 444 127 424 b 129 205 127 259 129 205 b 215 227 129 205 167 215 b 308 249 283 244 300 249 b 315 247 311 249 313 248 b 325 237 319 245 323 241 l 326 233 l 326 -105 b 326 -262 326 -167 326 -219 b 326 -448 326 -416 326 -445 b 325 -451 325 -449 325 -451 b 326 -452 325 -452 325 -452 b 330 -451 326 -452 329 -451 b 385 -431 351 -448 368 -441 b 396 -427 389 -428 393 -427 b 413 -446 405 -427 413 -435 l 413 -446 l 413 -452 l 408 -462 b 325 -674 371 -520 340 -599 b 306 -695 322 -689 317 -695 b 285 -670 294 -695 289 -689 b 204 -462 268 -591 239 -520 l 197 -452 l 197 -446 l 197 -446 b 215 -427 197 -435 205 -427 b 225 -431 219 -427 223 -428 b 280 -451 243 -441 261 -448 b 285 -452 283 -452 284 -452 b 287 -451 287 -452 287 -452 b 285 -448 287 -451 287 -449 b 285 -323 285 -445 285 -426 b 284 -201 285 -247 284 -201 b 197 -223 284 -201 245 -210 b 104 -245 129 -240 111 -245 b 98 -242 102 -245 100 -244 b 88 -233 93 -241 89 -237 l 87 -230 l 87 106 b 87 262 87 169 87 220 b 87 446 87 415 87 444 b 88 449 88 448 88 449 b 87 451 88 451 88 451 b 81 449 85 451 84 451 b 27 430 62 446 44 440 b 16 426 24 427 20 426 b -1 445 6 426 -1 434 b 0 445 -1 445 0 445 l 0 451 l 5 460 b 87 669 40 519 69 589 b 99 692 91 685 92 688 m 284 22 b 285 70 285 41 285 58 b 284 116 285 113 284 116 l 284 116 b 205 97 283 116 247 106 l 127 77 l 127 -18 b 129 -112 127 -69 129 -112 l 206 -93 l 284 -73 l 284 22 '},'v89':{'x_min':0,'x_max':737.71875,'ha':753,'o':'m 144 94 l 144 173 l 368 173 l 592 173 l 592 94 l 592 15 l 660 15 l 726 15 l 729 12 b 737 -1 735 9 737 4 b 729 -15 737 -6 735 -11 l 726 -16 l 368 -16 l 9 -16 l 6 -15 b 0 -1 1 -11 0 -6 b 6 12 0 4 1 9 l 9 15 l 77 15 l 144 15 l 144 94 '},'v8a':{'x_min':-170.140625,'x_max':168.78125,'ha':172,'o':'m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 '},'v8b':{'x_min':0,'x_max':319.859375,'ha':326,'o':'m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 '},'v8c':{'x_min':-330.75,'x_max':329.390625,'ha':336,'o':'m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 '},'v8d':{'x_min':-1.359375,'x_max':255.890625,'ha':261,'o':'m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 '},'v8e':{'x_min':-299.4375,'x_max':298.078125,'ha':304,'o':'m -281 174 b -274 174 -280 174 -277 174 b -259 173 -270 174 -265 174 l -40 112 l 224 40 b 287 20 289 22 283 23 b 298 0 295 16 298 8 b 287 -22 298 -9 295 -18 b 287 -23 287 -23 287 -23 b 287 -23 287 -23 287 -23 b -40 -113 287 -24 270 -29 l -259 -174 b -274 -176 -265 -176 -270 -176 b -288 -172 -280 -176 -284 -174 b -299 -151 -296 -167 -299 -159 b -288 -129 -299 -141 -296 -133 b -98 -74 -284 -124 -307 -131 l 42 -36 l 140 -9 b 170 0 156 -4 170 -1 b 140 8 170 0 156 2 l 42 34 l -98 73 b -287 126 -299 129 -284 124 b -299 149 -295 131 -299 140 b -281 174 -299 161 -294 170 '},'v8f':{'x_min':-21.78125,'x_max':362.0625,'ha':369,'o':'m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 '},'v90':{'x_min':-171.5,'x_max':483.1875,'ha':493,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '},'v91':{'x_min':-355.25,'x_max':353.890625,'ha':361,'o':'m -27 720 b -13 721 -24 720 -20 721 b 42 718 4 721 34 720 b 343 446 190 699 308 591 b 353 360 349 417 353 390 b 84 9 353 197 245 49 b 0 0 55 2 27 0 b -344 273 -160 0 -306 109 b -355 359 -351 302 -355 331 b -39 718 -355 539 -221 700 l -27 720 m 39 691 b -13 692 32 691 4 692 b -25 692 -19 692 -23 692 b -322 416 -178 677 -296 566 b -326 360 -325 394 -326 390 b -325 323 -326 341 -325 328 b -36 29 -303 163 -193 51 b -1 29 -31 29 -16 29 b 35 29 14 29 29 29 b 323 323 191 51 302 163 b 325 360 323 328 325 341 b 321 416 325 390 323 394 b 39 691 296 560 185 669 m -12 655 b -4 655 -9 655 -6 655 b 20 652 4 655 14 653 b 66 585 50 642 66 613 b 32 524 66 562 55 538 b 25 521 28 523 25 521 b 16 403 25 520 16 408 b 16 403 16 403 16 403 l 16 403 b 54 448 17 403 34 423 l 92 492 l 89 499 b 87 519 88 506 87 513 b 103 564 87 535 92 552 b 155 589 117 581 136 589 b 216 551 179 589 204 576 b 224 520 221 541 224 530 b 156 449 224 483 193 449 b 136 453 149 449 142 451 l 129 455 l 85 416 b 42 377 61 395 42 378 l 42 377 l 42 377 b 156 387 46 377 156 387 b 160 394 156 387 159 390 b 220 430 172 417 197 430 b 280 394 243 430 266 417 b 288 360 285 384 288 371 b 280 326 288 348 285 337 b 220 291 266 302 243 291 b 160 327 197 291 172 302 b 156 333 159 330 156 333 b 42 342 156 333 46 342 b 42 342 42 342 42 342 l 42 342 b 85 303 42 342 61 324 l 129 265 l 136 267 b 155 270 142 269 148 270 b 198 254 171 270 186 265 b 223 201 216 240 223 220 b 186 138 223 176 210 151 b 155 131 176 133 166 131 b 87 201 119 131 87 162 b 89 220 87 206 88 213 l 92 227 l 54 272 b 16 316 34 297 17 316 l 16 316 b 16 316 16 316 16 316 b 25 199 16 313 25 199 b 32 195 25 199 28 198 b 68 134 55 183 68 158 b 32 73 68 111 55 87 b -1 65 23 68 10 65 b -34 73 -12 65 -24 68 b -69 134 -57 87 -69 111 b -34 195 -69 158 -57 183 b -27 199 -29 198 -27 199 b -17 316 -27 199 -17 313 b -17 316 -17 316 -17 316 l -17 316 b -55 272 -19 316 -35 297 l -93 227 l -91 220 b -88 201 -89 215 -88 208 b -104 156 -88 184 -93 169 b -156 131 -118 140 -137 131 b -217 169 -181 131 -205 144 b -225 201 -223 179 -225 190 b -157 270 -225 238 -194 270 b -137 267 -151 270 -144 269 l -130 265 l -87 303 b -43 342 -62 324 -43 342 l -43 342 b -43 342 -43 342 -43 342 b -157 333 -47 342 -157 333 b -161 327 -159 333 -160 330 b -221 291 -175 302 -198 291 b -281 326 -245 291 -268 302 b -289 360 -287 337 -289 348 b -281 394 -289 371 -287 384 b -221 430 -268 417 -245 430 b -161 394 -198 430 -175 417 b -157 387 -160 390 -159 387 b -43 377 -157 387 -47 377 l -43 377 l -43 377 b -87 416 -43 378 -62 395 l -130 455 l -137 453 b -156 449 -144 451 -149 449 b -200 466 -172 449 -187 455 b -224 520 -217 480 -224 499 b -187 581 -224 545 -212 569 b -156 589 -178 587 -167 589 b -88 520 -121 589 -88 559 b -91 499 -88 513 -89 506 l -93 492 l -55 448 b -17 403 -35 423 -19 403 l -17 403 b -17 403 -17 403 -17 403 b -27 521 -17 408 -27 520 b -34 524 -27 521 -29 523 b -68 585 -57 538 -68 562 b -12 655 -68 617 -47 649 '},'v92':{'x_min':0,'x_max':598.890625,'ha':611,'o':'m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 '},'v93':{'x_min':0,'x_max':438.28125,'ha':447,'o':'m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 '},'v94':{'x_min':-149.71875,'x_max':148.359375,'ha':151,'o':'m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '},'v95':{'x_min':0,'x_max':406.96875,'ha':415,'o':'m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 '},'v96':{'x_min':0,'x_max':597.53125,'ha':610,'o':'m 356 341 b 479 341 402 341 445 341 b 570 341 533 341 568 341 b 597 309 586 340 597 326 l 597 309 b 472 -320 597 305 475 -310 b 451 -341 469 -330 462 -337 b 242 -342 450 -342 347 -342 b 21 -341 134 -342 24 -342 b 0 -310 8 -337 0 -324 b 0 -310 0 -310 0 -310 b 123 316 0 -306 118 297 b 144 340 126 327 133 335 b 356 341 147 341 153 341 m 528 276 b 353 277 528 277 492 277 b 179 276 215 277 179 277 b 123 -1 179 276 153 151 l 68 -278 l 242 -278 b 310 -278 266 -278 289 -278 b 416 -278 372 -278 416 -278 b 528 276 417 -278 528 274 '},'v97':{'x_min':-228.671875,'x_max':227.3125,'ha':232,'o':'m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 '},'v98':{'x_min':-1.359375,'x_max':427.390625,'ha':436,'o':'m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 b 272 494 272 616 272 616 l 272 370 l 344 333 b 426 285 426 292 423 294 b 427 277 426 283 427 280 b 405 256 427 266 417 256 b 405 256 405 256 405 256 l 400 256 l 336 290 b 272 322 300 308 272 322 b 272 54 272 322 272 201 b 270 -216 272 -212 272 -212 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b -1 84 9 18 -1 52 b 111 199 -1 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 245 l 231 342 l 157 380 b 81 420 92 413 84 417 b 76 435 77 424 76 430 b 96 456 76 446 84 456 b 98 456 96 456 98 456 l 103 456 l 166 424 b 230 391 201 406 230 391 b 231 503 230 391 231 442 b 232 620 231 614 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 '},'v99':{'x_min':0,'x_max':239.5625,'ha':244,'o':'m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 '},'v9a':{'x_min':-21.78125,'x_max':367.5,'ha':375,'o':'m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 '},'v9b':{'x_min':-24.5,'x_max':313.0625,'ha':319,'o':'m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 '},'v9c':{'x_min':-166.0625,'x_max':-25.859375,'ha':0,'o':'m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 '},'v9d':{'x_min':-1.359375,'x_max':326.671875,'ha':333,'o':'m 99 692 b 107 694 102 692 104 694 b 121 688 112 694 117 691 b 126 673 123 685 125 682 b 209 460 141 598 172 519 l 215 451 l 215 445 l 215 445 b 197 426 215 434 206 426 b 186 430 194 426 190 427 b 133 449 170 440 152 446 b 127 451 130 449 129 451 b 126 449 126 451 126 451 b 127 446 126 449 127 448 b 127 324 127 444 127 424 b 129 205 127 259 129 205 b 215 227 129 205 167 215 b 308 249 283 244 300 249 b 315 247 311 249 313 248 b 325 237 319 245 323 241 l 326 233 l 326 -106 l 326 -448 l 325 -451 b 306 -463 321 -459 314 -463 b 287 -451 298 -463 291 -459 l 285 -448 l 285 -324 b 284 -201 285 -248 284 -201 b 197 -223 284 -201 245 -210 b 104 -245 129 -240 111 -245 b 98 -242 102 -245 100 -244 b 88 -233 93 -241 89 -237 l 87 -230 l 87 106 b 87 262 87 169 87 220 b 87 446 87 415 87 444 b 88 449 88 448 88 449 b 87 451 88 451 88 451 b 81 449 85 451 84 451 b 27 430 62 446 44 440 b 16 426 24 427 20 426 b -1 445 6 426 -1 434 b 0 445 -1 445 0 445 l 0 451 l 5 460 b 87 669 40 519 69 589 b 99 692 91 685 92 688 m 284 22 b 285 70 285 41 285 58 b 284 116 285 113 284 116 l 284 116 b 205 97 283 116 247 106 l 127 77 l 127 -18 b 129 -112 127 -69 129 -112 l 206 -93 l 284 -73 l 284 22 '},'v9e':{'x_min':0,'x_max':607.0625,'ha':619,'o':'m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 '},'v9f':{'x_min':-311.6875,'x_max':310.328125,'ha':317,'o':'m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 l 23 328 l 23 290 l 27 290 b 172 274 62 290 129 283 b 200 259 191 270 196 267 b 215 40 204 249 215 102 b 215 26 215 33 215 26 l 216 24 l 253 24 l 255 24 b 299 19 292 24 292 23 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 255 -27 292 -27 292 -27 l 253 -27 l 216 -27 l 215 -30 b 215 -55 215 -31 215 -43 b 202 -244 213 -111 209 -179 b 174 -277 200 -270 198 -273 b 40 -294 132 -285 87 -291 l 23 -294 l 23 -331 b 23 -340 23 -334 23 -337 b 17 -381 23 -376 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -376 b -27 -331 -27 -337 -27 -334 l -27 -294 l -44 -294 b -178 -277 -91 -291 -136 -285 b -205 -258 -198 -273 -204 -270 b -219 -44 -210 -215 -219 -94 b -219 -29 -219 -37 -219 -30 l -220 -27 l -255 -27 l -258 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -255 24 -291 23 -284 24 l -220 24 l -219 26 b -219 40 -219 26 -219 33 b -204 259 -219 104 -208 249 b -176 274 -200 267 -196 270 b -31 290 -133 283 -66 290 l -27 290 l -27 328 b -27 371 -27 360 -27 369 b -9 388 -24 378 -17 385 m -27 136 l -27 247 l -28 247 b -103 233 -46 245 -100 235 b -107 197 -103 233 -106 217 b -115 52 -111 147 -114 94 b -115 27 -115 40 -115 29 l -115 24 l -72 24 l -27 24 l -27 136 m 34 245 b 24 247 28 247 24 247 b 23 136 24 247 23 197 l 23 24 l 68 24 l 111 24 l 111 27 b 111 52 111 29 111 40 b 103 197 110 94 107 147 b 99 233 102 217 100 233 b 34 245 98 235 54 244 m -27 -140 l -27 -27 l -72 -27 l -115 -27 l -115 -30 b -115 -56 -115 -33 -115 -44 b -107 -201 -114 -98 -111 -151 b -103 -237 -106 -222 -103 -237 b -28 -251 -100 -240 -40 -251 b -27 -140 -28 -251 -27 -201 m 111 -30 l 111 -27 l 68 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 99 -237 36 -251 96 -240 b 103 -201 100 -237 102 -222 b 111 -56 107 -151 110 -98 b 111 -30 111 -44 111 -33 '},'va0':{'x_min':0,'x_max':622.03125,'ha':635,'o':'m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 '},'va1':{'x_min':0,'x_max':294,'ha':300,'o':'m 138 381 b 147 381 141 381 144 381 b 221 299 191 381 221 341 b 194 238 221 278 213 255 b 159 210 190 234 161 212 b 78 148 157 209 81 151 b 78 148 78 148 78 148 b 95 106 78 144 88 119 b 121 77 103 88 108 83 b 156 69 132 72 144 69 b 259 127 193 69 232 91 b 273 140 266 137 269 138 b 279 141 274 141 276 141 b 294 124 287 141 294 134 b 292 117 294 123 294 120 b 255 66 289 113 261 72 b 126 -1 220 22 171 -1 b 47 27 96 -1 69 8 b 2 133 31 43 9 93 b 0 180 0 149 0 165 b 53 326 0 237 17 288 b 103 366 59 331 91 358 b 138 381 112 373 129 380 m 126 326 b 118 326 123 326 121 326 b 98 316 110 326 103 323 b 68 215 78 288 68 255 b 68 208 68 213 68 210 b 70 183 69 195 69 184 l 70 183 b 93 201 70 183 81 191 l 133 231 b 159 259 152 247 155 248 b 163 278 161 266 163 272 b 126 326 163 299 148 320 '},'va2':{'x_min':0,'x_max':367.5,'ha':375,'o':'m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 '},'va3':{'x_min':58.53125,'x_max':228.671875,'ha':294,'o':'m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 '},'va4':{'x_min':-21.78125,'x_max':483.1875,'ha':493,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '},'va5':{'x_min':0,'x_max':349.8125,'ha':357,'o':'m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 '},'va6':{'x_min':0,'x_max':462.78125,'ha':472,'o':'m 8 595 b 14 596 10 596 12 596 b 50 591 21 596 29 595 b 455 248 255 544 420 405 b 462 191 460 229 462 209 b 321 0 462 94 404 9 b 300 -1 314 -1 307 -1 b 149 167 215 -1 149 69 b 294 387 149 258 201 337 b 296 390 295 388 296 388 b 289 398 296 391 294 392 b 21 560 225 477 130 535 b 2 569 9 563 5 566 b 0 580 0 573 0 576 b 8 595 0 587 2 592 m 325 348 b 321 353 322 351 322 353 b 313 348 319 353 317 351 b 223 167 255 306 223 237 b 227 124 223 154 224 138 b 289 31 236 79 261 40 b 295 31 291 31 294 31 b 355 104 315 31 338 59 b 368 191 364 129 368 159 b 364 241 368 208 367 224 b 325 348 357 277 344 313 '},'va7':{'x_min':-155.171875,'x_max':153.8125,'ha':157,'o':'m -9 24 b 0 26 -5 24 -2 26 b 25 2 12 26 21 16 l 29 -19 b 144 -303 54 -124 96 -229 b 153 -328 153 -319 153 -322 b 127 -355 153 -344 142 -355 b 100 -334 115 -355 111 -351 b 6 -130 62 -274 31 -206 b -1 -108 2 -117 0 -108 b -8 -130 -1 -108 -4 -117 b -102 -334 -32 -206 -63 -274 b -129 -355 -112 -351 -117 -355 b -155 -328 -144 -355 -155 -344 b -145 -303 -155 -322 -155 -319 b -31 -19 -98 -229 -55 -124 l -27 2 b -9 24 -24 13 -17 22 '},'va8':{'x_min':-68.0625,'x_max':66.6875,'ha':68,'o':'m -12 66 b -1 68 -9 68 -5 68 b 55 37 20 68 43 56 b 66 -1 62 26 66 12 b 36 -58 66 -23 55 -44 b 0 -69 25 -65 12 -69 b -57 -38 -21 -69 -43 -58 b -68 -1 -63 -27 -68 -13 b -12 66 -68 30 -46 61 '},'va9':{'x_min':-24.5,'x_max':314.421875,'ha':321,'o':'m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 '},'vaa':{'x_min':-1.359375,'x_max':752.703125,'ha':768,'o':'m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 '},'vab':{'x_min':0,'x_max':272.21875,'ha':278,'o':'m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 '},'vac':{'x_min':-390.640625,'x_max':389.28125,'ha':397,'o':'m -9 650 b -1 652 -6 650 -4 652 b 19 639 6 652 13 648 l 23 631 b 28 623 24 628 27 626 l 34 614 l 39 606 l 43 598 l 49 588 l 54 580 l 59 571 l 65 563 l 69 555 l 74 546 l 80 537 l 85 528 b 89 520 87 526 89 523 l 95 512 l 100 503 l 106 494 l 111 487 l 115 478 l 121 470 l 126 462 l 130 453 l 136 445 l 141 437 l 147 427 l 151 419 l 156 410 l 161 402 l 167 394 l 172 385 l 176 376 b 182 367 179 374 181 370 l 187 359 l 193 351 l 198 342 l 202 334 l 208 326 l 212 317 l 217 309 l 223 301 l 228 292 l 234 284 l 238 274 l 243 266 l 249 258 l 254 249 l 259 241 l 264 233 l 269 224 b 274 216 270 222 273 217 l 280 206 l 285 198 l 295 180 l 299 174 l 304 165 l 310 156 l 315 148 l 321 140 l 325 131 l 330 123 l 336 113 l 341 105 l 347 97 l 351 88 l 356 80 l 360 72 b 364 66 362 70 363 68 b 370 58 366 65 368 61 l 379 41 b 389 19 386 31 389 24 b 382 4 389 13 386 8 b 347 0 377 0 378 0 b 337 0 344 0 340 0 b 336 0 336 0 336 0 b 287 11 294 0 294 0 l 281 19 l 276 27 l 272 37 l 266 45 l 261 54 l 255 62 l 250 70 l 246 79 l 240 87 l 235 97 l 230 105 l 224 113 l 220 122 l 215 130 l 209 140 l 204 148 l 200 155 l 194 163 b 189 172 193 165 191 169 l 185 180 l 179 188 l 174 198 l 168 206 l 163 215 l 159 223 l 153 231 l 148 240 l 142 249 l 138 258 l 133 266 l 127 274 l 122 283 l 117 292 l 111 301 l 107 308 l 102 316 b 98 324 102 317 99 322 l 92 333 l 87 341 l 81 349 l 77 359 l 72 367 l 66 376 l 61 384 l 55 392 l 51 401 l 46 410 l 40 419 l 35 427 l 31 435 l 24 444 l 20 453 l 14 460 l 10 469 b 5 477 9 470 6 474 l 0 485 l -5 494 l -9 502 l -14 512 b -20 519 -16 513 -19 517 l -24 526 l -28 534 b -31 537 -29 535 -31 537 b -35 533 -32 537 -32 535 l -88 444 l -187 280 l -285 117 l -343 23 b -362 1 -352 6 -356 2 b -368 0 -364 0 -367 0 b -390 20 -381 0 -390 8 l -390 20 b -359 77 -390 27 -390 27 l -80 539 l -25 631 b -9 650 -17 644 -13 648 m -13 133 b -1 134 -9 133 -5 134 b 50 105 19 134 39 123 b 61 70 57 95 61 83 b 50 34 61 58 57 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 70 -57 40 -62 55 b -13 133 -62 98 -44 126 '},'vad':{'x_min':0,'x_max':873.828125,'ha':892,'o':'m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 '},'vae':{'x_min':-108.890625,'x_max':251.8125,'ha':257,'o':'m -8 863 b 0 864 -5 864 -2 864 b 12 859 4 864 9 863 b 19 843 16 856 16 853 b 102 631 34 768 65 689 l 107 621 l 107 616 l 107 616 b 89 596 107 605 99 596 b 78 601 85 596 83 598 b 47 614 69 606 55 612 b 19 621 39 617 21 621 b 19 621 19 621 19 621 b 19 619 19 621 19 620 b 20 383 20 616 20 585 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 93 -148 206 -40 179 -70 l 38 -199 l 23 -215 l 20 -217 l 20 -241 b 19 -267 20 -260 20 -266 b 19 -270 19 -269 19 -270 b 19 -270 19 -270 19 -270 b 47 -263 21 -270 39 -266 b 78 -249 55 -260 69 -255 b 89 -247 83 -247 85 -247 b 107 -265 99 -247 107 -254 l 107 -265 l 107 -270 l 102 -280 b 19 -492 65 -338 34 -417 b 0 -513 14 -508 10 -513 b -20 -488 -12 -513 -16 -508 b -103 -280 -38 -409 -66 -338 l -108 -270 l -108 -265 l -108 -265 b -91 -247 -108 -254 -100 -247 b -80 -249 -87 -247 -84 -247 b -49 -263 -70 -255 -57 -260 b -20 -270 -40 -266 -23 -270 b -20 -270 -20 -270 -20 -270 b -20 -267 -20 -270 -20 -269 b -21 174 -21 -266 -21 -208 b -20 619 -21 559 -21 616 b -20 621 -20 620 -20 621 b -20 621 -20 621 -20 621 b -49 614 -23 621 -40 617 b -80 601 -57 612 -70 606 b -91 596 -84 598 -87 596 b -108 616 -100 596 -108 605 l -108 616 l -108 621 l -103 631 b -20 839 -66 689 -38 760 b -8 863 -17 856 -14 859 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'vaf':{'x_min':-209.609375,'x_max':208.25,'ha':213,'o':'m -197 19 b 1 20 -194 19 -96 20 b 196 19 98 20 193 19 b 208 -1 204 15 208 6 b 202 -15 208 -5 206 -11 b 95 -22 197 -20 212 -22 b -1 -22 69 -22 38 -22 b -96 -22 -39 -22 -70 -22 b -204 -15 -213 -22 -198 -20 b -209 -1 -208 -11 -209 -5 b -197 19 -209 6 -205 15 m -12 -113 b -1 -113 -9 -113 -5 -113 b 55 -144 20 -113 43 -124 b 66 -181 62 -155 66 -169 b 27 -244 66 -208 53 -233 b 0 -251 19 -248 9 -251 b -57 -220 -21 -251 -43 -240 b -68 -181 -63 -208 -68 -195 b -12 -113 -68 -151 -46 -120 '},'vb0':{'x_min':0,'x_max':438.28125,'ha':447,'o':'m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 '},'vb1':{'x_min':78.9375,'x_max':485.921875,'ha':417,'o':'m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 '},'vb2':{'x_min':-80.3125,'x_max':78.9375,'ha':81,'o':'m 23 191 b 32 192 27 192 29 192 b 78 145 57 192 78 172 b 78 140 78 142 78 141 b -10 -72 78 133 70 116 l -50 -165 b -70 -194 -63 -194 -63 -194 b -80 -184 -77 -194 -80 -192 b -76 -159 -80 -179 -78 -172 l -68 -116 b -12 159 -51 -31 -13 156 b 23 191 -6 176 6 188 '},'vb3':{'x_min':0,'x_max':227.3125,'ha':232,'o':'m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 '},'vb4':{'x_min':-597.53125,'x_max':596.171875,'ha':608,'o':'m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 '},'vb5':{'x_min':-170.140625,'x_max':168.78125,'ha':172,'o':'m -160 -1 b -122 -1 -159 -1 -149 -1 l -87 -1 l -84 -2 b -74 -15 -78 -4 -77 -6 b -20 -201 -73 -18 -49 -102 b 31 -383 8 -301 31 -383 b 85 -197 31 -383 55 -299 b 140 -9 114 -95 138 -11 b 153 0 141 -4 148 0 b 168 -9 159 0 166 -4 b 168 -12 168 -11 168 -11 b 92 -287 168 -20 159 -55 b 14 -555 50 -434 14 -555 b 0 -569 14 -562 6 -569 b -17 -553 -8 -569 -17 -560 b -93 -285 -17 -552 -51 -433 b -170 -16 -166 -36 -170 -20 b -170 -15 -170 -15 -170 -15 b -160 -1 -170 -8 -167 -4 '},'vb6':{'x_min':0,'x_max':556.6875,'ha':568,'o':'m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 '},'vb7':{'x_min':-176.9375,'x_max':251.8125,'ha':257,'o':'m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '},'vb8':{'x_min':0,'x_max':175.578125,'ha':179,'o':'m 72 231 b 87 233 77 233 81 233 b 175 142 137 233 175 191 b 164 102 175 130 171 116 b 87 54 149 70 118 54 b 24 80 63 54 42 62 b 0 142 6 98 0 120 b 72 231 0 184 27 224 '},'vb9':{'x_min':-122.5,'x_max':121.140625,'ha':124,'o':'m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 '},'vba':{'x_min':-118.421875,'x_max':597.53125,'ha':381,'o':'m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 '},'vbb':{'x_min':0,'x_max':288.5625,'ha':294,'o':'m 202 341 b 235 341 213 341 225 341 b 261 341 249 341 259 341 b 288 309 276 340 288 326 l 288 309 b 163 -320 288 305 166 -310 b 142 -341 160 -330 153 -337 b 83 -342 140 -342 111 -342 b 21 -341 54 -342 24 -342 b 0 -310 8 -337 0 -324 b 0 -310 0 -310 0 -310 b 123 316 0 -306 118 297 b 144 340 126 327 133 335 b 202 341 147 341 151 341 '},'vbc':{'x_min':-155.171875,'x_max':153.8125,'ha':158,'o':'m -8 24 b -1 26 -6 24 -4 26 b 21 12 8 26 17 20 b 27 -8 24 9 24 9 b 144 -303 50 -115 93 -227 b 153 -322 151 -315 152 -317 b 153 -330 153 -324 153 -327 b 129 -355 153 -344 142 -355 b 111 -351 123 -355 117 -353 b 0 -319 76 -330 38 -319 b -100 -344 -35 -319 -69 -327 b -112 -351 -104 -345 -110 -348 b -129 -355 -119 -355 -123 -355 b -155 -328 -144 -355 -155 -344 b -145 -303 -155 -322 -155 -319 b -28 -6 -95 -226 -53 -119 b -8 24 -24 13 -20 19 '},'vbd':{'x_min':-390.640625,'x_max':389.28125,'ha':397,'o':'m -378 -2 b -368 -1 -375 -1 -374 -1 b -349 -13 -360 -1 -353 -5 l -348 -16 l -348 -212 l -348 -408 l 0 -408 l 347 -408 l 347 -212 l 347 -16 l 348 -13 b 367 0 352 -5 360 0 b 387 -13 375 0 383 -5 l 389 -16 l 389 -288 l 389 -560 l 387 -564 b 377 -574 385 -569 381 -573 l 372 -577 l 0 -577 l -374 -577 l -378 -574 b -389 -564 -382 -573 -386 -569 l -390 -560 l -390 -288 l -390 -16 l -389 -13 b -378 -2 -386 -8 -382 -4 m -274 -2 b -266 -1 -272 -1 -270 -1 b -246 -13 -257 -1 -250 -5 l -245 -16 l -245 -109 l -245 -202 l 0 -202 l 243 -202 l 243 -109 l 245 -16 l 245 -13 b 265 0 249 -5 257 0 b 284 -13 272 0 280 -5 l 285 -16 l 285 -170 l 285 -324 l 284 -327 b 273 -338 281 -331 279 -335 l 269 -340 l 0 -340 l -270 -340 l -274 -338 b -285 -327 -280 -335 -283 -331 l -287 -324 l -287 -170 l -287 -16 l -285 -13 b -274 -2 -283 -8 -280 -4 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -58 -102 -62 -87 b -13 -9 -62 -44 -44 -16 '},'vbe':{'x_min':-122.5,'x_max':121.140625,'ha':124,'o':'m -16 145 b -1 147 -10 147 -5 147 b 119 20 58 147 111 93 b 121 0 119 13 121 6 b 32 -142 121 -66 84 -124 l 24 -144 l 24 -180 b 24 -187 24 -183 24 -184 b 19 -227 24 -222 24 -220 b 0 -237 14 -234 6 -237 b -20 -227 -8 -237 -16 -234 b -25 -187 -25 -220 -25 -222 b -25 -180 -25 -184 -25 -183 l -25 -144 l -34 -142 b -122 0 -85 -124 -122 -66 b -121 20 -122 6 -121 13 b -16 145 -114 84 -70 137 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -69 0 -69 15 -69 6 b -13 -113 -69 -49 -46 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 '},'vbf':{'x_min':-53.078125,'x_max':513.140625,'ha':485,'o':'m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 '},'vc0':{'x_min':-571.671875,'x_max':570.3125,'ha':582,'o':'m 156 273 b 163 274 159 273 161 274 b 183 262 171 274 179 269 b 185 158 185 259 185 259 l 185 56 l 231 112 b 284 174 277 172 279 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 189 -6 194 0 191 -2 l 185 -12 l 185 -147 b 185 -210 185 -173 185 -194 b 179 -292 185 -297 185 -287 b 164 -299 175 -297 170 -299 b 145 -287 156 -299 148 -295 b 144 -174 144 -284 144 -284 l 142 -63 l 100 -117 b 46 -176 57 -170 54 -176 b 42 -176 44 -176 43 -176 b -54 -87 32 -174 38 -180 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -393 170 -566 -43 -398 165 b -379 174 -389 173 -383 174 b -370 173 -375 174 -372 174 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 127 11 -32 172 16 123 l 138 -1 l 141 1 l 144 4 l 144 130 b 145 260 144 256 144 258 b 156 273 147 266 151 270 '},'vc1':{'x_min':-525.390625,'x_max':524.03125,'ha':535,'o':'m -42 1067 b 1 1068 -27 1068 -13 1068 b 524 534 285 1068 524 831 b 0 0 524 231 283 0 b -118 12 -38 0 -77 4 b -487 335 -284 51 -424 174 b -525 534 -513 402 -525 469 b -42 1067 -525 802 -325 1042 m 38 1038 b 0 1039 25 1039 12 1039 b -460 725 -198 1039 -386 914 l -461 721 l 0 721 l 460 721 l 458 725 b 38 1038 390 899 224 1022 m 472 685 l 470 692 l 0 692 l -470 692 l -473 685 b -496 535 -488 638 -496 587 b -472 377 -496 483 -488 428 l -470 374 l 0 374 l 470 374 l 470 377 b 495 535 487 428 495 483 b 472 685 495 587 488 638 m 458 344 l 460 345 l 0 345 l -461 345 l -460 344 b -402 238 -454 323 -424 269 b 0 27 -303 98 -152 27 b 401 238 151 27 302 98 b 458 344 423 269 453 323 '},'vc2':{'x_min':0,'x_max':337.5625,'ha':344,'o':'m 230 535 b 239 537 232 537 234 537 b 258 524 247 537 254 533 l 259 521 l 259 390 l 259 258 l 285 265 b 318 270 302 269 311 270 b 336 259 328 270 332 267 b 337 208 336 256 337 233 b 336 158 337 184 336 159 b 302 140 332 148 329 147 b 259 130 266 131 259 130 b 259 65 259 130 259 104 b 259 20 259 51 259 36 l 259 -88 l 285 -81 b 318 -76 302 -77 311 -76 b 332 -81 325 -76 328 -77 b 337 -123 336 -87 337 -86 l 337 -138 l 337 -154 b 332 -195 337 -191 336 -190 b 281 -210 328 -199 328 -199 b 262 -216 272 -213 264 -216 l 259 -216 l 259 -349 l 259 -483 l 258 -487 b 239 -499 254 -495 246 -499 b 220 -487 231 -499 223 -495 l 219 -483 l 217 -355 l 217 -227 l 216 -227 l 194 -233 l 152 -244 b 129 -249 140 -247 130 -249 b 127 -410 127 -249 127 -258 b 127 -576 127 -548 127 -573 b 126 -578 126 -577 126 -578 b 127 -580 126 -578 126 -580 b 133 -578 129 -580 130 -578 b 186 -557 152 -576 170 -569 b 197 -555 190 -556 194 -555 b 215 -573 206 -555 215 -562 l 215 -574 l 215 -580 l 209 -588 b 126 -802 172 -648 141 -727 b 107 -823 123 -817 118 -823 b 87 -798 95 -823 91 -817 b 5 -588 69 -718 40 -648 l 0 -580 l 0 -574 b 0 -573 0 -574 0 -574 b 16 -555 0 -562 6 -555 b 27 -557 20 -555 24 -556 b 81 -578 44 -569 62 -576 b 87 -580 84 -578 85 -580 b 88 -578 88 -580 88 -580 b 87 -576 88 -578 88 -577 b 87 -416 87 -573 87 -549 b 85 -260 87 -270 87 -260 b 85 -260 85 -260 85 -260 b 32 -273 74 -263 35 -273 b 13 -260 24 -273 16 -267 b 12 -209 12 -256 12 -256 l 12 -162 l 13 -158 b 74 -134 17 -148 17 -148 l 87 -131 l 87 -22 b 85 86 87 79 87 86 b 85 86 85 86 85 86 b 32 74 74 83 35 74 b 13 86 24 74 16 79 b 12 137 12 90 12 90 l 12 184 l 13 188 b 73 212 17 198 17 198 l 87 215 l 87 348 l 87 481 l 88 485 b 107 498 92 492 99 498 b 117 495 110 498 114 496 b 126 485 121 494 125 489 l 127 481 l 127 353 l 127 226 l 133 226 b 172 235 136 227 153 231 l 212 247 l 217 248 l 217 384 l 219 521 l 220 524 b 230 535 221 528 225 533 m 217 9 b 217 119 217 70 217 119 l 217 119 b 194 113 217 119 206 116 l 152 102 b 129 97 140 99 130 97 b 127 -12 127 97 127 91 l 127 -122 l 133 -120 b 172 -111 136 -119 153 -115 l 212 -101 l 217 -98 l 217 9 '},'vc3':{'x_min':-10.890625,'x_max':299.4375,'ha':294,'o':'m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 '}},'cssFontWeight':'normal','ascender':1903,'underlinePosition':-125,'cssFontStyle':'normal','boundingBox':{'yMin':-2065.375,'xMin':-695.53125,'yMax':1901.578125,'xMax':1159.671875},'resolution':1000,'original_font_information':{'postscript_name':'Gonville-18','version_string':'Version 0.1.8904 ','vendor_url':'','full_font_name':'Gonville-18','font_family_name':'Gonville-18','copyright':'No copyright is claimed on this font file.','description':'','trademark':'','designer':'','designer_url':'','unique_font_identifier':'FontForge 2.0 : Gonville-18 : 17-3-2010','license_url':'','license_description':'','manufacturer_name':'','font_sub_family_name':'18'},'descender':-2066,'familyName':'Gonville-18','lineHeight':4093,'underlineThickness':50};\n\n  function processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n    var command = void 0;\n    var x = void 0;\n    var y = void 0;\n    var i = 0;\n\n    function nextX() {\n      return originX + outline[i++] * scaleX;\n    }\n    function nextY() {\n      return originY + outline[i++] * scaleY;\n    }\n\n    while (i < outline.length) {\n      command = outline[i++];\n      switch (command) {\n        case 'm':\n        case 'l':\n          outlineFns[command](nextX(), nextY());\n          break;\n        case 'q':\n          x = nextX();\n          y = nextY();\n          outlineFns.q(nextX(), nextY(), x, y);\n          break;\n        case 'b':\n          x = nextX();\n          y = nextY();\n          outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n          break;\n      }\n    }\n  }\n\n  var Glyph = function () {\n    createClass(Glyph, null, [{\n      key: 'loadMetrics',\n\n      /* Static methods used to implement loading / unloading of glyphs */\n      value: function loadMetrics(font, code, cache) {\n        var glyph = font.glyphs[code];\n        if (!glyph) throw new Vex$1.RuntimeError('BadGlyph', 'Glyph ' + code + ' does not exist in font.');\n\n        var x_min = glyph.x_min;\n        var x_max = glyph.x_max;\n        var ha = glyph.ha;\n\n        var outline = void 0;\n\n        if (glyph.o) {\n          if (cache) {\n            if (glyph.cached_outline) {\n              outline = glyph.cached_outline;\n            } else {\n              outline = glyph.o.split(' ');\n              glyph.cached_outline = outline;\n            }\n          } else {\n            if (glyph.cached_outline) delete glyph.cached_outline;\n            outline = glyph.o.split(' ');\n          }\n\n          return {\n            x_min: x_min,\n            x_max: x_max,\n            ha: ha,\n            outline: outline\n          };\n        } else {\n          throw new Vex$1.RuntimeError('BadGlyph', 'Glyph ' + code + ' has no outline defined.');\n        }\n      }\n\n      /**\n       * A quick and dirty static glyph renderer. Renders glyphs from the default\n       * font defined in Vex.Flow.Font.\n       *\n       * @param {!Object} ctx The canvas context.\n       * @param {number} x_pos X coordinate.\n       * @param {number} y_pos Y coordinate.\n       * @param {number} point The point size to use.\n       * @param {string} val The glyph code in Vex.Flow.Font.\n       * @param {boolean} nocache If set, disables caching of font outline.\n       */\n\n    }, {\n      key: 'renderGlyph',\n      value: function renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n        var scale = point * 72.0 / (Font.resolution * 100.0);\n        var metrics = Glyph.loadMetrics(Font, val, !nocache);\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n      }\n    }, {\n      key: 'renderOutline',\n      value: function renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        ctx.beginPath();\n        ctx.moveTo(x_pos, y_pos);\n        processOutline(outline, x_pos, y_pos, scale, -scale, {\n          m: ctx.moveTo.bind(ctx),\n          l: ctx.lineTo.bind(ctx),\n          q: ctx.quadraticCurveTo.bind(ctx),\n          b: ctx.bezierCurveTo.bind(ctx)\n        });\n        ctx.fill();\n      }\n    }, {\n      key: 'getOutlineBoundingBox',\n      value: function getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        var bboxComp = new BoundingBoxComputation(x_pos, y_pos);\n\n        processOutline(outline, x_pos, y_pos, scale, -scale, {\n          m: bboxComp.addPoint.bind(bboxComp),\n          l: bboxComp.addPoint.bind(bboxComp),\n          q: bboxComp.addQuadraticCurve.bind(bboxComp),\n          b: bboxComp.addBezierCurve.bind(bboxComp)\n        });\n\n        return new BoundingBox(bboxComp.x1, bboxComp.y1, bboxComp.width(), bboxComp.height());\n      }\n\n      /**\n       * @constructor\n       */\n\n    }]);\n\n    function Glyph(code, point, options) {\n      classCallCheck(this, Glyph);\n\n      this.code = code;\n      this.point = point;\n      this.context = null;\n      this.options = {\n        cache: true,\n        font: Font\n      };\n\n      this.metrics = null;\n      this.x_shift = 0;\n      this.y_shift = 0;\n\n      if (options) {\n        this.setOptions(options);\n      } else {\n        this.reset();\n      }\n    }\n\n    createClass(Glyph, [{\n      key: 'setOptions',\n      value: function setOptions(options) {\n        Vex$1.Merge(this.options, options);\n        this.reset();\n      }\n    }, {\n      key: 'setPoint',\n      value: function setPoint(point) {\n        this.point = point;return this;\n      }\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        this.stave = stave;return this;\n      }\n    }, {\n      key: 'setXShift',\n      value: function setXShift(x_shift) {\n        this.x_shift = x_shift;return this;\n      }\n    }, {\n      key: 'setYShift',\n      value: function setYShift(y_shift) {\n        this.y_shift = y_shift;return this;\n      }\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n    }, {\n      key: 'getContext',\n      value: function getContext() {\n        return this.context;\n      }\n    }, {\n      key: 'reset',\n      value: function reset() {\n        this.scale = this.point * 72 / (this.options.font.resolution * 100);\n        this.metrics = Glyph.loadMetrics(this.options.font, this.code, this.options.cache);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.scale, 0, 0);\n      }\n    }, {\n      key: 'getMetrics',\n      value: function getMetrics() {\n        if (!this.metrics) throw new Vex$1.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\n        return {\n          x_min: this.metrics.x_min * this.scale,\n          x_max: this.metrics.x_max * this.scale,\n          width: this.bbox.getW(),\n          height: this.bbox.getH()\n        };\n      }\n    }, {\n      key: 'render',\n      value: function render(ctx, x_pos, y_pos) {\n        if (!this.metrics) throw new Vex$1.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\n        var outline = this.metrics.outline;\n        var scale = this.scale;\n\n        Glyph.renderOutline(ctx, outline, scale, x_pos, y_pos);\n      }\n    }, {\n      key: 'renderToStave',\n      value: function renderToStave(x) {\n        if (!this.metrics) throw new Vex$1.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n        if (!this.stave) throw new Vex$1.RuntimeError('GlyphError', 'No valid stave');\n        if (!this.context) throw new Vex$1.RERR('GlyphError', 'No valid context');\n\n        var outline = this.metrics.outline;\n        var scale = this.scale;\n\n        Glyph.renderOutline(this.context, outline, scale, x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n      }\n    }]);\n    return Glyph;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\n  function L$1() {\n    if (Stem.DEBUG) Vex$1.L('Vex.Flow.Stem', arguments);\n  }\n\n  var Stem = function () {\n    createClass(Stem, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'stem';\n      }\n\n      // Stem directions\n\n    }, {\n      key: 'UP',\n      get: function get() {\n        return 1;\n      }\n    }, {\n      key: 'DOWN',\n      get: function get() {\n        return -1;\n      }\n\n      // Theme\n\n    }, {\n      key: 'WIDTH',\n      get: function get() {\n        return Flow.STEM_WIDTH;\n      }\n    }, {\n      key: 'HEIGHT',\n      get: function get() {\n        return Flow.STEM_HEIGHT;\n      }\n    }]);\n\n    function Stem() {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n      classCallCheck(this, Stem);\n\n      if (options === null) {\n        return;\n      }\n      // Default notehead x bounds\n      this.x_begin = options.x_begin || 0;\n      this.x_end = options.x_end || 0;\n\n      // Y bounds for top/bottom most notehead\n      this.y_top = options.y_top || 0;\n      this.y_bottom = options.y_bottom || 0;\n\n      // Stem base extension\n      this.y_extend = options.y_extend || 0;\n      // Stem top extension\n      this.stem_extension = options.stem_extension || 0;\n\n      // Direction of the stem\n      this.stem_direction = options.stem_direction || 0;\n\n      // Flag to override all draw calls\n      this.hide = false;\n    }\n\n    // Set the x bounds for the default notehead\n\n\n    createClass(Stem, [{\n      key: 'setNoteHeadXBounds',\n      value: function setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n      }\n\n      // Set the direction of the stem in relation to the noteheads\n\n    }, {\n      key: 'setDirection',\n      value: function setDirection(direction) {\n        this.stem_direction = direction;\n      }\n\n      // Set the extension for the stem, generally for flags or beams\n\n    }, {\n      key: 'setExtension',\n      value: function setExtension(ext) {\n        this.stem_extension = ext;\n      }\n\n      // The the y bounds for the top and bottom noteheads\n\n    }, {\n      key: 'setYBounds',\n      value: function setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n      }\n\n      // The category of the object\n\n    }, {\n      key: 'getCategory',\n      value: function getCategory() {\n        return Stem.CATEGORY;\n      }\n\n      // Set the canvas context to render on\n\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n\n      // Gets the entire height for the stem\n\n    }, {\n      key: 'getHeight',\n      value: function getHeight() {\n        return (this.y_bottom - this.y_top) * this.stem_direction + (Stem.HEIGHT + this.stem_extension) * this.stem_direction;\n      }\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        throw new Vex$1.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n      }\n\n      // Get the y coordinates for the very base of the stem to the top of\n      // the extension\n\n    }, {\n      key: 'getExtents',\n      value: function getExtents() {\n        var ys = [this.y_top, this.y_bottom];\n\n        var top_pixel = this.y_top;\n        var base_pixel = this.y_bottom;\n        var stem_height = Stem.HEIGHT + this.stem_extension;\n\n        for (var i = 0; i < ys.length; ++i) {\n          var stem_top = ys[i] + stem_height * -this.stem_direction;\n\n          if (this.stem_direction == Stem.DOWN) {\n            top_pixel = Math.max(top_pixel, stem_top);\n            base_pixel = Math.min(base_pixel, ys[i]);\n          } else {\n            top_pixel = Math.min(top_pixel, stem_top);\n            base_pixel = Math.max(base_pixel, ys[i]);\n          }\n        }\n\n        return { topY: top_pixel, baseY: base_pixel };\n      }\n\n      // set the draw style of a stem:\n    }, {\n      key: 'setStyle',\n      value: function setStyle(style) {\n        this.style = style;return this;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle() {\n        return this.style;\n      }\n\n      // Apply current style to Canvas `context`\n\n    }, {\n      key: 'applyStyle',\n      value: function applyStyle(context) {\n        var style = this.getStyle();\n        if (style) {\n          if (style.shadowColor) context.setShadowColor(style.shadowColor);\n          if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n          if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n        }\n        return this;\n      }\n\n      // Render the stem onto the canvas\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\n        if (this.hide) return;\n\n        var ctx = this.context;\n        var stem_x = void 0,\n            stem_y = void 0;\n        var stem_direction = this.stem_direction;\n\n        if (stem_direction == Stem.DOWN) {\n          // Down stems are rendered to the left of the head.\n          stem_x = this.x_begin + Stem.WIDTH / 2;\n          stem_y = this.y_top + 2;\n        } else {\n          // Up stems are rendered to the right of the head.\n          stem_x = this.x_end + Stem.WIDTH / 2;\n          stem_y = this.y_bottom - 2;\n        }\n\n        stem_y += this.y_extend * stem_direction;\n\n        L$1('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n        // Draw the stem\n        ctx.save();\n        this.applyStyle(ctx);\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y);\n        ctx.lineTo(stem_x, stem_y - this.getHeight());\n        ctx.stroke();\n        ctx.restore();\n      }\n    }]);\n    return Stem;\n  }();\n\n  var Tuplet = function () {\n    createClass(Tuplet, null, [{\n      key: 'LOCATION_TOP',\n      get: function get() {\n        return 1;\n      }\n    }, {\n      key: 'LOCATION_BOTTOM',\n      get: function get() {\n        return -1;\n      }\n    }, {\n      key: 'NESTING_OFFSET',\n      get: function get() {\n        return 15;\n      }\n    }]);\n\n    function Tuplet(notes, options) {\n      classCallCheck(this, Tuplet);\n\n      if (!notes || !notes.length) {\n        throw new Vex$1.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n      }\n\n      if (notes.length == 1) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Too few notes for tuplet.');\n      }\n\n      this.options = Vex$1.Merge({}, options);\n      this.notes = notes;\n      this.num_notes = 'num_notes' in this.options ? this.options.num_notes : notes.length;\n\n      // We accept beats_occupied, but warn that it's deprecated:\n      // the preferred property name is now notes_occupied.\n      if (this.options.beats_occupied) {\n        this.beatsOccupiedDeprecationWarning();\n      }\n      this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n      if ('bracketed' in this.options) {\n        this.bracketed = this.options.bracketed;\n      } else {\n        this.bracketed = notes.some(function (note) {\n          return note.beam === null;\n        });\n      }\n\n      this.ratioed = 'ratioed' in this.options ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n      this.point = 28;\n      this.y_pos = 16;\n      this.x_pos = 100;\n      this.width = 200;\n      this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n      Formatter.AlignRestsToNotes(notes, true, true);\n      this.resolveGlyphs();\n      this.attach();\n    }\n\n    createClass(Tuplet, [{\n      key: 'attach',\n      value: function attach() {\n        for (var i = 0; i < this.notes.length; i++) {\n          var note = this.notes[i];\n          note.setTuplet(this);\n        }\n      }\n    }, {\n      key: 'detach',\n      value: function detach() {\n        for (var i = 0; i < this.notes.length; i++) {\n          var note = this.notes[i];\n          note.resetTuplet(this);\n        }\n      }\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;\n        return this;\n      }\n\n      /**\n       * Set whether or not the bracket is drawn.\n       */\n\n    }, {\n      key: 'setBracketed',\n      value: function setBracketed(bracketed) {\n        this.bracketed = bracketed ? true : false;\n        return this;\n      }\n\n      /**\n       * Set whether or not the ratio is shown.\n       */\n\n    }, {\n      key: 'setRatioed',\n      value: function setRatioed(ratioed) {\n        this.ratioed = ratioed ? true : false;\n        return this;\n      }\n\n      /**\n       * Set the tuplet to be displayed either on the top or bottom of the stave\n       */\n\n    }, {\n      key: 'setTupletLocation',\n      value: function setTupletLocation(location) {\n        if (!location) location = Tuplet.LOCATION_TOP;else if (location != Tuplet.LOCATION_TOP && location != Tuplet.LOCATION_BOTTOM) {\n          throw new Vex$1.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n        }\n\n        this.location = location;\n        return this;\n      }\n    }, {\n      key: 'getNotes',\n      value: function getNotes() {\n        return this.notes;\n      }\n    }, {\n      key: 'getNoteCount',\n      value: function getNoteCount() {\n        return this.num_notes;\n      }\n    }, {\n      key: 'beatsOccupiedDeprecationWarning',\n      value: function beatsOccupiedDeprecationWarning() {\n        var msg = 'beats_occupied has been deprecated as an ' + 'option for tuplets. Please use notes_occupied ' + 'instead. Calls to getBeatsOccupied and ' + 'setBeatsOccupied should now be routed to ' + 'getNotesOccupied and setNotesOccupied instead.';\n        if (console && console.warn) console.warn(msg);else if (console) console.log(msg);\n      }\n    }, {\n      key: 'getBeatsOccupied',\n      value: function getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n      }\n    }, {\n      key: 'setBeatsOccupied',\n      value: function setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n      }\n    }, {\n      key: 'getNotesOccupied',\n      value: function getNotesOccupied() {\n        return this.notes_occupied;\n      }\n    }, {\n      key: 'setNotesOccupied',\n      value: function setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n      }\n    }, {\n      key: 'resolveGlyphs',\n      value: function resolveGlyphs() {\n        this.num_glyphs = [];\n        var n = this.num_notes;\n        while (n >= 1) {\n          this.num_glyphs.push(new Glyph('v' + n % 10, this.point));\n          n = parseInt(n / 10, 10);\n        }\n\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n          this.denom_glyphs.push(new Glyph('v' + n % 10, this.point));\n          n = parseInt(n / 10, 10);\n        }\n      }\n\n      // determine how many tuplets are nested within this tuplet\n      // on the same side (above/below), to calculate a y\n      // offset for this tuplet:\n    }, {\n      key: 'getNestedTupletCount',\n      value: function getNestedTupletCount() {\n        var location = this.location;\n        var first_note = this.notes[0];\n        var maxTupletCount = countTuplets(first_note, location);\n        var minTupletCount = countTuplets(first_note, location);\n\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n          return note.tupletStack.filter(function (tuplet) {\n            return tuplet.location === location;\n          }).length;\n        }\n\n        this.notes.forEach(function (note) {\n          var tupletCount = countTuplets(note, location);\n          maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n          minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n\n        return maxTupletCount - minTupletCount;\n      }\n\n      // determine the y position of the tuplet:\n    }, {\n      key: 'getYPosition',\n      value: function getYPosition() {\n        var i = void 0,\n            y_pos = void 0;\n\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        var nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n\n        // offset the tuplet for any manual y_offset:\n        var y_offset = this.options.y_offset || 0;\n\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        var first_note = this.notes[0];\n        if (this.location == Tuplet.LOCATION_TOP) {\n          y_pos = first_note.getStave().getYForLine(0) - 15;\n          // y_pos = first_note.getStemExtents().topY - 10;\n\n          for (i = 0; i < this.notes.length; ++i) {\n            var top_y = this.notes[i].getStemDirection() === Stem.UP ? this.notes[i].getStemExtents().topY - 10 : this.notes[i].getStemExtents().baseY - 20;\n            if (top_y < y_pos) y_pos = top_y;\n          }\n        } else {\n          y_pos = first_note.getStave().getYForLine(4) + 20;\n\n          for (i = 0; i < this.notes.length; ++i) {\n            var bottom_y = this.notes[i].getStemDirection() === Stem.UP ? this.notes[i].getStemExtents().baseY + 20 : this.notes[i].getStemExtents().topY + 10;\n            if (bottom_y > y_pos) y_pos = bottom_y;\n          }\n        }\n\n        return y_pos + nested_tuplet_y_offset + y_offset;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\n        // determine x value of left bound of tuplet\n        var first_note = this.notes[0];\n        var last_note = this.notes[this.notes.length - 1];\n\n        if (!this.bracketed) {\n          this.x_pos = first_note.getStemX();\n          this.width = last_note.getStemX() - this.x_pos;\n        } else {\n          this.x_pos = first_note.getTieLeftX() - 5;\n          this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n\n        // calculate total width of tuplet notation\n        var width = 0;\n        var glyph = void 0;\n        for (glyph in this.num_glyphs) {\n          width += this.num_glyphs[glyph].getMetrics().width;\n        }\n        if (this.ratioed) {\n          for (glyph in this.denom_glyphs) {\n            width += this.denom_glyphs[glyph].getMetrics().width;\n          }\n          width += this.point * 0.32;\n        }\n\n        var notation_center_x = this.x_pos + this.width / 2;\n        var notation_start_x = notation_center_x - width / 2;\n\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n          var line_width = this.width / 2 - width / 2 - 5;\n\n          // only draw the bracket if it has positive length\n          if (line_width > 0) {\n            this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n            this.context.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n            this.context.fillRect(this.x_pos, this.y_pos + (this.location == Tuplet.LOCATION_BOTTOM), 1, this.location * 10);\n            this.context.fillRect(this.x_pos + this.width, this.y_pos + (this.location == Tuplet.LOCATION_BOTTOM), 1, this.location * 10);\n          }\n        }\n\n        // draw numerator glyphs\n        var x_offset = 0;\n        var size = this.num_glyphs.length;\n        for (glyph in this.num_glyphs) {\n          this.num_glyphs[size - glyph - 1].render(this.context, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2);\n          x_offset += this.num_glyphs[size - glyph - 1].getMetrics().width;\n        }\n\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n          var colon_x = notation_start_x + x_offset + this.point * 0.16;\n          var colon_radius = this.point * 0.06;\n          this.context.beginPath();\n          this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n          this.context.closePath();\n          this.context.fill();\n          this.context.beginPath();\n          this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n          this.context.closePath();\n          this.context.fill();\n          x_offset += this.point * 0.32;\n          size = this.denom_glyphs.length;\n          for (glyph in this.denom_glyphs) {\n            this.denom_glyphs[size - glyph - 1].render(this.context, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2);\n            x_offset += this.denom_glyphs[size - glyph - 1].getMetrics().width;\n          }\n        }\n      }\n    }]);\n    return Tuplet;\n  }();\n\n  function calculateStemDirection(notes) {\n    var lineSum = 0;\n    notes.forEach(function (note) {\n      if (note.keyProps) {\n        note.keyProps.forEach(function (keyProp) {\n          lineSum += keyProp.line - 3;\n        });\n      }\n    });\n\n    if (lineSum >= 0) {\n      return Stem.DOWN;\n    }\n    return Stem.UP;\n  }\n\n  var Beam = function () {\n    createClass(Beam, null, [{\n      key: 'getDefaultBeamGroups',\n\n      // Gets the default beam groups for a provided time signature.\n      // Attempts to guess if the time signature is not found in table.\n      // Currently this is fairly naive.\n      value: function getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n          time_sig = '4/4';\n        }\n\n        var defaults = {\n          '1/2': ['1/2'],\n          '2/2': ['1/2'],\n          '3/2': ['1/2'],\n          '4/2': ['1/2'],\n\n          '1/4': ['1/4'],\n          '2/4': ['1/4'],\n          '3/4': ['1/4'],\n          '4/4': ['1/4'],\n\n          '1/8': ['1/8'],\n          '2/8': ['2/8'],\n          '3/8': ['3/8'],\n          '4/8': ['2/8'],\n\n          '1/16': ['1/16'],\n          '2/16': ['2/16'],\n          '3/16': ['3/16'],\n          '4/16': ['2/16']\n        };\n\n        var groups = defaults[time_sig];\n\n        if (!groups) {\n          // If no beam groups found, naively determine\n          // the beam groupings from the time signature\n          var beatTotal = parseInt(time_sig.split('/')[0], 10);\n          var beatValue = parseInt(time_sig.split('/')[1], 10);\n\n          var tripleMeter = beatTotal % 3 === 0;\n\n          if (tripleMeter) {\n            return [new Fraction(3, beatValue)];\n          } else if (beatValue > 4) {\n            return [new Fraction(2, beatValue)];\n          } else if (beatValue <= 4) {\n            return [new Fraction(1, beatValue)];\n          }\n        }\n        return groups.map(function (group) {\n          return new Fraction().parse(group);\n        });\n      }\n\n      // A helper function to automatically build basic beams for a voice. For more\n      // complex auto-beaming use `Beam.generateBeams()`.\n      //\n      // Parameters:\n      // * `voice` - The voice to generate the beams for\n      // * `stem_direction` - A stem direction to apply to the entire voice\n      // * `groups` - An array of `Fraction` representing beat groupings for the beam\n\n    }, {\n      key: 'applyAndGetBeams',\n      value: function applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), {\n          groups: groups,\n          stem_direction: stem_direction\n        });\n      }\n\n      // A helper function to autimatically build beams for a voice with\n      // configuration options.\n      //\n      // Example configuration object:\n      //\n      // ```\n      // config = {\n      //   groups: [new Vex.Flow.Fraction(2, 8)],\n      //   stem_direction: -1,\n      //   beam_rests: true,\n      //   beam_middle_only: true,\n      //   show_stemlets: false\n      // };\n      // ```\n      //\n      // Parameters:\n      // * `notes` - An array of notes to create the beams for\n      // * `config` - The configuration object\n      //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n      //    * `stem_direction` - Set to apply the same direction to all notes\n      //    * `beam_rests` - Set to `true` to include rests in the beams\n      //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n      //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n      //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n      //\n\n    }, {\n      key: 'generateBeams',\n      value: function generateBeams(notes, config) {\n        if (!config) config = {};\n\n        if (!config.groups || !config.groups.length) {\n          config.groups = [new Fraction(2, 8)];\n        }\n\n        // Convert beam groups to tick amounts\n        var tickGroups = config.groups.map(function (group) {\n          if (!group.multiply) {\n            throw new Vex$1.RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n          }\n          return group.clone().multiply(Flow.RESOLUTION, 1);\n        });\n\n        var unprocessedNotes = notes;\n        var currentTickGroup = 0;\n        var noteGroups = [];\n        var currentGroup = [];\n\n        function getTotalTicks(vf_notes) {\n          return vf_notes.reduce(function (memo, note) {\n            return note.getTicks().clone().add(memo);\n          }, new Fraction(0, 1));\n        }\n\n        function nextTickGroup() {\n          if (tickGroups.length - 1 > currentTickGroup) {\n            currentTickGroup += 1;\n          } else {\n            currentTickGroup = 0;\n          }\n        }\n\n        function createGroups() {\n          var nextGroup = [];\n\n          unprocessedNotes.forEach(function (unprocessedNote) {\n            nextGroup = [];\n            if (unprocessedNote.shouldIgnoreTicks()) {\n              noteGroups.push(currentGroup);\n              currentGroup = nextGroup;\n              return; // Ignore untickables (like bar notes)\n            }\n\n            currentGroup.push(unprocessedNote);\n            var ticksPerGroup = tickGroups[currentTickGroup].clone();\n            var totalTicks = getTotalTicks(currentGroup);\n\n            // Double the amount of ticks in a group, if it's an unbeamable tuplet\n            var unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n            if (unbeamable && unprocessedNote.tuplet) {\n              ticksPerGroup.numerator *= 2;\n            }\n\n            // If the note that was just added overflows the group tick total\n            if (totalTicks.greaterThan(ticksPerGroup)) {\n              // If the overflow note can be beamed, start the next group\n              // with it. Unbeamable notes leave the group overflowed.\n              if (!unbeamable) {\n                nextGroup.push(currentGroup.pop());\n              }\n              noteGroups.push(currentGroup);\n              currentGroup = nextGroup;\n              nextTickGroup();\n            } else if (totalTicks.equals(ticksPerGroup)) {\n              noteGroups.push(currentGroup);\n              currentGroup = nextGroup;\n              nextTickGroup();\n            }\n          });\n\n          // Adds any remainder notes\n          if (currentGroup.length > 0) {\n            noteGroups.push(currentGroup);\n          }\n        }\n\n        function getBeamGroups() {\n          return noteGroups.filter(function (group) {\n            if (group.length > 1) {\n              var beamable = true;\n              group.forEach(function (note) {\n                if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n                  beamable = false;\n                }\n              });\n              return beamable;\n            }\n            return false;\n          });\n        }\n\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n          var sanitizedGroups = [];\n          noteGroups.forEach(function (group) {\n            var tempGroup = [];\n            group.forEach(function (note, index, group) {\n              var isFirstOrLast = index === 0 || index === group.length - 1;\n              var prevNote = group[index - 1];\n\n              var breaksOnEachRest = !config.beam_rests && note.isRest();\n              var breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n\n              var breakOnStemChange = false;\n              if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                var prevDirection = prevNote.getStemDirection();\n                var currentDirection = note.getStemDirection();\n                breakOnStemChange = currentDirection !== prevDirection;\n              }\n\n              var isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n              // Determine if the group should be broken at this note\n              var shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n\n              if (shouldBreak) {\n                // Add current group\n                if (tempGroup.length > 0) {\n                  sanitizedGroups.push(tempGroup);\n                }\n\n                // Start a new group. Include the current note if the group\n                // was broken up by stem direction, as that note needs to start\n                // the next group of notes\n                tempGroup = breakOnStemChange ? [note] : [];\n              } else {\n                // Add note to group\n                tempGroup.push(note);\n              }\n            });\n\n            // If there is a remaining group, add it as well\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n          });\n\n          noteGroups = sanitizedGroups;\n        }\n\n        function formatStems() {\n          noteGroups.forEach(function (group) {\n            var stemDirection = void 0;\n            if (config.maintain_stem_directions) {\n              var note = findFirstNote(group);\n              stemDirection = note ? note.getStemDirection() : Stem.UP;\n            } else {\n              if (config.stem_direction) {\n                stemDirection = config.stem_direction;\n              } else {\n                stemDirection = calculateStemDirection(group);\n              }\n            }\n            applyStemDirection(group, stemDirection);\n          });\n        }\n\n        function findFirstNote(group) {\n          for (var i = 0; i < group.length; i++) {\n            var note = group[i];\n            if (!note.isRest()) {\n              return note;\n            }\n          }\n\n          return false;\n        }\n\n        function applyStemDirection(group, direction) {\n          group.forEach(function (note) {\n            note.setStemDirection(direction);\n          });\n        }\n\n        function getTupletGroups() {\n          return noteGroups.filter(function (group) {\n            if (group[0]) {\n              return group[0].tuplet;\n            }\n            return false;\n          });\n        }\n\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n\n        // Get the notes to be beamed\n        var beamedNoteGroups = getBeamGroups();\n\n        // Get the tuplets in order to format them accurately\n        var tupletGroups = getTupletGroups();\n\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        var beams = [];\n        beamedNoteGroups.forEach(function (group) {\n          var beam = new Beam(group);\n\n          if (config.show_stemlets) {\n            beam.render_options.show_stemlets = true;\n          }\n          if (config.secondary_breaks) {\n            beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n          }\n          if (config.flat_beams === true) {\n            beam.render_options.flat_beams = true;\n            beam.render_options.flat_beam_offset = config.flat_beam_offset;\n          }\n          beams.push(beam);\n        });\n\n        // Reformat tuplets\n        tupletGroups.forEach(function (group) {\n          var firstNote = group[0];\n          for (var i = 0; i < group.length; ++i) {\n            if (group[i].hasStem()) {\n              firstNote = group[i];\n              break;\n            }\n          }\n\n          var tuplet = firstNote.tuplet;\n\n          if (firstNote.beam) tuplet.setBracketed(false);\n          if (firstNote.stem_direction === Stem.DOWN) {\n            tuplet.setTupletLocation(Tuplet.LOCATION_BOTTOM);\n          }\n        });\n\n        return beams;\n      }\n    }]);\n\n    function Beam(notes, auto_stem) {\n      classCallCheck(this, Beam);\n\n      if (!notes || notes === []) {\n        throw new Vex$1.RuntimeError('BadArguments', 'No notes provided for beam.');\n      }\n\n      if (notes.length === 1) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Too few notes for beam.');\n      }\n\n      // Validate beam line, direction and ticks.\n      this.ticks = notes[0].getIntrinsicTicks();\n\n      if (this.ticks >= Flow.durationToTicks('4')) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n      }\n\n      var i = void 0; // shared iterator\n      var note = void 0;\n\n      this.stem_direction = Stem.UP;\n\n      for (i = 0; i < notes.length; ++i) {\n        note = notes[i];\n        if (note.hasStem()) {\n          this.stem_direction = note.getStemDirection();\n          break;\n        }\n      }\n\n      var stem_direction = this.stem_direction;\n      // Figure out optimal stem direction based on given notes\n      if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n        stem_direction = calculateStemDirection(notes);\n      } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n        // Auto Stem TabNotes\n        var stem_weight = notes.reduce(function (memo, note) {\n          return memo + note.stem_direction;\n        }, 0);\n\n        stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n      }\n\n      // Apply stem directions and attach beam to notes\n      for (i = 0; i < notes.length; ++i) {\n        note = notes[i];\n        if (auto_stem) {\n          note.setStemDirection(stem_direction);\n          this.stem_direction = stem_direction;\n        }\n        note.setBeam(this);\n      }\n\n      this.postFormatted = false;\n      this.notes = notes;\n      this.beam_count = this.getBeamCount();\n      this.break_on_indices = [];\n      this.render_options = {\n        beam_width: 5,\n        max_slope: 0.25,\n        min_slope: -0.25,\n        slope_iterations: 20,\n        slope_cost: 100,\n        show_stemlets: false,\n        stemlet_extension: 7,\n        partial_beam_length: 10,\n        flat_beams: false,\n        min_flat_beam_offset: 15\n      };\n    }\n\n    // The the rendering `context`\n\n\n    createClass(Beam, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n\n      // Get the notes in this beam\n\n    }, {\n      key: 'getNotes',\n      value: function getNotes() {\n        return this.notes;\n      }\n\n      // Get the max number of beams in the set of notes\n\n    }, {\n      key: 'getBeamCount',\n      value: function getBeamCount() {\n        var beamCounts = this.notes.map(function (note) {\n          return note.getGlyph().beam_count;\n        });\n\n        var maxBeamCount = beamCounts.reduce(function (max, beamCount) {\n          return beamCount > max ? beamCount : max;\n        });\n\n        return maxBeamCount;\n      }\n\n      // Set which note `indices` to break the secondary beam at\n\n    }, {\n      key: 'breakSecondaryAt',\n      value: function breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n      }\n\n      // Return the y coordinate for linear function\n\n    }, {\n      key: 'getSlopeY',\n      value: function getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n      }\n\n      // Calculate the best possible slope for the provided notes\n\n    }, {\n      key: 'calculateSlope',\n      value: function calculateSlope() {\n        var first_note = this.notes[0];\n        var first_y_px = first_note.getStemExtents().topY;\n        var first_x_px = first_note.getStemX();\n\n        var inc = (this.render_options.max_slope - this.render_options.min_slope) / this.render_options.slope_iterations;\n        var min_cost = Number.MAX_VALUE;\n        var best_slope = 0;\n        var y_shift = 0;\n\n        // iterate through slope values to find best weighted fit\n        for (var slope = this.render_options.min_slope; slope <= this.render_options.max_slope; slope += inc) {\n          var total_stem_extension = 0;\n          var y_shift_tmp = 0;\n\n          // iterate through notes, calculating y shift and stem extension\n          for (var i = 1; i < this.notes.length; ++i) {\n            var note = this.notes[i];\n\n            var x_px = note.getStemX();\n            var y_px = note.getStemExtents().topY;\n            var slope_y_px = this.getSlopeY(x_px, first_x_px, first_y_px, slope) + y_shift_tmp;\n\n            // beam needs to be shifted up to accommodate note\n            if (y_px * this.stem_direction < slope_y_px * this.stem_direction) {\n              var diff = Math.abs(y_px - slope_y_px);\n              y_shift_tmp += diff * -this.stem_direction;\n              total_stem_extension += diff * i;\n            } else {\n              // beam overshoots note, account for the difference\n              total_stem_extension += (y_px - slope_y_px) * this.stem_direction;\n            }\n          }\n\n          var last_note = this.notes[this.notes.length - 1];\n          var first_last_slope = (last_note.getStemExtents().topY - first_y_px) / (last_note.getStemX() - first_x_px);\n          // most engraving books suggest aiming for a slope about half the angle of the\n          // difference between the first and last notes' stem length;\n          var ideal_slope = first_last_slope / 2;\n          var distance_from_ideal = Math.abs(ideal_slope - slope);\n\n          // This tries to align most beams to something closer to the ideal_slope, but\n          // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n          var cost = this.render_options.slope_cost * distance_from_ideal + Math.abs(total_stem_extension);\n\n          // update state when a more ideal slope is found\n          if (cost < min_cost) {\n            min_cost = cost;\n            best_slope = slope;\n            y_shift = y_shift_tmp;\n          }\n        }\n\n        this.slope = best_slope;\n        this.y_shift = y_shift;\n      }\n\n      // Calculate a slope and y-shift for flat beams\n\n    }, {\n      key: 'calculateFlatSlope',\n      value: function calculateFlatSlope() {\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        var total = 0;\n        var extreme_y = 0; // Store the highest or lowest note here\n        var extreme_beam_count = 0; // The beam count of the extreme note\n        var current_extreme = 0;\n        for (var i = 0; i < this.notes.length; i++) {\n          // Total up all of the offsets so we can average them out later\n          var note = this.notes[i];\n          var top_y = note.getStemExtents().topY;\n          total += top_y;\n\n          // Store the highest (stems-up) or lowest (stems-down) note so the\n          //  offset can be adjusted in case the average isn't enough\n          if (this.stem_direction === Stem.DOWN && current_extreme < top_y) {\n            current_extreme = top_y;\n            extreme_y = note.getNoteHeadBounds().y_bottom;\n            extreme_beam_count = note.getBeamCount();\n          } else if (this.stem_direction === Stem.UP && (current_extreme === 0 || current_extreme > top_y)) {\n            current_extreme = top_y;\n            extreme_y = note.getNoteHeadBounds().y_top;\n            extreme_beam_count = note.getBeamCount();\n          }\n        }\n\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        var offset = total / this.notes.length;\n\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        var beam_width = this.render_options.beam_width * 1.5;\n        var extreme_test = this.render_options.min_flat_beam_offset + extreme_beam_count * beam_width;\n        var new_offset = extreme_y + extreme_test * -this.stem_direction;\n        if (this.stem_direction === Stem.DOWN && offset < new_offset) {\n          offset = extreme_y + extreme_test;\n        } else if (this.stem_direction === Stem.UP && offset > new_offset) {\n          offset = extreme_y - extreme_test;\n        }\n        if (!this.render_options.flat_beam_offset) {\n          // Set the offset for the group based on the calculations above.\n          this.render_options.flat_beam_offset = offset;\n        } else if (this.stem_direction === Stem.DOWN && offset > this.render_options.flat_beam_offset) {\n          this.render_options.flat_beam_offset = offset;\n        } else if (this.stem_direction === Stem.UP && offset < this.render_options.flat_beam_offset) {\n          this.render_options.flat_beam_offset = offset;\n        }\n\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n      }\n\n      // Create new stems for the notes in the beam, so that each stem\n      // extends into the beams.\n\n    }, {\n      key: 'applyStemExtensions',\n      value: function applyStemExtensions() {\n        var first_note = this.notes[0];\n        var first_y_px = first_note.getStemExtents().topY;\n\n        // If rendering flat beams, and an offset exists, set the y-coordinate to\n        //  the offset so the stems all end at the beam offset.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n          first_y_px = this.render_options.flat_beam_offset;\n        }\n        var first_x_px = first_note.getStemX();\n\n        for (var i = 0; i < this.notes.length; ++i) {\n          var note = this.notes[i];\n\n          var x_px = note.getStemX();\n          var y_extents = note.getStemExtents();\n          var base_y_px = y_extents.baseY;\n          var top_y_px = y_extents.topY;\n\n          // If flat beams, set the top of the stem to the offset, rather than\n          //  relying on the topY value from above.\n          if (this.render_options.flat_beams) {\n            top_y_px = first_y_px;\n          }\n\n          // For harmonic note heads, shorten stem length by 3 pixels\n          base_y_px += this.stem_direction * note.glyph.stem_offset;\n\n          // Don't go all the way to the top (for thicker stems)\n          var y_displacement = Flow.STEM_WIDTH;\n\n          if (!note.hasStem()) {\n            if (note.isRest() && this.render_options.show_stemlets) {\n              var centerGlyphX = note.getCenterGlyphX();\n\n              var width = this.render_options.beam_width;\n              var total_width = (this.beam_count - 1) * width * 1.5 + width;\n\n              var stemlet_height = total_width - y_displacement + this.render_options.stemlet_extension;\n\n              var beam_y = this.getSlopeY(centerGlyphX, first_x_px, first_y_px, this.slope) + this.y_shift;\n              var start_y = beam_y + Stem.HEIGHT * this.stem_direction;\n              var end_y = beam_y + stemlet_height * this.stem_direction;\n\n              // Draw Stemlet\n              note.setStem(new Stem({\n                x_begin: centerGlyphX,\n                x_end: centerGlyphX,\n                y_bottom: this.stem_direction === Stem.UP ? end_y : start_y,\n                y_top: this.stem_direction === Stem.UP ? start_y : end_y,\n                y_extend: y_displacement,\n                stem_extension: -1, // To avoid protruding through the beam\n                stem_direction: this.stem_direction\n              }));\n            }\n\n            continue;\n          }\n\n          var slope_y = this.getSlopeY(x_px, first_x_px, first_y_px, this.slope) + this.y_shift;\n\n          note.setStem(new Stem({\n            x_begin: x_px - Flow.STEM_WIDTH / 2,\n            x_end: x_px,\n            y_top: this.stem_direction === Stem.UP ? top_y_px : base_y_px,\n            y_bottom: this.stem_direction === Stem.UP ? base_y_px : top_y_px,\n            y_extend: y_displacement,\n            stem_extension: Math.abs(top_y_px - slope_y) - Stem.HEIGHT - 1,\n            stem_direction: this.stem_direction\n          }));\n        }\n      }\n\n      // Get the x coordinates for the beam lines of specific `duration`\n\n    }, {\n      key: 'getBeamLines',\n      value: function getBeamLines(duration) {\n        var beam_lines = [];\n        var beam_started = false;\n        var current_beam = null;\n        var partial_beam_length = this.render_options.partial_beam_length;\n        var previous_should_break = false;\n        var tick_tally = 0;\n        for (var i = 0; i < this.notes.length; ++i) {\n          var note = this.notes[i];\n\n          // See if we need to break secondary beams on this note.\n          var ticks = note.getIntrinsicTicks();\n          tick_tally += ticks;\n          var should_break = false;\n\n          // 8th note beams are always drawn.\n          if (parseInt(duration, 10) >= 8) {\n            // First, check to see if any indices were set up through breakSecondaryAt()\n            should_break = this.break_on_indices.indexOf(i) !== -1;\n\n            // If the secondary breaks were auto-configured in the render options,\n            //  handle that as well.\n            if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n              tick_tally = 0;\n              should_break = true;\n            }\n          }\n          var note_gets_beam = ticks < Flow.durationToTicks(duration);\n          var stem_x = note.isRest() ? note.getCenterGlyphX() : note.getStemX();\n\n          // Check to see if the next note in the group will get a beam at this\n          //  level. This will help to inform the partial beam logic below.\n          var next_note = this.notes[i + 1];\n          var beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n          if (note_gets_beam) {\n            // This note gets a beam at the current level\n            if (beam_started) {\n              // We're currently in the middle of a beam. Just continue it on to\n              //  the stem X of the current note.\n              current_beam = beam_lines[beam_lines.length - 1];\n              current_beam.end = stem_x;\n\n              // If a secondary beam break is set up, end the beam right now.\n              if (should_break) {\n                beam_started = false;\n                if (next_note && !beam_next && current_beam.end === null) {\n                  // This note gets a beam,.but the next one does not. This means\n                  //  we need a partial pointing right.\n                  current_beam.end = current_beam.start - partial_beam_length;\n                }\n              }\n            } else {\n              // No beam started yet. Start a new one.\n              current_beam = { start: stem_x, end: null };\n              beam_started = true;\n              if (!beam_next) {\n                // The next note doesn't get a beam. Draw a partial.\n                if ((previous_should_break || i === 0) && next_note) {\n                  // This is the first note (but not the last one), or it is\n                  //  following a secondary break. Draw a partial to the right.\n                  current_beam.end = current_beam.start + partial_beam_length;\n                } else {\n                  // By default, draw a partial to the left.\n                  current_beam.end = current_beam.start - partial_beam_length;\n                }\n              } else if (should_break) {\n                // This note should have a secondary break after it. Even though\n                //  we just started a beam, it needs to end immediately.\n                current_beam.end = current_beam.start - partial_beam_length;\n                beam_started = false;\n              }\n              beam_lines.push(current_beam);\n            }\n          } else {\n            // The current note does not get a beam.\n            beam_started = false;\n          }\n\n          // Store the secondary break flag to inform the partial beam logic in\n          //  the next iteration of the loop.\n          previous_should_break = should_break;\n        }\n\n        // Add a partial beam pointing left if this is the last note in the group\n        var last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === null) {\n          last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n      }\n\n      // Render the stems for each notes\n\n    }, {\n      key: 'drawStems',\n      value: function drawStems() {\n        var _this = this;\n\n        this.notes.forEach(function (note) {\n          if (note.getStem()) {\n            note.getStem().setContext(_this.context).draw();\n          }\n        }, this);\n      }\n\n      // Render the beam lines\n\n    }, {\n      key: 'drawBeamLines',\n      value: function drawBeamLines() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n\n        var valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n        var first_note = this.notes[0];\n        var last_note = this.notes[this.notes.length - 1];\n\n        var first_y_px = first_note.getStemExtents().topY;\n        var last_y_px = last_note.getStemExtents().topY;\n\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n          first_y_px = this.render_options.flat_beam_offset;\n          last_y_px = this.render_options.flat_beam_offset;\n        }\n\n        var first_x_px = first_note.getStemX();\n\n        var beam_width = this.render_options.beam_width * this.stem_direction;\n\n        // Draw the beams.\n        for (var i = 0; i < valid_beam_durations.length; ++i) {\n          var duration = valid_beam_durations[i];\n          var beam_lines = this.getBeamLines(duration);\n\n          for (var j = 0; j < beam_lines.length; ++j) {\n            var beam_line = beam_lines[j];\n            var first_x = beam_line.start - (this.stem_direction === Stem.DOWN ? Flow.STEM_WIDTH / 2 : 0);\n            var first_y = this.getSlopeY(first_x, first_x_px, first_y_px, this.slope);\n\n            var last_x = beam_line.end + (this.stem_direction === 1 ? Flow.STEM_WIDTH / 3 : -Flow.STEM_WIDTH / 3);\n            var last_y = this.getSlopeY(last_x, first_x_px, first_y_px, this.slope);\n\n            this.context.beginPath();\n            this.context.moveTo(first_x, first_y + this.y_shift);\n            this.context.lineTo(first_x, first_y + beam_width + this.y_shift);\n            this.context.lineTo(last_x + 1, last_y + beam_width + this.y_shift);\n            this.context.lineTo(last_x + 1, last_y + this.y_shift);\n            this.context.closePath();\n            this.context.fill();\n          }\n\n          first_y_px += beam_width * 1.5;\n          last_y_px += beam_width * 1.5;\n        }\n      }\n\n      // Pre-format the beam\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        return this;\n      }\n\n      // Post-format the beam. This can only be called after\n      // the notes in the beam have both `x` and `y` values. ie: they've\n      // been formatted and have staves\n\n    }, {\n      key: 'postFormat',\n      value: function postFormat() {\n        if (this.postFormatted) return;\n\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (this.render_options.flat_beams) {\n          this.calculateFlatSlope();\n        } else {\n          this.calculateSlope();\n        }\n        this.applyStemExtensions();\n\n        this.postFormatted = true;\n      }\n\n      // Render the beam to the canvas context\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n\n        if (this.unbeamable) return;\n\n        if (!this.postFormatted) {\n          this.postFormat();\n        }\n\n        this.drawStems();\n        this.drawBeamLines();\n      }\n    }]);\n    return Beam;\n  }();\n\n  function drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n      throw new Vex$1.RERR('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n\n    var x_shift = 3;\n    var variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    var thickLineOffset = 2; // For aesthetics\n\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n      x_shift = -5; // Flips the side of the thin line\n      variableWidth = 3;\n    }\n\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n  }\n\n  var StaveConnector = function () {\n    createClass(StaveConnector, null, [{\n      key: 'type',\n\n      // SINGLE_LEFT and SINGLE are the same value for compatibility\n      // with older versions of vexflow which didn't have right sided\n      // stave connectors\n      get: function get() {\n        return {\n          SINGLE_RIGHT: 0,\n          SINGLE_LEFT: 1,\n          SINGLE: 1,\n          DOUBLE: 2,\n          BRACE: 3,\n          BRACKET: 4,\n          BOLD_DOUBLE_LEFT: 5,\n          BOLD_DOUBLE_RIGHT: 6,\n          THIN_DOUBLE: 7,\n          NONE: 8\n        };\n      }\n    }]);\n\n    function StaveConnector(top_stave, bottom_stave) {\n      classCallCheck(this, StaveConnector);\n\n      this.thickness = Flow.STAVE_LINE_THICKNESS;\n      this.width = 3;\n      this.top_stave = top_stave;\n      this.bottom_stave = bottom_stave;\n      this.type = StaveConnector.type.DOUBLE;\n      this.font = {\n        family: 'times',\n        size: 16,\n        weight: 'normal'\n      };\n      // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n      // 2. Offset BRACE type not to overlap with another StaveConnector\n      this.x_shift = 0;\n      this.texts = [];\n    }\n\n    createClass(StaveConnector, [{\n      key: 'setContext',\n      value: function setContext(ctx) {\n        this.ctx = ctx;\n        return this;\n      }\n    }, {\n      key: 'setType',\n      value: function setType(type) {\n        if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n          this.type = type;\n        }\n        return this;\n      }\n    }, {\n      key: 'setText',\n      value: function setText(text, options) {\n        this.texts.push({\n          content: text,\n          options: Vex$1.Merge({ shift_x: 0, shift_y: 0 }, options)\n        });\n        return this;\n      }\n    }, {\n      key: 'setFont',\n      value: function setFont(font) {\n        Vex$1.Merge(this.font, font);\n      }\n    }, {\n      key: 'setXShift',\n      value: function setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n          throw Vex$1.RERR('InvalidType', 'x_shift must be a Number');\n        }\n\n        this.x_shift = x_shift;\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.ctx) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw without a context.\");\n        }\n\n        var topY = this.top_stave.getYForLine(0);\n        var botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        var width = this.width;\n        var topX = this.top_stave.getX();\n\n        var isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT || this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT || this.type === StaveConnector.type.THIN_DOUBLE;\n\n        if (isRightSidedConnector) {\n          topX = this.top_stave.getX() + this.top_stave.width;\n        }\n\n        var attachment_height = botY - topY;\n        switch (this.type) {\n          case StaveConnector.type.SINGLE:\n            width = 1;\n            break;\n          case StaveConnector.type.SINGLE_LEFT:\n            width = 1;\n            break;\n          case StaveConnector.type.SINGLE_RIGHT:\n            width = 1;\n            break;\n          case StaveConnector.type.DOUBLE:\n            topX -= this.width + 2;\n            break;\n          case StaveConnector.type.BRACE:\n            {\n              width = 12;\n              // May need additional code to draw brace\n              var x1 = this.top_stave.getX() - 2 + this.x_shift;\n              var y1 = topY;\n              var x3 = x1;\n              var y3 = botY;\n              var x2 = x1 - width;\n              var y2 = y1 + attachment_height / 2.0;\n              var cpx1 = x2 - 0.90 * width;\n              var cpy1 = y1 + 0.2 * attachment_height;\n              var cpx2 = x1 + 1.10 * width;\n              var cpy2 = y2 - 0.135 * attachment_height;\n              var cpx3 = cpx2;\n              var cpy3 = y2 + 0.135 * attachment_height;\n              var cpx4 = cpx1;\n              var cpy4 = y3 - 0.2 * attachment_height;\n              var cpx5 = x2 - width;\n              var cpy5 = cpy4;\n              var cpx6 = x1 + 0.40 * width;\n              var cpy6 = y2 + 0.135 * attachment_height;\n              var cpx7 = cpx6;\n              var cpy7 = y2 - 0.135 * attachment_height;\n              var cpx8 = cpx5;\n              var cpy8 = cpy1;\n              this.ctx.beginPath();\n              this.ctx.moveTo(x1, y1);\n              this.ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n              this.ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n              this.ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n              this.ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n              this.ctx.fill();\n              this.ctx.stroke();\n              break;\n            }case StaveConnector.type.BRACKET:\n            topY -= 4;\n            botY += 4;\n            attachment_height = botY - topY;\n            Glyph.renderGlyph(this.ctx, topX - 5, topY - 3, 40, 'v1b', true);\n            Glyph.renderGlyph(this.ctx, topX - 5, botY + 3, 40, 'v10', true);\n            topX -= this.width + 2;\n            break;\n          case StaveConnector.type.BOLD_DOUBLE_LEFT:\n            drawBoldDoubleLine(this.ctx, this.type, topX + this.x_shift, topY, botY);\n            break;\n          case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n            drawBoldDoubleLine(this.ctx, this.type, topX, topY, botY);\n            break;\n          case StaveConnector.type.THIN_DOUBLE:\n            width = 1;\n            break;\n          case StaveConnector.type.NONE:\n            break;\n          default:\n            throw new Vex$1.RERR('InvalidType', 'The provided StaveConnector.type (' + this.type + ') is invalid');\n        }\n\n        if (this.type !== StaveConnector.type.BRACE && this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT && this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT && this.type !== StaveConnector.type.NONE) {\n          this.ctx.fillRect(topX, topY, width, attachment_height);\n        }\n\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n          this.ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n\n        this.ctx.save();\n        this.ctx.lineWidth = 2;\n        this.ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        // Add stave connector text\n        for (var i = 0; i < this.texts.length; i++) {\n          var text = this.texts[i];\n          var text_width = this.ctx.measureText('' + text.content).width;\n          var x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n          var y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n\n          this.ctx.fillText('' + text.content, x, y + 4);\n        }\n        this.ctx.restore();\n      }\n    }]);\n    return StaveConnector;\n  }();\n\n  var Tickable = function () {\n    function Tickable() {\n      classCallCheck(this, Tickable);\n\n      this.intrinsicTicks = 0;\n      this.tickMultiplier = new Fraction(1, 1);\n      this.ticks = new Fraction(0, 1);\n      this.width = 0;\n      this.x_shift = 0; // Shift from tick context\n      this.voice = null;\n      this.tickContext = null;\n      this.modifierContext = null;\n      this.modifiers = [];\n      this.preFormatted = false;\n      this.postFormatted = false;\n      this.tuplet = null;\n      this.tupletStack = [];\n\n      // For interactivity\n      this.id = null;\n      this.elem = null;\n\n      this.align_center = false;\n      this.center_x_shift = 0; // Shift from tick context if center aligned\n\n      // This flag tells the formatter to ignore this tickable during\n      // formatting and justification. It is set by tickables such as BarNote.\n      this.ignore_ticks = false;\n      this.context = null;\n    }\n\n    createClass(Tickable, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;\n      }\n\n      // Set the DOM ID of the element. Must be called before draw(). TODO: Update\n      // ID of element if has already been rendered.\n\n    }, {\n      key: 'setId',\n      value: function setId(id) {\n        this.id = id;\n      }\n    }, {\n      key: 'getId',\n      value: function getId() {\n        return this.id;\n      }\n    }, {\n      key: 'getElem',\n      value: function getElem() {\n        return this.elem;\n      }\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        return null;\n      }\n    }, {\n      key: 'getTicks',\n      value: function getTicks() {\n        return this.ticks;\n      }\n    }, {\n      key: 'shouldIgnoreTicks',\n      value: function shouldIgnoreTicks() {\n        return this.ignore_ticks;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n    }, {\n      key: 'setXShift',\n      value: function setXShift(x) {\n        this.x_shift = x;\n      }\n    }, {\n      key: 'getCenterXShift',\n      value: function getCenterXShift() {\n        if (this.isCenterAligned()) {\n          return this.center_x_shift;\n        }\n\n        return 0;\n      }\n    }, {\n      key: 'isCenterAligned',\n      value: function isCenterAligned() {\n        return this.align_center;\n      }\n    }, {\n      key: 'setCenterAlignment',\n      value: function setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n      }\n\n      // Every tickable must be associated with a voice. This allows formatters\n      // and preFormatter to associate them with the right modifierContexts.\n\n    }, {\n      key: 'getVoice',\n      value: function getVoice() {\n        if (!this.voice) throw new Vex$1.RERR('NoVoice', 'Tickable has no voice.');\n        return this.voice;\n      }\n    }, {\n      key: 'setVoice',\n      value: function setVoice(voice) {\n        this.voice = voice;\n      }\n    }, {\n      key: 'getTuplet',\n      value: function getTuplet() {\n        return this.tuplet;\n      }\n\n      /*\n       * resetTuplet\n       * @param tuplet -- the specific tuplet to reset\n       *   if this is not provided, all tuplets are reset.\n       * @returns this\n       *\n       * Removes any prior tuplets from the tick calculation and\n       * resets the intrinsic tick value to\n       */\n\n    }, {\n      key: 'resetTuplet',\n      value: function resetTuplet(tuplet) {\n        var noteCount = void 0,\n            notesOccupied = void 0;\n        if (tuplet) {\n          var i = this.tupletStack.indexOf(tuplet);\n          if (i !== -1) {\n            this.tupletStack.splice(i, 1);\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n          }\n          return this;\n        }\n\n        while (this.tupletStack.length) {\n          tuplet = this.tupletStack.pop();\n          noteCount = tuplet.getNoteCount();\n          notesOccupied = tuplet.getNotesOccupied();\n\n          // Revert old multiplier by inverting numerator & denom.:\n          this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n      }\n    }, {\n      key: 'setTuplet',\n      value: function setTuplet(tuplet) {\n        // Attach to new tuplet\n\n        if (tuplet) {\n          this.tupletStack.push(tuplet);\n\n          var noteCount = tuplet.getNoteCount();\n          var notesOccupied = tuplet.getNotesOccupied();\n\n          this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n\n        this.tuplet = tuplet;\n\n        return this;\n      }\n\n      /** optional, if tickable has modifiers **/\n\n    }, {\n      key: 'addToModifierContext',\n      value: function addToModifierContext(mc) {\n        this.modifierContext = mc;\n        // Add modifiers to modifier context (if any)\n        this.preFormatted = false;\n      }\n\n      /** optional, if tickable has modifiers **/\n\n    }, {\n      key: 'addModifier',\n      value: function addModifier(mod) {\n        this.modifiers.push(mod);\n        this.preFormatted = false;\n        return this;\n      }\n    }, {\n      key: 'setTickContext',\n      value: function setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return;\n\n        this.width = 0;\n        if (this.modifierContext) {\n          this.modifierContext.preFormat();\n          this.width += this.modifierContext.getWidth();\n        }\n      }\n    }, {\n      key: 'postFormat',\n      value: function postFormat() {\n        if (this.postFormatted) return;\n        this.postFormatted = true;\n        return this;\n      }\n    }, {\n      key: 'getIntrinsicTicks',\n      value: function getIntrinsicTicks() {\n        return this.intrinsicTicks;\n      }\n    }, {\n      key: 'setIntrinsicTicks',\n      value: function setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n      }\n    }, {\n      key: 'getTickMultiplier',\n      value: function getTickMultiplier() {\n        return this.tickMultiplier;\n      }\n    }, {\n      key: 'applyTickMultiplier',\n      value: function applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n      }\n    }, {\n      key: 'setDuration',\n      value: function setDuration(duration) {\n        var ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n      }\n    }]);\n    return Tickable;\n  }();\n\n  var Note = function (_Tickable) {\n    inherits(Note, _Tickable);\n    createClass(Note, null, [{\n      key: 'plotMetrics',\n\n\n      // Debug helper. Displays various note metrics for the given\n      // note.\n      value: function plotMetrics(ctx, note, yPos) {\n        var metrics = note.getMetrics();\n        var w = metrics.width;\n        var xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n        var xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n        var xAbs = note.getAbsoluteX();\n        var xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n        var xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n        var xEnd = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx + metrics.modRightPx;\n\n        var xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont('Arial', 8, '');\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n        var y = yPos + 7;\n        function stroke(x1, x2, color) {\n          ctx.beginPath();\n          ctx.setStrokeStyle(color);\n          ctx.setFillStyle(color);\n          ctx.setLineWidth(3);\n          ctx.moveTo(x1 + note.getXShift(), y);\n          ctx.lineTo(x2 + note.getXShift(), y);\n          ctx.stroke();\n        }\n\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xStart - note.getXShift(), xStart, '#DDD'); // Shift\n        Vex$1.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        ctx.restore();\n      }\n\n      // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n      // positioning and layout.\n      // To create a new note you need to provide a `note_struct`, which consists\n      // of the following fields:\n      //\n      // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n      // `dots`: The number of dots, which affects the duration.\n      // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n      //\n      // The range of values for these parameters are available in `src/tables.js`.\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'note';\n      }\n    }]);\n\n    function Note(note_struct) {\n      classCallCheck(this, Note);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Note).call(this));\n\n      if (!note_struct) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Note must have valid initialization data to identify ' + 'duration and type.');\n      }\n\n      // Parse `note_struct` and get note properties.\n      var initData = Flow.parseNoteData(note_struct);\n      if (!initData) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Invalid note initialization object: ' + JSON.stringify(note_struct));\n      }\n\n      // Set note properties from parameters.\n      _this.duration = initData.duration;\n      _this.dots = initData.dots;\n      _this.noteType = initData.type;\n\n      if (note_struct.duration_override) {\n        // Custom duration\n        _this.setDuration(note_struct.duration_override);\n      } else {\n        // Default duration\n        _this.setIntrinsicTicks(initData.ticks);\n      }\n\n      _this.modifiers = [];\n\n      // Get the glyph code for this note from the font.\n      _this.glyph = Flow.durationToGlyph(_this.duration, _this.noteType);\n\n      if (_this.positions && (_typeof(_this.positions) != 'object' || !_this.positions.length)) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Note keys must be array type.');\n      }\n\n      // Note to play for audio players.\n      _this.playNote = null;\n\n      // Positioning contexts used by the Formatter.\n      _this.tickContext = null; // The current tick context.\n      _this.modifierContext = null;\n      _this.ignore_ticks = false;\n\n      // Positioning variables\n      _this.width = 0; // Width in pixels calculated after preFormat\n      _this.extraLeftPx = 0; // Extra room on left for offset note head\n      _this.extraRightPx = 0; // Extra room on right for offset note head\n      _this.x_shift = 0; // X shift from tick context X\n      _this.left_modPx = 0; // Max width of left modifiers\n      _this.right_modPx = 0; // Max width of right modifiers\n      _this.voice = null; // The voice that this note is in\n      _this.preFormatted = false; // Is this note preFormatted?\n      _this.ys = []; // list of y coordinates for each note\n      // we need to hold on to these for ties and beams.\n\n      if (note_struct.align_center) {\n        _this.setCenterAlignment(note_struct.align_center);\n      }\n\n      // The render surface.\n      _this.context = null;\n      _this.stave = null;\n      _this.render_options = {\n        annotation_spacing: 5,\n        stave_padding: 12\n      };\n      return _this;\n    }\n\n    // Get and set the play note, which is arbitrary data that can be used by an\n    // audio player.\n\n\n    createClass(Note, [{\n      key: 'getPlayNote',\n      value: function getPlayNote() {\n        return this.playNote;\n      }\n    }, {\n      key: 'setPlayNote',\n      value: function setPlayNote(note) {\n        this.playNote = note;return this;\n      }\n\n      // Don't play notes by default, call them rests. This is also used by things like\n      // beams and dots for positioning.\n\n    }, {\n      key: 'isRest',\n      value: function isRest() {\n        return false;\n      }\n\n      // TODO(0xfe): Why is this method here?\n\n    }, {\n      key: 'addStroke',\n      value: function addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.setPreFormatted(false);\n        return this;\n      }\n\n      // Get and set the target stave.\n\n    }, {\n      key: 'getStave',\n      value: function getStave() {\n        return this.stave;\n      }\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.context = this.stave.context;\n        return this;\n      }\n\n      // `Note` is not really a modifier, but is used in\n      // a `ModifierContext`.\n\n    }, {\n      key: 'getCategory',\n      value: function getCategory() {\n        return Note.CATEGORY;\n      }\n\n      // Set the rendering context for the note.\n\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n\n      // Get and set spacing to the left and right of the notes.\n\n    }, {\n      key: 'getExtraLeftPx',\n      value: function getExtraLeftPx() {\n        return this.extraLeftPx;\n      }\n    }, {\n      key: 'getExtraRightPx',\n      value: function getExtraRightPx() {\n        return this.extraRightPx;\n      }\n    }, {\n      key: 'setExtraLeftPx',\n      value: function setExtraLeftPx(x) {\n        this.extraLeftPx = x;return this;\n      }\n    }, {\n      key: 'setExtraRightPx',\n      value: function setExtraRightPx(x) {\n        this.extraRightPx = x;return this;\n      }\n\n      // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n\n    }, {\n      key: 'shouldIgnoreTicks',\n      value: function shouldIgnoreTicks() {\n        return this.ignore_ticks;\n      }\n\n      // Get the stave line number for the note.\n\n    }, {\n      key: 'getLineNumber',\n      value: function getLineNumber() {\n        return 0;\n      }\n\n      // Get the stave line number for rest.\n\n    }, {\n      key: 'getLineForRest',\n      value: function getLineForRest() {\n        return 0;\n      }\n\n      // Get the glyph associated with this note.\n\n    }, {\n      key: 'getGlyph',\n      value: function getGlyph() {\n        return this.glyph;\n      }\n\n      // Set and get Y positions for this note. Each Y value is associated with\n      // an individual pitch/key within the note/chord.\n\n    }, {\n      key: 'setYs',\n      value: function setYs(ys) {\n        this.ys = ys;return this;\n      }\n    }, {\n      key: 'getYs',\n      value: function getYs() {\n        if (this.ys.length === 0) throw new Vex$1.RERR('NoYValues', 'No Y-values calculated for this note.');\n        return this.ys;\n      }\n\n      // Get the Y position of the space above the stave onto which text can\n      // be rendered.\n\n    }, {\n      key: 'getYForTopText',\n      value: function getYForTopText(text_line) {\n        if (!this.stave) throw new Vex$1.RERR('NoStave', 'No stave attached to this note.');\n        return this.stave.getYForTopText(text_line);\n      }\n\n      // Get a `BoundingBox` for this note.\n\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        return null;\n      }\n\n      // Returns the voice that this note belongs in.\n\n    }, {\n      key: 'getVoice',\n      value: function getVoice() {\n        if (!this.voice) throw new Vex$1.RERR('NoVoice', 'Note has no voice.');\n        return this.voice;\n      }\n\n      // Attach this note to `voice`.\n\n    }, {\n      key: 'setVoice',\n      value: function setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n      }\n\n      // Get and set the `TickContext` for this note.\n\n    }, {\n      key: 'getTickContext',\n      value: function getTickContext() {\n        return this.tickContext;\n      }\n    }, {\n      key: 'setTickContext',\n      value: function setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n      }\n\n      // Accessors for the note type.\n\n    }, {\n      key: 'getDuration',\n      value: function getDuration() {\n        return this.duration;\n      }\n    }, {\n      key: 'isDotted',\n      value: function isDotted() {\n        return this.dots > 0;\n      }\n    }, {\n      key: 'hasStem',\n      value: function hasStem() {\n        return false;\n      }\n    }, {\n      key: 'getDots',\n      value: function getDots() {\n        return this.dots;\n      }\n    }, {\n      key: 'getNoteType',\n      value: function getNoteType() {\n        return this.noteType;\n      }\n    }, {\n      key: 'setBeam',\n      value: function setBeam() {\n        return this;\n      } // ignore parameters\n\n      // Attach this note to a modifier context.\n\n    }, {\n      key: 'setModifierContext',\n      value: function setModifierContext(mc) {\n        this.modifierContext = mc;return this;\n      }\n\n      // Attach a modifier to this note.\n\n    }, {\n      key: 'addModifier',\n      value: function addModifier(modifier) {\n        var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        this.modifiers.push(modifier);\n        this.setPreFormatted(false);\n        return this;\n      }\n\n      // Get the coordinates for where modifiers begin.\n\n    }, {\n      key: 'getModifierStartXY',\n      value: function getModifierStartXY() {\n        if (!this.preFormatted) throw new Vex$1.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        return { x: this.getAbsoluteX(), y: this.ys[0] };\n      }\n\n      // Get bounds and metrics for this note.\n      //\n      // Returns a struct with fields:\n      // `width`: The total width of the note (including modifiers.)\n      // `noteWidth`: The width of the note head only.\n      // `left_shift`: The horizontal displacement of the note.\n      // `modLeftPx`: Start `X` for left modifiers.\n      // `modRightPx`: Start `X` for right modifiers.\n      // `extraLeftPx`: Extra space on left of note.\n      // `extraRightPx`: Extra space on right of note.\n\n    }, {\n      key: 'getMetrics',\n      value: function getMetrics() {\n        if (!this.preFormatted) throw new Vex$1.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        var modLeftPx = 0;\n        var modRightPx = 0;\n        if (this.modifierContext != null) {\n          modLeftPx = this.modifierContext.state.left_shift;\n          modRightPx = this.modifierContext.state.right_shift;\n        }\n\n        var width = this.getWidth();\n        return { width: width,\n          noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n          left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n          // Modifiers, accidentals etc.\n          modLeftPx: modLeftPx,\n          modRightPx: modRightPx,\n\n          // Displaced note head on left or right.\n          extraLeftPx: this.extraLeftPx,\n          extraRightPx: this.extraRightPx };\n      }\n\n      // Get and set width of note. Used by the formatter for positioning.\n\n    }, {\n      key: 'setWidth',\n      value: function setWidth(width) {\n        this.width = width;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        if (!this.preFormatted) throw new Vex$1.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n      }\n\n      // Displace note by `x` pixels. Used by the formatter.\n\n    }, {\n      key: 'setXShift',\n      value: function setXShift(x) {\n        this.x_shift = x;return this;\n      }\n    }, {\n      key: 'getXShift',\n      value: function getXShift() {\n        return this.x_shift;\n      }\n\n      // Get `X` position of this tick context.\n\n    }, {\n      key: 'getX',\n      value: function getX() {\n        if (!this.tickContext) throw new Vex$1.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n        return this.tickContext.getX() + this.x_shift;\n      }\n\n      // Get the absolute `X` position of this note's tick context. This\n      // excludes x_shift, so you'll need to factor it in if you're\n      // looking for the post-formatted x-position.\n\n    }, {\n      key: 'getAbsoluteX',\n      value: function getAbsoluteX() {\n        if (!this.tickContext) throw new Vex$1.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n\n        // Position note to left edge of tick context.\n        var x = this.tickContext.getX();\n        if (this.stave) {\n          x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n        }\n\n        if (this.isCenterAligned()) {\n          x += this.getCenterXShift();\n        }\n\n        return x;\n      }\n    }, {\n      key: 'setPreFormatted',\n      value: function setPreFormatted(value) {\n        this.preFormatted = value;\n\n        // Maintain the width of left and right modifiers in pixels.\n        if (this.preFormatted) {\n          var extra = this.tickContext.getExtraPx();\n          this.left_modPx = Math.max(this.left_modPx, extra.left);\n          this.right_modPx = Math.max(this.right_modPx, extra.right);\n        }\n      }\n    }]);\n    return Note;\n  }(Tickable);\n\n  // To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\n  function L$3() {\n    if (NoteHead.DEBUG) Vex$1.L('Vex.Flow.NoteHead', arguments);\n  }\n\n  // Draw slashnote head manually. No glyph exists for this.\n  //\n  // Parameters:\n  // * `ctx`: the Canvas context\n  // * `duration`: the duration of the note. ex: \"4\"\n  // * `x`: the x coordinate to draw at\n  // * `y`: the y coordinate to draw at\n  // * `stem_direction`: the direction of the stem\n  function drawSlashNoteHead(ctx, duration, x, y, stem_direction) {\n    var width = 15 + Flow.STEM_WIDTH / 2;\n    ctx.save();\n    ctx.setLineWidth(Flow.STEM_WIDTH);\n\n    var fill = false;\n\n    if (Flow.durationToNumber(duration) > 2) {\n      fill = true;\n    }\n\n    if (!fill) x -= Flow.STEM_WIDTH / 2 * stem_direction;\n\n    ctx.beginPath();\n    ctx.moveTo(x, y + 11);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - 10);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + 11);\n    ctx.closePath();\n\n    if (fill) {\n      ctx.fill();\n    } else {\n      ctx.stroke();\n    }\n\n    if (Flow.durationToFraction(duration).equals(0.5)) {\n      var breve_lines = [-3, -1, width + 1, width + 3];\n      for (var i = 0; i < breve_lines.length; i++) {\n        ctx.beginPath();\n        ctx.moveTo(x + breve_lines[i], y - 10);\n        ctx.lineTo(x + breve_lines[i], y + 11);\n        ctx.stroke();\n      }\n    }\n\n    ctx.restore();\n  }\n\n  var NoteHead = function (_Note) {\n    inherits(NoteHead, _Note);\n    createClass(NoteHead, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'notehead';\n      }\n    }]);\n\n    function NoteHead(head_options) {\n      classCallCheck(this, NoteHead);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(NoteHead).call(this, head_options));\n\n      _this.index = head_options.index;\n      _this.x = head_options.x || 0;\n      _this.y = head_options.y || 0;\n      _this.note_type = head_options.note_type;\n      _this.duration = head_options.duration;\n      _this.displaced = head_options.displaced || false;\n      _this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n      _this.line = head_options.line;\n\n      // Get glyph code based on duration and note type. This could be\n      // regular notes, rests, or other custom codes.\n      _this.glyph = Flow.durationToGlyph(_this.duration, _this.note_type);\n      if (!_this.glyph) {\n        throw new Vex$1.RuntimeError('BadArguments', \"No glyph found for duration '\" + _this.duration + \"' and type '\" + _this.note_type + \"'\");\n      }\n\n      _this.glyph_code = _this.glyph.code_head;\n      _this.x_shift = head_options.x_shift;\n      if (head_options.custom_glyph_code) {\n        _this.custom_glyph = true;\n        _this.glyph_code = head_options.custom_glyph_code;\n      }\n\n      _this.context = null;\n      _this.style = head_options.style;\n      _this.slashed = head_options.slashed;\n\n      Vex$1.Merge(_this.render_options, {\n        glyph_font_scale: 35, // font size for note heads\n        stroke_px: 3 });\n\n      // number of stroke px to the left and right of head\n      if (head_options.glyph_font_scale) {\n        _this.render_options.glyph_font_scale = head_options.glyph_font_scale;\n      }\n\n      _this.setWidth(_this.glyph.head_width);\n      return _this;\n    }\n\n    createClass(NoteHead, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return NoteHead.CATEGORY;\n      }\n\n      // Set the Cavnas context for drawing\n\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n\n      // Get the width of the notehead\n\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n\n      // Determine if the notehead is displaced\n\n    }, {\n      key: 'isDisplaced',\n      value: function isDisplaced() {\n        return this.displaced === true;\n      }\n\n      // Get/set the notehead's style\n      //\n      // `style` is an `object` with the following properties: `shadowColor`,\n      // `shadowBlur`, `fillStyle`, `strokeStyle`\n\n    }, {\n      key: 'getStyle',\n      value: function getStyle() {\n        return this.style;\n      }\n    }, {\n      key: 'setStyle',\n      value: function setStyle(style) {\n        this.style = style;return this;\n      }\n\n      // Get the glyph data\n\n    }, {\n      key: 'getGlyph',\n      value: function getGlyph() {\n        return this.glyph;\n      }\n\n      // Set the X coordinate\n\n    }, {\n      key: 'setX',\n      value: function setX(x) {\n        this.x = x;return this;\n      }\n\n      // get/set the Y coordinate\n\n    }, {\n      key: 'getY',\n      value: function getY() {\n        return this.y;\n      }\n    }, {\n      key: 'setY',\n      value: function setY(y) {\n        this.y = y;return this;\n      }\n\n      // Get/set the stave line the notehead is placed on\n\n    }, {\n      key: 'getLine',\n      value: function getLine() {\n        return this.line;\n      }\n    }, {\n      key: 'setLine',\n      value: function setLine(line) {\n        this.line = line;return this;\n      }\n\n      // Get the canvas `x` coordinate position of the notehead.\n\n    }, {\n      key: 'getAbsoluteX',\n      value: function getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        var x = !this.preFormatted ? this.x : get(Object.getPrototypeOf(NoteHead.prototype), 'getAbsoluteX', this).call(this);\n\n        return x + (this.displaced ? this.width * this.stem_direction : 0);\n      }\n\n      // Get the `BoundingBox` for the `NoteHead`\n\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        if (!this.preFormatted) throw new Vex$1.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n\n        var spacing = this.stave.getSpacingBetweenLines();\n        var half_spacing = spacing / 2;\n        var min_y = this.y - half_spacing;\n\n        return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n      }\n\n      // Apply current style to Canvas `context`\n\n    }, {\n      key: 'applyStyle',\n      value: function applyStyle(context) {\n        var style = this.getStyle();\n        if (style.shadowColor) context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle) context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n        return this;\n      }\n\n      // Set notehead to a provided `stave`\n\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        var line = this.getLine();\n\n        this.stave = stave;\n        this.setY(stave.getYForNote(line));\n        this.context = this.stave.context;\n        return this;\n      }\n\n      // Pre-render formatting\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return this;\n\n        var glyph = this.getGlyph();\n        var width = glyph.head_width + this.extraLeftPx + this.extraRightPx;\n\n        this.setWidth(width);\n        this.setPreFormatted(true);\n        return this;\n      }\n\n      // Draw the notehead\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\n        var ctx = this.context;\n        var head_x = this.getAbsoluteX();\n        var y = this.y;\n\n        L$3(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n        // Begin and end positions for head.\n        var stem_direction = this.stem_direction;\n        var glyph_font_scale = this.render_options.glyph_font_scale;\n\n        var line = this.line;\n\n        // If note above/below the staff, draw the small staff\n        if (line <= 0 || line >= 6) {\n          var line_y = y;\n          var floor = Math.floor(line);\n          if (line < 0 && floor - line == -0.5) line_y -= 5;else if (line > 6 && floor - line == -0.5) line_y += 5;\n          if (this.note_type != 'r') {\n            ctx.fillRect(head_x - this.render_options.stroke_px, line_y, this.getGlyph().head_width + this.render_options.stroke_px * 2, 1);\n          }\n        }\n\n        if (this.note_type == 's') {\n          drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction);\n        } else {\n          if (this.style) {\n            ctx.save();\n            this.applyStyle(ctx);\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n            ctx.restore();\n          } else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n          }\n        }\n      }\n    }]);\n    return NoteHead;\n  }(Note);\n\n  // To enable logging for this class. Set `Vex.Flow.StemmableNote.DEBUG` to `true`.\n  function L$4() {\n    if (StemmableNote.DEBUG) Vex$1.L('Vex.Flow.StemmableNote', arguments);\n  }\n\n  var StemmableNote = function (_Note) {\n    inherits(StemmableNote, _Note);\n\n    function StemmableNote(note_struct) {\n      classCallCheck(this, StemmableNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(StemmableNote).call(this, note_struct));\n\n      _this.stem = null;\n      _this.stem_extension_override = null;\n      _this.beam = null;\n      return _this;\n    }\n\n    // Get and set the note's `Stem`\n\n\n    createClass(StemmableNote, [{\n      key: 'getStem',\n      value: function getStem() {\n        return this.stem;\n      }\n    }, {\n      key: 'setStem',\n      value: function setStem(stem) {\n        this.stem = stem;return this;\n      }\n\n      // Builds and sets a new stem\n\n    }, {\n      key: 'buildStem',\n      value: function buildStem() {\n        var stem = new Stem();\n        this.setStem(stem);\n        return this;\n      }\n\n      // Get the full length of stem\n\n    }, {\n      key: 'getStemLength',\n      value: function getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n      }\n\n      // Get the number of beams for this duration\n\n    }, {\n      key: 'getBeamCount',\n      value: function getBeamCount() {\n        var glyph = this.getGlyph();\n\n        if (glyph) {\n          return glyph.beam_count;\n        } else {\n          return 0;\n        }\n      }\n\n      // Get the minimum length of stem\n\n    }, {\n      key: 'getStemMinumumLength',\n      value: function getStemMinumumLength() {\n        var frac = Flow.durationToFraction(this.duration);\n        var length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n          case '8':\n            if (this.beam == null) length = 35;\n            break;\n          case '16':\n            if (this.beam == null) length = 35;else length = 25;\n            break;\n          case '32':\n            if (this.beam == null) length = 45;else length = 35;\n            break;\n          case '64':\n            if (this.beam == null) length = 50;else length = 40;\n            break;\n          case '128':\n            if (this.beam == null) length = 55;else length = 45;\n        }\n        return length;\n      }\n\n      // Get/set the direction of the stem\n\n    }, {\n      key: 'getStemDirection',\n      value: function getStemDirection() {\n        return this.stem_direction;\n      }\n    }, {\n      key: 'setStemDirection',\n      value: function setStemDirection(direction) {\n        if (!direction) direction = Stem.UP;\n        if (direction != Stem.UP && direction != Stem.DOWN) {\n          throw new Vex$1.RERR('BadArgument', 'Invalid stem direction: ' + direction);\n        }\n\n        this.stem_direction = direction;\n        if (this.stem) {\n          this.stem.setDirection(direction);\n          this.stem.setExtension(this.getStemExtension());\n        }\n\n        this.beam = null;\n        if (this.preFormatted) {\n          this.preFormat();\n        }\n        return this;\n      }\n\n      // Get the `x` coordinate of the stem\n\n    }, {\n      key: 'getStemX',\n      value: function getStemX() {\n        var x_begin = this.getAbsoluteX() + this.x_shift;\n        var x_end = this.getAbsoluteX() + this.x_shift + this.glyph.head_width;\n\n        var stem_x = this.stem_direction == Stem.DOWN ? x_begin : x_end;\n\n        stem_x -= Stem.WIDTH / 2 * this.stem_direction;\n\n        return stem_x;\n      }\n\n      // Get the `x` coordinate for the center of the glyph.\n      // Used for `TabNote` stems and stemlets over rests\n\n    }, {\n      key: 'getCenterGlyphX',\n      value: function getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.glyph.head_width / 2;\n      }\n\n      // Get the stem extension for the current duration\n\n    }, {\n      key: 'getStemExtension',\n      value: function getStemExtension() {\n        var glyph = this.getGlyph();\n\n        if (this.stem_extension_override != null) {\n          return this.stem_extension_override;\n        }\n\n        if (glyph) {\n          return this.getStemDirection() === 1 ? glyph.stem_up_extension : glyph.stem_down_extension;\n        }\n\n        return 0;\n      }\n\n      // Set the stem length to a specific. Will override the default length.\n\n    }, {\n      key: 'setStemLength',\n      value: function setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n      }\n\n      // Get the top and bottom `y` values of the stem.\n\n    }, {\n      key: 'getStemExtents',\n      value: function getStemExtents() {\n        if (!this.ys || this.ys.length === 0) throw new Vex$1.RERR('NoYValues', \"Can't get top stem Y when note has no Y values.\");\n\n        var top_pixel = this.ys[0];\n        var base_pixel = this.ys[0];\n        var stem_height = Stem.HEIGHT + this.getStemExtension();\n\n        for (var i = 0; i < this.ys.length; ++i) {\n          var stem_top = this.ys[i] + stem_height * -this.stem_direction;\n\n          if (this.stem_direction == Stem.DOWN) {\n            top_pixel = Math.max(top_pixel, stem_top);\n            base_pixel = Math.min(base_pixel, this.ys[i]);\n          } else {\n            top_pixel = Math.min(top_pixel, stem_top);\n            base_pixel = Math.max(base_pixel, this.ys[i]);\n          }\n\n          if (this.noteType == 's' || this.noteType == 'x') {\n            top_pixel -= this.stem_direction * 7;\n            base_pixel -= this.stem_direction * 7;\n          }\n        }\n\n        L$4('Stem extents: ', top_pixel, base_pixel);\n        return { topY: top_pixel, baseY: base_pixel };\n      }\n\n      // Sets the current note's beam\n\n    }, {\n      key: 'setBeam',\n      value: function setBeam(beam) {\n        this.beam = beam;return this;\n      }\n\n      // Get the `y` value for the top/bottom modifiers at a specific `text_line`\n\n    }, {\n      key: 'getYForTopText',\n      value: function getYForTopText(text_line) {\n        var extents = this.getStemExtents();\n        if (this.hasStem()) {\n          return Vex$1.Min(this.stave.getYForTopText(text_line), extents.topY - this.render_options.annotation_spacing * (text_line + 1));\n        } else {\n          return this.stave.getYForTopText(text_line);\n        }\n      }\n    }, {\n      key: 'getYForBottomText',\n      value: function getYForBottomText(text_line) {\n        var extents = this.getStemExtents();\n        if (this.hasStem()) {\n          return Vex$1.Max(this.stave.getYForTopText(text_line), extents.baseY + this.render_options.annotation_spacing * text_line);\n        } else {\n          return this.stave.getYForBottomText(text_line);\n        }\n      }\n    }, {\n      key: 'hasFlag',\n      value: function hasFlag() {\n        return Flow.durationToGlyph(this.duration).flag;\n      }\n\n      // Post format the note\n\n    }, {\n      key: 'postFormat',\n      value: function postFormat() {\n        if (this.beam) {\n          this.beam.postFormat();\n        }\n        this.postFormatted = true;\n        return this;\n      }\n\n      // Render the stem onto the canvas\n\n    }, {\n      key: 'drawStem',\n      value: function drawStem(stem_struct) {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\n        this.setStem(new Stem(stem_struct));\n        this.stem.setContext(this.context).draw();\n      }\n    }]);\n    return StemmableNote;\n  }(Note);\n\n  // To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n  function L$5() {\n    if (Modifier.DEBUG) Vex$1.L('Vex.Flow.Modifier', arguments);\n  }\n\n  var Modifier = function () {\n    createClass(Modifier, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'none';\n      }\n\n      // Modifiers can be positioned almost anywhere, relative to a note.\n\n    }, {\n      key: 'Position',\n      get: function get() {\n        return {\n          LEFT: 1,\n          RIGHT: 2,\n          ABOVE: 3,\n          BELOW: 4\n        };\n      }\n    }]);\n\n    function Modifier() {\n      classCallCheck(this, Modifier);\n\n      this.width = 0;\n      this.context = null;\n\n      // Modifiers are attached to a note and an index. An index is a\n      // specific head in a chord.\n      this.note = null;\n      this.index = null;\n\n      // The `text_line` is reserved space above or below a stave.\n      this.text_line = 0;\n      this.position = Modifier.Position.LEFT;\n      this.modifier_context = null;\n      this.x_shift = 0;\n      this.y_shift = 0;\n      this.spacingFromNextModifier = 0;\n      L$5('Created new modifier');\n    }\n\n    // Every modifier has a category. The `ModifierContext` uses this to determine\n    // the type and order of the modifiers.\n\n\n    createClass(Modifier, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Modifier.CATEGORY;\n      }\n\n      // Get and set modifier widths.\n\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n    }, {\n      key: 'setWidth',\n      value: function setWidth(width) {\n        this.width = width;return this;\n      }\n\n      // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n\n    }, {\n      key: 'getNote',\n      value: function getNote() {\n        return this.note;\n      }\n    }, {\n      key: 'setNote',\n      value: function setNote(note) {\n        this.note = note;return this;\n      }\n\n      // Get and set note index, which is a specific note in a chord.\n\n    }, {\n      key: 'getIndex',\n      value: function getIndex() {\n        return this.index;\n      }\n    }, {\n      key: 'setIndex',\n      value: function setIndex(index) {\n        this.index = index;return this;\n      }\n\n      // Get and set rendering context.\n\n    }, {\n      key: 'getContext',\n      value: function getContext() {\n        return this.context;\n      }\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n\n      // Every modifier must be part of a `ModifierContext`.\n\n    }, {\n      key: 'getModifierContext',\n      value: function getModifierContext() {\n        return this.modifier_context;\n      }\n    }, {\n      key: 'setModifierContext',\n      value: function setModifierContext(c) {\n        this.modifier_context = c;return this;\n      }\n\n      // Get and set articulation position.\n\n    }, {\n      key: 'getPosition',\n      value: function getPosition() {\n        return this.position;\n      }\n    }, {\n      key: 'setPosition',\n      value: function setPosition(position) {\n        this.position = position;return this;\n      }\n\n      // Set the `text_line` for the modifier.\n\n    }, {\n      key: 'setTextLine',\n      value: function setTextLine(line) {\n        this.text_line = line;return this;\n      }\n\n      // Shift modifier down `y` pixels. Negative values shift up.\n\n    }, {\n      key: 'setYShift',\n      value: function setYShift(y) {\n        this.y_shift = y;return this;\n      }\n    }, {\n      key: 'setSpacingFromNextModifier',\n      value: function setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n      }\n    }, {\n      key: 'getSpacingFromNextModifier',\n      value: function getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n      }\n\n      // Shift modifier `x` pixels in the direction of the modifier. Negative values\n      // shift reverse.\n\n    }, {\n      key: 'setXShift',\n      value: function setXShift(x) {\n        this.x_shift = 0;\n        if (this.position == Modifier.Position.LEFT) {\n          this.x_shift -= x;\n        } else {\n          this.x_shift += x;\n        }\n      }\n    }, {\n      key: 'getXShift',\n      value: function getXShift() {\n        return this.x_shift;\n      }\n\n      // Render the modifier onto the canvas.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        throw new Vex$1.RERR('MethodNotImplemented', 'Draw() not implemented for this modifier.');\n      }\n    }]);\n    return Modifier;\n  }();\n\n  var Dot = function (_Modifier) {\n    inherits(Dot, _Modifier);\n    createClass(Dot, null, [{\n      key: 'format',\n\n\n      // Arrange dots inside a ModifierContext.\n      value: function format(dots, state) {\n        var right_shift = state.right_shift;\n        var dot_spacing = 1;\n\n        if (!dots || dots.length === 0) return false;\n\n        var i = void 0,\n            dot = void 0,\n            note = void 0,\n            shift = void 0;\n        var dot_list = [];\n        for (i = 0; i < dots.length; ++i) {\n          dot = dots[i];\n          note = dot.getNote();\n\n          var props = void 0;\n          // Only StaveNote has .getKeyProps()\n          if (typeof note.getKeyProps === 'function') {\n            props = note.getKeyProps()[dot.getIndex()];\n            shift = props.displaced ? note.getExtraRightPx() : 0;\n          } else {\n            // Else it's a TabNote\n            props = { line: 0.5 }; // Shim key props for dot placement\n            shift = 0;\n          }\n\n          dot_list.push({ line: props.line, shift: shift, note: note, dot: dot });\n        }\n\n        // Sort dots by line number.\n        dot_list.sort(function (a, b) {\n          return b.line - a.line;\n        });\n\n        var dot_shift = right_shift;\n        var x_width = 0;\n        var last_line = null;\n        var last_note = null;\n        var prev_dotted_space = null;\n        var half_shiftY = 0;\n\n        for (i = 0; i < dot_list.length; ++i) {\n          dot = dot_list[i].dot;\n          note = dot_list[i].note;\n          shift = dot_list[i].shift;\n          var line = dot_list[i].line;\n\n          // Reset the position of the dot every line.\n          if (line != last_line || note != last_note) {\n            dot_shift = shift;\n          }\n\n          if (!note.isRest() && line != last_line) {\n            if (Math.abs(line % 1) == 0.5) {\n              // note is on a space, so no dot shift\n              half_shiftY = 0;\n            } else if (!note.isRest()) {\n              // note is on a line, so shift dot to space above the line\n              half_shiftY = 0.5;\n              if (last_note != null && !last_note.isRest() && last_line - line == 0.5) {\n                // previous note on a space, so shift dot to space below the line\n                half_shiftY = -0.5;\n              } else if (line + half_shiftY == prev_dotted_space) {\n                // previous space is dotted, so shift dot to space below the line\n                half_shiftY = -0.5;\n              }\n            }\n          }\n\n          // convert half_shiftY to a multiplier for dots.draw()\n          dot.dot_shiftY = -half_shiftY;\n          prev_dotted_space = line + half_shiftY;\n\n          dot.setXShift(dot_shift);\n          dot_shift += dot.getWidth() + dot_spacing; // spacing\n          x_width = dot_shift > x_width ? dot_shift : x_width;\n          last_line = line;\n          last_note = note;\n        }\n\n        // Update state.\n        state.right_shift += x_width;\n      }\n\n      /**\r\n       * @constructor\r\n       */\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'dots';\n      }\n    }]);\n\n    function Dot() {\n      classCallCheck(this, Dot);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Dot).call(this));\n\n      _this.note = null;\n      _this.index = null;\n      _this.position = Modifier.Position.RIGHT;\n\n      _this.radius = 2;\n      _this.setWidth(5);\n      _this.dot_shiftY = 0;\n      return _this;\n    }\n\n    createClass(Dot, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Dot.CATEGORY;\n      }\n    }, {\n      key: 'setNote',\n      value: function setNote(note) {\n        this.note = note;\n\n        if (this.note.getCategory() === 'gracenotes') {\n          this.radius *= 0.50;\n          this.setWidth(3);\n        }\n      }\n    }, {\n      key: 'setDotShiftY',\n      value: function setDotShiftY(y) {\n        this.dot_shiftY = y;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw dot without a context.\");\n        if (!(this.note && this.index != null)) throw new Vex$1.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n\n        var line_space = this.note.stave.options.spacing_between_lines_px;\n\n        var start = this.note.getModifierStartXY(this.position, this.index);\n\n        // Set the starting y coordinate to the base of the stem for TabNotes\n        if (this.note.getCategory() === 'tabnotes') {\n          start.y = this.note.getStemExtents().baseY;\n        }\n\n        var dot_x = start.x + this.x_shift + this.width - this.radius;\n        var dot_y = start.y + this.y_shift + this.dot_shiftY * line_space;\n        var ctx = this.context;\n\n        ctx.beginPath();\n        ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n    }]);\n    return Dot;\n  }(Modifier);\n\n  // To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n  function L$2() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (StaveNote.DEBUG) Vex$1.L('Vex.Flow.StaveNote', args);\n  }\n\n  // Helper methods for rest positioning in ModifierContext.\n  function shiftRestVertical(rest, note, dir) {\n    var delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n  }\n\n  // Called from formatNotes :: center a rest between two notes\n  function centerRest(rest, noteU, noteL) {\n    var delta = rest.line - Vex$1.MidLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n  }\n\n  var StaveNote = function (_StemmableNote) {\n    inherits(StaveNote, _StemmableNote);\n    createClass(StaveNote, null, [{\n      key: 'format',\n\n\n      // ## Static Methods\n      //\n      // Format notes inside a ModifierContext.\n      value: function format(notes, state) {\n        if (!notes || notes.length < 2) return false;\n\n        if (notes[0].getStave() != null) return StaveNote.formatByY(notes, state);\n\n        var notesList = [];\n\n        for (var i = 0; i < notes.length; i++) {\n          var props = notes[i].getKeyProps();\n          var line = props[0].line;\n          var minL = props[props.length - 1].line;\n          var stemDirection = notes[i].getStemDirection();\n          var stemMax = notes[i].getStemLength() / 10;\n          var stemMin = notes[i].getStemMinumumLength() / 10;\n\n          var maxL = void 0;\n          if (notes[i].isRest()) {\n            maxL = line + notes[i].glyph.line_above;\n            minL = line - notes[i].glyph.line_below;\n          } else {\n            maxL = stemDirection === 1 ? props[props.length - 1].line + stemMax : props[props.length - 1].line;\n\n            minL = stemDirection === 1 ? props[0].line : props[0].line - stemMax;\n          }\n\n          notesList.push({\n            line: props[0].line, // note/rest base line\n            maxLine: maxL, // note/rest upper bounds line\n            minLine: minL, // note/rest lower bounds line\n            isrest: notes[i].isRest(),\n            stemDirection: stemDirection,\n            stemMax: stemMax, // Maximum (default) note stem length;\n            stemMin: stemMin, // minimum note stem length\n            voice_shift: notes[i].getVoiceShiftWidth(),\n            is_displaced: notes[i].isDisplaced(), // note manually displaced\n            note: notes[i]\n          });\n        }\n\n        var voices = notesList.length;\n\n        var noteU = notesList[0];\n        var noteM = voices > 2 ? notesList[1] : null;\n        var noteL = voices > 2 ? notesList[2] : notesList[1];\n\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n          noteU = notesList[1];\n          noteL = notesList[0];\n        }\n\n        var voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        var xShift = 0;\n        var stemDelta = void 0;\n\n        // Test for two voice note intersection\n        if (voices === 2) {\n          var lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n          // if top voice is a middle voice, check stem intersection with lower voice\n          if (noteU.stemDirection === noteL.stemDirection && noteU.minLine <= noteL.maxLine) {\n            if (!noteU.isrest) {\n              stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n              stemDelta = Math.max(stemDelta, noteU.stemMin);\n              noteU.minLine = noteU.line - stemDelta;\n              noteU.note.setStemLength(stemDelta * 10);\n            }\n          }\n          if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n            if (noteU.isrest) {\n              // shift rest up\n              shiftRestVertical(noteU, noteL, 1);\n            } else if (noteL.isrest) {\n              // shift rest down\n              shiftRestVertical(noteL, noteU, -1);\n            } else {\n              xShift = voiceXShift;\n              if (noteU.stemDirection === noteL.stemDirection) {\n                // upper voice is middle voice, so shift it right\n                noteU.note.setXShift(xShift + 3);\n              } else {\n                // shift lower voice right\n                noteL.note.setXShift(xShift);\n              }\n            }\n          }\n\n          // format complete\n          return true;\n        }\n\n        // Check middle voice stem intersection with lower voice\n        if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n          if (!noteM.isrest) {\n            stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n            stemDelta = Math.max(stemDelta, noteM.stemMin);\n            noteM.minLine = noteM.line - stemDelta;\n            noteM.note.setStemLength(stemDelta * 10);\n          }\n        }\n\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n          if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n            var restHeight = noteM.maxLine - noteM.minLine;\n            var space = noteU.minLine - noteL.maxLine;\n            if (restHeight < space) {\n              // center middle voice rest between the upper and lower voices\n              centerRest(noteM, noteU, noteL);\n            } else {\n              xShift = voiceXShift + 3; // shift middle rest right\n              noteM.note.setXShift(xShift);\n            }\n            // format complete\n            return true;\n          }\n        }\n\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n          // Shift upper voice rest up\n          shiftRestVertical(noteU, noteM, 1);\n          // Shift lower voice rest down\n          shiftRestVertical(noteL, noteM, -1);\n          // format complete\n          return true;\n        }\n\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n          // Shift middle voice rest up\n          shiftRestVertical(noteM, noteL, 1);\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n          // Shift middle voice rest down\n          shiftRestVertical(noteM, noteU, -1);\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n          // shift upper voice rest up;\n          shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n          // shift lower voice rest down\n          shiftRestVertical(noteL, noteM, -1);\n        }\n\n        // If middle voice intersects upper or lower voice\n        if (!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5 || !noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine) {\n          xShift = voiceXShift + 3; // shift middle note right\n          noteM.note.setXShift(xShift);\n        }\n\n        return true;\n      }\n    }, {\n      key: 'formatByY',\n      value: function formatByY(notes, state) {\n        // NOTE: this function does not support more than two voices per stave\n        // use with care.\n        var hasStave = true;\n\n        for (var i = 0; i < notes.length; i++) {\n          hasStave = hasStave && notes[i].getStave() != null;\n        }\n\n        if (!hasStave) {\n          throw new Vex$1.RERR('Stave Missing', 'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!');\n        }\n\n        var xShift = 0;\n\n        for (var _i = 0; _i < notes.length - 1; _i++) {\n          var topNote = notes[_i];\n          var bottomNote = notes[_i + 1];\n\n          if (topNote.getStemDirection() === Stem.DOWN) {\n            topNote = notes[_i + 1];\n            bottomNote = notes[_i];\n          }\n\n          var topKeys = topNote.getKeyProps();\n          var bottomKeys = bottomNote.getKeyProps();\n\n          var topY = topNote.getStave().getYForLine(topKeys[0].line);\n          var bottomY = bottomNote.getStave().getYForLine(bottomKeys[bottomKeys.length - 1].line);\n\n          var lineSpace = topNote.getStave().options.spacing_between_lines_px;\n          if (Math.abs(topY - bottomY) === lineSpace / 2) {\n            xShift = topNote.getVoiceShiftWidth();\n            bottomNote.setXShift(xShift);\n          }\n        }\n\n        state.right_shift += xShift;\n      }\n    }, {\n      key: 'postFormat',\n      value: function postFormat(notes) {\n        if (!notes) return false;\n\n        notes.forEach(function (note) {\n          return note.postFormat();\n        });\n\n        return true;\n      }\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'stavenotes';\n      }\n    }, {\n      key: 'STEM_UP',\n      get: function get() {\n        return Stem.UP;\n      }\n    }, {\n      key: 'STEM_DOWN',\n      get: function get() {\n        return Stem.DOWN;\n      }\n    }]);\n\n    function StaveNote(noteStruct) {\n      classCallCheck(this, StaveNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(StaveNote).call(this, noteStruct));\n\n      _this.keys = noteStruct.keys;\n      _this.clef = noteStruct.clef;\n      _this.octave_shift = noteStruct.octave_shift;\n      _this.beam = null;\n\n      // Pull note rendering properties\n      _this.glyph = Flow.durationToGlyph(_this.duration, _this.noteType);\n\n      if (!_this.glyph) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Invalid note initialization data (No glyph found): ' + JSON.stringify(noteStruct));\n      }\n\n      // if true, displace note to right\n      _this.displaced = false;\n      _this.dot_shiftY = 0;\n      // per-pitch properties\n      _this.keyProps = [];\n      // for displaced ledger lines\n      _this.use_default_head_x = false;\n\n      // Drawing\n      _this.note_heads = [];\n      _this.modifiers = [];\n\n      Vex$1.Merge(_this.render_options, {\n        // font size for note heads and rests\n        glyph_font_scale: 35,\n        // number of stroke px to the left and right of head\n        stroke_px: 3\n      });\n\n      _this.calculateKeyProps();\n\n      _this.buildStem();\n\n      // Set the stem direction\n      if (noteStruct.auto_stem) {\n        _this.autoStem();\n      } else {\n        _this.setStemDirection(noteStruct.stem_direction);\n      }\n\n      _this.buildNoteHeads();\n\n      // Calculate left/right padding\n      _this.calcExtraPx();\n      return _this;\n    }\n\n    createClass(StaveNote, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return StaveNote.CATEGORY;\n      }\n\n      // Builds a `Stem` for the note\n\n    }, {\n      key: 'buildStem',\n      value: function buildStem() {\n        var glyph = this.getGlyph();\n        var yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n        var stem = new Stem({ yExtend: yExtend });\n\n        if (this.isRest()) {\n          stem.hide = true;\n        }\n\n        this.setStem(stem);\n      }\n\n      // Builds a `NoteHead` for each key in the note\n\n    }, {\n      key: 'buildNoteHeads',\n      value: function buildNoteHeads() {\n        var stemDirection = this.getStemDirection();\n        var keys = this.getKeys();\n\n        var lastLine = null;\n        var lineDiff = null;\n        var displaced = false;\n\n        // Draw notes from bottom to top.\n\n        // For down-stem notes, we draw from top to bottom.\n        var start = void 0;\n        var end = void 0;\n        var step = void 0;\n        if (stemDirection === Stem.UP) {\n          start = 0;\n          end = keys.length;\n          step = 1;\n        } else if (stemDirection === Stem.DOWN) {\n          start = keys.length - 1;\n          end = -1;\n          step = -1;\n        }\n\n        for (var i = start; i !== end; i += step) {\n          var noteProps = this.keyProps[i];\n          var line = noteProps.line;\n\n          // Keep track of last line with a note head, so that consecutive heads\n          // are correctly displaced.\n          if (lastLine === null) {\n            lastLine = line;\n          } else {\n            lineDiff = Math.abs(lastLine - line);\n            if (lineDiff === 0 || lineDiff === 0.5) {\n              displaced = !displaced;\n            } else {\n              displaced = false;\n              this.use_default_head_x = true;\n            }\n          }\n          lastLine = line;\n\n          var notehead = new NoteHead({\n            duration: this.duration,\n            note_type: this.noteType,\n            displaced: displaced,\n            stem_direction: stemDirection,\n            custom_glyph_code: noteProps.code,\n            glyph_font_scale: this.render_options.glyph_font_scale,\n            x_shift: noteProps.shift_right,\n            line: noteProps.line\n          });\n\n          this.note_heads[i] = notehead;\n        }\n      }\n\n      // Automatically sets the stem direction based on the keys in the note\n\n    }, {\n      key: 'autoStem',\n      value: function autoStem() {\n        // Figure out optimal stem direction based on given notes\n        this.minLine = this.keyProps[0].line;\n        this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n        var MIDDLE_LINE = 3;\n        var decider = (this.minLine + this.maxLine) / 2;\n        var stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n        this.setStemDirection(stemDirection);\n      }\n\n      // Calculates and stores the properties for each key in the note\n\n    }, {\n      key: 'calculateKeyProps',\n      value: function calculateKeyProps() {\n        var lastLine = null;\n        for (var i = 0; i < this.keys.length; ++i) {\n          var key = this.keys[i];\n\n          // All rests use the same position on the line.\n          // if (this.glyph.rest) key = this.glyph.position;\n          if (this.glyph.rest) this.glyph.position = key;\n\n          var options = { octave_shift: this.octave_shift || 0 };\n          var props = Flow.keyProperties(key, this.clef, options);\n\n          if (!props) {\n            throw new Vex$1.RuntimeError('BadArguments', 'Invalid key for note properties: ' + key);\n          }\n\n          // Override line placement for default rests\n          if (props.key === 'R') {\n            if (this.duration === '1' || this.duration === 'w') {\n              props.line = 4;\n            } else {\n              props.line = 3;\n            }\n          }\n\n          // Calculate displacement of this note\n          var line = props.line;\n          if (lastLine === null) {\n            lastLine = line;\n          } else {\n            if (Math.abs(lastLine - line) === 0.5) {\n              this.displaced = true;\n              props.displaced = true;\n\n              // Have to mark the previous note as\n              // displaced as well, for modifier placement\n              if (this.keyProps.length > 0) {\n                this.keyProps[i - 1].displaced = true;\n              }\n            }\n          }\n\n          lastLine = line;\n          this.keyProps.push(props);\n        }\n\n        // Sort the notes from lowest line to highest line\n        lastLine = -1000;\n        this.keyProps.forEach(function (key) {\n          if (key.line < lastLine) {\n            Vex$1.W('Unsorted keys in note will be sorted. ' + 'See https://github.com/0xfe/vexflow/issues/104 for details.');\n          }\n          lastLine = key.line;\n        });\n        this.keyProps.sort(function (a, b) {\n          return a.line - b.line;\n        });\n      }\n\n      // Get the `BoundingBox` for the entire note\n\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        if (!this.preFormatted) {\n          throw new Vex$1.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n\n        var _getMetrics = this.getMetrics();\n\n        var w = _getMetrics.width;\n        var modLeftPx = _getMetrics.modLeftPx;\n        var extraLeftPx = _getMetrics.extraLeftPx;\n\n        var x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n        var minY = 0;\n        var maxY = 0;\n        var halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n        var lineSpacing = halfLineSpacing * 2;\n\n        if (this.isRest()) {\n          var y = this.ys[0];\n          var frac = Flow.durationToFraction(this.duration);\n          if (frac.equals(1) || frac.equals(2)) {\n            minY = y - halfLineSpacing;\n            maxY = y + halfLineSpacing;\n          } else {\n            minY = y - this.glyph.line_above * lineSpacing;\n            maxY = y + this.glyph.line_below * lineSpacing;\n          }\n        } else if (this.glyph.stem) {\n          var ys = this.getStemExtents();\n          ys.baseY += halfLineSpacing * this.stem_direction;\n          minY = Vex$1.Min(ys.topY, ys.baseY);\n          maxY = Vex$1.Max(ys.topY, ys.baseY);\n        } else {\n          minY = null;\n          maxY = null;\n\n          for (var i = 0; i < this.ys.length; ++i) {\n            var yy = this.ys[i];\n            if (i === 0) {\n              minY = yy;\n              maxY = yy;\n            } else {\n              minY = Vex$1.Min(yy, minY);\n              maxY = Vex$1.Max(yy, maxY);\n            }\n          }\n          minY -= halfLineSpacing;\n          maxY += halfLineSpacing;\n        }\n\n        return new BoundingBox(x, minY, w, maxY - minY);\n      }\n\n      // Gets the line number of the top or bottom note in the chord.\n      // If `isTopNote` is `true` then get the top note\n\n    }, {\n      key: 'getLineNumber',\n      value: function getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n          throw new Vex$1.RERR('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n\n        var resultLine = this.keyProps[0].line;\n\n        // No precondition assumed for sortedness of keyProps array\n        for (var i = 0; i < this.keyProps.length; i++) {\n          var thisLine = this.keyProps[i].line;\n          if (isTopNote) {\n            if (thisLine > resultLine) resultLine = thisLine;\n          } else {\n            if (thisLine < resultLine) resultLine = thisLine;\n          }\n        }\n\n        return resultLine;\n      }\n\n      // Determine if current note is a rest\n\n    }, {\n      key: 'isRest',\n      value: function isRest() {\n        return this.glyph.rest;\n      }\n\n      // Determine if the current note is a chord\n\n    }, {\n      key: 'isChord',\n      value: function isChord() {\n        return !this.isRest() && this.keys.length > 1;\n      }\n\n      // Determine if the `StaveNote` has a stem\n\n    }, {\n      key: 'hasStem',\n      value: function hasStem() {\n        return this.glyph.stem;\n      }\n\n      // Get the `y` coordinate for text placed on the top/bottom of a\n      // note at a desired `text_line`\n\n    }, {\n      key: 'getYForTopText',\n      value: function getYForTopText(textLine) {\n        var extents = this.getStemExtents();\n        return Math.min(this.stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n      }\n    }, {\n      key: 'getYForBottomText',\n      value: function getYForBottomText(textLine) {\n        var extents = this.getStemExtents();\n        return Math.max(this.stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n      }\n\n      // Sets the current note to the provided `stave`. This applies\n      // `y` values to the `NoteHeads`.\n\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        get(Object.getPrototypeOf(StaveNote.prototype), 'setStave', this).call(this, stave);\n\n        var ys = this.note_heads.map(function (notehead) {\n          notehead.setStave(stave);\n          return notehead.getY();\n        });\n\n        this.setYs(ys);\n\n        if (this.hasStem()) {\n          var _getNoteHeadBounds = this.getNoteHeadBounds();\n\n          var y_top = _getNoteHeadBounds.y_top;\n          var y_bottom = _getNoteHeadBounds.y_bottom;\n\n          this.stem.setYBounds(y_top, y_bottom);\n        }\n\n        return this;\n      }\n\n      // Get the pitches in the note\n\n    }, {\n      key: 'getKeys',\n      value: function getKeys() {\n        return this.keys;\n      }\n\n      // Get the properties for all the keys in the note\n\n    }, {\n      key: 'getKeyProps',\n      value: function getKeyProps() {\n        return this.keyProps;\n      }\n\n      // Check if note is shifted to the right\n\n    }, {\n      key: 'isDisplaced',\n      value: function isDisplaced() {\n        return this.displaced;\n      }\n\n      // Sets whether shift note to the right. `displaced` is a `boolean`\n\n    }, {\n      key: 'setNoteDisplaced',\n      value: function setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n      }\n\n      // Get the starting `x` coordinate for a `StaveTie`\n\n    }, {\n      key: 'getTieRightX',\n      value: function getTieRightX() {\n        var tieStartX = this.getAbsoluteX();\n        tieStartX += this.glyph.head_width + this.x_shift + this.extraRightPx;\n        if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n        return tieStartX;\n      }\n\n      // Get the ending `x` coordinate for a `StaveTie`\n\n    }, {\n      key: 'getTieLeftX',\n      value: function getTieLeftX() {\n        var tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.extraLeftPx;\n        return tieEndX;\n      }\n\n      // Get the stave line on which to place a rest\n\n    }, {\n      key: 'getLineForRest',\n      value: function getLineForRest() {\n        var restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n          var lastLine = this.keyProps[this.keyProps.length - 1].line;\n          var top = Math.max(restLine, lastLine);\n          var bot = Math.min(restLine, lastLine);\n          restLine = Vex$1.MidLine(top, bot);\n        }\n\n        return restLine;\n      }\n\n      // Get the default `x` and `y` coordinates for the provided `position`\n      // and key `index`\n\n    }, {\n      key: 'getModifierStartXY',\n      value: function getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n          throw new Vex$1.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n\n        if (this.ys.length === 0) {\n          throw new Vex$1.RERR('NoYValues', 'No Y-Values calculated for this note.');\n        }\n\n        var x = 0;\n        if (position === Modifier.Position.LEFT) {\n          // extra_left_px\n          x = -1 * 2;\n        } else if (position === Modifier.Position.RIGHT) {\n          // extra_right_px\n          x = this.glyph.head_width + this.x_shift + 2;\n        } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n          x = this.glyph.head_width / 2;\n        }\n\n        return { x: this.getAbsoluteX() + x, y: this.ys[index] };\n      }\n\n      // Sets the style of the complete StaveNote, including all keys\n      // and the stem.\n\n    }, {\n      key: 'setStyle',\n      value: function setStyle(style) {\n        this.note_heads.forEach(function (notehead) {\n          notehead.setStyle(style);\n        }, this);\n        this.stem.setStyle(style);\n      }\n\n      // Sets the notehead at `index` to the provided coloring `style`.\n      //\n      // `style` is an `object` with the following properties: `shadowColor`,\n      // `shadowBlur`, `fillStyle`, `strokeStyle`\n\n    }, {\n      key: 'setKeyStyle',\n      value: function setKeyStyle(index, style) {\n        this.note_heads[index].setStyle(style);\n        return this;\n      }\n    }, {\n      key: 'setKeyLine',\n      value: function setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.note_heads[index].setLine(line);\n        return this;\n      }\n    }, {\n      key: 'getKeyLine',\n      value: function getKeyLine(index) {\n        return this.keyProps[index].line;\n      }\n\n      // Add self to modifier context. `mContext` is the `ModifierContext`\n      // to be added to.\n\n    }, {\n      key: 'addToModifierContext',\n      value: function addToModifierContext(mContext) {\n        this.setModifierContext(mContext);\n        for (var i = 0; i < this.modifiers.length; ++i) {\n          this.modifierContext.addModifier(this.modifiers[i]);\n        }\n        this.modifierContext.addModifier(this);\n        this.setPreFormatted(false);\n        return this;\n      }\n\n      // Generic function to add modifiers to a note\n      //\n      // Parameters:\n      // * `index`: The index of the key that we're modifying\n      // * `modifier`: The modifier to add\n\n    }, {\n      key: 'addModifier',\n      value: function addModifier(index, modifier) {\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        this.modifiers.push(modifier);\n        this.setPreFormatted(false);\n        return this;\n      }\n\n      // Helper function to add an accidental to a key\n\n    }, {\n      key: 'addAccidental',\n      value: function addAccidental(index, accidental) {\n        return this.addModifier(index, accidental);\n      }\n\n      // Helper function to add an articulation to a key\n\n    }, {\n      key: 'addArticulation',\n      value: function addArticulation(index, articulation) {\n        return this.addModifier(index, articulation);\n      }\n\n      // Helper function to add an annotation to a key\n\n    }, {\n      key: 'addAnnotation',\n      value: function addAnnotation(index, annotation) {\n        return this.addModifier(index, annotation);\n      }\n\n      // Helper function to add a dot on a specific key\n\n    }, {\n      key: 'addDot',\n      value: function addDot(index) {\n        var dot = new Dot();\n        dot.setDotShiftY(this.glyph.dot_shiftY);\n        this.dots++;\n        return this.addModifier(index, dot);\n      }\n\n      // Convenience method to add dot to all keys in note\n\n    }, {\n      key: 'addDotToAll',\n      value: function addDotToAll() {\n        for (var i = 0; i < this.keys.length; ++i) {\n          this.addDot(i);\n        }\n        return this;\n      }\n\n      // Get all accidentals in the `ModifierContext`\n\n    }, {\n      key: 'getAccidentals',\n      value: function getAccidentals() {\n        return this.modifierContext.getModifiers('accidentals');\n      }\n\n      // Get all dots in the `ModifierContext`\n\n    }, {\n      key: 'getDots',\n      value: function getDots() {\n        return this.modifierContext.getModifiers('dots');\n      }\n\n      // Get the width of the note if it is displaced. Used for `Voice`\n      // formatting\n\n    }, {\n      key: 'getVoiceShiftWidth',\n      value: function getVoiceShiftWidth() {\n        // TODO: may need to accomodate for dot here.\n        return this.glyph.head_width * (this.displaced ? 2 : 1);\n      }\n\n      // Calculates and sets the extra pixels to the left or right\n      // if the note is displaced.\n\n    }, {\n      key: 'calcExtraPx',\n      value: function calcExtraPx() {\n        this.setExtraLeftPx(this.displaced && this.stem_direction === Stem.DOWN ? this.glyph.head_width : 0);\n\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setExtraRightPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.glyph.head_width : 0);\n      }\n\n      // Pre-render formatting\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return;\n        if (this.modifierContext) this.modifierContext.preFormat();\n\n        var width = this.glyph.head_width + this.extraLeftPx + this.extraRightPx;\n\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n          width += this.glyph.head_width;\n        }\n\n        this.setWidth(width);\n        this.setPreFormatted(true);\n      }\n\n      // Gets the staff line and y value for the highest and lowest noteheads\n\n    }, {\n      key: 'getNoteHeadBounds',\n      value: function getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        var yTop = null;\n        var yBottom = null;\n\n        var highestLine = this.stave.getNumLines();\n        var lowestLine = 1;\n\n        this.note_heads.forEach(function (notehead) {\n          var line = notehead.getLine();\n          var y = notehead.getY();\n\n          if (yTop === null || y < yTop) {\n            yTop = y;\n          }\n\n          if (yBottom === null || y > yBottom) {\n            yBottom = y;\n          }\n\n          highestLine = line > highestLine ? line : highestLine;\n          lowestLine = line < lowestLine ? line : lowestLine;\n        }, this);\n\n        return {\n          y_top: yTop,\n          y_bottom: yBottom,\n          highest_line: highestLine,\n          lowest_line: lowestLine\n        };\n      }\n\n      // Get the starting `x` coordinate for the noteheads\n\n    }, {\n      key: 'getNoteHeadBeginX',\n      value: function getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n      }\n\n      // Get the ending `x` coordinate for the noteheads\n\n    }, {\n      key: 'getNoteHeadEndX',\n      value: function getNoteHeadEndX() {\n        var xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.glyph.head_width - Flow.STEM_WIDTH / 2;\n      }\n\n      // Draw the ledger lines between the stave and the highest/lowest keys\n\n    }, {\n      key: 'drawLedgerLines',\n      value: function drawLedgerLines() {\n        var _this2 = this;\n\n        var note_heads = this.note_heads;\n        var stave = this.stave;\n        var use_default_head_x = this.use_default_head_x;\n        var x_shift = this.x_shift;\n        var glyph = this.glyph;\n        var stroke_px = this.render_options.stroke_px;\n        var ctx = this.context;\n\n\n        if (this.isRest()) return;\n        if (!ctx) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n\n        var _getNoteHeadBounds2 = this.getNoteHeadBounds();\n\n        var highest_line = _getNoteHeadBounds2.highest_line;\n        var lowest_line = _getNoteHeadBounds2.lowest_line;\n\n        var headX = note_heads[0].getAbsoluteX();\n\n        var drawLedgerLine = function drawLedgerLine(y) {\n          if (use_default_head_x === true) {\n            headX = _this2.getAbsoluteX() + x_shift;\n          }\n          var x = headX - stroke_px;\n          var length = headX + glyph.head_width - headX + stroke_px * 2;\n\n          ctx.fillRect(x, y, length, 1);\n        };\n\n        for (var line = 6; line <= highest_line; ++line) {\n          drawLedgerLine(stave.getYForNote(line));\n        }\n\n        for (var _line = 0; _line >= lowest_line; --_line) {\n          drawLedgerLine(stave.getYForNote(_line));\n        }\n      }\n\n      // Draw all key modifiers\n\n    }, {\n      key: 'drawModifiers',\n      value: function drawModifiers() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n\n        var ctx = this.context;\n        ctx.openGroup('modifiers');\n        for (var i = 0; i < this.modifiers.length; i++) {\n          var modifier = this.modifiers[i];\n          var notehead = this.note_heads[modifier.getIndex()];\n          var noteheadStyle = notehead.getStyle();\n          if (noteheadStyle) {\n            ctx.save();\n            notehead.applyStyle(ctx);\n          }\n          modifier.setContext(ctx);\n          modifier.draw();\n          if (noteheadStyle) {\n            ctx.restore();\n          }\n        }\n        ctx.closeGroup();\n      }\n\n      // Draw the flag for the note\n\n    }, {\n      key: 'drawFlag',\n      value: function drawFlag() {\n        var stem = this.stem;\n        var beam = this.beam;\n        var ctx = this.context;\n        var glyph_font_scale = this.render_options.glyph_font_scale;\n\n\n        if (!ctx) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n\n        var shouldRenderFlag = beam === null;\n        var glyph = this.getGlyph();\n\n        if (glyph.flag && shouldRenderFlag) {\n          var flagX = void 0;\n          var flagY = void 0;\n          var flagCode = void 0;\n\n          var xBegin = this.getNoteHeadBeginX();\n          var xEnd = this.getNoteHeadEndX();\n\n          var _getNoteHeadBounds3 = this.getNoteHeadBounds();\n\n          var y_top = _getNoteHeadBounds3.y_top;\n          var y_bottom = _getNoteHeadBounds3.y_bottom;\n\n          var noteStemHeight = stem.getHeight();\n          if (this.getStemDirection() === Stem.DOWN) {\n            // Down stems have flags on the left.\n            flagX = xBegin + 1;\n            flagY = y_top - noteStemHeight + 2;\n            flagCode = glyph.code_flag_downstem;\n          } else {\n            // Up stems have flags on the left.\n            flagX = xEnd + 1;\n            flagY = y_bottom - noteStemHeight - 2;\n            flagCode = glyph.code_flag_upstem;\n          }\n\n          // Draw the Flag\n          ctx.openGroup('flag', null, { pointerBBox: true });\n          Glyph.renderGlyph(ctx, flagX, flagY, glyph_font_scale, flagCode);\n          ctx.closeGroup();\n        }\n      }\n\n      // Draw the NoteHeads\n\n    }, {\n      key: 'drawNoteHeads',\n      value: function drawNoteHeads() {\n        var _this3 = this;\n\n        this.note_heads.forEach(function (notehead) {\n          _this3.context.openGroup('notehead', null, { pointerBBox: true });\n          notehead.setContext(_this3.context).draw();\n          _this3.context.closeGroup();\n        });\n      }\n\n      // Render the stem onto the canvas\n\n    }, {\n      key: 'drawStem',\n      value: function drawStem(stemStruct) {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n\n        if (stemStruct) {\n          this.setStem(new Stem(stemStruct));\n        }\n\n        this.context.openGroup('stem', null, { pointerBBox: true });\n        this.stem.setContext(this.context).draw();\n        this.context.closeGroup();\n      }\n\n      // Draws all the `StaveNote` parts. This is the main drawing method.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (!this.stave) {\n          throw new Vex$1.RERR('NoStave', \"Can't draw without a stave.\");\n        }\n        if (this.ys.length === 0) {\n          throw new Vex$1.RERR('NoYValues', \"Can't draw note without Y values.\");\n        }\n\n        var xBegin = this.getNoteHeadBeginX();\n        var xEnd = this.getNoteHeadEndX();\n        var shouldRenderStem = this.hasStem() && !this.beam;\n\n        // Format note head x positions\n        this.note_heads.forEach(function (notehead) {\n          return notehead.setX(xBegin);\n        });\n\n        // Format stem x positions\n        this.stem.setNoteHeadXBounds(xBegin, xEnd);\n\n        L$2('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n        // Draw each part of the note\n        this.drawLedgerLines();\n\n        this.elem = this.context.openGroup('stavenote', this.id);\n        this.context.openGroup('note', null, { pointerBBox: true });\n        if (shouldRenderStem) this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        this.context.closeGroup();\n        this.drawModifiers();\n        this.context.closeGroup();\n      }\n    }]);\n    return StaveNote;\n  }(StemmableNote);\n\n  /**\r\n   * @constructor\r\n   */\n  var FretHandFinger = function (_Modifier) {\n    inherits(FretHandFinger, _Modifier);\n    createClass(FretHandFinger, null, [{\n      key: 'format',\n\n\n      // Arrange fingerings inside a ModifierContext.\n      value: function format(nums, state) {\n        var left_shift = state.left_shift;\n        var right_shift = state.right_shift;\n        var num_spacing = 1;\n\n        if (!nums || nums.length === 0) return false;\n\n        var nums_list = [];\n        var prev_note = null;\n        var shift_left = 0;\n        var shift_right = 0;\n\n        var i = void 0,\n            num = void 0,\n            note = void 0,\n            pos = void 0,\n            props_tmp = void 0;\n        for (i = 0; i < nums.length; ++i) {\n          num = nums[i];\n          note = num.getNote();\n          pos = num.getPosition();\n          var props = note.getKeyProps()[num.getIndex()];\n          if (note != prev_note) {\n            for (var n = 0; n < note.keys.length; ++n) {\n              props_tmp = note.getKeyProps()[n];\n              if (left_shift === 0) shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n              if (right_shift === 0) shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n            }\n            prev_note = note;\n          }\n\n          nums_list.push({ line: props.line, pos: pos, shiftL: shift_left, shiftR: shift_right, note: note, num: num });\n        }\n\n        // Sort fingernumbers by line number.\n        nums_list.sort(function (a, b) {\n          return b.line - a.line;\n        });\n\n        var num_shiftL = 0;\n        var num_shiftR = 0;\n        var x_widthL = 0;\n        var x_widthR = 0;\n        var last_line = null;\n        var last_note = null;\n\n        for (i = 0; i < nums_list.length; ++i) {\n          var num_shift = 0;\n          note = nums_list[i].note;\n          pos = nums_list[i].pos;\n          num = nums_list[i].num;\n          var line = nums_list[i].line;\n          var shiftL = nums_list[i].shiftL;\n          var shiftR = nums_list[i].shiftR;\n\n          // Reset the position of the string number every line.\n          if (line != last_line || note != last_note) {\n            num_shiftL = left_shift + shiftL;\n            num_shiftR = right_shift + shiftR;\n          }\n\n          var num_width = num.getWidth() + num_spacing;\n          if (pos == Modifier.Position.LEFT) {\n            num.setXShift(left_shift + num_shiftL);\n            num_shift = left_shift + num_width; // spacing\n            x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n          } else if (pos == Modifier.Position.RIGHT) {\n            num.setXShift(num_shiftR);\n            num_shift = shift_right + num_width; // spacing\n            x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n          }\n          last_line = line;\n          last_note = note;\n        }\n\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n      }\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'frethandfinger';\n      }\n    }]);\n\n    function FretHandFinger(number) {\n      classCallCheck(this, FretHandFinger);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(FretHandFinger).call(this));\n\n      _this.note = null;\n      _this.index = null;\n      _this.finger = number;\n      _this.width = 7;\n      _this.position = Modifier.Position.LEFT; // Default position above stem or note head\n      _this.x_shift = 0;\n      _this.y_shift = 0;\n      _this.x_offset = 0; // Horizontal offset from default\n      _this.y_offset = 0; // Vertical offset from default\n      _this.font = {\n        family: 'sans-serif',\n        size: 9,\n        weight: 'bold'\n      };\n      return _this;\n    }\n\n    createClass(FretHandFinger, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return FretHandFinger.CATEGORY;\n      }\n    }, {\n      key: 'getNote',\n      value: function getNote() {\n        return this.note;\n      }\n    }, {\n      key: 'setNote',\n      value: function setNote(note) {\n        this.note = note;return this;\n      }\n    }, {\n      key: 'getIndex',\n      value: function getIndex() {\n        return this.index;\n      }\n    }, {\n      key: 'setIndex',\n      value: function setIndex(index) {\n        this.index = index;return this;\n      }\n    }, {\n      key: 'getPosition',\n      value: function getPosition() {\n        return this.position;\n      }\n    }, {\n      key: 'setPosition',\n      value: function setPosition(position) {\n        if (position >= Modifier.Position.LEFT && position <= Modifier.Position.BELOW) this.position = position;\n        return this;\n      }\n    }, {\n      key: 'setFretHandFinger',\n      value: function setFretHandFinger(number) {\n        this.finger = number;return this;\n      }\n    }, {\n      key: 'setOffsetX',\n      value: function setOffsetX(x) {\n        this.x_offset = x;return this;\n      }\n    }, {\n      key: 'setOffsetY',\n      value: function setOffsetY(y) {\n        this.y_offset = y;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw string number without a context.\");\n        if (!(this.note && this.index != null)) throw new Vex$1.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n\n        var ctx = this.context;\n        var start = this.note.getModifierStartXY(this.position, this.index);\n        var dot_x = start.x + this.x_shift + this.x_offset;\n        var dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n        switch (this.position) {\n          case Modifier.Position.ABOVE:\n            dot_x -= 4;\n            dot_y -= 12;\n            break;\n          case Modifier.Position.BELOW:\n            dot_x -= 2;\n            dot_y += 10;\n            break;\n          case Modifier.Position.LEFT:\n            dot_x -= this.width;\n            break;\n          case Modifier.Position.RIGHT:\n            dot_x += 1;\n            break;\n        }\n\n        ctx.save();\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n\n        ctx.restore();\n      }\n    }]);\n    return FretHandFinger;\n  }(Modifier);\n\n  var Music = function () {\n    function Music() {\n      classCallCheck(this, Music);\n    }\n\n    createClass(Music, [{\n      key: 'isValidNoteValue',\n      value: function isValidNoteValue(note) {\n        if (note == null || note < 0 || note >= Music.NUM_TONES) return false;\n        return true;\n      }\n    }, {\n      key: 'isValidIntervalValue',\n      value: function isValidIntervalValue(interval) {\n        return this.isValidNoteValue(interval);\n      }\n    }, {\n      key: 'getNoteParts',\n      value: function getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) throw new Vex$1.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\n        if (noteString.length > 3) throw new Vex$1.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\n        var note = noteString.toLowerCase();\n\n        var regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        var match = regex.exec(note);\n\n        if (match != null) {\n          var root = match[1];\n          var accidental = match[2];\n\n          return {\n            root: root,\n            accidental: accidental\n          };\n        } else {\n          throw new Vex$1.RERR('BadArguments', 'Invalid note name: ' + noteString);\n        }\n      }\n    }, {\n      key: 'getKeyParts',\n      value: function getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) throw new Vex$1.RERR('BadArguments', 'Invalid key: ' + keyString);\n\n        var key = keyString.toLowerCase();\n\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        var regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        var match = regex.exec(key);\n\n        if (match != null) {\n          var root = match[1];\n          var accidental = match[2];\n          var type = match[3];\n\n          // Unspecified type implies major\n          if (!type) type = 'M';\n\n          return {\n            root: root,\n            accidental: accidental,\n            type: type\n          };\n        } else {\n          throw new Vex$1.RERR('BadArguments', 'Invalid key: ' + keyString);\n        }\n      }\n    }, {\n      key: 'getNoteValue',\n      value: function getNoteValue(noteString) {\n        var value = Music.noteValues[noteString];\n        if (value == null) throw new Vex$1.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\n        return value.int_val;\n      }\n    }, {\n      key: 'getIntervalValue',\n      value: function getIntervalValue(intervalString) {\n        var value = Music.intervals[intervalString];\n        if (value == null) throw new Vex$1.RERR('BadArguments', 'Invalid interval name: ' + intervalString);\n\n        return value;\n      }\n    }, {\n      key: 'getCanonicalNoteName',\n      value: function getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) throw new Vex$1.RERR('BadArguments', 'Invalid note value: ' + noteValue);\n\n        return Music.canonical_notes[noteValue];\n      }\n    }, {\n      key: 'getCanonicalIntervalName',\n      value: function getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) throw new Vex$1.RERR('BadArguments', 'Invalid interval value: ' + intervalValue);\n\n        return Music.diatonic_intervals[intervalValue];\n      }\n\n      /* Given a note, interval, and interval direction, product the\n       * relative note.\n       */\n\n    }, {\n      key: 'getRelativeNoteValue',\n      value: function getRelativeNoteValue(noteValue, intervalValue, direction) {\n        if (direction == null) direction = 1;\n        if (direction != 1 && direction != -1) throw new Vex$1.RERR('BadArguments', 'Invalid direction: ' + direction);\n\n        var sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0) sum += Music.NUM_TONES;\n\n        return sum;\n      }\n    }, {\n      key: 'getRelativeNoteName',\n      value: function getRelativeNoteName(root, noteValue) {\n        var parts = this.getNoteParts(root);\n        var rootValue = this.getNoteValue(parts.root);\n        var interval = noteValue - rootValue;\n\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n          var multiplier = 1;\n          if (interval > 0) multiplier = -1;\n\n          // Possibly wrap around. (Add +1 for modulo operator)\n          var reverse_interval = (noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES * multiplier;\n\n          if (Math.abs(reverse_interval) > 2) {\n            throw new Vex$1.RERR('BadArguments', 'Notes not related: ' + root + ', ' + noteValue);\n          } else {\n            interval = reverse_interval;\n          }\n        }\n\n        if (Math.abs(interval) > 2) throw new Vex$1.RERR('BadArguments', 'Notes not related: ' + root + ', ' + noteValue);\n\n        var relativeNoteName = parts.root;\n        var i = void 0;\n        if (interval > 0) {\n          for (i = 1; i <= interval; ++i) {\n            relativeNoteName += '#';\n          }\n        } else if (interval < 0) {\n          for (i = -1; i >= interval; --i) {\n            relativeNoteName += 'b';\n          }\n        }\n\n        return relativeNoteName;\n      }\n\n      /* Return scale tones, given intervals. Each successive interval is\n       * relative to the previous one, e.g., Major Scale:\n       *\n       *   TTSTTTS = [2,2,1,2,2,2,1]\n       *\n       * When used with key = 0, returns C scale (which is isomorphic to\n       * interval list).\n       */\n\n    }, {\n      key: 'getScaleTones',\n      value: function getScaleTones(key, intervals) {\n        var tones = [];\n        tones.push(key);\n\n        var nextNote = key;\n        for (var i = 0; i < intervals.length; ++i) {\n          nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n          if (nextNote != key) tones.push(nextNote);\n        }\n\n        return tones;\n      }\n\n      /* Returns the interval of a note, given a diatonic scale.\n       *\n       * E.g., Given the scale C, and the note E, returns M3\n       */\n\n    }, {\n      key: 'getIntervalBetween',\n      value: function getIntervalBetween(note1, note2, direction) {\n        if (direction == null) direction = 1;\n        if (direction != 1 && direction != -1) throw new Vex$1.RERR('BadArguments', 'Invalid direction: ' + direction);\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) throw new Vex$1.RERR('BadArguments', 'Invalid notes: ' + note1 + ', ' + note2);\n\n        var difference = void 0;\n        if (direction == 1) difference = note2 - note1;else difference = note1 - note2;\n\n        if (difference < 0) difference += Music.NUM_TONES;\n        return difference;\n      }\n\n      // Create a scale map that represents the pitch state for a\n      // `keySignature`. For example, passing a `G` to `keySignature` would\n      // return a scale map with every note naturalized except for `F` which\n      // has an `F#` state.\n\n    }, {\n      key: 'createScaleMap',\n      value: function createScaleMap(keySignature) {\n        var keySigParts = this.getKeyParts(keySignature);\n        var scaleName = Music.scaleTypes[keySigParts.type];\n\n        var keySigString = keySigParts.root;\n        if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n        if (!scaleName) throw new Vex$1.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n        var scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        var noteLocation = Music.root_indices[keySigParts.root];\n\n        var scaleMap = {};\n        for (var i = 0; i < Music.roots.length; ++i) {\n          var index = (noteLocation + i) % Music.roots.length;\n          var rootName = Music.roots[index];\n          var noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n          if (noteName.length === 1) {\n            noteName += 'n';\n          }\n\n          scaleMap[rootName] = noteName;\n        }\n\n        return scaleMap;\n      }\n    }], [{\n      key: 'NUM_TONES',\n      get: function get() {\n        return 12;\n      }\n    }, {\n      key: 'roots',\n      get: function get() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n      }\n    }, {\n      key: 'root_values',\n      get: function get() {\n        return [0, 2, 4, 5, 7, 9, 11];\n      }\n    }, {\n      key: 'root_indices',\n      get: function get() {\n        return {\n          'c': 0,\n          'd': 1,\n          'e': 2,\n          'f': 3,\n          'g': 4,\n          'a': 5,\n          'b': 6\n        };\n      }\n    }, {\n      key: 'canonical_notes',\n      get: function get() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n      }\n    }, {\n      key: 'diatonic_intervals',\n      get: function get() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n      }\n    }, {\n      key: 'diatonic_accidentals',\n      get: function get() {\n        return {\n          'unison': { note: 0, accidental: 0 },\n          'm2': { note: 1, accidental: -1 },\n          'M2': { note: 1, accidental: 0 },\n          'm3': { note: 2, accidental: -1 },\n          'M3': { note: 2, accidental: 0 },\n          'p4': { note: 3, accidental: 0 },\n          'dim5': { note: 4, accidental: -1 },\n          'p5': { note: 4, accidental: 0 },\n          'm6': { note: 5, accidental: -1 },\n          'M6': { note: 5, accidental: 0 },\n          'b7': { note: 6, accidental: -1 },\n          'M7': { note: 6, accidental: 0 },\n          'octave': { note: 7, accidental: 0 }\n        };\n      }\n    }, {\n      key: 'intervals',\n      get: function get() {\n        return {\n          'u': 0, 'unison': 0,\n          'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n          '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n          'm3': 3, 'b3': 3, 'min3': 3,\n          'M3': 4, '3': 4, 'maj3': 4,\n          '4': 5, 'p4': 5,\n          '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n          '5': 7, 'p5': 7,\n          '#5': 8, 'b6': 8, 'aug5': 8,\n          '6': 9, 'M6': 9, 'maj6': 9,\n          'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n          'M7': 11, 'maj7': 11,\n          '8': 12, 'octave': 12\n        };\n      }\n    }, {\n      key: 'scales',\n      get: function get() {\n        return {\n          major: [2, 2, 1, 2, 2, 2, 1],\n          dorian: [2, 1, 2, 2, 2, 1, 2],\n          mixolydian: [2, 2, 1, 2, 2, 1, 2],\n          minor: [2, 1, 2, 2, 1, 2, 2]\n        };\n      }\n    }, {\n      key: 'scaleTypes',\n      get: function get() {\n        return {\n          'M': Music.scales.major,\n          'm': Music.scales.minor\n        };\n      }\n    }, {\n      key: 'accidentals',\n      get: function get() {\n        return ['bb', 'b', 'n', '#', '##'];\n      }\n    }, {\n      key: 'noteValues',\n      get: function get() {\n        return {\n          'c': { root_index: 0, int_val: 0 },\n          'cn': { root_index: 0, int_val: 0 },\n          'c#': { root_index: 0, int_val: 1 },\n          'c##': { root_index: 0, int_val: 2 },\n          'cb': { root_index: 0, int_val: 11 },\n          'cbb': { root_index: 0, int_val: 10 },\n          'd': { root_index: 1, int_val: 2 },\n          'dn': { root_index: 1, int_val: 2 },\n          'd#': { root_index: 1, int_val: 3 },\n          'd##': { root_index: 1, int_val: 4 },\n          'db': { root_index: 1, int_val: 1 },\n          'dbb': { root_index: 1, int_val: 0 },\n          'e': { root_index: 2, int_val: 4 },\n          'en': { root_index: 2, int_val: 4 },\n          'e#': { root_index: 2, int_val: 5 },\n          'e##': { root_index: 2, int_val: 6 },\n          'eb': { root_index: 2, int_val: 3 },\n          'ebb': { root_index: 2, int_val: 2 },\n          'f': { root_index: 3, int_val: 5 },\n          'fn': { root_index: 3, int_val: 5 },\n          'f#': { root_index: 3, int_val: 6 },\n          'f##': { root_index: 3, int_val: 7 },\n          'fb': { root_index: 3, int_val: 4 },\n          'fbb': { root_index: 3, int_val: 3 },\n          'g': { root_index: 4, int_val: 7 },\n          'gn': { root_index: 4, int_val: 7 },\n          'g#': { root_index: 4, int_val: 8 },\n          'g##': { root_index: 4, int_val: 9 },\n          'gb': { root_index: 4, int_val: 6 },\n          'gbb': { root_index: 4, int_val: 5 },\n          'a': { root_index: 5, int_val: 9 },\n          'an': { root_index: 5, int_val: 9 },\n          'a#': { root_index: 5, int_val: 10 },\n          'a##': { root_index: 5, int_val: 11 },\n          'ab': { root_index: 5, int_val: 8 },\n          'abb': { root_index: 5, int_val: 7 },\n          'b': { root_index: 6, int_val: 11 },\n          'bn': { root_index: 6, int_val: 11 },\n          'b#': { root_index: 6, int_val: 0 },\n          'b##': { root_index: 6, int_val: 1 },\n          'bb': { root_index: 6, int_val: 10 },\n          'bbb': { root_index: 6, int_val: 9 }\n        };\n      }\n    }]);\n    return Music;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\n  function L$7() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (Accidental.DEBUG) Vex$1.L('Vex.Flow.Accidental', args);\n  }\n\n  // An `Accidental` inherits from `Modifier`, and is formatted within a\n  // `ModifierContext`.\n  var Accidental = function (_Modifier) {\n    inherits(Accidental, _Modifier);\n    createClass(Accidental, null, [{\n      key: 'format',\n\n\n      // Arrange accidentals inside a ModifierContext.\n      value: function format(accidentals, state) {\n        var _this2 = this;\n\n        var leftShift = state.left_shift;\n        var accidentalSpacing = 2;\n\n        // If there are no accidentals, we needn't format their positions\n        if (!accidentals || accidentals.length === 0) return;\n\n        var accList = [];\n        var prevNote = null;\n        var shiftL = 0;\n\n        // First determine the accidentals' Y positions from the note.keys\n        var propsTemp = void 0;\n        for (var i = 0; i < accidentals.length; ++i) {\n          var acc = accidentals[i];\n          var note = acc.getNote();\n          var stave = note.getStave();\n          var props = note.getKeyProps()[acc.getIndex()];\n          if (note !== prevNote) {\n            // Iterate through all notes to get the displaced pixels\n            for (var n = 0; n < note.keys.length; ++n) {\n              propsTemp = note.getKeyProps()[n];\n              shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n            }\n            prevNote = note;\n          }\n          if (stave !== null) {\n            var lineSpace = stave.options.spacing_between_lines_px;\n            var y = stave.getYForLine(props.line);\n            var accLine = Math.round(y / lineSpace * 2) / 2;\n            accList.push({ y: y, line: accLine, shift: shiftL, acc: acc, lineSpace: lineSpace });\n          } else {\n            accList.push({ line: props.line, shift: shiftL, acc: acc });\n          }\n        }\n\n        // Sort accidentals by line number.\n        accList.sort(function (a, b) {\n          return b.line - a.line;\n        });\n\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        var lineList = [];\n\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        var accShift = 0;\n        var previousLine = null;\n\n        // Create an array of unique line numbers (lineList) from accList\n        for (var _i = 0; _i < accList.length; _i++) {\n          var _acc = accList[_i];\n\n          // if this is the first line, or a new line, add a lineList\n          if (previousLine === null || previousLine !== _acc.line) {\n            lineList.push({\n              line: _acc.line,\n              flatLine: true,\n              dblSharpLine: true,\n              numAcc: 0,\n              width: 0\n            });\n          }\n          // if this accidental is not a flat, the accidental needs 3.0 lines lower\n          // clearance instead of 2.5 lines for b or bb.\n          // FIXME: Naming could use work. acc.acc is very awkward\n          if (_acc.acc.type !== 'b' && _acc.acc.type !== 'bb') {\n            lineList[lineList.length - 1].flatLine = false;\n          }\n\n          // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n          if (_acc.acc.type !== '##') {\n            lineList[lineList.length - 1].dblSharpLine = false;\n          }\n\n          // Track how many accidentals are on this line:\n          lineList[lineList.length - 1].numAcc++;\n\n          // Track the total x_offset needed for this line which will be needed\n          // for formatting lines w/ multiple accidentals:\n\n          // width = accidental width + universal spacing between accidentals\n          lineList[lineList.length - 1].width += _acc.acc.getWidth() + accidentalSpacing;\n\n          // if this accShift is larger, use it to keep first column accidentals in the same line\n          accShift = _acc.shift > accShift ? _acc.shift : accShift;\n\n          previousLine = _acc.line;\n        }\n\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Vex.Flow.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n\n        var totalColumns = 0;\n\n        // establish the boundaries for a group of notes with clashing accidentals:\n        var _loop = function _loop(_i3) {\n          var noFurtherConflicts = false;\n          var groupStart = _i3;\n          var groupEnd = _i3;\n\n          while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n            // if this note conflicts with the next:\n            if (_this2.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n              // include the next note in the group:\n              groupEnd++;\n            } else {\n              noFurtherConflicts = true;\n            }\n          }\n\n          // Gets an a line from the `lineList`, relative to the current group\n          var getGroupLine = function getGroupLine(index) {\n            return lineList[groupStart + index];\n          };\n          var getGroupLines = function getGroupLines(indexes) {\n            return indexes.map(getGroupLine);\n          };\n          var lineDifference = function lineDifference(indexA, indexB) {\n            var _getGroupLines$map = getGroupLines([indexA, indexB]).map(function (item) {\n              return item.line;\n            });\n\n            var _getGroupLines$map2 = slicedToArray(_getGroupLines$map, 2);\n\n            var a = _getGroupLines$map2[0];\n            var b = _getGroupLines$map2[1];\n\n            return a - b;\n          };\n\n          var notColliding = function notColliding() {\n            for (var _len2 = arguments.length, indexPairs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              indexPairs[_key2] = arguments[_key2];\n            }\n\n            return indexPairs.map(getGroupLines).every(function (lines) {\n              return !_this2.checkCollision.apply(_this2, toConsumableArray(lines));\n            });\n          };\n\n          // Set columns for the lines in this group:\n          var groupLength = groupEnd - groupStart + 1;\n\n          // Set the accidental column for each line of the group\n          var endCase = _this2.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n          switch (groupLength) {\n            case 3:\n              if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                endCase = 'second_on_bottom';\n              }\n              break;\n            case 4:\n              if (notColliding([0, 2], [1, 3])) {\n                endCase = 'spaced_out_tetrachord';\n              }\n              break;\n            case 5:\n              if (endCase === 'b' && notColliding([1, 3])) {\n                endCase = 'spaced_out_pentachord';\n                if (notColliding([0, 2], [2, 4])) {\n                  endCase = 'very_spaced_out_pentachord';\n                }\n              }\n              break;\n            case 6:\n              if (notColliding([0, 3], [1, 4], [2, 5])) {\n                endCase = 'spaced_out_hexachord';\n              }\n              if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                endCase = 'very_spaced_out_hexachord';\n              }\n              break;\n            default:\n              break;\n          }\n\n          var groupMember = void 0;\n          var column = void 0;\n          // If the group contains more than seven members, use ascending parallel lines\n          // of accidentals, using as few columns as possible while avoiding collisions.\n          if (groupLength >= 7) {\n            // First, determine how many columns to use:\n            var patternLength = 2;\n            var collisionDetected = true;\n            while (collisionDetected === true) {\n              collisionDetected = false;\n              for (var line = 0; line + patternLength < lineList.length; line++) {\n                if (_this2.checkCollision(lineList[line], lineList[line + patternLength])) {\n                  collisionDetected = true;\n                  patternLength++;\n                  break;\n                }\n              }\n            }\n            // Then, assign a column to each line of accidentals\n            for (groupMember = _i3; groupMember <= groupEnd; groupMember++) {\n              column = (groupMember - _i3) % patternLength + 1;\n              lineList[groupMember].column = column;\n              totalColumns = totalColumns > column ? totalColumns : column;\n            }\n\n            // Otherwise, if the group contains fewer than seven members, use the layouts from\n            // the accidentalsColumnsTable housed in tables.js.\n          } else {\n              for (groupMember = _i3; groupMember <= groupEnd; groupMember++) {\n                column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - _i3];\n                lineList[groupMember].column = column;\n                totalColumns = totalColumns > column ? totalColumns : column;\n              }\n            }\n\n          // Increment i to the last note that was set, so that if a lower set of notes\n          // does not conflict at all with this group, it can have its own classic shape.\n          _i3 = groupEnd;\n          _i2 = _i3;\n        };\n\n        for (var _i2 = 0; _i2 < lineList.length; _i2++) {\n          _loop(_i2);\n        }\n\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n\n        // track each column's max width, which will be used as initial shift of later columns:\n        var columnWidths = [];\n        var columnXOffsets = [];\n        for (var _i4 = 0; _i4 <= totalColumns; _i4++) {\n          columnWidths[_i4] = 0;\n          columnXOffsets[_i4] = 0;\n        }\n\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach(function (line) {\n          if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n        });\n\n        for (var _i5 = 1; _i5 < columnWidths.length; _i5++) {\n          // this column's offset = this column's width + previous column's offset\n          columnXOffsets[_i5] = columnWidths[_i5] + columnXOffsets[_i5 - 1];\n        }\n\n        var totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        var accCount = 0;\n        lineList.forEach(function (line) {\n          var lineWidth = 0;\n          var lastAccOnLine = accCount + line.numAcc;\n          // handle all of the accidentals on a given line:\n          for (accCount; accCount < lastAccOnLine; accCount++) {\n            var xShift = columnXOffsets[line.column - 1] + lineWidth;\n            accList[accCount].acc.setXShift(xShift);\n            // keep track of the width of accidentals we've added so far, so that when\n            // we loop, we add space for them.\n            lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n            L$7('Line, accCount, shift: ', line.line, accCount, xShift);\n          }\n        });\n\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift;\n      }\n\n      // Helper function to determine whether two lines of accidentals collide vertically\n\n    }, {\n      key: 'checkCollision',\n      value: function checkCollision(line1, line2) {\n        var clearance = line2.line - line1.line;\n        var clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n          // then line 2 is on top\n          clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n          if (line1.dblSharpLine) clearance -= 0.5;\n        } else {\n          // line 1 is on top\n          clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n          if (line2.dblSharpLine) clearance -= 0.5;\n        }\n        var collision = Math.abs(clearance) < clearanceRequired;\n        L$7('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n      }\n\n      // Use this method to automatically apply accidentals to a set of `voices`.\n      // The accidentals will be remembered between all the voices provided.\n      // Optionally, you can also provide an initial `keySignature`.\n\n    }, {\n      key: 'applyAccidentals',\n      value: function applyAccidentals(voices, keySignature) {\n        var tickPositions = [];\n        var tickNoteMap = {};\n\n        // Sort the tickables in each voice by their tick position in the voice\n        voices.forEach(function (voice) {\n          var tickPosition = new Fraction(0, 1);\n          var notes = voice.getTickables();\n          notes.forEach(function (note) {\n            var notesAtPosition = tickNoteMap[tickPosition.value()];\n\n            if (!notesAtPosition) {\n              tickPositions.push(tickPosition.value());\n              tickNoteMap[tickPosition.value()] = [note];\n            } else {\n              notesAtPosition.push(note);\n            }\n\n            tickPosition.add(note.getTicks());\n          });\n        });\n\n        var music = new Music();\n\n        // Default key signature is C major\n        if (!keySignature) keySignature = 'C';\n\n        // Get the scale map, which represents the current state of each pitch\n        var scaleMap = music.createScaleMap(keySignature);\n\n        tickPositions.forEach(function (tick) {\n          var notes = tickNoteMap[tick];\n\n          // Array to store all pitches that modified accidental states\n          // at this tick position\n          var modifiedPitches = [];\n\n          notes.forEach(function (note) {\n            if (note.isRest()) return;\n\n            // Go through each key and determine if an accidental should be\n            // applied\n            note.keys.forEach(function (keyString, keyIndex) {\n              var key = music.getNoteParts(keyString.split('/')[0]);\n\n              // Force a natural for every key without an accidental\n              var accidentalString = key.accidental || 'n';\n              var pitch = key.root + accidentalString;\n\n              // Determine if the current pitch has the same accidental\n              // as the scale state\n              var sameAccidental = scaleMap[key.root] === pitch;\n\n              // Determine if an identical pitch in the chord already\n              // modified the accidental state\n              var previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n              // Add the accidental to the StaveNote\n              if (!sameAccidental || sameAccidental && previouslyModified) {\n                // Modify the scale map so that the root pitch has an\n                // updated state\n                scaleMap[key.root] = pitch;\n\n                // Create the accidental\n                var accidental = new Accidental(accidentalString);\n\n                // Attach the accidental to the StaveNote\n                note.addAccidental(keyIndex, accidental);\n\n                // Add the pitch to list of pitches that modified accidentals\n                modifiedPitches.push(pitch);\n              }\n            });\n          });\n        });\n      }\n\n      // Create accidental. `type` can be a value from the\n      // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n      // example: `#`, `##`, `b`, `n`, etc.\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'accidentals';\n      }\n    }]);\n\n    function Accidental() {\n      var type = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n      classCallCheck(this, Accidental);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Accidental).call(this));\n\n      L$7('New accidental: ', type);\n\n      _this.note = null;\n      // The `index` points to a specific note in a chord.\n      _this.index = null;\n      _this.type = type;\n      _this.position = Modifier.Position.LEFT;\n\n      _this.render_options = {\n        // Font size for glyphs\n        font_scale: 38,\n\n        // Length of stroke across heads above or below the stave.\n        stroke_px: 3\n      };\n\n      _this.accidental = Flow.accidentalCodes(_this.type);\n      if (!_this.accidental) {\n        throw new Vex$1.RERR('ArgumentError', 'Unknown accidental type: ' + type);\n      }\n\n      // Cautionary accidentals have parentheses around them\n      _this.cautionary = false;\n      _this.parenLeft = null;\n      _this.parenRight = null;\n\n      // Initial width is set from table.\n      _this.setWidth(_this.accidental.width);\n      return _this;\n    }\n\n    createClass(Accidental, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Accidental.CATEGORY;\n      }\n\n      // Attach this accidental to `note`, which must be a `StaveNote`.\n\n    }, {\n      key: 'setNote',\n      value: function setNote(note) {\n        if (!note) {\n          throw new Vex$1.RERR('ArgumentError', 'Bad note value: ' + note);\n        }\n\n        this.note = note;\n\n        // Accidentals attached to grace notes are rendered smaller.\n        if (this.note.getCategory() === 'gracenotes') {\n          this.render_options.font_scale = 25;\n          this.setWidth(this.accidental.gracenote_width);\n        }\n      }\n\n      // If called, draws parenthesis around accidental.\n\n    }, {\n      key: 'setAsCautionary',\n      value: function setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.parenLeft = Flow.accidentalCodes('{');\n        this.parenRight = Flow.accidentalCodes('}');\n        var widthAdjust = this.type === '##' || this.type === 'bb' ? 6 : 4;\n\n        // Make sure `width` accomodates for parentheses.\n        this.setWidth(this.parenLeft.width + this.accidental.width + this.parenRight.width - widthAdjust);\n\n        return this;\n      }\n\n      // Render accidental onto canvas.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var context = this.context;\n        var type = this.type;\n        var position = this.position;\n        var note = this.note;\n        var index = this.index;\n        var cautionary = this.cautionary;\n        var x_shift = this.x_shift;\n        var y_shift = this.y_shift;\n        var width = this.width;\n        var accidental = this.accidental;\n        var parenLeft = this.parenLeft;\n        var parenRight = this.parenRight;\n        var font_scale = this.render_options.font_scale;\n\n\n        if (!context) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw accidental without a context.\");\n        }\n\n        if (!(note && index != null)) {\n          throw new Vex$1.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n        }\n\n        // Figure out the start `x` and `y` coordinates for note and index.\n        var start = note.getModifierStartXY(position, index);\n        var accX = start.x + x_shift - width;\n        var accY = start.y + y_shift;\n        L$7('Rendering: ', type, accX, accY);\n\n        var renderGlyphToContext = Glyph.renderGlyph.bind(null, context);\n\n        if (!cautionary) {\n          // Render the accidental alone.\n          renderGlyphToContext(accX, accY, font_scale, accidental.code);\n        } else {\n          // Render the accidental in parentheses.\n          accX += 3;\n          renderGlyphToContext(accX, accY, font_scale, parenLeft.code);\n          accX += 2;\n          renderGlyphToContext(accX, accY, font_scale, accidental.code);\n          accX += accidental.width - 2;\n          if (type === '##' || type === 'bb') accX -= 2;\n          renderGlyphToContext(accX, accY, font_scale, parenRight.code);\n        }\n      }\n    }]);\n    return Accidental;\n  }(Modifier);\n\n  var StaveTie = function () {\n    function StaveTie(notes, text) {\n      classCallCheck(this, StaveTie);\n\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *    first_indices: [n1, n2, n3],\n       *    last_indices: [n1, n2, n3]\n       *  }\n       *\n       **/\n      this.notes = notes;\n      this.context = null;\n      this.text = text;\n      this.direction = null;\n\n      this.render_options = {\n        cp1: 8, // Curve control point 1\n        cp2: 12, // Curve control point 2\n        text_shift_x: 0,\n        first_x_shift: 0,\n        last_x_shift: 0,\n        y_shift: 7,\n        tie_spacing: 0,\n        font: { family: 'Arial', size: 10, style: '' }\n      };\n\n      this.font = this.render_options.font;\n      this.setNotes(notes);\n    }\n\n    createClass(StaveTie, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n    }, {\n      key: 'setFont',\n      value: function setFont(font) {\n        this.font = font;return this;\n      }\n    }, {\n      key: 'setDirection',\n      value: function setDirection(direction) {\n        this.direction = direction;return this;\n      }\n\n      /**\n       * Set the notes to attach this tie to.\n       *\n       * @param {!Object} notes The notes to tie up.\n       */\n\n    }, {\n      key: 'setNotes',\n      value: function setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) throw new Vex$1.RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n\n        if (!notes.first_indices) notes.first_indices = [0];\n        if (!notes.last_indices) notes.last_indices = [0];\n\n        if (notes.first_indices.length != notes.last_indices.length) throw new Vex$1.RuntimeError('BadArguments', 'Tied notes must have similar' + ' index sizes');\n\n        // Success. Lets grab 'em notes.\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n      }\n\n      /**\n       * @return {boolean} Returns true if this is a partial bar.\n       */\n\n    }, {\n      key: 'isPartial',\n      value: function isPartial() {\n        return !this.first_note || !this.last_note;\n      }\n    }, {\n      key: 'renderTie',\n      value: function renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) throw new Vex$1.RERR('BadArguments', 'No Y-values to render');\n\n        var ctx = this.context;\n        var cp1 = this.render_options.cp1;\n        var cp2 = this.render_options.cp2;\n\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n          cp1 = 2;cp2 = 8;\n        }\n\n        var first_x_shift = this.render_options.first_x_shift;\n        var last_x_shift = this.render_options.last_x_shift;\n        var y_shift = this.render_options.y_shift * params.direction;\n\n        for (var i = 0; i < this.first_indices.length; ++i) {\n          var cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n          var first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n          var last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n          if (isNaN(first_y_px) || isNaN(last_y_px)) throw new Vex$1.RERR('BadArguments', 'Bad indices for tie rendering.');\n\n          var top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n          var bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n\n          ctx.beginPath();\n          ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n          ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n          ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n\n          ctx.closePath();\n          ctx.fill();\n        }\n      }\n    }, {\n      key: 'renderText',\n      value: function renderText(first_x_px, last_x_px) {\n        if (!this.text) return;\n        var center_x = (first_x_px + last_x_px) / 2;\n        center_x -= this.context.measureText(this.text).width / 2;\n\n        this.context.save();\n        this.context.setFont(this.font.family, this.font.size, this.font.style);\n        this.context.fillText(this.text, center_x + this.render_options.text_shift_x, (this.first_note || this.last_note).getStave().getYForTopText() - 1);\n        this.context.restore();\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', 'No context to render tie.');\n        var first_note = this.first_note;\n        var last_note = this.last_note;\n        var first_x_px = void 0,\n            last_x_px = void 0,\n            first_ys = void 0,\n            last_ys = void 0,\n            stem_direction = void 0;\n\n        if (first_note) {\n          first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n          stem_direction = first_note.getStemDirection();\n          first_ys = first_note.getYs();\n        } else {\n          first_x_px = last_note.getStave().getTieStartX();\n          first_ys = last_note.getYs();\n          this.first_indices = this.last_indices;\n        }\n\n        if (last_note) {\n          last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n          stem_direction = last_note.getStemDirection();\n          last_ys = last_note.getYs();\n        } else {\n          last_x_px = first_note.getStave().getTieEndX();\n          last_ys = first_note.getYs();\n          this.last_indices = this.first_indices;\n        }\n\n        if (this.direction) {\n          stem_direction = this.direction;\n        }\n\n        this.renderTie({\n          first_x_px: first_x_px,\n          last_x_px: last_x_px,\n          first_ys: first_ys,\n          last_ys: last_ys,\n          direction: stem_direction\n        });\n\n        this.renderText(first_x_px, last_x_px);\n        return true;\n      }\n    }]);\n    return StaveTie;\n  }();\n\n  var GraceNoteGroup = function (_Modifier) {\n    inherits(GraceNoteGroup, _Modifier);\n    createClass(GraceNoteGroup, null, [{\n      key: 'format',\n\n\n      // Arrange groups inside a `ModifierContext`\n      value: function format(gracenote_groups, state) {\n        var gracenote_spacing = 4;\n\n        if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n        var group_list = [];\n        var hasStave = false;\n        var prev_note = null;\n        var shiftL = 0;\n\n        var i = void 0,\n            gracenote_group = void 0,\n            props_tmp = void 0;\n        for (i = 0; i < gracenote_groups.length; ++i) {\n          gracenote_group = gracenote_groups[i];\n          var note = gracenote_group.getNote();\n          var stave = note.getStave();\n          if (note != prev_note) {\n            // Iterate through all notes to get the displaced pixels\n            for (var n = 0; n < note.keys.length; ++n) {\n              props_tmp = note.getKeyProps()[n];\n              shiftL = props_tmp.displaced ? note.getExtraLeftPx() : shiftL;\n            }\n            prev_note = note;\n          }\n          if (stave != null) {\n            hasStave = true;\n            group_list.push({ shift: shiftL, gracenote_group: gracenote_group });\n          } else {\n            group_list.push({ shift: shiftL, gracenote_group: gracenote_group });\n          }\n        }\n\n        // If first note left shift in case it is displaced\n        var group_shift = group_list[0].shift;\n        var formatWidth = void 0;\n        for (i = 0; i < group_list.length; ++i) {\n          gracenote_group = group_list[i].gracenote_group;\n          gracenote_group.preFormat();\n          formatWidth = gracenote_group.getWidth() + gracenote_spacing;\n          group_shift = Math.max(formatWidth, group_shift);\n        }\n\n        for (i = 0; i < group_list.length; ++i) {\n          gracenote_group = group_list[i].gracenote_group;\n          formatWidth = gracenote_group.getWidth() + gracenote_spacing;\n          gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n        }\n\n        state.left_shift += group_shift;\n        return true;\n      }\n\n      // ## Prototype Methods\n      //\n      // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n      // `ModifierContext`.\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'gracenotegroups';\n      }\n    }]);\n\n    function GraceNoteGroup(grace_notes, show_slur) {\n      var _ret;\n\n      classCallCheck(this, GraceNoteGroup);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(GraceNoteGroup).call(this));\n\n      _this.note = null;\n      _this.index = null;\n      _this.position = Modifier.Position.LEFT;\n      _this.grace_notes = grace_notes;\n      _this.width = 0;\n\n      _this.preFormatted = false;\n\n      _this.show_slur = show_slur;\n      _this.slur = null;\n\n      _this.formatter = new Formatter();\n      _this.voice = new Voice({\n        num_beats: 4,\n        beat_value: 4,\n        resolution: Flow.RESOLUTION\n      }).setStrict(false);\n\n      _this.voice.addTickables(_this.grace_notes);\n\n      return _ret = _this, possibleConstructorReturn(_this, _ret);\n    }\n\n    createClass(GraceNoteGroup, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return GraceNoteGroup.CATEGORY;\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return;\n\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n      }\n    }, {\n      key: 'beamNotes',\n      value: function beamNotes() {\n        if (this.grace_notes.length > 1) {\n          var beam = new Beam(this.grace_notes);\n\n          beam.render_options.beam_width = 3;\n          beam.render_options.partial_beam_length = 4;\n\n          this.beam = beam;\n        }\n\n        return this;\n      }\n    }, {\n      key: 'setNote',\n      value: function setNote(note) {\n        this.note = note;\n      }\n    }, {\n      key: 'setWidth',\n      value: function setWidth(width) {\n        this.width = width;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RuntimeError('NoContext', \"Can't draw Grace note without a context.\");\n        }\n\n        var note = this.getNote();\n\n        L$8('Drawing grace note group for:', note);\n\n        if (!(note && this.index !== null)) {\n          throw new Vex$1.RuntimeError('NoAttachedNote', \"Can't draw grace note without a parent note and parent note index.\");\n        }\n\n        var that = this;\n        function alignGraceNotesWithNote(grace_notes, note, groupWidth) {\n          // Shift over the tick contexts of each note\n          // So that th aligned with the note\n          var tickContext = note.getTickContext();\n          var extraPx = tickContext.getExtraPx();\n          var x = tickContext.getX() - extraPx.left - extraPx.extraLeft + that.getSpacingFromNextModifier();\n          grace_notes.forEach(function (graceNote) {\n            var tick_context = graceNote.getTickContext();\n            var x_offset = tick_context.getX();\n            graceNote.setStave(note.stave);\n            tick_context.setX(x + x_offset);\n          });\n        }\n\n        alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\n        // Draw notes\n        this.grace_notes.forEach(function (graceNote) {\n          graceNote.setContext(this.context).draw();\n        }, this);\n\n        // Draw beam\n        if (this.beam) {\n          this.beam.setContext(this.context).draw();\n        }\n\n        if (this.show_slur) {\n          // Create and draw slur\n          this.slur = new StaveTie({\n            last_note: this.grace_notes[0],\n            first_note: note,\n            first_indices: [0],\n            last_indices: [0]\n          });\n\n          this.slur.render_options.cp2 = 12;\n          this.slur.setContext(this.context).draw();\n        }\n      }\n    }]);\n    return GraceNoteGroup;\n  }(Modifier);\n\n  // To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\n  function L$8() {\n    if (GraceNoteGroup.DEBUG) Vex$1.L('Vex.Flow.GraceNoteGroup', arguments);\n  }\n\n  var Stroke = function (_Modifier) {\n    inherits(Stroke, _Modifier);\n    createClass(Stroke, null, [{\n      key: 'format',\n\n\n      // Arrange strokes inside `ModifierContext`\n      value: function format(strokes, state) {\n        var left_shift = state.left_shift;\n        var stroke_spacing = 0;\n\n        if (!strokes || strokes.length === 0) return this;\n\n        var str_list = [];\n        var i = void 0,\n            str = void 0,\n            shift = void 0;\n        for (i = 0; i < strokes.length; ++i) {\n          str = strokes[i];\n          var note = str.getNote();\n          var props = void 0;\n          if (note instanceof StaveNote) {\n            props = note.getKeyProps()[str.getIndex()];\n            shift = props.displaced ? note.getExtraLeftPx() : 0;\n            str_list.push({ line: props.line, shift: shift, str: str });\n          } else {\n            props = note.getPositions()[str.getIndex()];\n            str_list.push({ line: props.str, shift: 0, str: str });\n          }\n        }\n\n        var str_shift = left_shift;\n        var x_shift = 0;\n\n        // There can only be one stroke .. if more than one, they overlay each other\n        for (i = 0; i < str_list.length; ++i) {\n          str = str_list[i].str;\n          shift = str_list[i].shift;\n\n          str.setXShift(str_shift + shift);\n          x_shift = Math.max(str.getWidth() + stroke_spacing, x_shift);\n        }\n\n        state.left_shift += x_shift;\n        return true;\n      }\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'strokes';\n      }\n    }, {\n      key: 'Type',\n      get: function get() {\n        return {\n          BRUSH_DOWN: 1,\n          BRUSH_UP: 2,\n          ROLL_DOWN: 3, // Arpegiated chord\n          ROLL_UP: 4, // Arpegiated chord\n          RASQUEDO_DOWN: 5,\n          RASQUEDO_UP: 6\n        };\n      }\n    }]);\n\n    function Stroke(type, options) {\n      classCallCheck(this, Stroke);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Stroke).call(this));\n\n      _this.note = null;\n      _this.options = Vex$1.Merge({}, options);\n\n      // multi voice - span stroke across all voices if true\n      _this.all_voices = 'all_voices' in _this.options ? _this.options.all_voices : true;\n\n      // multi voice - end note of stroke, set in draw()\n      _this.note_end = null;\n      _this.index = null;\n      _this.type = type;\n      _this.position = Modifier.Position.LEFT;\n\n      _this.render_options = {\n        font_scale: 38,\n        stroke_px: 3,\n        stroke_spacing: 10\n      };\n\n      _this.font = {\n        family: 'serif',\n        size: 10,\n        weight: 'bold italic'\n      };\n\n      _this.setXShift(0);\n      _this.setWidth(10);\n      return _this;\n    }\n\n    createClass(Stroke, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Stroke.CATEGORY;\n      }\n    }, {\n      key: 'getPosition',\n      value: function getPosition() {\n        return this.position;\n      }\n    }, {\n      key: 'addEndNote',\n      value: function addEndNote(note) {\n        this.note_end = note;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw stroke without a context.\");\n        if (!(this.note && this.index != null)) throw new Vex$1.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n        var start = this.note.getModifierStartXY(this.position, this.index);\n        var ys = this.note.getYs();\n        var topY = start.y;\n        var botY = start.y;\n        var x = start.x - 5;\n        var line_space = this.note.stave.options.spacing_between_lines_px;\n\n        var notes = this.getModifierContext().getModifiers(this.note.getCategory());\n        var i = void 0;\n        for (i = 0; i < notes.length; i++) {\n          ys = notes[i].getYs();\n          for (var n = 0; n < ys.length; n++) {\n            if (this.note == notes[i] || this.all_voices) {\n              topY = Vex$1.Min(topY, ys[n]);\n              botY = Vex$1.Max(botY, ys[n]);\n            }\n          }\n        }\n\n        var arrow = void 0,\n            arrow_shift_x = void 0,\n            arrow_y = void 0,\n            text_shift_x = void 0,\n            text_y = void 0;\n        switch (this.type) {\n          case Stroke.Type.BRUSH_DOWN:\n            arrow = 'vc3';\n            arrow_shift_x = -3;\n            arrow_y = topY - line_space / 2 + 10;\n            botY += line_space / 2;\n            break;\n          case Stroke.Type.BRUSH_UP:\n            arrow = 'v11';\n            arrow_shift_x = 0.5;\n            arrow_y = botY + line_space / 2;\n            topY -= line_space / 2;\n            break;\n          case Stroke.Type.ROLL_DOWN:\n          case Stroke.Type.RASQUEDO_DOWN:\n            arrow = 'vc3';\n            arrow_shift_x = -3;\n            text_shift_x = this.x_shift + arrow_shift_x - 2;\n            if (this.note instanceof StaveNote) {\n              topY += 1.5 * line_space;\n              if ((botY - topY) % 2 !== 0) {\n                botY += 0.5 * line_space;\n              } else {\n                botY += line_space;\n              }\n              arrow_y = topY - line_space;\n              text_y = botY + line_space + 2;\n            } else {\n              topY += 1.5 * line_space;\n              botY += line_space;\n              arrow_y = topY - 0.75 * line_space;\n              text_y = botY + 0.25 * line_space;\n            }\n            break;\n          case Stroke.Type.ROLL_UP:\n          case Stroke.Type.RASQUEDO_UP:\n            arrow = 'v52';\n            arrow_shift_x = -4;\n            text_shift_x = this.x_shift + arrow_shift_x - 1;\n            if (this.note instanceof StaveNote) {\n              arrow_y = line_space / 2;\n              topY += 0.5 * line_space;\n              if ((botY - topY) % 2 === 0) {\n                botY += line_space / 2;\n              }\n              arrow_y = botY + 0.5 * line_space;\n              text_y = topY - 1.25 * line_space;\n            } else {\n              topY += 0.25 * line_space;\n              botY += 0.5 * line_space;\n              arrow_y = botY + 0.25 * line_space;\n              text_y = topY - line_space;\n            }\n            break;\n        }\n\n        // Draw the stroke\n        if (this.type == Stroke.Type.BRUSH_DOWN || this.type == Stroke.Type.BRUSH_UP) {\n          this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        } else {\n          if (this.note instanceof StaveNote) {\n            for (i = topY; i <= botY; i += line_space) {\n              Glyph.renderGlyph(this.context, x + this.x_shift - 4, i, this.render_options.font_scale, 'va3');\n            }\n          } else {\n            for (i = topY; i <= botY; i += 10) {\n              Glyph.renderGlyph(this.context, x + this.x_shift - 4, i, this.render_options.font_scale, 'va3');\n            }\n            if (this.type == Stroke.Type.RASQUEDO_DOWN) text_y = i + 0.25 * line_space;\n          }\n        }\n\n        // Draw the arrow head\n        Glyph.renderGlyph(this.context, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow);\n\n        // Draw the rasquedo \"R\"\n        if (this.type == Stroke.Type.RASQUEDO_DOWN || this.type == Stroke.Type.RASQUEDO_UP) {\n          this.context.save();\n          this.context.setFont(this.font.family, this.font.size, this.font.weight);\n          this.context.fillText('R', x + text_shift_x, text_y);\n          this.context.restore();\n        }\n      }\n    }]);\n    return Stroke;\n  }(Modifier);\n\n  var StringNumber = function (_Modifier) {\n    inherits(StringNumber, _Modifier);\n    createClass(StringNumber, null, [{\n      key: 'format',\n\n\n      // ## Static Methods\n      // Arrange string numbers inside a `ModifierContext`\n      value: function format(nums, state) {\n        var left_shift = state.left_shift;\n        var right_shift = state.right_shift;\n        var num_spacing = 1;\n\n        if (!nums || nums.length === 0) return this;\n\n        var nums_list = [];\n        var prev_note = null;\n        var shift_left = 0;\n        var shift_right = 0;\n\n        var i = void 0;\n        var num = void 0;\n        var note = void 0;\n        var pos = void 0;\n        var props_tmp = void 0;\n        for (i = 0; i < nums.length; ++i) {\n          num = nums[i];\n          note = num.getNote();\n\n          for (i = 0; i < nums.length; ++i) {\n            num = nums[i];\n            note = num.getNote();\n            pos = num.getPosition();\n            var props = note.getKeyProps()[num.getIndex()];\n\n            if (note !== prev_note) {\n              for (var n = 0; n < note.keys.length; ++n) {\n                props_tmp = note.getKeyProps()[n];\n                if (left_shift === 0) {\n                  shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n                }\n                if (right_shift === 0) {\n                  shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n                }\n              }\n              prev_note = note;\n            }\n\n            nums_list.push({\n              pos: pos,\n              note: note,\n              num: num,\n              line: props.line,\n              shiftL: shift_left,\n              shiftR: shift_right\n            });\n          }\n        }\n\n        // Sort string numbers by line number.\n        nums_list.sort(function (a, b) {\n          return b.line - a.line;\n        });\n\n        // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n        var num_shiftL = 0; // eslint-disable-line\n        var num_shiftR = 0;\n        var x_widthL = 0;\n        var x_widthR = 0;\n        var last_line = null;\n        var last_note = null;\n        for (i = 0; i < nums_list.length; ++i) {\n          var num_shift = 0;\n          note = nums_list[i].note;\n          pos = nums_list[i].pos;\n          num = nums_list[i].num;\n          var line = nums_list[i].line;\n          var shiftL = nums_list[i].shiftL;\n          var shiftR = nums_list[i].shiftR;\n\n          // Reset the position of the string number every line.\n          if (line !== last_line || note !== last_note) {\n            num_shiftL = left_shift + shiftL;\n            num_shiftR = right_shift + shiftR;\n          }\n\n          var num_width = num.getWidth() + num_spacing;\n          if (pos === Modifier.Position.LEFT) {\n            num.setXShift(left_shift);\n            num_shift = shift_left + num_width; // spacing\n            x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n          } else if (pos === Modifier.Position.RIGHT) {\n            num.setXShift(num_shiftR);\n            num_shift += num_width; // spacing\n            x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n          }\n          last_line = line;\n          last_note = note;\n        }\n\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n      }\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'stringnumber';\n      }\n    }]);\n\n    function StringNumber(number) {\n      classCallCheck(this, StringNumber);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(StringNumber).call(this));\n\n      _this.note = null;\n      _this.last_note = null;\n      _this.index = null;\n      _this.string_number = number;\n      _this.setWidth(20); // ???\n      _this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n      _this.x_shift = 0;\n      _this.y_shift = 0;\n      _this.x_offset = 0; // Horizontal offset from default\n      _this.y_offset = 0; // Vertical offset from default\n      _this.dashed = true; // true - draw dashed extension  false - no extension\n      _this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n      _this.radius = 8;\n      _this.font = {\n        family: 'sans-serif',\n        size: 10,\n        weight: 'bold'\n      };\n      return _this;\n    }\n\n    createClass(StringNumber, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return StringNumber.CATEGORY;\n      }\n    }, {\n      key: 'getNote',\n      value: function getNote() {\n        return this.note;\n      }\n    }, {\n      key: 'setNote',\n      value: function setNote(note) {\n        this.note = note;return this;\n      }\n    }, {\n      key: 'getIndex',\n      value: function getIndex() {\n        return this.index;\n      }\n    }, {\n      key: 'setIndex',\n      value: function setIndex(index) {\n        this.index = index;return this;\n      }\n    }, {\n      key: 'setLineEndType',\n      value: function setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n          this.leg = leg;\n        }\n        return this;\n      }\n    }, {\n      key: 'getPosition',\n      value: function getPosition() {\n        return this.position;\n      }\n    }, {\n      key: 'setPosition',\n      value: function setPosition(position) {\n        if (position >= Modifier.Position.LEFT && position <= Modifier.Position.BELOW) {\n          this.position = position;\n        }\n        return this;\n      }\n    }, {\n      key: 'setStringNumber',\n      value: function setStringNumber(number) {\n        this.string_number = number;return this;\n      }\n    }, {\n      key: 'setOffsetX',\n      value: function setOffsetX(x) {\n        this.x_offset = x;return this;\n      }\n    }, {\n      key: 'setOffsetY',\n      value: function setOffsetY(y) {\n        this.y_offset = y;return this;\n      }\n    }, {\n      key: 'setLastNote',\n      value: function setLastNote(note) {\n        this.last_note = note;return this;\n      }\n    }, {\n      key: 'setDashed',\n      value: function setDashed(dashed) {\n        this.dashed = dashed;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw string number without a context.\");\n        }\n        if (!(this.note && this.index != null)) {\n          throw new Vex$1.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n        }\n\n        var ctx = this.context;\n        var line_space = this.note.stave.options.spacing_between_lines_px;\n\n        var start = this.note.getModifierStartXY(this.position, this.index);\n        var dot_x = start.x + this.x_shift + this.x_offset;\n        var dot_y = start.y + this.y_shift + this.y_offset;\n\n        switch (this.position) {\n          case Modifier.Position.ABOVE:\n          case Modifier.Position.BELOW:\n            {\n              var stem_ext = this.note.getStemExtents();\n              var top = stem_ext.topY;\n              var bottom = stem_ext.baseY + 2;\n\n              if (this.note.stem_direction === StaveNote.STEM_DOWN) {\n                top = stem_ext.baseY;\n                bottom = stem_ext.topY - 2;\n              }\n\n              if (this.position === Modifier.Position.ABOVE) {\n                dot_y = this.note.hasStem() ? top - line_space * 1.75 : start.y - line_space * 1.75;\n              } else {\n                dot_y = this.note.hasStem() ? bottom + line_space * 1.5 : start.y + line_space * 1.75;\n              }\n\n              dot_y += this.y_shift + this.y_offset;\n\n              break;\n            }case Modifier.Position.LEFT:\n            dot_x -= this.radius / 2 + 5;\n            break;\n          case Modifier.Position.RIGHT:\n            dot_x += this.radius / 2 + 6;\n            break;\n          default:\n            throw new Vex$1.RERR('InvalidPosition', 'The position ' + this.position + ' is invalid');\n        }\n\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n        ctx.lineWidth = 1.5;\n        ctx.stroke();\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        var x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n        if (this.last_note != null) {\n          var end = this.last_note.getStemX() - this.note.getX() + 5;\n          ctx.strokeStyle = '#000000';\n          ctx.lineCap = 'round';\n          ctx.lineWidth = 0.6;\n          if (this.dashed) {\n            Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n          } else {\n            Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n          }\n\n          var len = void 0;\n          var pattern = void 0;\n          switch (this.leg) {\n            case Renderer.LineEndType.UP:\n              len = -10;\n              pattern = this.dashed ? [3, 3] : [3, 0];\n              Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n              break;\n            case Renderer.LineEndType.DOWN:\n              len = 10;\n              pattern = this.dashed ? [3, 3] : [3, 0];\n              Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n              break;\n            default:\n              break;\n          }\n        }\n\n        ctx.restore();\n      }\n    }]);\n    return StringNumber;\n  }(Modifier);\n\n  // To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\n  function L$9() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (Articulation.DEBUG) Vex$1.L('Vex.Flow.Articulation', args);\n  }\n\n  var Articulation = function (_Modifier) {\n    inherits(Articulation, _Modifier);\n    createClass(Articulation, null, [{\n      key: 'format',\n      value: function format(articulations, state) {\n        if (!articulations || articulations.length === 0) return false;\n\n        var width = 0;\n        for (var i = 0; i < articulations.length; ++i) {\n          var increment = 1;\n          var articulation = articulations[i];\n          width = Math.max(articulation.getWidth(), width);\n\n          var type = Flow.articulationCodes(articulation.type);\n\n          if (!type.between_lines) increment += 1.5;\n\n          if (articulation.getPosition() === Modifier.Position.ABOVE) {\n            articulation.setTextLine(state.top_text_line);\n            state.top_text_line += increment;\n          } else {\n            articulation.setTextLine(state.text_line);\n            state.text_line += increment;\n          }\n        }\n\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n      }\n\n      // Create a new articulation of type `type`, which is an entry in\n      // `Vex.Flow.articulationCodes` in `tables.js`.\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'articulations';\n      }\n    }]);\n\n    function Articulation(type) {\n      classCallCheck(this, Articulation);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Articulation).call(this));\n\n      _this.note = null;\n      _this.index = null;\n      _this.type = type;\n      _this.position = Modifier.Position.BELOW;\n\n      _this.render_options = {\n        font_scale: 38\n      };\n\n      _this.articulation = Flow.articulationCodes(_this.type);\n      if (!_this.articulation) {\n        throw new Vex$1.RERR('ArgumentError', \"Articulation not found: '\" + _this.type + \"'\");\n      }\n\n      // Default width comes from articulation table.\n      _this.setWidth(_this.articulation.width);\n      return _this;\n    }\n\n    createClass(Articulation, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Articulation.CATEGORY;\n      }\n\n      // Render articulation in position next to note.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw Articulation without a context.\");\n        }\n        if (!(this.note && this.index !== null)) {\n          throw new Vex$1.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n        }\n\n        var stem_direction = this.note.getStemDirection();\n        var stave = this.note.getStave();\n\n        var is_on_head = this.position === Modifier.Position.ABOVE && stem_direction === StaveNote.STEM_DOWN || this.position === Modifier.Position.BELOW && stem_direction === StaveNote.STEM_UP;\n\n        var needsLineAdjustment = function needsLineAdjustment(articulation, note_line, line_spacing) {\n          var offset_direction = articulation.position === Modifier.Position.ABOVE ? 1 : -1;\n          var duration = articulation.getNote().getDuration();\n          if (!is_on_head && Flow.durationToNumber(duration) <= 1) {\n            // Add stem length, unless it's on a whole note.\n            note_line += offset_direction * 3.5;\n          }\n\n          var articulation_line = note_line + offset_direction * line_spacing;\n\n          if (articulation_line >= 1 && articulation_line <= 5 && articulation_line % 1 === 0) {\n            return true;\n          }\n\n          return false;\n        };\n\n        // Articulations are centered over/under the note head.\n        var start = this.note.getModifierStartXY(this.position, this.index);\n        var glyph_y = start.y;\n        var shiftY = 0;\n        var line_spacing = 1;\n        var spacing = stave.getSpacingBetweenLines();\n        var is_tabnote = this.note.getCategory() === 'tabnotes';\n        var stem_ext = this.note.getStem().getExtents();\n\n        var top = stem_ext.topY;\n        var bottom = stem_ext.baseY;\n\n        if (stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY;\n        }\n\n        // TabNotes don't have stems attached to them. Tab stems are rendered\n        // outside the stave.\n        if (is_tabnote) {\n          if (this.note.hasStem()) {\n            if (stem_direction === StaveNote.STEM_UP) {\n              bottom = stave.getYForBottomText(this.text_line - 2);\n            } else if (stem_direction === StaveNote.STEM_DOWN) {\n              top = stave.getYForTopText(this.text_line - 1.5);\n            }\n          } else {\n            // Without a stem\n            top = stave.getYForTopText(this.text_line - 1);\n            bottom = stave.getYForBottomText(this.text_line - 2);\n          }\n        }\n\n        var is_above = this.position === Modifier.Position.ABOVE;\n        var note_line = this.note.getLineNumber(is_above);\n\n        // Beamed stems are longer than quarter note stems.\n        if (!is_on_head && this.note.beam) line_spacing += 0.5;\n\n        // If articulation will overlap a line, reposition it.\n        if (needsLineAdjustment(this, note_line, line_spacing)) line_spacing += 0.5;\n\n        var glyph_y_between_lines = void 0;\n        if (this.position === Modifier.Position.ABOVE) {\n          shiftY = this.articulation.shift_up;\n          glyph_y_between_lines = top - 7 - spacing * (this.text_line + line_spacing);\n\n          if (this.articulation.between_lines) {\n            glyph_y = glyph_y_between_lines;\n          } else {\n            glyph_y = Math.min(stave.getYForTopText(this.text_line) - 3, glyph_y_between_lines);\n          }\n        } else {\n          shiftY = this.articulation.shift_down - 10;\n\n          glyph_y_between_lines = bottom + 10 + spacing * (this.text_line + line_spacing);\n          if (this.articulation.between_lines) {\n            glyph_y = glyph_y_between_lines;\n          } else {\n            glyph_y = Math.max(stave.getYForBottomText(this.text_line), glyph_y_between_lines);\n          }\n        }\n\n        var glyph_x = start.x + this.articulation.shift_right;\n        glyph_y += shiftY + this.y_shift;\n\n        L$9('Rendering articulation: ', this.articulation, glyph_x, glyph_y);\n        Glyph.renderGlyph(this.context, glyph_x, glyph_y, this.render_options.font_scale, this.articulation.code);\n      }\n    }]);\n    return Articulation;\n  }(Modifier);\n\n  var TickContext = function () {\n    createClass(TickContext, null, [{\n      key: 'getNextContext',\n      value: function getNextContext(tContext) {\n        var contexts = tContext.tContexts;\n        var index = contexts.indexOf(tContext);\n\n        return contexts[index + 1];\n      }\n    }]);\n\n    function TickContext() {\n      classCallCheck(this, TickContext);\n\n      this.currentTick = new Fraction(0, 1);\n      this.maxTicks = new Fraction(0, 1);\n      this.minTicks = null;\n      this.width = 0;\n      this.padding = 3; // padding on each side (width += padding * 2)\n      this.pixelsUsed = 0;\n      this.x = 0;\n      this.tickables = []; // Notes, tabs, chords, lyrics.\n      this.notePx = 0; // width of widest note in this context\n      this.extraLeftPx = 0; // Extra left pixels for modifers & displace notes\n      this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n      this.align_center = false;\n\n      this.tContexts = []; // Parent array of tick contexts\n\n      // Ignore this tick context for formatting and justification\n      this.ignore_ticks = true;\n      this.preFormatted = false;\n      this.postFormatted = false;\n      this.context = null; // Rendering context\n    }\n\n    createClass(TickContext, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n    }, {\n      key: 'getContext',\n      value: function getContext() {\n        return this.context;\n      }\n    }, {\n      key: 'shouldIgnoreTicks',\n      value: function shouldIgnoreTicks() {\n        return this.ignore_ticks;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width + this.padding * 2;\n      }\n    }, {\n      key: 'getX',\n      value: function getX() {\n        return this.x;\n      }\n    }, {\n      key: 'setX',\n      value: function setX(x) {\n        this.x = x;return this;\n      }\n    }, {\n      key: 'getPixelsUsed',\n      value: function getPixelsUsed() {\n        return this.pixelsUsed;\n      }\n    }, {\n      key: 'setPixelsUsed',\n      value: function setPixelsUsed(pixelsUsed) {\n        this.pixelsUsed = pixelsUsed;return this;\n      }\n    }, {\n      key: 'setPadding',\n      value: function setPadding(padding) {\n        this.padding = padding;return this;\n      }\n    }, {\n      key: 'getMaxTicks',\n      value: function getMaxTicks() {\n        return this.maxTicks;\n      }\n    }, {\n      key: 'getMinTicks',\n      value: function getMinTicks() {\n        return this.minTicks;\n      }\n    }, {\n      key: 'getTickables',\n      value: function getTickables() {\n        return this.tickables;\n      }\n    }, {\n      key: 'getCenterAlignedTickables',\n      value: function getCenterAlignedTickables() {\n        return this.tickables.filter(function (tickable) {\n          return tickable.isCenterAligned();\n        });\n      }\n\n      // Get widths context, note and left/right modifiers for formatting\n\n    }, {\n      key: 'getMetrics',\n      value: function getMetrics() {\n        return { width: this.width, notePx: this.notePx,\n          extraLeftPx: this.extraLeftPx, extraRightPx: this.extraRightPx };\n      }\n    }, {\n      key: 'getCurrentTick',\n      value: function getCurrentTick() {\n        return this.currentTick;\n      }\n    }, {\n      key: 'setCurrentTick',\n      value: function setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n      }\n\n      // Get left & right pixels used for modifiers\n\n    }, {\n      key: 'getExtraPx',\n      value: function getExtraPx() {\n        var left_shift = 0;\n        var right_shift = 0;\n        var extraLeftPx = 0;\n        var extraRightPx = 0;\n        for (var i = 0; i < this.tickables.length; i++) {\n          extraLeftPx = Math.max(this.tickables[i].extraLeftPx, extraLeftPx);\n          extraRightPx = Math.max(this.tickables[i].extraRightPx, extraRightPx);\n          var mContext = this.tickables[i].modifierContext;\n          if (mContext && mContext != null) {\n            left_shift = Math.max(left_shift, mContext.state.left_shift);\n            right_shift = Math.max(right_shift, mContext.state.right_shift);\n          }\n        }\n        return { left: left_shift, right: right_shift,\n          extraLeft: extraLeftPx, extraRight: extraRightPx };\n      }\n    }, {\n      key: 'addTickable',\n      value: function addTickable(tickable) {\n        if (!tickable) {\n          throw new Vex$1.RERR('BadArgument', 'Invalid tickable added.');\n        }\n\n        if (!tickable.shouldIgnoreTicks()) {\n          this.ignore_ticks = false;\n\n          var ticks = tickable.getTicks();\n\n          if (ticks.greaterThan(this.maxTicks)) {\n            this.maxTicks = ticks.clone();\n          }\n\n          if (this.minTicks == null) {\n            this.minTicks = ticks.clone();\n          } else if (ticks.lessThan(this.minTicks)) {\n            this.minTicks = ticks.clone();\n          }\n        }\n\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.preFormatted = false;\n        return this;\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return;\n\n        for (var i = 0; i < this.tickables.length; ++i) {\n          var tickable = this.tickables[i];\n          tickable.preFormat();\n          var metrics = tickable.getMetrics();\n\n          // Maintain max extra pixels from all tickables in the context\n          this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n          this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n          // Maintain the widest note for all tickables in the context\n          this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n          // Recalculate the tick context total width\n          this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n        }\n\n        return this;\n      }\n    }, {\n      key: 'postFormat',\n      value: function postFormat() {\n        if (this.postFormatted) return this;\n        this.postFormatted = true;\n        return this;\n      }\n    }]);\n    return TickContext;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\n  function L$10() {\n    if (Ornament.DEBUG) Vex$1.L('Vex.Flow.Ornament', arguments);\n  }\n\n  // Accidental position modifications for each glyph\n  var acc_mods = {\n    'n': {\n      shift_x: 1,\n      shift_y_upper: 0,\n      shift_y_lower: 0,\n      height: 17\n    },\n    '#': {\n      shift_x: 0,\n      shift_y_upper: -2,\n      shift_y_lower: -2,\n      height: 20\n    },\n    'b': {\n      shift_x: 1,\n      shift_y_upper: 0,\n      shift_y_lower: 3,\n      height: 18\n    },\n    '##': {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 0,\n      height: 12\n    },\n    'bb': {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    'db': {\n      shift_x: -3,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    'bbs': {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    'd': {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 0,\n      height: 17\n    },\n    '++': {\n      shift_x: -2,\n      shift_y_upper: -6,\n      shift_y_lower: -3,\n      height: 22\n    },\n    '+': {\n      shift_x: 1,\n      shift_y_upper: -4,\n      shift_y_lower: -2,\n      height: 20\n    },\n    'bs': {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    'bss': {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    '++-': {\n      shift_x: -2,\n      shift_y_upper: -6,\n      shift_y_lower: -3,\n      height: 22\n    },\n    '+-': {\n      shift_x: 1,\n      shift_y_upper: -4,\n      shift_y_lower: -2,\n      height: 20\n    }\n  };\n\n  var Ornament = function (_Modifier) {\n    inherits(Ornament, _Modifier);\n    createClass(Ornament, null, [{\n      key: 'format',\n\n\n      // ## Static Methods\n      // Arrange ornaments inside `ModifierContext`\n      value: function format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0) return false;\n\n        var width = 0;\n        for (var i = 0; i < ornaments.length; ++i) {\n          var ornament = ornaments[i];\n          var increment = 1;\n          width = Math.max(ornament.getWidth(), width);\n\n          var type = Flow.ornamentCodes(ornament.type);\n\n          if (!type.between_lines) increment += 1.5;\n\n          if (ornament.getPosition() === Modifier.Position.ABOVE) {\n            ornament.setTextLine(state.top_text_line);\n            state.top_text_line += increment;\n          } else {\n            ornament.setTextLine(state.text_line);\n            state.text_line += increment;\n          }\n        }\n\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n      }\n\n      // Create a new ornament of type `type`, which is an entry in\n      // `Vex.Flow.ornamentCodes` in `tables.js`.\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'ornaments';\n      }\n    }]);\n\n    function Ornament(type) {\n      classCallCheck(this, Ornament);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Ornament).call(this));\n\n      _this.note = null;\n      _this.index = null;\n      _this.type = type;\n      _this.position = Modifier.Position.ABOVE;\n      _this.delayed = false;\n\n      _this.accidental_upper = '';\n      _this.accidental_lower = '';\n\n      _this.render_options = {\n        font_scale: 38\n      };\n\n      _this.ornament = Flow.ornamentCodes(_this.type);\n      if (!_this.ornament) throw new Vex$1.RERR('ArgumentError', \"Ornament not found: '\" + _this.type + \"'\");\n\n      // Default width comes from ornament table.\n      _this.setWidth(_this.ornament.width);\n      return _this;\n    }\n\n    createClass(Ornament, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Ornament.CATEGORY;\n      }\n\n      // Set whether the ornament is to be delayed\n\n    }, {\n      key: 'setDelayed',\n      value: function setDelayed(delayed) {\n        this.delayed = delayed;return this;\n      }\n\n      // Set the upper accidental for the ornament\n\n    }, {\n      key: 'setUpperAccidental',\n      value: function setUpperAccidental(acc) {\n        this.accidental_upper = acc;\n        return this;\n      }\n\n      // Set the lower accidental for the ornament\n\n    }, {\n      key: 'setLowerAccidental',\n      value: function setLowerAccidental(acc) {\n        this.accidental_lower = acc;\n        return this;\n      }\n\n      // Render ornament in position next to note.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw Ornament without a context.\");\n        if (!(this.note && this.index !== null)) throw new Vex$1.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n\n        var ctx = this.context;\n        var stem_direction = this.note.getStemDirection();\n        var stave = this.note.getStave();\n\n        // Get stem extents\n        var stem_ext = this.note.getStem().getExtents();\n        var top = void 0,\n            bottom = void 0;\n        if (stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY;\n        } else {\n          top = stem_ext.topY;\n          bottom = stem_ext.baseY;\n        }\n\n        // TabNotes don't have stems attached to them. Tab stems are rendered\n        // outside the stave.\n        var is_tabnote = this.note.getCategory() === 'tabnotes';\n        if (is_tabnote) {\n          if (this.note.hasStem()) {\n            if (stem_direction === StaveNote.STEM_UP) {\n              bottom = stave.getYForBottomText(this.text_line - 2);\n            } else if (stem_direction === StaveNote.STEM_DOWN) {\n              top = stave.getYForTopText(this.text_line - 1.5);\n            }\n          } else {\n            // Without a stem\n            top = stave.getYForTopText(this.text_line - 1);\n            bottom = stave.getYForBottomText(this.text_line - 2);\n          }\n        }\n\n        var is_on_head = stem_direction === StaveNote.STEM_DOWN;\n        var spacing = stave.getSpacingBetweenLines();\n        var line_spacing = 1;\n\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!is_on_head && this.note.beam) {\n          line_spacing += 0.5;\n        }\n\n        var total_spacing = spacing * (this.text_line + line_spacing);\n        var glyph_y_between_lines = top - 7 - total_spacing;\n\n        // Get initial coordinates for the modifier position\n        var start = this.note.getModifierStartXY(this.position, this.index);\n        var glyph_x = start.x + this.ornament.shift_right;\n        var glyph_y = Math.min(stave.getYForTopText(this.text_line) - 3, glyph_y_between_lines);\n        glyph_y += this.ornament.shift_up + this.y_shift;\n\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n          glyph_x += this.ornament.width;\n          var next_context = TickContext.getNextContext(this.note.getTickContext());\n          if (next_context) {\n            glyph_x += (next_context.getX() - glyph_x) * 0.5;\n          } else {\n            glyph_x += (stave.x + stave.width - glyph_x) * 0.5;\n          }\n        }\n\n        var ornament = this;\n        function drawAccidental(ctx, code, upper) {\n          var accidental = Flow.accidentalCodes(code);\n\n          var acc_x = glyph_x - 3;\n          var acc_y = glyph_y + 2;\n\n          // Special adjustments for trill glyph\n          if (upper) {\n            acc_y -= mods ? mods.height : 18;\n            acc_y += ornament.type === 'tr' ? -8 : 0;\n          } else {\n            acc_y += ornament.type === 'tr' ? -6 : 0;\n          }\n\n          // Fine tune position of accidental glyph\n          var mods = acc_mods[code];\n          if (mods) {\n            acc_x += mods.shift_x;\n            acc_y += upper ? mods.shift_y_upper : mods.shift_y_lower;\n          }\n\n          // Render the glyph\n          var scale = ornament.render_options.font_scale / 1.3;\n          Glyph.renderGlyph(ctx, acc_x, acc_y, scale, accidental.code);\n\n          // If rendered a bottom accidental, increase the y value by the\n          // accidental height so that the ornament's glyph is shifted up\n          if (!upper) {\n            glyph_y -= mods ? mods.height : 18;\n          }\n        }\n\n        // Draw lower accidental for ornament\n        if (this.accidental_lower) {\n          drawAccidental(ctx, this.accidental_lower, false, glyph_x, glyph_y);\n        }\n\n        L$10('Rendering ornament: ', this.ornament, glyph_x, glyph_y);\n        Glyph.renderGlyph(ctx, glyph_x, glyph_y, this.render_options.font_scale, this.ornament.code);\n\n        // Draw upper accidental for ornament\n        if (this.accidental_upper) {\n          drawAccidental(ctx, this.accidental_upper, true, glyph_x, glyph_y);\n        }\n      }\n    }]);\n    return Ornament;\n  }(Modifier);\n\n  // To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\n  function L$11() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (Annotation.DEBUG) Vex$1.L('Vex.Flow.Annotation', args);\n  }\n\n  var Annotation = function (_Modifier) {\n    inherits(Annotation, _Modifier);\n    createClass(Annotation, null, [{\n      key: 'format',\n\n\n      // Arrange annotations within a `ModifierContext`\n      value: function format(annotations, state) {\n        if (!annotations || annotations.length === 0) return false;\n\n        var width = 0;\n        for (var i = 0; i < annotations.length; ++i) {\n          var annotation = annotations[i];\n          width = Math.max(annotation.getWidth(), width);\n          if (annotation.getPosition() === Modifier.Position.ABOVE) {\n            annotation.setTextLine(state.top_text_line);\n            state.top_text_line++;\n          } else {\n            annotation.setTextLine(state.text_line);\n            state.text_line++;\n          }\n        }\n\n        state.left_shift += width / 2;\n        state.right_shift += width / 2;\n        return true;\n      }\n\n      // ## Prototype Methods\n      //\n      // Annotations inherit from `Modifier` and is positioned correctly when\n      // in a `ModifierContext`.\n      // Create a new `Annotation` with the string `text`.\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'annotations';\n      }\n\n      // Text annotations can be positioned and justified relative to the note.\n\n    }, {\n      key: 'Justify',\n      get: function get() {\n        return {\n          LEFT: 1,\n          CENTER: 2,\n          RIGHT: 3,\n          CENTER_STEM: 4\n        };\n      }\n    }, {\n      key: 'VerticalJustify',\n      get: function get() {\n        return {\n          TOP: 1,\n          CENTER: 2,\n          BOTTOM: 3,\n          CENTER_STEM: 4\n        };\n      }\n    }]);\n\n    function Annotation(text) {\n      classCallCheck(this, Annotation);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Annotation).call(this));\n\n      _this.note = null;\n      _this.index = null;\n      _this.text = text;\n      _this.justification = Annotation.Justify.CENTER;\n      _this.vert_justification = Annotation.VerticalJustify.TOP;\n      _this.font = {\n        family: 'Arial',\n        size: 10,\n        weight: ''\n      };\n\n      // The default width is calculated from the text.\n      _this.setWidth(Flow.textWidth(text));\n      return _this;\n    }\n\n    createClass(Annotation, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Annotation.CATEGORY;\n      }\n\n      // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n\n    }, {\n      key: 'setFont',\n      value: function setFont(family, size, weight) {\n        this.font = { family: family, size: size, weight: weight };\n        return this;\n      }\n\n      // Set vertical position of text (above or below stave). `just` must be\n      // a value in `Annotation.VerticalJustify`.\n\n    }, {\n      key: 'setVerticalJustification',\n      value: function setVerticalJustification(just) {\n        this.vert_justification = just;\n        return this;\n      }\n\n      // Get and set horizontal justification. `justification` is a value in\n      // `Annotation.Justify`.\n\n    }, {\n      key: 'getJustification',\n      value: function getJustification() {\n        return this.justification;\n      }\n    }, {\n      key: 'setJustification',\n      value: function setJustification(justification) {\n        this.justification = justification;\n        return this;\n      }\n\n      // Render text beside the note.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw text annotation without a context.\");\n        }\n        if (!this.note) {\n          throw new Vex$1.RERR('NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\");\n        }\n\n        var start = this.note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n\n        // We're changing context parameters. Save current state.\n        this.context.save();\n        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n        var text_width = this.context.measureText(this.text).width;\n\n        // Estimate text height to be the same as the width of an 'm'.\n        //\n        // This is a hack to work around the inability to measure text height\n        // in HTML5 Canvas (and SVG).\n        var text_height = this.context.measureText('m').width;\n        var x = void 0;\n        var y = void 0;\n\n        if (this.justification === Annotation.Justify.LEFT) {\n          x = start.x;\n        } else if (this.justification === Annotation.Justify.RIGHT) {\n          x = start.x - text_width;\n        } else if (this.justification === Annotation.Justify.CENTER) {\n          x = start.x - text_width / 2;\n        } else /* CENTER_STEM */{\n            x = this.note.getStemX() - text_width / 2;\n          }\n\n        var stem_ext = void 0;\n        var spacing = void 0;\n        var has_stem = this.note.hasStem();\n        var stave = this.note.getStave();\n\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n          stem_ext = this.note.getStem().getExtents();\n          spacing = stave.getSpacingBetweenLines();\n        }\n\n        if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n          y = stave.getYForBottomText(this.text_line);\n          if (has_stem) {\n            var stem_base = this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n            y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n          }\n        } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n          var yt = this.note.getYForTopText(this.text_line) - 1;\n          var yb = stave.getYForBottomText(this.text_line);\n          y = yt + (yb - yt) / 2 + text_height / 2;\n        } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n          y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n          if (has_stem) {\n            y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n          }\n        } else /* CENTER_STEM */{\n            var extents = this.note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n          }\n\n        L$11('Rendering annotation: ', this.text, x, y);\n        this.context.fillText(this.text, x, y);\n        this.context.restore();\n      }\n    }]);\n    return Annotation;\n  }(Modifier);\n\n  /**\n     @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     @param release If true, render a release. (DEPRECATED)\n     @param phrase If set, ignore \"text\" and \"release\", and use the more\n                   sophisticated phrase specified.\n\n     Example of a phrase:\n\n       [{\n         type: UP,\n         text: \"whole\"\n         width: 8;\n       },\n       {\n         type: DOWN,\n         text: \"whole\"\n         width: 8;\n       },\n       {\n         type: UP,\n         text: \"half\"\n         width: 8;\n       },\n       {\n         type: UP,\n         text: \"whole\"\n         width: 8;\n       },\n       {\n         type: DOWN,\n         text: \"1 1/2\"\n         width: 8;\n       }]\n   */\n  var Bend = function (_Modifier) {\n    inherits(Bend, _Modifier);\n    createClass(Bend, null, [{\n      key: 'format',\n\n\n      // ## Static Methods\n      // Arrange bends in `ModifierContext`\n      value: function format(bends, state) {\n        if (!bends || bends.length === 0) return false;\n\n        var last_width = 0;\n        // Bends are always on top.\n        var text_line = state.top_text_line;\n\n        // Format Bends\n        for (var i = 0; i < bends.length; ++i) {\n          var bend = bends[i];\n          bend.setXShift(last_width);\n          last_width = bend.getWidth();\n          bend.setTextLine(text_line);\n        }\n\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n      }\n\n      // ## Prototype Methods\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'bends';\n      }\n    }, {\n      key: 'UP',\n      get: function get() {\n        return 0;\n      }\n    }, {\n      key: 'DOWN',\n      get: function get() {\n        return 1;\n      }\n    }]);\n\n    function Bend(text, release, phrase) {\n      classCallCheck(this, Bend);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Bend).call(this));\n\n      _this.text = text;\n      _this.x_shift = 0;\n      _this.release = release || false;\n      _this.font = '10pt Arial';\n      _this.render_options = {\n        line_width: 1.5,\n        line_style: '#777777',\n        bend_width: 8,\n        release_width: 8\n      };\n\n      if (phrase) {\n        _this.phrase = phrase;\n      } else {\n        // Backward compatibility\n        _this.phrase = [{ type: Bend.UP, text: _this.text }];\n        if (_this.release) _this.phrase.push({ type: Bend.DOWN, text: '' });\n      }\n\n      _this.updateWidth();\n      return _this;\n    }\n\n    createClass(Bend, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Bend.CATEGORY;\n      }\n    }, {\n      key: 'setXShift',\n      value: function setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n      }\n    }, {\n      key: 'setFont',\n      value: function setFont(font) {\n        this.font = font;return this;\n      }\n    }, {\n      key: 'getText',\n      value: function getText() {\n        return this.text;\n      }\n    }, {\n      key: 'updateWidth',\n      value: function updateWidth() {\n        var that = this;\n\n        function measure_text(text) {\n          var text_width = void 0;\n          if (that.context) {\n            text_width = that.context.measureText(text).width;\n          } else {\n            text_width = Flow.textWidth(text);\n          }\n\n          return text_width;\n        }\n\n        var total_width = 0;\n        for (var i = 0; i < this.phrase.length; ++i) {\n          var bend = this.phrase[i];\n          if ('width' in bend) {\n            total_width += bend.width;\n          } else {\n            var additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n\n            bend.width = Vex$1.Max(additional_width, measure_text(bend.text)) + 3;\n            bend.draw_width = bend.width / 2;\n            total_width += bend.width;\n          }\n        }\n\n        this.setWidth(total_width + this.x_shift);\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw bend without a context.\");\n        }\n        if (!(this.note && this.index != null)) {\n          throw new Vex$1.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n        }\n\n        var start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        var x_shift = this.x_shift;\n\n        var ctx = this.context;\n        var bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n        var annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n        var that = this;\n\n        function renderBend(x, y, width, height) {\n          var cp_x = x + width;\n          var cp_y = y;\n\n          ctx.save();\n          ctx.beginPath();\n          ctx.setLineWidth(that.render_options.line_width);\n          ctx.setStrokeStyle(that.render_options.line_style);\n          ctx.setFillStyle(that.render_options.line_style);\n          ctx.moveTo(x, y);\n          ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n          ctx.stroke();\n          ctx.restore();\n        }\n\n        function renderRelease(x, y, width, height) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.setLineWidth(that.render_options.line_width);\n          ctx.setStrokeStyle(that.render_options.line_style);\n          ctx.setFillStyle(that.render_options.line_style);\n          ctx.moveTo(x, height);\n          ctx.quadraticCurveTo(x + width, height, x + width, y);\n          ctx.stroke();\n          ctx.restore();\n        }\n\n        function renderArrowHead(x, y, direction) {\n          var width = 4;\n          var dir = direction || 1;\n\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(x - width, y + width * dir);\n          ctx.lineTo(x + width, y + width * dir);\n          ctx.closePath();\n          ctx.fill();\n        }\n\n        function renderText(x, text) {\n          ctx.save();\n          ctx.setRawFont(that.font);\n          var render_x = x - ctx.measureText(text).width / 2;\n          ctx.fillText(text, render_x, annotation_y);\n          ctx.restore();\n        }\n\n        var last_bend = null;\n        var last_drawn_width = 0;\n        for (var i = 0; i < this.phrase.length; ++i) {\n          var bend = this.phrase[i];\n          if (i === 0) bend.draw_width += x_shift;\n\n          last_drawn_width = bend.draw_width + (last_bend ? last_bend.draw_width : 0) - (i === 1 ? x_shift : 0);\n          if (bend.type === Bend.UP) {\n            if (last_bend && last_bend.type === Bend.UP) {\n              renderArrowHead(start.x, bend_height);\n            }\n\n            renderBend(start.x, start.y, last_drawn_width, bend_height);\n          }\n\n          if (bend.type === Bend.DOWN) {\n            if (last_bend && last_bend.type === Bend.UP) {\n              renderRelease(start.x, start.y, last_drawn_width, bend_height);\n            }\n\n            if (last_bend && last_bend.type === Bend.DOWN) {\n              renderArrowHead(start.x, start.y, -1);\n              renderRelease(start.x, start.y, last_drawn_width, bend_height);\n            }\n\n            if (last_bend === null) {\n              last_drawn_width = bend.draw_width;\n              renderRelease(start.x, start.y, last_drawn_width, bend_height);\n            }\n          }\n\n          renderText(start.x + last_drawn_width, bend.text);\n          last_bend = bend;\n          last_bend.x = start.x;\n\n          start.x += last_drawn_width;\n        }\n\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n          renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n        } else if (last_bend.type === Bend.DOWN) {\n          renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n      }\n    }]);\n    return Bend;\n  }(Modifier);\n\n  var Vibrato = function (_Modifier) {\n    inherits(Vibrato, _Modifier);\n    createClass(Vibrato, null, [{\n      key: 'format',\n\n\n      // ## Static Methods\n      // Arrange vibratos inside a `ModifierContext`.\n      value: function format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0) return false;\n\n        // Vibratos are always on top.\n        var text_line = state.top_text_line;\n        var width = 0;\n        var shift = state.right_shift - 7;\n\n        // If there's a bend, drop the text line\n        var bends = context.getModifiers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n          text_line--;\n        }\n\n        // Format Vibratos\n        for (var i = 0; i < vibratos.length; ++i) {\n          var vibrato = vibratos[i];\n          vibrato.setXShift(shift);\n          vibrato.setTextLine(text_line);\n          width += vibrato.getWidth();\n          shift += width;\n        }\n\n        state.right_shift += width;\n        state.top_text_line += 1;\n        return true;\n      }\n\n      // ## Prototype Methods\n\n    }, {\n      key: 'CATEGORY',\n      get: function get() {\n        return 'vibratos';\n      }\n    }]);\n\n    function Vibrato() {\n      classCallCheck(this, Vibrato);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Vibrato).call(this));\n\n      _this.harsh = false;\n      _this.position = Modifier.Position.RIGHT;\n      _this.render_options = {\n        vibrato_width: 20,\n        wave_height: 6,\n        wave_width: 4,\n        wave_girth: 2\n      };\n\n      _this.setVibratoWidth(_this.render_options.vibrato_width);\n      return _this;\n    }\n\n    createClass(Vibrato, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Vibrato.CATEGORY;\n      }\n    }, {\n      key: 'setHarsh',\n      value: function setHarsh(harsh) {\n        this.harsh = harsh;return this;\n      }\n    }, {\n      key: 'setVibratoWidth',\n      value: function setVibratoWidth(width) {\n        this.vibrato_width = width;\n        this.setWidth(this.vibrato_width);\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var _this2 = this;\n\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', \"Can't draw vibrato without a context.\");\n        }\n\n        if (!this.note) {\n          throw new Vex$1.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n        }\n\n        var start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n        var ctx = this.context;\n        var vibrato_width = this.vibrato_width;\n\n        var renderVibrato = function renderVibrato(x, y) {\n          var _render_options = _this2.render_options;\n          var wave_width = _render_options.wave_width;\n          var wave_girth = _render_options.wave_girth;\n          var wave_height = _render_options.wave_height;\n\n          var num_waves = vibrato_width / wave_width;\n\n          ctx.beginPath();\n\n          var i = void 0;\n          if (_this2.harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n              ctx.lineTo(x + wave_width, y - wave_height / 2);\n              x += wave_width;\n              ctx.lineTo(x + wave_width, y + wave_height / 2);\n              x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n              ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n              x -= wave_width;\n              ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n              x -= wave_width;\n            }\n            ctx.fill();\n          } else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n              ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n              x += wave_width;\n              ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n              x += wave_width;\n            }\n\n            for (i = 0; i < num_waves / 2; ++i) {\n              ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n              x -= wave_width;\n              ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n              x -= wave_width;\n            }\n            ctx.fill();\n          }\n        };\n\n        var vx = start.x + this.x_shift;\n        var vy = this.note.getYForTopText(this.text_line) + 2;\n\n        renderVibrato(vx, vy);\n      }\n    }]);\n    return Vibrato;\n  }(Modifier);\n\n  // To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n  function L$6() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (ModifierContext.DEBUG) Vex$1.L('Vex.Flow.ModifierContext', args);\n  }\n\n  var ModifierContext = function () {\n    function ModifierContext() {\n      classCallCheck(this, ModifierContext);\n\n      // Current modifiers\n      this.modifiers = {};\n\n      // Formatting data.\n      this.preFormatted = false;\n      this.postFormatted = false;\n      this.width = 0;\n      this.spacing = 0;\n      this.state = {\n        left_shift: 0,\n        right_shift: 0,\n        text_line: 0,\n        top_text_line: 0\n      };\n\n      // Add new modifiers to this array. The ordering is significant -- lower\n      // modifiers are formatted and rendered before higher ones.\n      this.PREFORMAT = [StaveNote, Dot, FretHandFinger, Accidental, GraceNoteGroup, Stroke, StringNumber, Articulation, Ornament, Annotation, Bend, Vibrato];\n\n      // If post-formatting is required for an element, add it to this array.\n      this.POSTFORMAT = [StaveNote];\n    }\n\n    createClass(ModifierContext, [{\n      key: 'addModifier',\n      value: function addModifier(modifier) {\n        var type = modifier.getCategory();\n        if (!this.modifiers[type]) this.modifiers[type] = [];\n        this.modifiers[type].push(modifier);\n        modifier.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n      }\n    }, {\n      key: 'getModifiers',\n      value: function getModifiers(type) {\n        return this.modifiers[type];\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n    }, {\n      key: 'getExtraLeftPx',\n      value: function getExtraLeftPx() {\n        return this.state.left_shift;\n      }\n    }, {\n      key: 'getExtraRightPx',\n      value: function getExtraRightPx() {\n        return this.state.right_shift;\n      }\n    }, {\n      key: 'getState',\n      value: function getState() {\n        return this.state;\n      }\n    }, {\n      key: 'getMetrics',\n      value: function getMetrics() {\n        if (!this.formatted) {\n          throw new Vex$1.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n        }\n\n        return {\n          width: this.state.left_shift + this.state.right_shift + this.spacing,\n          spacing: this.spacing,\n          extra_left_px: this.state.left_shift,\n          extra_right_px: this.state.right_shift\n        };\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        var _this = this;\n\n        if (this.preFormatted) return;\n        this.PREFORMAT.forEach(function (modifier) {\n          L$6('Preformatting ModifierContext: ', modifier.CATEGORY);\n          modifier.format(_this.getModifiers(modifier.CATEGORY), _this.state, _this);\n        });\n\n        // Update width of this modifier context\n        this.width = this.state.left_shift + this.state.right_shift;\n        this.preFormatted = true;\n      }\n    }, {\n      key: 'postFormat',\n      value: function postFormat() {\n        var _this2 = this;\n\n        if (this.postFormatted) return;\n        this.POSTFORMAT.forEach(function (modifier) {\n          L$6('Postformatting ModifierContext: ', modifier.CATEGORY);\n          modifier.postFormat(_this2.getModifiers(modifier.CATEGORY), _this2);\n        });\n      }\n    }]);\n    return ModifierContext;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\n  function L() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (Formatter.DEBUG) Vex$1.L('Vex.Flow.Formatter', args);\n  }\n\n  // Helper function to locate the next non-rest note(s).\n  function lookAhead(notes, restLine, i, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    var nextRestLine = restLine;\n\n    // Get the rest line for next valid non-rest note group.\n    for (i += 1; i < notes.length; i += 1) {\n      var note = notes[i];\n      if (!note.isRest() && !note.shouldIgnoreTicks()) {\n        nextRestLine = note.getLineForRest();\n        break;\n      }\n    }\n\n    // Locate the mid point between two lines.\n    if (compare && restLine !== nextRestLine) {\n      var top = Math.max(restLine, nextRestLine);\n      var bot = Math.min(restLine, nextRestLine);\n      nextRestLine = Vex$1.MidLine(top, bot);\n    }\n    return nextRestLine;\n  }\n\n  // Take an array of `voices` and place aligned tickables in the same context. Returns\n  // a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n  // multiplier.\n  //\n  // Params:\n  // * `voices`: Array of `Voice` instances.\n  // * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n  // * `addToContext`: Function to add tickable to context.\n  function createContexts(voices, ContextType, addToContext) {\n    if (!voices || !voices.length) {\n      throw new Vex$1.RERR('BadArgument', 'No voices to format');\n    }\n\n    // Find out highest common multiple of resolution multipliers.\n    // The purpose of this is to find out a common denominator\n    // for all fractional tick values in all tickables of all voices,\n    // so that the values can be expanded and the numerator used\n    // as an integer tick value.\n    var totalTicks = voices[0].getTotalTicks();\n    var resolutionMultiplier = voices.reduce(function (resolutionMultiplier, voice) {\n      if (!voice.getTotalTicks().equals(totalTicks)) {\n        throw new Vex$1.RERR('TickMismatch', 'Voices should have same total note duration in ticks.');\n      }\n\n      if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n        throw new Vex$1.RERR('IncompleteVoice', 'Voice does not have enough notes.');\n      }\n\n      return Math.max(resolutionMultiplier, Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier()));\n    }, 1);\n\n    // Initialize tick maps.\n    var tickToContextMap = {};\n    var tickList = [];\n    var contexts = [];\n\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach(function (voice) {\n      // Use resolution multiplier as denominator to expand ticks\n      // to suitable integer values, so that no additional expansion\n      // of fractional tick values is needed.\n      var ticksUsed = new Fraction(0, resolutionMultiplier);\n\n      voice.getTickables().forEach(function (tickable) {\n        var integerTicks = ticksUsed.numerator;\n\n        // If we have no tick context for this tick, create one.\n        if (!tickToContextMap[integerTicks]) {\n          var newContext = new ContextType();\n          contexts.push(newContext);\n          tickToContextMap[integerTicks] = newContext;\n        }\n\n        // Add this tickable to the TickContext.\n        addToContext(tickable, tickToContextMap[integerTicks]);\n\n        // Maintain a sorted list of tick contexts.\n        tickList.push(integerTicks);\n        ticksUsed.add(tickable.getTicks());\n      });\n    });\n\n    return {\n      map: tickToContextMap,\n      array: contexts,\n      list: Vex$1.SortAndUnique(tickList, function (a, b) {\n        return a - b;\n      }, function (a, b) {\n        return a === b;\n      }),\n      resolutionMultiplier: resolutionMultiplier\n    };\n  }\n\n  var Formatter = function () {\n    createClass(Formatter, null, [{\n      key: 'FormatAndDraw',\n\n\n      // Helper function to format and draw a single voice. Returns a bounding\n      // box for the notation.\n      //\n      // Parameters:\n      // * `ctx` - The rendering context\n      // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n      // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n      // * `params` - One of below:\n      //    * Setting `autobeam` only `(context, stave, notes, true)` or\n      //      `(ctx, stave, notes, {autobeam: true})`\n      //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n      //    * Setting both a struct is needed `(context, stave, notes, {\n      //      autobeam: true, align_rests: true})`\n      //\n      // `autobeam` automatically generates beams for the notes.\n      // `align_rests` aligns rests with nearby notes.\n      value: function FormatAndDraw(ctx, stave, notes, params) {\n        var options = {\n          auto_beam: false,\n          align_rests: false\n        };\n\n        if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n          Vex$1.Merge(options, params);\n        } else if (typeof params === 'boolean') {\n          options.auto_beam = params;\n        }\n\n        // Start by creating a voice and adding all the notes to it.\n        var voice = new Voice(Flow.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n\n        // Then create beams, if requested.\n        var beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter().joinVoices([voice], { align_rests: options.align_rests }).formatToStave([voice], stave, { align_rests: options.align_rests });\n\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach(function (beam) {\n          return beam.setContext(ctx).draw();\n        });\n\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n      }\n\n      // Helper function to format and draw aligned tab and stave notes in two\n      // separate staves.\n      //\n      // Parameters:\n      // * `ctx` - The rendering context\n      // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n      // * `stave` - A `Stave` instance on which to render `Note`s.\n      // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n      // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n      // * `autobeam` - Automatically generate beams.\n      // * `params` - A configuration object:\n      //    * `autobeam` automatically generates beams for the notes.\n      //    * `align_rests` aligns rests with nearby notes.\n\n    }, {\n      key: 'FormatAndDrawTab',\n      value: function FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        var opts = {\n          auto_beam: autobeam,\n          align_rests: false\n        };\n\n        if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n          Vex$1.Merge(opts, params);\n        } else if (typeof params === 'boolean') {\n          opts.auto_beam = params;\n        }\n\n        // Create a `4/4` voice for `notes`.\n        var notevoice = new Voice(Flow.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n\n        // Create a `4/4` voice for `tabnotes`.\n        var tabvoice = new Voice(Flow.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n\n        // Then create beams, if requested.\n        var beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter().joinVoices([notevoice], { align_rests: opts.align_rests }).joinVoices([tabvoice]).formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach(function (beam) {\n          return beam.setContext(ctx).draw();\n        });\n\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n      }\n\n      // Auto position rests based on previous/next note positions.\n      //\n      // Params:\n      // * `notes`: An array of notes.\n      // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n      // * `alignTuplets`: If set to false, ignores tuplets.\n\n    }, {\n      key: 'AlignRestsToNotes',\n      value: function AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n        notes.forEach(function (note, index) {\n          if (note instanceof StaveNote && note.isRest()) {\n            if (note.tuplet && !alignTuplets) return;\n\n            // If activated rests not on default can be rendered as specified.\n            var position = note.getGlyph().position.toUpperCase();\n            if (position !== 'R/4' && position !== 'B/4') return;\n\n            if (alignAllNotes || note.beam != null) {\n              // Align rests with previous/next notes.\n              var props = note.getKeyProps()[0];\n              if (index === 0) {\n                props.line = lookAhead(notes, props.line, index, false);\n                note.setKeyLine(0, props.line);\n              } else if (index > 0 && index < notes.length) {\n                // If previous note is a rest, use its line number.\n                var restLine = void 0;\n                if (notes[index - 1].isRest()) {\n                  restLine = notes[index - 1].getKeyProps()[0].line;\n                  props.line = restLine;\n                } else {\n                  restLine = notes[index - 1].getLineForRest();\n                  // Get the rest line for next valid non-rest note group.\n                  props.line = lookAhead(notes, restLine, index, true);\n                }\n                note.setKeyLine(0, props.line);\n              }\n            }\n          }\n        });\n\n        return this;\n      }\n    }]);\n\n    function Formatter() {\n      classCallCheck(this, Formatter);\n\n      // Minimum width required to render all the notes in the voices.\n      this.minTotalWidth = 0;\n\n      // This is set to `true` after `minTotalWidth` is calculated.\n      this.hasMinTotalWidth = false;\n\n      // The suggested amount of space for each tick.\n      this.pixelsPerTick = 0;\n\n      // Total number of ticks in the voice.\n      this.totalTicks = new Fraction(0, 1);\n\n      // Arrays of tick and modifier contexts.\n      this.tickContexts = null;\n      this.modiferContexts = null;\n    }\n\n    // Find all the rests in each of the `voices` and align them\n    // to neighboring notes. If `alignAllNotes` is `false`, then only\n    // align non-beamed notes.\n\n\n    createClass(Formatter, [{\n      key: 'alignRests',\n      value: function alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n          throw new Vex$1.RERR('BadArgument', 'No voices to format rests');\n        }\n\n        voices.forEach(function (voice) {\n          return Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes);\n        });\n      }\n\n      // Calculate the minimum width required to align and format `voices`.\n\n    }, {\n      key: 'preCalculateMinTotalWidth',\n      value: function preCalculateMinTotalWidth(voices) {\n        // Cache results.\n        if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n        // Create tick contexts if not already created.\n        if (!this.tickContexts) {\n          if (!voices) {\n            throw new Vex$1.RERR('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n          }\n\n          this.createTickContexts(voices);\n        }\n\n        var _tickContexts = this.tickContexts;\n        var contextList = _tickContexts.list;\n        var contextMap = _tickContexts.map;\n\n        // Go through each tick context and calculate total width.\n\n        this.minTotalWidth = contextList.map(function (tick) {\n          var context = contextMap[tick];\n          context.preFormat();\n          return context.getWidth();\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n\n        this.hasMinTotalWidth = true;\n\n        return this.minTotalWidth;\n      }\n\n      // Get minimum width required to render all voices. Either `format` or\n      // `preCalculateMinTotalWidth` must be called before this method.\n\n    }, {\n      key: 'getMinTotalWidth',\n      value: function getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n          throw new Vex$1.RERR('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n\n        return this.minTotalWidth;\n      }\n\n      // Create `ModifierContext`s for each tick in `voices`.\n\n    }, {\n      key: 'createModifierContexts',\n      value: function createModifierContexts(voices) {\n        var contexts = createContexts(voices, ModifierContext, function (tickable, context) {\n          return tickable.addToModifierContext(context);\n        });\n\n        this.modiferContexts = contexts;\n        return contexts;\n      }\n\n      // Create `TickContext`s for each tick in `voices`. Also calculate the\n      // total number of ticks in voices.\n\n    }, {\n      key: 'createTickContexts',\n      value: function createTickContexts(voices) {\n        var contexts = createContexts(voices, TickContext, function (tickable, context) {\n          return context.addTickable(tickable);\n        });\n\n        contexts.array.forEach(function (context) {\n          context.tContexts = contexts.array;\n        });\n\n        this.totalTicks = voices[0].getTicksUsed().clone();\n        this.tickContexts = contexts;\n        return contexts;\n      }\n\n      // This is the core formatter logic. Format voices and justify them\n      // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n      // that can't retreive widths without a canvas. This method sets the `x` positions\n      // of all the tickables/notes in the formatter.\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat(justifyWidth, renderingContext, voices, stave) {\n        var _this = this;\n\n        // Initialize context maps.\n        var contexts = this.tickContexts;\n        var contextList = contexts.list;\n        var contextMap = contexts.map;\n        var resolutionMultiplier = contexts.resolutionMultiplier;\n\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n\n        if (voices && stave) {\n          voices.forEach(function (voice) {\n            return voice.setStave(stave).preFormat();\n          });\n        }\n\n        // Figure out how many pixels to allocate per tick.\n        if (!justifyWidth) {\n          justifyWidth = 0;\n          this.pixelsPerTick = 0;\n        } else {\n          this.pixelsPerTick = justifyWidth / (this.totalTicks.value() * resolutionMultiplier);\n        }\n\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        var x = 0;\n        var centerX = justifyWidth / 2;\n        var whiteSpace = 0; // White space to right of previous note\n        var tickSpace = 0; // Pixels from prev note x-pos to curent note x-pos\n        var prevTick = 0;\n        var prevWidth = 0;\n        var lastMetrics = null;\n        var initialJustifyWidth = justifyWidth;\n        this.minTotalWidth = 0;\n\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach(function (tick, index) {\n          var context = contextMap[tick];\n          if (renderingContext) context.setContext(renderingContext);\n\n          // Make sure that all tickables in this context have calculated their\n          // space requirements.\n          context.preFormat();\n\n          var thisMetrics = context.getMetrics();\n          var width = context.getWidth();\n          _this.minTotalWidth += width;\n          var minX = 0;\n          var pxUsed = width;\n\n          // Calculate space between last note and next note.\n          tickSpace = Math.min((tick - prevTick) * _this.pixelsPerTick, pxUsed);\n\n          // Shift next note up `tickSpace` pixels.\n          var setX = x + tickSpace;\n\n          // Calculate the minimum next note position to allow for right modifiers.\n          if (lastMetrics != null) {\n            minX = x + prevWidth - lastMetrics.extraLeftPx;\n          }\n\n          // Determine the space required for the previous tick.\n          // The `shouldIgnoreTicks` bool is true for elements in the stave\n          // that don't consume ticks (bar lines, key and time signatures, etc.)\n          setX = context.shouldIgnoreTicks() ? minX + context.getWidth() : Math.max(setX, minX);\n\n          if (context.shouldIgnoreTicks() && justifyWidth) {\n            // This note stole room... recalculate with new justification width.\n            justifyWidth -= context.getWidth();\n            _this.pixelsPerTick = justifyWidth / (_this.totalTicks.value() * resolutionMultiplier);\n          }\n\n          // Determine pixels needed for left modifiers.\n          var leftPx = thisMetrics.extraLeftPx;\n\n          // Determine white space to right of previous tick (from right modifiers.)\n          if (lastMetrics != null) {\n            whiteSpace = setX - x - (prevWidth - lastMetrics.extraLeftPx);\n          }\n\n          // Deduct pixels from white space quota.\n          if (index > 0 && whiteSpace > 0) {\n            if (whiteSpace >= leftPx) {\n              // Have enough white space for left modifiers - no offset needed.\n              leftPx = 0;\n            } else {\n              // Decrease left modifier offset by amount of white space.\n              leftPx -= whiteSpace;\n            }\n          }\n\n          // Adjust the tick x position with the left modifier offset.\n          setX += leftPx;\n\n          // Set the `x` value for the context, which sets the `x` value for all\n          // tickables in this context.\n          context.setX(setX);\n          context.setPixelsUsed(pxUsed); // ??? Remove this if nothing breaks\n\n          lastMetrics = thisMetrics;\n          prevWidth = width;\n          prevTick = tick;\n          x = setX;\n        });\n\n        this.hasMinTotalWidth = true;\n        if (justifyWidth > 0) {\n          (function () {\n            // Pass 2: Take leftover width, and distribute it to proportionately to\n            // all notes.\n            var remainingX = initialJustifyWidth - (x + prevWidth);\n            var leftoverPxPerTick = remainingX / (_this.totalTicks.value() * resolutionMultiplier);\n            var spaceAccum = 0;\n\n            contextList.forEach(function (tick, index) {\n              var prevTick = contextList[index - 1] || 0;\n              var context = contextMap[tick];\n              var tickSpace = (tick - prevTick) * leftoverPxPerTick;\n              spaceAccum += tickSpace;\n\n              context.setX(context.getX() + spaceAccum);\n\n              // Move center aligned tickables to middle\n              context.getCenterAlignedTickables().forEach(function (tickable) {\n                // eslint-disable-line\n                tickable.center_x_shift = centerX - context.getX();\n              });\n            });\n          })();\n        }\n      }\n\n      // This is the top-level call for all formatting logic completed\n      // after `x` *and* `y` values have been computed for the notes\n      // in the voices.\n\n    }, {\n      key: 'postFormat',\n      value: function postFormat() {\n        var postFormatContexts = function postFormatContexts(contexts) {\n          return contexts.list.forEach(function (tick) {\n            return contexts.map[tick].postFormat();\n          });\n        };\n\n        postFormatContexts(this.modiferContexts);\n        postFormatContexts(this.tickContexts);\n\n        return this;\n      }\n\n      // Take all `voices` and create `ModifierContext`s out of them. This tells\n      // the formatters that the voices belong on a single stave.\n\n    }, {\n      key: 'joinVoices',\n      value: function joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n      }\n\n      // Align rests in voices, justify the contexts, and position the notes\n      // so voices are aligned and ready to render onto the stave. This method\n      // mutates the `x` positions of all tickables in `voices`.\n      //\n      // Voices are full justified to fit in `justifyWidth` pixels.\n      //\n      // Set `options.context` to the rendering context. Set `options.align_rests`\n      // to true to enable rest alignment.\n\n    }, {\n      key: 'format',\n      value: function format(voices, justifyWidth, options) {\n        var opts = {\n          align_rests: false,\n          context: null,\n          stave: null\n        };\n\n        Vex$1.Merge(opts, options);\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave) this.postFormat();\n\n        return this;\n      }\n\n      // This method is just like `format` except that the `justifyWidth` is inferred\n      // from the `stave`.\n\n    }, {\n      key: 'formatToStave',\n      value: function formatToStave(voices, stave, options) {\n        var justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n        L('Formatting voices to width: ', justifyWidth);\n        var opts = { context: stave.getContext() };\n        Vex$1.Merge(opts, options);\n        return this.format(voices, justifyWidth, opts);\n      }\n    }]);\n    return Formatter;\n  }();\n\n  // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n  //\n  // ## Description\n  // A base class for stave modifiers (e.g. clefs, key signatures)\n\n  var StaveModifier = function () {\n    createClass(StaveModifier, null, [{\n      key: 'Position',\n      get: function get() {\n        return {\n          LEFT: 1,\n          RIGHT: 2,\n          ABOVE: 3,\n          BELOW: 4,\n          BEGIN: 5,\n          END: 6\n        };\n      }\n    }]);\n\n    function StaveModifier() {\n      classCallCheck(this, StaveModifier);\n\n      this.padding = 10;\n      this.position = StaveModifier.Position.ABOVE;\n    }\n\n    createClass(StaveModifier, [{\n      key: 'getPosition',\n      value: function getPosition() {\n        return this.position;\n      }\n    }, {\n      key: 'setPosition',\n      value: function setPosition(position) {\n        this.position = position;return this;\n      }\n    }, {\n      key: 'getStave',\n      value: function getStave() {\n        return this.stave;\n      }\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        this.stave = stave;return this;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n    }, {\n      key: 'setWidth',\n      value: function setWidth(width) {\n        this.width = width;return this;\n      }\n    }, {\n      key: 'getX',\n      value: function getX() {\n        return this.x;\n      }\n    }, {\n      key: 'setX',\n      value: function setX(x) {\n        this.x = x;return this;\n      }\n    }, {\n      key: 'getCategory',\n      value: function getCategory() {\n        return '';\n      }\n    }, {\n      key: 'makeSpacer',\n      value: function makeSpacer(padding) {\n        return {\n          getContext: function getContext() {\n            return true;\n          },\n          setStave: function setStave() {},\n          renderToStave: function renderToStave() {},\n          getMetrics: function getMetrics() {\n            return { width: padding };\n          }\n        };\n      }\n    }, {\n      key: 'placeGlyphOnLine',\n      value: function placeGlyphOnLine(glyph, stave, line) {\n        glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n      }\n    }, {\n      key: 'getPadding',\n      value: function getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n      }\n    }, {\n      key: 'setPadding',\n      value: function setPadding(padding) {\n        this.padding = padding;return this;\n      }\n    }]);\n    return StaveModifier;\n  }();\n\n  var Barline = function (_StaveModifier) {\n    inherits(Barline, _StaveModifier);\n    createClass(Barline, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'barlines';\n      }\n    }, {\n      key: 'type',\n      get: function get() {\n        return {\n          SINGLE: 1,\n          DOUBLE: 2,\n          END: 3,\n          REPEAT_BEGIN: 4,\n          REPEAT_END: 5,\n          REPEAT_BOTH: 6,\n          NONE: 7\n        };\n      }\n\n      /**\n       * @constructor\n       */\n\n    }]);\n\n    function Barline(type) {\n      classCallCheck(this, Barline);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Barline).call(this));\n\n      _this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n      var TYPE = Barline.type;\n      _this.widths = {};\n      _this.widths[TYPE.SINGLE] = 5;\n      _this.widths[TYPE.DOUBLE] = 5;\n      _this.widths[TYPE.END] = 5;\n      _this.widths[TYPE.REPEAT_BEGIN] = 5;\n      _this.widths[TYPE.REPEAT_END] = 5;\n      _this.widths[TYPE.REPEAT_BOTH] = 5;\n      _this.widths[TYPE.NONE] = 5;\n\n      _this.paddings = {};\n      _this.paddings[TYPE.SINGLE] = 0;\n      _this.paddings[TYPE.DOUBLE] = 0;\n      _this.paddings[TYPE.END] = 0;\n      _this.paddings[TYPE.REPEAT_BEGIN] = 15;\n      _this.paddings[TYPE.REPEAT_END] = 15;\n      _this.paddings[TYPE.REPEAT_BOTH] = 15;\n      _this.paddings[TYPE.NONE] = 0;\n\n      _this.setPosition(StaveModifier.Position.BEGIN);\n      _this.setType(type);\n      return _this;\n    }\n\n    createClass(Barline, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Barline.CATEGORY;\n      }\n    }, {\n      key: 'getType',\n      value: function getType() {\n        return this.type;\n      }\n    }, {\n      key: 'setType',\n      value: function setType(type) {\n        this.type = type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        return this;\n      }\n\n      // Draw barlines\n\n    }, {\n      key: 'draw',\n      value: function draw(stave) {\n        switch (this.type) {\n          case Barline.type.SINGLE:\n            this.drawVerticalBar(stave, this.x, false);\n            break;\n          case Barline.type.DOUBLE:\n            this.drawVerticalBar(stave, this.x, true);\n            break;\n          case Barline.type.END:\n            this.drawVerticalEndBar(stave, this.x);\n            break;\n          case Barline.type.REPEAT_BEGIN:\n            // If the barline is shifted over (in front of clef/time/key)\n            // Draw vertical bar at the beginning.\n            this.drawRepeatBar(stave, this.x, true);\n            if (stave.getX() !== this.x) {\n              this.drawVerticalBar(stave, stave.getX());\n            }\n\n            break;\n          case Barline.type.REPEAT_END:\n            this.drawRepeatBar(stave, this.x, false);\n            break;\n          case Barline.type.REPEAT_BOTH:\n            this.drawRepeatBar(stave, this.x, false);\n            this.drawRepeatBar(stave, this.x, true);\n            break;\n          default:\n            // Default is NONE, so nothing to draw\n            break;\n        }\n      }\n    }, {\n      key: 'drawVerticalBar',\n      value: function drawVerticalBar(stave, x, double_bar) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n        var topY = stave.getYForLine(0);\n        var botY = stave.getYForLine(stave.getNumLines() - 1) + this.thickness;\n        if (double_bar) stave.context.fillRect(x - 3, topY, 1, botY - topY);\n        stave.context.fillRect(x, topY, 1, botY - topY);\n      }\n    }, {\n      key: 'drawVerticalEndBar',\n      value: function drawVerticalEndBar(stave, x) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n\n        var topY = stave.getYForLine(0);\n        var botY = stave.getYForLine(stave.getNumLines() - 1) + this.thickness;\n        stave.context.fillRect(x - 5, topY, 1, botY - topY);\n        stave.context.fillRect(x - 2, topY, 3, botY - topY);\n      }\n    }, {\n      key: 'drawRepeatBar',\n      value: function drawRepeatBar(stave, x, begin) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n\n        var topY = stave.getYForLine(0);\n        var botY = stave.getYForLine(stave.getNumLines() - 1) + this.thickness;\n        var x_shift = 3;\n\n        if (!begin) {\n          x_shift = -5;\n        }\n\n        stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n        stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n        var dot_radius = 2;\n\n        // Shift dots left or right\n        if (begin) {\n          x_shift += 4;\n        } else {\n          x_shift -= 4;\n        }\n\n        var dot_x = x + x_shift + dot_radius / 2;\n\n        // calculate the y offset based on number of stave lines\n        var y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        var dot_y = topY + y_offset + dot_radius / 2;\n\n        // draw the top repeat dot\n        stave.context.beginPath();\n        stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        stave.context.fill();\n\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        stave.context.beginPath();\n        stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        stave.context.fill();\n      }\n    }]);\n    return Barline;\n  }(StaveModifier);\n\n  var Repetition = function (_StaveModifier) {\n    inherits(Repetition, _StaveModifier);\n    createClass(Repetition, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'repetitions';\n      }\n    }, {\n      key: 'type',\n      get: function get() {\n        return {\n          NONE: 1, // no coda or segno\n          CODA_LEFT: 2, // coda at beginning of stave\n          CODA_RIGHT: 3, // coda at end of stave\n          SEGNO_LEFT: 4, // segno at beginning of stave\n          SEGNO_RIGHT: 5, // segno at end of stave\n          DC: 6, // D.C. at end of stave\n          DC_AL_CODA: 7, // D.C. al coda at end of stave\n          DC_AL_FINE: 8, // D.C. al Fine end of stave\n          DS: 9, // D.S. at end of stave\n          DS_AL_CODA: 10, // D.S. al coda at end of stave\n          DS_AL_FINE: 11, // D.S. al Fine at end of stave\n          FINE: 12 };\n      }\n    }]);\n    // Fine at end of stave\n\n    function Repetition(type, x, y_shift) {\n      classCallCheck(this, Repetition);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Repetition).call(this));\n\n      _this.symbol_type = type;\n      _this.x = x;\n      _this.x_shift = 0;\n      _this.y_shift = y_shift;\n      _this.font = {\n        family: 'times',\n        size: 12,\n        weight: 'bold italic'\n      };\n      return _this;\n    }\n\n    createClass(Repetition, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Repetition.CATEGORY;\n      }\n    }, {\n      key: 'setShiftX',\n      value: function setShiftX(x) {\n        this.x_shift = x;return this;\n      }\n    }, {\n      key: 'setShiftY',\n      value: function setShiftY(y) {\n        this.y_shift = y;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw(stave, x) {\n        switch (this.symbol_type) {\n          case Repetition.type.CODA_RIGHT:\n            this.drawCodaFixed(stave, x + stave.width);\n            break;\n          case Repetition.type.CODA_LEFT:\n            this.drawSymbolText(stave, x, 'Coda', true);\n            break;\n          case Repetition.type.SEGNO_LEFT:\n            this.drawSignoFixed(stave, x);\n            break;\n          case Repetition.type.SEGNO_RIGHT:\n            this.drawSignoFixed(stave, x + stave.width);\n            break;\n          case Repetition.type.DC:\n            this.drawSymbolText(stave, x, 'D.C.', false);\n            break;\n          case Repetition.type.DC_AL_CODA:\n            this.drawSymbolText(stave, x, 'D.C. al', true);\n            break;\n          case Repetition.type.DC_AL_FINE:\n            this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n            break;\n          case Repetition.type.DS:\n            this.drawSymbolText(stave, x, 'D.S.', false);\n            break;\n          case Repetition.type.DS_AL_CODA:\n            this.drawSymbolText(stave, x, 'D.S. al', true);\n            break;\n          case Repetition.type.DS_AL_FINE:\n            this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n            break;\n          case Repetition.type.FINE:\n            this.drawSymbolText(stave, x, 'Fine', false);\n            break;\n          default:\n            break;\n        }\n\n        return this;\n      }\n    }, {\n      key: 'drawCodaFixed',\n      value: function drawCodaFixed(stave, x) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n\n        var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n        Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n        return this;\n      }\n    }, {\n      key: 'drawSignoFixed',\n      value: function drawSignoFixed(stave, x) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n        var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n        Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n        return this;\n      }\n    }, {\n      key: 'drawSymbolText',\n      value: function drawSymbolText(stave, x, text, draw_coda) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n\n        var ctx = stave.context;\n        ctx.save();\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        // Default to right symbol\n        var text_x = 0 + this.x_shift;\n        var symbol_x = x + this.x_shift;\n        if (this.symbol_type == Repetition.type.CODA_LEFT) {\n          // Offset Coda text to right of stave beginning\n          text_x = this.x + stave.options.vertical_bar_width;\n          symbol_x = text_x + ctx.measureText(text).width + 12;\n        } else {\n          // Offset Signo text to left stave end\n          symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n          text_x = symbol_x - +ctx.measureText(text).width - 12;\n        }\n        var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n        if (draw_coda) {\n          Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n        }\n\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n\n        return this;\n      }\n    }]);\n    return Repetition;\n  }(StaveModifier);\n\n  var StaveSection = function (_StaveModifier) {\n    inherits(StaveSection, _StaveModifier);\n    createClass(StaveSection, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'stavesection';\n      }\n    }]);\n\n    function StaveSection(section, x, shift_y) {\n      classCallCheck(this, StaveSection);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(StaveSection).call(this));\n\n      _this.setWidth(16);\n      _this.section = section;\n      _this.x = x;\n      _this.shift_x = 0;\n      _this.shift_y = shift_y;\n      _this.font = {\n        family: 'sans-serif',\n        size: 12,\n        weight: 'bold'\n      };\n      return _this;\n    }\n\n    createClass(StaveSection, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return StaveSection.CATEGORY;\n      }\n    }, {\n      key: 'setStaveSection',\n      value: function setStaveSection(section) {\n        this.section = section;return this;\n      }\n    }, {\n      key: 'setShiftX',\n      value: function setShiftX(x) {\n        this.shift_x = x;return this;\n      }\n    }, {\n      key: 'setShiftY',\n      value: function setShiftY(y) {\n        this.shift_y = y;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw(stave, shift_x) {\n        if (!stave.context) throw new Vex$1.RERR('NoContext', \"Can't draw stave section without a context.\");\n\n        var ctx = stave.context;\n\n        ctx.save();\n        ctx.lineWidth = 2;\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        var text_width = ctx.measureText('' + this.section).width;\n        var width = text_width + 6; // add left & right padding\n        if (width < 18) width = 18;\n        var height = 20;\n        //  Seems to be a good default y\n        var y = stave.getYForTopText(3) + this.shift_y;\n        var x = this.x + shift_x;\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.rect(x, y, width, height);\n        ctx.stroke();\n        x += (width - text_width) / 2;\n        ctx.fillText('' + this.section, x, y + 16);\n        ctx.restore();\n        return this;\n      }\n    }]);\n    return StaveSection;\n  }(StaveModifier);\n\n  var StaveTempo = function (_StaveModifier) {\n    inherits(StaveTempo, _StaveModifier);\n    createClass(StaveTempo, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'stavetempo';\n      }\n    }]);\n\n    function StaveTempo(tempo, x, shift_y) {\n      classCallCheck(this, StaveTempo);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(StaveTempo).call(this));\n\n      _this.tempo = tempo;\n      _this.position = Modifier.Position.ABOVE;\n      _this.x = x;\n      _this.shift_x = 10;\n      _this.shift_y = shift_y;\n      _this.font = {\n        family: 'times',\n        size: 14,\n        weight: 'bold'\n      };\n      _this.render_options = {\n        glyph_font_scale: 30 };\n      return _this;\n    }\n\n    createClass(StaveTempo, [{\n      key: 'getCategory',\n      // font size for note\n      value: function getCategory() {\n        return StaveTempo.CATEGORY;\n      }\n    }, {\n      key: 'setTempo',\n      value: function setTempo(tempo) {\n        this.tempo = tempo;return this;\n      }\n    }, {\n      key: 'setShiftX',\n      value: function setShiftX(x) {\n        this.shift_x = x;return this;\n      }\n    }, {\n      key: 'setShiftY',\n      value: function setShiftY(y) {\n        this.shift_y = y;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw(stave, shift_x) {\n        if (!stave.context) throw new Vex$1.RERR('NoContext', \"Can't draw stave tempo without a context.\");\n\n        var options = this.render_options;\n        var scale = options.glyph_font_scale / 38;\n        var name = this.tempo.name;\n        var duration = this.tempo.duration;\n        var dots = this.tempo.dots;\n        var bpm = this.tempo.bpm;\n        var font = this.font;\n        var ctx = stave.context;\n        var x = this.x + this.shift_x + shift_x;\n        var y = stave.getYForTopText(1) + this.shift_y;\n\n        ctx.save();\n\n        if (name) {\n          ctx.setFont(font.family, font.size, font.weight);\n          ctx.fillText(name, x, y);\n          x += ctx.measureText(name).width;\n        }\n\n        if (duration && bpm) {\n          ctx.setFont(font.family, font.size, 'normal');\n\n          if (name) {\n            x += ctx.measureText(' ').width;\n            ctx.fillText('(', x, y);\n            x += ctx.measureText('(').width;\n          }\n\n          var code = Flow.durationToGlyph(duration);\n\n          x += 3 * scale;\n          Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n          x += code.head_width * scale;\n\n          // Draw stem and flags\n          if (code.stem) {\n            var stem_height = 30;\n\n            if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n            stem_height *= scale;\n\n            var y_top = y - stem_height;\n            ctx.fillRect(x, y_top, scale, stem_height);\n\n            if (code.flag) {\n              Glyph.renderGlyph(ctx, x + scale, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n              if (!dots) x += 6 * scale;\n            }\n          }\n\n          // Draw dot\n          for (var i = 0; i < dots; i++) {\n            x += 6 * scale;\n            ctx.beginPath();\n            ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n            ctx.fill();\n          }\n\n          ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n\n        ctx.restore();\n        return this;\n      }\n    }]);\n    return StaveTempo;\n  }(StaveModifier);\n\n  var TextNote = function (_Note) {\n    inherits(TextNote, _Note);\n    createClass(TextNote, null, [{\n      key: 'Justification',\n      get: function get() {\n        return {\n          LEFT: 1,\n          CENTER: 2,\n          RIGHT: 3\n        };\n      }\n\n      // Glyph data\n\n    }, {\n      key: 'GLYPHS',\n      get: function get() {\n        return {\n          'segno': {\n            code: 'v8c',\n            point: 40,\n            x_shift: 0,\n            y_shift: -10\n          },\n          // width: 10 // optional\n          'tr': {\n            code: 'v1f',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'mordent_upper': {\n            code: 'v1e',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'mordent_lower': {\n            code: 'v45',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'f': {\n            code: 'vba',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'p': {\n            code: 'vbf',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'm': {\n            code: 'v62',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          's': {\n            code: 'v4a',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'z': {\n            code: 'v80',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          // width: 10 // optional\n          'coda': {\n            code: 'v4d',\n            point: 40,\n            x_shift: 0,\n            y_shift: -8\n          },\n          // width: 10 // optional\n          'pedal_open': {\n            code: 'v36',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          'pedal_close': {\n            code: 'v5d',\n            point: 40,\n            x_shift: 0,\n            y_shift: 3\n          },\n          'caesura_straight': {\n            code: 'v34',\n            point: 40,\n            x_shift: 0,\n            y_shift: 2\n          },\n          'caesura_curved': {\n            code: 'v4b',\n            point: 40,\n            x_shift: 0,\n            y_shift: 2\n          },\n          'breath': {\n            code: 'v6c',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          'tick': {\n            code: 'v6f',\n            point: 50,\n            x_shift: 0,\n            y_shift: 0\n          },\n          'turn': {\n            code: 'v72',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n          'turn_inverted': {\n            code: 'v33',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          },\n\n          // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n          'mordent': {\n            code: 'v1e',\n            point: 40,\n            x_shift: 0,\n            y_shift: 0\n          }\n        };\n      }\n    }]);\n    // width: 10 // optional\n\n    function TextNote(text_struct) {\n      classCallCheck(this, TextNote);\n\n\n      // Note properties\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TextNote).call(this, text_struct));\n\n      _this.text = text_struct.text;\n      _this.superscript = text_struct.superscript;\n      _this.subscript = text_struct.subscript;\n      _this.glyph_type = text_struct.glyph;\n      _this.glyph = null;\n      _this.font = {\n        family: 'Arial',\n        size: 12,\n        weight: ''\n      };\n\n      // Set font\n      if (text_struct.font) _this.font = text_struct.font;\n\n      // Determine and set initial note width. Note that the text width is\n      // an approximation and isn't very accurate. The only way to accurately\n      // measure the length of text is with `canvasContext.measureText()`\n      if (_this.glyph_type) {\n        var struct = TextNote.GLYPHS[_this.glyph_type];\n        if (!struct) throw new Vex$1.RERR('Invalid glyph type: ' + _this.glyph_type);\n\n        _this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n        if (struct.width) _this.setWidth(struct.width);else _this.setWidth(_this.glyph.getMetrics().width);\n\n        _this.glyph_struct = struct;\n      } else {\n        _this.setWidth(Flow.textWidth(_this.text));\n      }\n      _this.line = text_struct.line || 0;\n      _this.smooth = text_struct.smooth || false;\n      _this.ignore_ticks = text_struct.ignore_ticks || false;\n      _this.justification = TextNote.Justification.LEFT;\n      return _this;\n    }\n\n    // Set the horizontal justification of the TextNote\n\n\n    createClass(TextNote, [{\n      key: 'setJustification',\n      value: function setJustification(just) {\n        this.justification = just;\n        return this;\n      }\n\n      // Set the Stave line on which the note should be placed\n\n    }, {\n      key: 'setLine',\n      value: function setLine(line) {\n        this.line = line;\n        return this;\n      }\n\n      // Pre-render formatting\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (!this.context) throw new Vex$1.RERR('NoRenderContext', \"Can't measure text without rendering context.\");\n        if (this.preFormatted) return;\n\n        if (this.smooth) {\n          this.setWidth(0);\n        } else {\n          if (this.glyph) {\n            // Width already set.\n          } else {\n              this.setWidth(this.context.measureText(this.text).width);\n            }\n        }\n\n        if (this.justification == TextNote.Justification.CENTER) {\n          this.extraLeftPx = this.width / 2;\n        } else if (this.justification == TextNote.Justification.RIGHT) {\n          this.extraLeftPx = this.width;\n        }\n\n        this.setPreFormatted(true);\n      }\n\n      // Renders the TextNote\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        if (!this.stave) throw new Vex$1.RERR('NoStave', \"Can't draw without a stave.\");\n\n        var ctx = this.context;\n        var x = this.getAbsoluteX();\n        if (this.justification == TextNote.Justification.CENTER) {\n          x -= this.getWidth() / 2;\n        } else if (this.justification == TextNote.Justification.RIGHT) {\n          x -= this.getWidth();\n        }\n\n        var y = void 0;\n        if (this.glyph) {\n          y = this.stave.getYForLine(this.line + -3);\n          this.glyph.render(this.context, x + this.glyph_struct.x_shift, y + this.glyph_struct.y_shift);\n        } else {\n          y = this.stave.getYForLine(this.line + -3);\n          ctx.save();\n          ctx.setFont(this.font.family, this.font.size, this.font.weight);\n          ctx.fillText(this.text, x, y);\n\n          // Width of the letter M gives us the approximate height of the text\n          var height = ctx.measureText('M').width;\n          // Get accurate width of text\n          var width = ctx.measureText(this.text).width;\n\n          // Write superscript\n          if (this.superscript) {\n            ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n            ctx.fillText(this.superscript, x + width + 2, y - height / 2.2);\n          }\n\n          // Write subscript\n          if (this.subscript) {\n            ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n            ctx.fillText(this.subscript, x + width + 2, y + height / 2.2 - 1);\n          }\n\n          ctx.restore();\n        }\n      }\n    }]);\n    return TextNote;\n  }(Note);\n\n  var StaveText = function (_StaveModifier) {\n    inherits(StaveText, _StaveModifier);\n    createClass(StaveText, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'stavetext';\n      }\n    }]);\n\n    function StaveText(text, position, options) {\n      classCallCheck(this, StaveText);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(StaveText).call(this));\n\n      _this.setWidth(16);\n      _this.text = text;\n      _this.position = position;\n      _this.options = {\n        shift_x: 0,\n        shift_y: 0,\n        justification: TextNote.Justification.CENTER\n      };\n      Vex$1.Merge(_this.options, options);\n\n      _this.font = {\n        family: 'times',\n        size: 16,\n        weight: 'normal'\n      };\n      return _this;\n    }\n\n    createClass(StaveText, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return StaveText.CATEGORY;\n      }\n    }, {\n      key: 'setStaveText',\n      value: function setStaveText(text) {\n        this.text = text;return this;\n      }\n    }, {\n      key: 'setShiftX',\n      value: function setShiftX(x) {\n        this.shift_x = x;return this;\n      }\n    }, {\n      key: 'setShiftY',\n      value: function setShiftY(y) {\n        this.shift_y = y;return this;\n      }\n    }, {\n      key: 'setFont',\n      value: function setFont(font) {\n        Vex$1.Merge(this.font, font);\n      }\n    }, {\n      key: 'setText',\n      value: function setText(text) {\n        this.text = text;\n      }\n    }, {\n      key: 'draw',\n      value: function draw(stave) {\n        if (!stave.context) throw new Vex$1.RERR('NoContext', \"Can't draw stave text without a context.\");\n\n        var ctx = stave.context;\n\n        ctx.save();\n        ctx.lineWidth = 2;\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        var text_width = ctx.measureText('' + this.text).width;\n\n        var x = void 0,\n            y = void 0;\n        var Position = StaveModifier.Position;\n        switch (this.position) {\n          case Position.LEFT:\n          case Position.RIGHT:\n            y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n            if (this.position == Position.LEFT) {\n              x = stave.getX() - text_width - 24 + this.options.shift_x;\n            } else {\n              x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n            }\n            break;\n          case Position.ABOVE:\n          case Position.BELOW:\n            var Justification = TextNote.Justification;\n            x = stave.getX() + this.options.shift_x;\n            if (this.options.justification == Justification.CENTER) {\n              x += stave.getWidth() / 2 - text_width / 2;\n            } else if (this.options.justification == Justification.RIGHT) {\n              x += stave.getWidth() - text_width;\n            }\n\n            if (this.position == Position.ABOVE) {\n              y = stave.getYForTopText(2) + this.options.shift_y;\n            } else {\n              y = stave.getYForBottomText(2) + this.options.shift_y;\n            }\n            break;\n          default:\n            throw new Vex$1.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n      }\n    }]);\n    return StaveText;\n  }(StaveModifier);\n\n  // To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\n  function L$12() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (Clef.DEBUG) Vex$1.L('Vex.Flow.Clef', args);\n  }\n\n  var Clef = function (_StaveModifier) {\n    inherits(Clef, _StaveModifier);\n    createClass(Clef, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'clefs';\n      }\n\n      // Every clef name is associated with a glyph code from the font file\n      // and a default stave line number.\n\n    }, {\n      key: 'types',\n      get: function get() {\n        return {\n          'treble': {\n            code: 'v83',\n            line: 3\n          },\n          'bass': {\n            code: 'v79',\n            line: 1\n          },\n          'alto': {\n            code: 'vad',\n            line: 2\n          },\n          'tenor': {\n            code: 'vad',\n            line: 1\n          },\n          'percussion': {\n            code: 'v59',\n            line: 2\n          },\n          'soprano': {\n            code: 'vad',\n            line: 4\n          },\n          'mezzo-soprano': {\n            code: 'vad',\n            line: 3\n          },\n          'baritone-c': {\n            code: 'vad',\n            line: 0\n          },\n          'baritone-f': {\n            code: 'v79',\n            line: 2\n          },\n          'subbass': {\n            code: 'v79',\n            line: 0\n          },\n          'french': {\n            code: 'v83',\n            line: 4\n          },\n          'tab': {\n            code: 'v2f'\n          }\n        };\n      }\n\n      // Sizes affect the point-size of the clef.\n\n    }, {\n      key: 'sizes',\n      get: function get() {\n        return {\n          'default': 40,\n          'small': 32\n        };\n      }\n\n      // Annotations attach to clefs -- such as \"8\" for octave up or down.\n\n    }, {\n      key: 'annotations',\n      get: function get() {\n        return {\n          '8va': {\n            code: 'v8',\n            sizes: {\n              'default': {\n                point: 20,\n                attachments: {\n                  'treble': {\n                    line: -1.2,\n                    x_shift: 11\n                  }\n                }\n              },\n              'small': {\n                point: 18,\n                attachments: {\n                  'treble': {\n                    line: -0.4,\n                    x_shift: 8\n                  }\n                }\n              }\n            }\n          },\n          '8vb': {\n            code: 'v8',\n            sizes: {\n              'default': {\n                point: 20,\n                attachments: {\n                  'treble': {\n                    line: 6.3,\n                    x_shift: 10\n                  },\n                  'bass': {\n                    line: 4,\n                    x_shift: 1\n                  }\n                }\n              },\n              'small': {\n                point: 18,\n                attachments: {\n                  'treble': {\n                    line: 5.8,\n                    x_shift: 6\n                  },\n                  'bass': {\n                    line: 3.5,\n                    x_shift: 0.5\n                  }\n                }\n              }\n            }\n          }\n        };\n      }\n\n      // Create a new clef. The parameter `clef` must be a key from\n      // `Clef.types`.\n\n    }]);\n\n    function Clef(type, size, annotation) {\n      classCallCheck(this, Clef);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Clef).call(this));\n\n      _this.setPosition(StaveModifier.Position.BEGIN);\n      _this.setType(type, size, annotation);\n      _this.setWidth(_this.glyph.getMetrics().width);\n      L$12('Creating clef:', type);\n      return _this;\n    }\n\n    createClass(Clef, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Clef.CATEGORY;\n      }\n    }, {\n      key: 'setType',\n      value: function setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n          this.size = 'default';\n        } else {\n          this.size = size;\n        }\n        this.clef.point = Clef.sizes[this.size];\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n          var anno_dict = Clef.annotations[annotation];\n          this.annotation = {\n            code: anno_dict.code,\n            point: anno_dict.sizes[this.size].point,\n            line: anno_dict.sizes[this.size].attachments[this.type].line,\n            x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift\n          };\n\n          this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n          this.attachment.metrics.x_max = 0;\n          this.attachment.setXShift(this.annotation.x_shift);\n        } else {\n          this.annotation = undefined;\n        }\n\n        return this;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        if (this.type === 'tab' && !this.stave) {\n          throw new Vex$1.RERR('ClefError', \"Can't get width without stave.\");\n        }\n\n        return this.width;\n      }\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        this.stave = stave;\n\n        if (this.type !== 'tab') return this;\n\n        var glyphScale = void 0;\n        var glyphOffset = void 0;\n        var numLines = this.stave.getOptions().num_lines;\n        switch (numLines) {\n          case 8:\n            glyphScale = 55;\n            glyphOffset = 14;\n            break;\n          case 7:\n            glyphScale = 47;\n            glyphOffset = 8;\n            break;\n          case 6:\n            glyphScale = 40;\n            glyphOffset = 1;\n            break;\n          case 5:\n            glyphScale = 30;\n            glyphOffset = -6;\n            break;\n          case 4:\n            glyphScale = 23;\n            glyphOffset = -12;\n            break;\n          default:\n            throw new Vex$1.RERR('ClefError', 'Invalid number of lines: ' + numLines);\n        }\n\n        this.glyph.setPoint(glyphScale);\n        this.glyph.setYShift(glyphOffset);\n\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.x) throw new Vex$1.RERR('ClefError', \"Can't draw clef without x.\");\n        if (!this.stave) throw new Vex$1.RERR('ClefError', \"Can't draw clef without stave.\");\n\n        this.glyph.setStave(this.stave);\n        this.glyph.setContext(this.stave.context);\n        if (this.clef.line !== undefined) {\n          this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n        }\n\n        this.glyph.renderToStave(this.x);\n\n        if (this.annotation !== undefined) {\n          this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n          this.attachment.setStave(this.stave);\n          this.attachment.setContext(this.stave.context);\n          this.attachment.renderToStave(this.x);\n        }\n      }\n    }]);\n    return Clef;\n  }(StaveModifier);\n\n  var KeySignature = function (_StaveModifier) {\n    inherits(KeySignature, _StaveModifier);\n    createClass(KeySignature, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'keysignatures';\n      }\n\n      // Space between natural and following accidental depending\n      // on vertical position\n\n    }, {\n      key: 'accidentalSpacing',\n      get: function get() {\n        return {\n          '#': {\n            above: 6,\n            below: 4\n          },\n          'b': {\n            above: 4,\n            below: 7\n          },\n          'n': {\n            above: 3,\n            below: -1\n          },\n          '##': {\n            above: 6,\n            below: 4\n          },\n          'bb': {\n            above: 4,\n            below: 7\n          },\n          'db': {\n            above: 4,\n            below: 7\n          },\n          'd': {\n            above: 4,\n            below: 7\n          },\n          'bbs': {\n            above: 4,\n            below: 7\n          },\n          '++': {\n            above: 6,\n            below: 4\n          },\n          '+': {\n            above: 6,\n            below: 4\n          },\n          '+-': {\n            above: 6,\n            below: 4\n          },\n          '++-': {\n            above: 6,\n            below: 4\n          },\n          'bs': {\n            above: 4,\n            below: 10\n          },\n          'bss': {\n            above: 4,\n            below: 10\n          }\n        };\n      }\n\n      // Create a new Key Signature based on a `key_spec`\n\n    }]);\n\n    function KeySignature(keySpec, cancelKeySpec, alterKeySpec) {\n      classCallCheck(this, KeySignature);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(KeySignature).call(this));\n\n      _this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n      _this.setPosition(StaveModifier.Position.BEGIN);\n      _this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n      _this.glyphs = [];\n      _this.xPositions = []; // relative to this.x\n      _this.paddingForced = false;\n      return _this;\n    }\n\n    createClass(KeySignature, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return KeySignature.CATEGORY;\n      }\n\n      // Add an accidental glyph to the `KeySignature` instance which represents\n      // the provided `acc`. If `nextAcc` is also provided, the appropriate\n      // spacing will be included in the glyph's position\n\n    }, {\n      key: 'convertToGlyph',\n      value: function convertToGlyph(acc, nextAcc) {\n        var accGlyphData = Flow.accidentalCodes(acc.type);\n        var glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n        // Determine spacing between current accidental and the next accidental\n        var extraWidth = 0;\n        if (acc.type === 'n' && nextAcc) {\n          var spacing = KeySignature.accidentalSpacing[nextAcc.type];\n          if (spacing) {\n            var isAbove = nextAcc.line >= acc.line;\n            extraWidth = isAbove ? spacing.above : spacing.below;\n          }\n        }\n\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.stave, acc.line);\n        this.glyphs.push(glyph);\n\n        var xPosition = this.xPositions[this.xPositions.length - 1];\n        var glyphWidth = accGlyphData.width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n      }\n\n      // Cancel out a key signature provided in the `spec` parameter. This will\n      // place appropriate natural accidentals before the key signature.\n\n    }, {\n      key: 'cancelKey',\n      value: function cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n\n        return this;\n      }\n    }, {\n      key: 'convertToCancelAccList',\n      value: function convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        var cancel_accList = Flow.keySignature(spec);\n\n        // If the cancelled key has a different accidental type, ie: # vs b\n        var different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n\n        // Determine how many naturals needed to add\n        var naturals = 0;\n        if (different_types) {\n          naturals = cancel_accList.length;\n        } else {\n          naturals = cancel_accList.length - this.accList.length;\n        }\n\n        // Return if no naturals needed\n        if (naturals < 1) return;\n\n        // Get the line position for each natural\n        var cancelled = [];\n        for (var i = 0; i < naturals; i++) {\n          var index = i;\n          if (!different_types) {\n            index = cancel_accList.length - naturals + i;\n          }\n\n          var acc = cancel_accList[index];\n          cancelled.push({ type: 'n', line: acc.line });\n        }\n\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n      }\n\n      // Deprecated\n\n    }, {\n      key: 'addToStave',\n      value: function addToStave(stave, firstGlyph) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n\n        return this;\n      }\n\n      // Apply the accidental staff line placement based on the `clef` and\n      // the  accidental `type` for the key signature ('# or 'b').\n\n    }, {\n      key: 'convertAccLines',\n      value: function convertAccLines(clef, type) {\n        var offset = 0.0; // if clef === \"treble\"\n        var customLines = void 0; // when clef doesn't follow treble key sig shape\n\n        switch (clef) {\n          // Treble & Subbass both have offsets of 0, so are not included.\n          case 'soprano':\n            if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];else offset = -1;\n            break;\n          case 'mezzo-soprano':\n            if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];else offset = 1.5;\n            break;\n          case 'alto':\n            offset = 0.5;\n            break;\n          case 'tenor':\n            if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];else offset = -0.5;\n            break;\n          case 'baritone-f':\n          case 'baritone-c':\n            if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];else offset = 2;\n            break;\n          case 'bass':\n          case 'french':\n            offset = 1;\n            break;\n        }\n\n        // If there's a special case, assign those lines/spaces:\n        var i = void 0;\n        if (typeof customLines !== 'undefined') {\n          for (i = 0; i < this.accList.length; ++i) {\n            this.accList[i].line = customLines[i];\n          }\n        } else if (offset !== 0) {\n          for (i = 0; i < this.accList.length; ++i) {\n            this.accList[i].line += offset;\n          }\n        }\n      }\n    }, {\n      key: 'getPadding',\n      value: function getPadding(index) {\n        if (!this.formatted) this.format();\n\n        return this.glyphs.length === 0 || !this.paddingForced && index < 2 ? 0 : this.padding;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        if (!this.formatted) this.format();\n\n        return this.width;\n      }\n    }, {\n      key: 'setKeySig',\n      value: function setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n\n        return this;\n      }\n\n      // Alter the accidentals of a key spec one by one.\n      // Each alteration is a new accidental that replaces the\n      // original accidental (or the canceled one).\n\n    }, {\n      key: 'alterKey',\n      value: function alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n\n        return this;\n      }\n    }, {\n      key: 'convertToAlterAccList',\n      value: function convertToAlterAccList(alterKeySpec) {\n        var max = Math.min(alterKeySpec.length, this.accList.length);\n        for (var i = 0; i < max; ++i) {\n          if (alterKeySpec[i]) {\n            this.accList[i].type = alterKeySpec[i];\n          }\n        }\n      }\n    }, {\n      key: 'format',\n      value: function format() {\n        if (!this.stave) throw new Vex$1.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Flow.keySignature(this.keySpec);\n        if (this.cancelKeySpec) {\n          this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        var firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n        if (this.alterKeySpec) {\n          this.convertToAlterAccList(this.alterKeySpec);\n        }\n\n        if (this.accList.length > 0) {\n          this.convertAccLines(this.stave.clef, firstAccidentalType);\n          for (var i = 0; i < this.accList.length; ++i) {\n            this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n          }\n        }\n\n        this.formatted = true;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.x) throw new Vex$1.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n        if (!this.stave) throw new Vex$1.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n        if (!this.formatted) this.format();\n\n        for (var i = 0; i < this.glyphs.length; i++) {\n          var glyph = this.glyphs[i];\n          var x = this.x + this.xPositions[i];\n          glyph.setStave(this.stave);\n          glyph.setContext(this.stave.context);\n          glyph.renderToStave(x);\n        }\n      }\n    }]);\n    return KeySignature;\n  }(StaveModifier);\n\n  var TimeSignature = function (_StaveModifier) {\n    inherits(TimeSignature, _StaveModifier);\n    createClass(TimeSignature, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'timesignatures';\n      }\n    }, {\n      key: 'glyphs',\n      get: function get() {\n        return {\n          'C': {\n            code: 'v41',\n            point: 40,\n            line: 2\n          },\n          'C|': {\n            code: 'vb6',\n            point: 40,\n            line: 2\n          }\n        };\n      }\n    }]);\n\n    function TimeSignature() {\n      var timeSpec = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n      var customPadding = arguments.length <= 1 || arguments[1] === undefined ? 15 : arguments[1];\n      classCallCheck(this, TimeSignature);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TimeSignature).call(this));\n\n      if (timeSpec === null) {\n        return possibleConstructorReturn(_this);\n      }\n      var padding = customPadding;\n\n      _this.point = 40;\n      _this.topLine = 2;\n      _this.bottomLine = 4;\n      _this.setPosition(StaveModifier.Position.BEGIN);\n      _this.setTimeSig(timeSpec);\n      _this.setWidth(_this.timeSig.glyph.getMetrics().width);\n      _this.setPadding(padding);\n      return _this;\n    }\n\n    createClass(TimeSignature, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return TimeSignature.CATEGORY;\n      }\n    }, {\n      key: 'parseTimeSpec',\n      value: function parseTimeSpec(timeSpec) {\n        if (timeSpec == 'C' || timeSpec == 'C|') {\n          var glyphInfo = TimeSignature.glyphs[timeSpec];\n          return { num: false, line: glyphInfo.line,\n            glyph: new Glyph(glyphInfo.code, glyphInfo.point) };\n        }\n\n        var topNums = [];\n        var i = void 0,\n            c = void 0;\n        for (i = 0; i < timeSpec.length; ++i) {\n          c = timeSpec.charAt(i);\n          if (c == '/') {\n            break;\n          } else if (/[0-9]/.test(c)) {\n            topNums.push(c);\n          } else {\n            throw new Vex$1.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec);\n          }\n        }\n\n        if (i === 0) {\n          throw new Vex$1.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec);\n        }\n\n        // skip the \"/\"\n        ++i;\n\n        if (i == timeSpec.length) {\n          throw new Vex$1.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec);\n        }\n\n        var botNums = [];\n        for (; i < timeSpec.length; ++i) {\n          c = timeSpec.charAt(i);\n          if (/[0-9]/.test(c)) {\n            botNums.push(c);\n          } else {\n            throw new Vex$1.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec);\n          }\n        }\n\n        return { num: true, glyph: this.makeTimeSignatureGlyph(topNums, botNums) };\n      }\n    }, {\n      key: 'makeTimeSignatureGlyph',\n      value: function makeTimeSignatureGlyph(topNums, botNums) {\n        var glyph = new Glyph('v0', this.point);\n        glyph['topGlyphs'] = [];\n        glyph['botGlyphs'] = [];\n\n        var topWidth = 0;\n        var i = void 0,\n            num = void 0;\n        for (i = 0; i < topNums.length; ++i) {\n          num = topNums[i];\n          var topGlyph = new Glyph('v' + num, this.point);\n\n          glyph.topGlyphs.push(topGlyph);\n          topWidth += topGlyph.getMetrics().width;\n        }\n\n        var botWidth = 0;\n        for (i = 0; i < botNums.length; ++i) {\n          num = botNums[i];\n          var botGlyph = new Glyph('v' + num, this.point);\n\n          glyph.botGlyphs.push(botGlyph);\n          botWidth += botGlyph.getMetrics().width;\n        }\n\n        var width = topWidth > botWidth ? topWidth : botWidth;\n        var xMin = glyph.getMetrics().x_min;\n\n        glyph.getMetrics = function () {\n          return {\n            x_min: xMin,\n            x_max: xMin + width,\n            width: width\n          };\n        };\n\n        var topStartX = (width - topWidth) / 2.0;\n        var botStartX = (width - botWidth) / 2.0;\n\n        var that = this;\n        glyph.renderToStave = function (x) {\n          var start_x = x + topStartX;\n          var i = void 0,\n              g = void 0;\n          for (i = 0; i < this.topGlyphs.length; ++i) {\n            g = this.topGlyphs[i];\n            Glyph.renderOutline(this.context, g.metrics.outline, g.scale, start_x + g.x_shift, this.stave.getYForLine(that.topLine) + 1);\n            start_x += g.getMetrics().width;\n          }\n\n          start_x = x + botStartX;\n          for (i = 0; i < this.botGlyphs.length; ++i) {\n            g = this.botGlyphs[i];\n            that.placeGlyphOnLine(g, this.stave, g.line);\n            Glyph.renderOutline(this.context, g.metrics.outline, g.scale, start_x + g.x_shift, this.stave.getYForLine(that.bottomLine) + 1);\n            start_x += g.getMetrics().width;\n          }\n        };\n\n        return glyph;\n      }\n    }, {\n      key: 'getTimeSig',\n      value: function getTimeSig() {\n        return this.timeSig;\n      }\n    }, {\n      key: 'setTimeSig',\n      value: function setTimeSig(timeSpec) {\n        this.timeSig = this.parseTimeSpec(timeSpec);\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.x) throw new Vex$1.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n        if (!this.stave) throw new Vex$1.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n\n        this.timeSig.glyph.setStave(this.stave);\n        this.timeSig.glyph.setContext(this.stave.context);\n        this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n        this.timeSig.glyph.renderToStave(this.x);\n      }\n    }]);\n    return TimeSignature;\n  }(StaveModifier);\n\n  var Volta = function (_StaveModifier) {\n    inherits(Volta, _StaveModifier);\n    createClass(Volta, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'voltas';\n      }\n    }, {\n      key: 'type',\n      get: function get() {\n        return {\n          NONE: 1,\n          BEGIN: 2,\n          MID: 3,\n          END: 4,\n          BEGIN_END: 5\n        };\n      }\n    }]);\n\n    function Volta(type, number, x, y_shift) {\n      classCallCheck(this, Volta);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Volta).call(this));\n\n      _this.volta = type;\n      _this.x = x;\n      _this.y_shift = y_shift;\n      _this.number = number;\n      _this.font = {\n        family: 'sans-serif',\n        size: 9,\n        weight: 'bold'\n      };\n      return _this;\n    }\n\n    createClass(Volta, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Volta.CATEGORY;\n      }\n    }, {\n      key: 'setShiftY',\n      value: function setShiftY(y) {\n        this.y_shift = y;return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw(stave, x) {\n        if (!stave.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n        var ctx = stave.context;\n        var width = stave.width;\n        var top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n        var vert_height = 1.5 * stave.options.spacing_between_lines_px;\n        switch (this.volta) {\n          case Volta.type.BEGIN:\n            ctx.fillRect(this.x + x, top_y, 1, vert_height);\n            break;\n          case Volta.type.END:\n            width -= 5;\n            ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n            break;\n          case Volta.type.BEGIN_END:\n            width -= 3;\n            ctx.fillRect(this.x + x, top_y, 1, vert_height);\n            ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n            break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta == Volta.type.BEGIN || this.volta == Volta.type.BEGIN_END) {\n          ctx.save();\n          ctx.setFont(this.font.family, this.font.size, this.font.weight);\n          ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n          ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n      }\n    }]);\n    return Volta;\n  }(StaveModifier);\n\n  var THICKNESS = Flow.STAVE_LINE_THICKNESS > 1 ? Flow.STAVE_LINE_THICKNESS : 0;\n\n  var Stave = function () {\n    function Stave(x, y, width, options) {\n      classCallCheck(this, Stave);\n\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.formatted = false;\n      this.start_x = x + 5;\n      this.end_x = x + width;\n      this.context = null;\n      this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n      this.measure = 0;\n      this.clef = 'treble';\n      this.font = {\n        family: 'sans-serif',\n        size: 8,\n        weight: ''\n      };\n      this.options = {\n        vertical_bar_width: 10, // Width around vertical bar end-marker\n        glyph_spacing_px: 10,\n        num_lines: 5,\n        fill_style: '#999999',\n        left_bar: true, // draw vertical bar on left\n        right_bar: true, // draw vertical bar on right\n        spacing_between_lines_px: 10, // in pixels\n        space_above_staff_ln: 4, // in staff lines\n        space_below_staff_ln: 4, // in staff lines\n        top_text_position: 1 };\n      // in staff lines\n      this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n      Vex$1.Merge(this.options, options);\n\n      this.resetLines();\n\n      var BARTYPE = Barline.type;\n      // beg bar\n      this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n      // end bar\n      this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    }\n\n    createClass(Stave, [{\n      key: 'resetLines',\n      value: function resetLines() {\n        this.options.line_config = [];\n        for (var i = 0; i < this.options.num_lines; i++) {\n          this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines + 1;\n      }\n    }, {\n      key: 'getOptions',\n      value: function getOptions() {\n        return this.options;\n      }\n    }, {\n      key: 'setNoteStartX',\n      value: function setNoteStartX(x) {\n        if (!this.formatted) this.format();\n\n        this.start_x = x;\n        return this;\n      }\n    }, {\n      key: 'getNoteStartX',\n      value: function getNoteStartX() {\n        if (!this.formatted) this.format();\n\n        return this.start_x;\n      }\n    }, {\n      key: 'getNoteEndX',\n      value: function getNoteEndX() {\n        if (!this.formatted) this.format();\n\n        return this.end_x;\n      }\n    }, {\n      key: 'getTieStartX',\n      value: function getTieStartX() {\n        return this.start_x;\n      }\n    }, {\n      key: 'getTieEndX',\n      value: function getTieEndX() {\n        return this.x + this.width;\n      }\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n    }, {\n      key: 'getContext',\n      value: function getContext() {\n        return this.context;\n      }\n    }, {\n      key: 'getX',\n      value: function getX() {\n        return this.x;\n      }\n    }, {\n      key: 'getNumLines',\n      value: function getNumLines() {\n        return this.options.num_lines;\n      }\n    }, {\n      key: 'setNumLines',\n      value: function setNumLines(lines) {\n        this.options.num_lines = parseInt(lines, 10);\n        this.resetLines();\n        return this;\n      }\n    }, {\n      key: 'setY',\n      value: function setY(y) {\n        this.y = y;return this;\n      }\n    }, {\n      key: 'setX',\n      value: function setX(x) {\n        var shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (var i = 0; i < this.modifiers.length; i++) {\n          var mod = this.modifiers[i];\n          if (mod.x !== undefined) {\n            mod.x += shift;\n          }\n        }\n        return this;\n      }\n    }, {\n      key: 'setWidth',\n      value: function setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n      }\n    }, {\n      key: 'getWidth',\n      value: function getWidth() {\n        return this.width;\n      }\n    }, {\n      key: 'setMeasure',\n      value: function setMeasure(measure) {\n        this.measure = measure;return this;\n      }\n\n      /**\n       * Gets the pixels to shift from the beginning of the stave\n       * following the modifier at the provided index\n       * @param  {Number} index The index from which to determine the shift\n       * @return {Number}       The amount of pixels shifted\n       */\n\n    }, {\n      key: 'getModifierXShift',\n      value: function getModifierXShift() {\n        var index = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        if (typeof index !== 'number') {\n          throw new Vex$1.RERR('InvalidIndex', 'Must be of number type');\n        }\n\n        if (!this.formatted) this.format();\n\n        if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n          return 0;\n        }\n\n        var start_x = this.start_x - this.x;\n        var begBarline = this.modifiers[0];\n        if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n          start_x -= begBarline.getWidth();\n        }\n\n        return start_x;\n      }\n\n      // Coda & Segno Symbol functions\n\n    }, {\n      key: 'setRepetitionTypeLeft',\n      value: function setRepetitionTypeLeft(type, y) {\n        this.modifiers.push(new Repetition(type, this.x, y));\n        return this;\n      }\n    }, {\n      key: 'setRepetitionTypeRight',\n      value: function setRepetitionTypeRight(type, y) {\n        this.modifiers.push(new Repetition(type, this.x, y));\n        return this;\n      }\n\n      // Volta functions\n\n    }, {\n      key: 'setVoltaType',\n      value: function setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n      }\n\n      // Section functions\n\n    }, {\n      key: 'setSection',\n      value: function setSection(section, y) {\n        this.modifiers.push(new StaveSection(section, this.x, y));\n        return this;\n      }\n\n      // Tempo functions\n\n    }, {\n      key: 'setTempo',\n      value: function setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n      }\n\n      // Text functions\n\n    }, {\n      key: 'setText',\n      value: function setText(text, position, options) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n      }\n    }, {\n      key: 'getHeight',\n      value: function getHeight() {\n        return this.height;\n      }\n    }, {\n      key: 'getSpacingBetweenLines',\n      value: function getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n      }\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n      }\n    }, {\n      key: 'getBottomY',\n      value: function getBottomY() {\n        var options = this.options;\n        var spacing = options.spacing_between_lines_px;\n        var score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n\n        return score_bottom;\n      }\n    }, {\n      key: 'getBottomLineY',\n      value: function getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n      }\n    }, {\n      key: 'getYForLine',\n      value: function getYForLine(line) {\n        var options = this.options;\n        var spacing = options.spacing_between_lines_px;\n        var headroom = options.space_above_staff_ln;\n\n        var y = this.y + (line * spacing + headroom * spacing) - THICKNESS / 2;\n\n        return y;\n      }\n    }, {\n      key: 'getLineForY',\n      value: function getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n\n        var options = this.options;\n        var spacing = options.spacing_between_lines_px;\n        var headroom = options.space_above_staff_ln;\n        return (y - this.y + THICKNESS / 2) / spacing - headroom;\n      }\n    }, {\n      key: 'getYForTopText',\n      value: function getYForTopText(line) {\n        var l = line || 0;\n        return this.getYForLine(-l - this.options.top_text_position);\n      }\n    }, {\n      key: 'getYForBottomText',\n      value: function getYForBottomText(line) {\n        var l = line || 0;\n        return this.getYForLine(this.options.bottom_text_position + l);\n      }\n    }, {\n      key: 'getYForNote',\n      value: function getYForNote(line) {\n        var options = this.options;\n        var spacing = options.spacing_between_lines_px;\n        var headroom = options.space_above_staff_ln;\n        var y = this.y + headroom * spacing + 5 * spacing - line * spacing;\n\n        return y;\n      }\n    }, {\n      key: 'getYForGlyphs',\n      value: function getYForGlyphs() {\n        return this.getYForLine(3);\n      }\n    }, {\n      key: 'addModifier',\n      value: function addModifier(modifier, position) {\n        if (position !== undefined) {\n          modifier.setPosition(position);\n        }\n\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n      }\n    }, {\n      key: 'addEndModifier',\n      value: function addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifier.Position.END);\n        return this;\n      }\n\n      // Bar Line functions\n\n    }, {\n      key: 'setBegBarType',\n      value: function setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        var _Barline$type = Barline.type;\n        var SINGLE = _Barline$type.SINGLE;\n        var REPEAT_BEGIN = _Barline$type.REPEAT_BEGIN;\n        var NONE = _Barline$type.NONE;\n\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n          this.modifiers[0].setType(type);\n          this.formatted = false;\n        }\n        return this;\n      }\n    }, {\n      key: 'setEndBarType',\n      value: function setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== Barline.type.REPEAT_BEGIN) {\n          this.modifiers[1].setType(type);\n          this.formatted = false;\n        }\n        return this;\n      }\n    }, {\n      key: 'setClef',\n      value: function setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n          position = StaveModifier.Position.BEGIN;\n        }\n\n        this.clef = clefSpec;\n        var clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n          this.addClef(clefSpec, size, annotation, position);\n        } else {\n          clefs[0].setType(clefSpec, size, annotation);\n        }\n\n        return this;\n      }\n    }, {\n      key: 'setEndClef',\n      value: function setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n        return this;\n      }\n    }, {\n      key: 'setKeySignature',\n      value: function setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n          position = StaveModifier.Position.BEGIN;\n        }\n\n        var keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n          this.addKeySignature(keySpec, cancelKeySpec, position);\n        } else {\n          keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n\n        return this;\n      }\n    }, {\n      key: 'setEndKeySignature',\n      value: function setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n        return this;\n      }\n    }, {\n      key: 'setTimeSignature',\n      value: function setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n          position = StaveModifier.Position.BEGIN;\n        }\n\n        var timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n          this.addTimeSignature(timeSpec, customPadding, position);\n        } else {\n          timeSignatures[0].setTimeSig(timeSpec);\n        }\n\n        return this;\n      }\n    }, {\n      key: 'setEndTimeSignature',\n      value: function setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n        return this;\n      }\n    }, {\n      key: 'addKeySignature',\n      value: function addKeySignature(keySpec, cancelKeySpec, position) {\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec), position);\n        return this;\n      }\n    }, {\n      key: 'addClef',\n      value: function addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifier.Position.BEGIN) {\n          this.clef = clef;\n        }\n\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n      }\n    }, {\n      key: 'addEndClef',\n      value: function addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifier.Position.END);\n        return this;\n      }\n    }, {\n      key: 'addTimeSignature',\n      value: function addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n      }\n    }, {\n      key: 'addEndTimeSignature',\n      value: function addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n        return this;\n      }\n\n      // Deprecated\n\n    }, {\n      key: 'addTrebleGlyph',\n      value: function addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n      }\n    }, {\n      key: 'getModifiers',\n      value: function getModifiers(position, category) {\n        if (position === undefined) return this.modifiers;\n\n        return this.modifiers.filter(function (modifier) {\n          return position === modifier.getPosition() && (category === undefined || category === modifier.getCategory());\n        });\n      }\n    }, {\n      key: 'sortByCategory',\n      value: function sortByCategory(items, order) {\n        for (var i = items.length - 1; i >= 0; i--) {\n          for (var j = 0; j < i; j++) {\n            if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n              var temp = items[j];\n              items[j] = items[j + 1];\n              items[j + 1] = temp;\n            }\n          }\n        }\n      }\n    }, {\n      key: 'format',\n      value: function format() {\n        var begBarline = this.modifiers[0];\n        var endBarline = this.modifiers[1];\n\n        var begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n        var endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n        this.sortByCategory(begModifiers, {\n          barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3\n        });\n\n        this.sortByCategory(endModifiers, {\n          timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3\n        });\n\n        if (begModifiers.length > 1 && begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n          begModifiers.push(begModifiers.splice(0, 1)[0]);\n          begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n        }\n\n        if (endModifiers.indexOf(endBarline) > 0) {\n          endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n        }\n\n        var width = void 0;\n        var padding = void 0;\n        var modifier = void 0;\n        var offset = 0;\n        var x = this.x;\n        for (var i = 0; i < begModifiers.length; i++) {\n          modifier = begModifiers[i];\n          padding = modifier.getPadding(i + offset);\n          width = modifier.getWidth();\n\n          x += padding;\n          modifier.setX(x);\n          x += width;\n\n          if (padding + width === 0) offset--;\n        }\n\n        this.start_x = x;\n        x = this.x + this.width;\n\n        for (var _i = 0; _i < endModifiers.length; _i++) {\n          modifier = endModifiers[_i];\n          x -= modifier.getPadding(_i);\n          if (_i !== 0) {\n            x -= modifier.getWidth();\n          }\n\n          modifier.setX(x);\n\n          if (_i === 0) {\n            x -= modifier.getWidth();\n          }\n        }\n\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n      }\n\n      /**\n       * All drawing functions below need the context to be set.\n       */\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n        }\n\n        if (!this.formatted) this.format();\n\n        var num_lines = this.options.num_lines;\n        var width = this.width;\n        var x = this.x;\n        var y = void 0;\n\n        // Render lines\n        for (var line = 0; line < num_lines; line++) {\n          y = this.getYForLine(line);\n\n          this.context.save();\n          this.context.setFillStyle(this.options.fill_style);\n          this.context.setStrokeStyle(this.options.fill_style);\n          if (this.options.line_config[line].visible) {\n            this.context.fillRect(x, y, width, Flow.STAVE_LINE_THICKNESS);\n          }\n          this.context.restore();\n        }\n\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (var i = 0; i < this.modifiers.length; i++) {\n          // Only draw modifier if it has a draw function\n          if (typeof this.modifiers[i].draw === 'function') {\n            this.modifiers[i].draw(this, this.getModifierXShift(i));\n          }\n        }\n\n        // Render measure numbers\n        if (this.measure > 0) {\n          this.context.save();\n          this.context.setFont(this.font.family, this.font.size, this.font.weight);\n          var text_width = this.context.measureText('' + this.measure).width;\n          y = this.getYForTopText(0) + 3;\n          this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n          this.context.restore();\n        }\n\n        return this;\n      }\n\n      // Draw Simple barlines for backward compatability\n      // Do not delete - draws the beginning bar of the stave\n\n    }, {\n      key: 'drawVertical',\n      value: function drawVertical(x, isDouble) {\n        this.drawVerticalFixed(this.x + x, isDouble);\n      }\n    }, {\n      key: 'drawVerticalFixed',\n      value: function drawVerticalFixed(x, isDouble) {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n        }\n\n        var top_line = this.getYForLine(0);\n        var bottom_line = this.getYForLine(this.options.num_lines - 1);\n        if (isDouble) {\n          this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n        }\n        this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n      }\n    }, {\n      key: 'drawVerticalBar',\n      value: function drawVerticalBar(x) {\n        this.drawVerticalBarFixed(this.x + x, false);\n      }\n    }, {\n      key: 'drawVerticalBarFixed',\n      value: function drawVerticalBarFixed(x) {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoCanvasContext', \"Can't draw stave without canvas context.\");\n        }\n\n        var top_line = this.getYForLine(0);\n        var bottom_line = this.getYForLine(this.options.num_lines - 1);\n        this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n      }\n\n      /**\n       * Get the current configuration for the Stave.\n       * @return {Array} An array of configuration objects.\n       */\n\n    }, {\n      key: 'getConfigForLines',\n      value: function getConfigForLines() {\n        return this.options.line_config;\n      }\n\n      /**\n       * Configure properties of the lines in the Stave\n       * @param line_number The index of the line to configure.\n       * @param line_config An configuration object for the specified line.\n       * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n       *   range of the number of lines specified in the constructor.\n       */\n\n    }, {\n      key: 'setConfigForLine',\n      value: function setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n          throw new Vex$1.RERR('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n\n        if (!line_config.hasOwnProperty('visible')) {\n          throw new Vex$1.RERR('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n\n        if (typeof line_config.visible !== 'boolean') {\n          throw new Vex$1.RERR('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n\n        this.options.line_config[line_number] = line_config;\n\n        return this;\n      }\n\n      /**\n       * Set the staff line configuration array for all of the lines at once.\n       * @param lines_configuration An array of line configuration objects.  These objects\n       *   are of the same format as the single one passed in to setLineConfiguration().\n       *   The caller can set null for any line config entry if it is desired that the default be used\n       * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n       *   exactly the same number of elements as the num_lines configuration object set in\n       *   the constructor.\n       */\n\n    }, {\n      key: 'setConfigForLines',\n      value: function setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n          throw new Vex$1.RERR('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        for (var line_config in lines_configuration) {\n          // Allow 'null' to be used if the caller just wants the default for a particular node.\n          if (!lines_configuration[line_config]) {\n            lines_configuration[line_config] = this.options.line_config[line_config];\n          }\n          Vex$1.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n        }\n\n        this.options.line_config = lines_configuration;\n\n        return this;\n      }\n    }]);\n    return Stave;\n  }();\n\n  var TabStave = function (_Stave) {\n    inherits(TabStave, _Stave);\n\n    function TabStave(x, y, width, options) {\n      classCallCheck(this, TabStave);\n\n      var tab_options = {\n        spacing_between_lines_px: 13,\n        num_lines: 6,\n        top_text_position: 1\n      };\n\n      Vex$1.Merge(tab_options, options);\n      return possibleConstructorReturn(this, Object.getPrototypeOf(TabStave).call(this, x, y, width, tab_options));\n    }\n\n    createClass(TabStave, [{\n      key: 'getYForGlyphs',\n      value: function getYForGlyphs() {\n        return this.getYForLine(2.5);\n      }\n\n      // Deprecated\n\n    }, {\n      key: 'addTabGlyph',\n      value: function addTabGlyph() {\n        this.addClef('tab');\n        return this;\n      }\n    }]);\n    return TabStave;\n  }(Stave);\n\n  // Gets the unused strings grouped together if consecutive.\n  //\n  // Parameters:\n  // * num_lines - The number of lines\n  // * strings_used - An array of numbers representing which strings have fret positions\n  function getUnusedStringGroups(num_lines, strings_used) {\n    var stem_through = [];\n    var group = [];\n    for (var string = 1; string <= num_lines; string++) {\n      var is_used = strings_used.indexOf(string) > -1;\n\n      if (!is_used) {\n        group.push(string);\n      } else {\n        stem_through.push(group);\n        group = [];\n      }\n    }\n    if (group.length > 0) stem_through.push(group);\n\n    return stem_through;\n  }\n\n  // Gets groups of points that outline the partial stem lines\n  // between fret positions\n  //\n  // Parameters:\n  // * stem_Y - The `y` coordinate the stem is located on\n  // * unused_strings - An array of groups of unused strings\n  // * stave - The stave to use for reference\n  // * stem_direction - The direction of the stem\n  function getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    var up_stem = stem_direction !== 1;\n    var down_stem = stem_direction !== -1;\n\n    var line_spacing = stave.getSpacingBetweenLines();\n    var total_lines = stave.getNumLines();\n\n    var stem_lines = [];\n\n    unused_strings.forEach(function (strings) {\n      var containsLastString = strings.indexOf(total_lines) > -1;\n      var containsFirstString = strings.indexOf(1) > -1;\n\n      if (up_stem && containsFirstString || down_stem && containsLastString) {\n        return;\n      }\n\n      // If there's only one string in the group, push a duplicate value.\n      // We do this because we need 2 strings to convert into upper/lower y\n      // values.\n      if (strings.length === 1) {\n        strings.push(strings[0]);\n      }\n\n      var line_ys = [];\n      // Iterate through each group string and store it's y position\n      strings.forEach(function (string, index, strings) {\n        var isTopBound = string === 1;\n        var isBottomBound = string === total_lines;\n\n        // Get the y value for the appropriate staff line,\n        // we adjust for a 0 index array, since string numbers are index 1\n        var y = stave.getYForLine(string - 1);\n\n        // Unless the string is the first or last, add padding to each side\n        // of the line\n        if (index === 0 && !isTopBound) {\n          y -= line_spacing / 2 - 1;\n        } else if (index === strings.length - 1 && !isBottomBound) {\n          y += line_spacing / 2 - 1;\n        }\n\n        // Store the y value\n        line_ys.push(y);\n\n        // Store a subsequent y value connecting this group to the main\n        // stem above/below the stave if it's the top/bottom string\n        if (stem_direction === 1 && isTopBound) {\n          line_ys.push(stem_y - 2);\n        } else if (stem_direction === -1 && isBottomBound) {\n          line_ys.push(stem_y + 2);\n        }\n      });\n\n      // Add the sorted y values to the\n      stem_lines.push(line_ys.sort(function (a, b) {\n        return a - b;\n      }));\n    });\n\n    return stem_lines;\n  }\n\n  var TabNote = function (_StemmableNote) {\n    inherits(TabNote, _StemmableNote);\n    createClass(TabNote, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'tabnotes';\n      }\n\n      // Initialize the TabNote with a `tab_struct` full of properties\n      // and whether to `draw_stem` when rendering the note\n\n    }]);\n\n    function TabNote(tab_struct, draw_stem) {\n      classCallCheck(this, TabNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TabNote).call(this, tab_struct));\n\n      _this.ghost = false; // Renders parenthesis around notes\n      // Note properties\n      //\n      // The fret positions in the note. An array of `{ str: X, fret: X }`\n      _this.positions = tab_struct.positions;\n\n      // Render Options\n      Vex$1.Merge(_this.render_options, {\n        // font size for note heads and rests\n        glyph_font_scale: 30,\n        // Flag to draw a stem\n        draw_stem: draw_stem,\n        // Flag to draw dot modifiers\n        draw_dots: draw_stem,\n        // Flag to extend the main stem through the stave and fret positions\n        draw_stem_through_stave: false\n      });\n\n      _this.glyph = Flow.durationToGlyph(_this.duration, _this.noteType);\n      if (!_this.glyph) {\n        throw new Vex$1.RuntimeError('BadArguments', 'Invalid note initialization data (No glyph found): ' + JSON.stringify(tab_struct));\n      }\n\n      _this.buildStem();\n\n      if (tab_struct.stem_direction) {\n        _this.setStemDirection(tab_struct.stem_direction);\n      } else {\n        _this.setStemDirection(Stem.UP);\n      }\n\n      // Renders parenthesis around notes\n      _this.ghost = false;\n      _this.updateWidth();\n      return _this;\n    }\n\n    // The ModifierContext category\n\n\n    createClass(TabNote, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return TabNote.CATEGORY;\n      }\n\n      // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n      // Often used for indicating frets that are being bent to\n\n    }, {\n      key: 'setGhost',\n      value: function setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n      }\n\n      // Determine if the note has a stem\n\n    }, {\n      key: 'hasStem',\n      value: function hasStem() {\n        return this.render_options.draw_stem;\n      }\n\n      // Get the default stem extension for the note\n\n    }, {\n      key: 'getStemExtension',\n      value: function getStemExtension() {\n        var glyph = this.getGlyph();\n\n        if (this.stem_extension_override != null) {\n          return this.stem_extension_override;\n        }\n\n        if (glyph) {\n          return this.getStemDirection() === 1 ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n        }\n\n        return 0;\n      }\n\n      // Add a dot to the note\n\n    }, {\n      key: 'addDot',\n      value: function addDot() {\n        var dot = new Dot();\n        this.dots++;\n        return this.addModifier(dot, 0);\n      }\n\n      // Calculate and store the width of the note\n\n    }, {\n      key: 'updateWidth',\n      value: function updateWidth() {\n        this.glyphs = [];\n        this.width = 0;\n        for (var i = 0; i < this.positions.length; ++i) {\n          var fret = this.positions[i].fret;\n          if (this.ghost) fret = '(' + fret + ')';\n          var glyph = Flow.tabToGlyph(fret);\n          this.glyphs.push(glyph);\n          this.width = glyph.width > this.width ? glyph.width : this.width;\n        }\n      }\n\n      // Set the `stave` to the note\n\n    }, {\n      key: 'setStave',\n      value: function setStave(stave) {\n        get(Object.getPrototypeOf(TabNote.prototype), 'setStave', this).call(this, stave);\n        this.context = stave.context;\n        this.width = 0;\n\n        // Calculate the fret number width based on font used\n        var i = void 0;\n        if (this.context) {\n          for (i = 0; i < this.glyphs.length; ++i) {\n            var text = '' + this.glyphs[i].text;\n            if (text.toUpperCase() != 'X') this.glyphs[i].width = this.context.measureText(text).width;\n            this.width = this.glyphs[i].width > this.width ? this.glyphs[i].width : this.width;\n          }\n        }\n\n        var ys = [];\n\n        // Setup y coordinates for score.\n        for (i = 0; i < this.positions.length; ++i) {\n          var line = this.positions[i].str;\n          ys.push(this.stave.getYForLine(line - 1));\n        }\n\n        return this.setYs(ys);\n      }\n\n      // Get the fret positions for the note\n\n    }, {\n      key: 'getPositions',\n      value: function getPositions() {\n        return this.positions;\n      }\n\n      // Add self to the provided modifier context `mc`\n\n    }, {\n      key: 'addToModifierContext',\n      value: function addToModifierContext(mc) {\n        this.setModifierContext(mc);\n        for (var i = 0; i < this.modifiers.length; ++i) {\n          this.modifierContext.addModifier(this.modifiers[i]);\n        }\n        this.modifierContext.addModifier(this);\n        this.preFormatted = false;\n        return this;\n      }\n\n      // Get the `x` coordinate to the right of the note\n\n    }, {\n      key: 'getTieRightX',\n      value: function getTieRightX() {\n        var tieStartX = this.getAbsoluteX();\n        var note_glyph_width = this.glyph.head_width;\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n\n        return tieStartX;\n      }\n\n      // Get the `x` coordinate to the left of the note\n\n    }, {\n      key: 'getTieLeftX',\n      value: function getTieLeftX() {\n        var tieEndX = this.getAbsoluteX();\n        var note_glyph_width = this.glyph.head_width;\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n\n        return tieEndX;\n      }\n\n      // Get the default `x` and `y` coordinates for a modifier at a specific\n      // `position` at a fret position `index`\n\n    }, {\n      key: 'getModifierStartXY',\n      value: function getModifierStartXY(position, index) {\n        if (!this.preFormatted) throw new Vex$1.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\n        if (this.ys.length === 0) throw new Vex$1.RERR('NoYValues', 'No Y-Values calculated for this note.');\n\n        var x = 0;\n        if (position == Modifier.Position.LEFT) {\n          x = -1 * 2; // extra_left_px\n        } else if (position == Modifier.Position.RIGHT) {\n            x = this.width + 2; // extra_right_px\n          } else if (position == Modifier.Position.BELOW || position == Modifier.Position.ABOVE) {\n              var note_glyph_width = this.glyph.head_width;\n              x = note_glyph_width / 2;\n            }\n\n        return { x: this.getAbsoluteX() + x, y: this.ys[index] };\n      }\n\n      // Get the default line for rest\n\n    }, {\n      key: 'getLineForRest',\n      value: function getLineForRest() {\n        return this.positions[0].str;\n      }\n\n      // Pre-render formatting\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        if (this.preFormatted) return;\n        if (this.modifierContext) this.modifierContext.preFormat();\n        // width is already set during init()\n        this.setPreFormatted(true);\n      }\n\n      // Get the x position for the stem\n\n    }, {\n      key: 'getStemX',\n      value: function getStemX() {\n        return this.getCenterGlyphX();\n      }\n\n      // Get the y position for the stem\n\n    }, {\n      key: 'getStemY',\n      value: function getStemY() {\n        var num_lines = this.stave.getNumLines();\n\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        var stemUpLine = -0.5;\n        var stemDownLine = num_lines - 0.5;\n        var stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n        return this.stave.getYForLine(stemStartLine);\n      }\n\n      // Get the stem extents for the tabnote\n\n    }, {\n      key: 'getStemExtents',\n      value: function getStemExtents() {\n        var stem_base_y = this.getStemY();\n        var stem_top_y = stem_base_y + Stem.HEIGHT * -this.stem_direction;\n\n        return { topY: stem_top_y, baseY: stem_base_y };\n      }\n\n      // Draw the fal onto the context\n\n    }, {\n      key: 'drawFlag',\n      value: function drawFlag() {\n        var render_stem = this.beam == null && this.render_options.draw_stem;\n        var render_flag = this.beam == null && render_stem;\n\n        // Now it's the flag's turn.\n        if (this.glyph.flag && render_flag) {\n          var flag_x = this.getStemX() + 1;\n          var flag_y = this.getStemY() - this.stem.getHeight();\n          var flag_code = void 0;\n\n          if (this.stem_direction == Stem.DOWN) {\n            // Down stems have flags on the left.\n            flag_code = this.glyph.code_flag_downstem;\n          } else {\n            // Up stems have flags on the left.\n            flag_code = this.glyph.code_flag_upstem;\n          }\n\n          // Draw the Flag\n          Glyph.renderGlyph(this.context, flag_x, flag_y, this.render_options.glyph_font_scale, flag_code);\n        }\n      }\n\n      // Render the modifiers onto the context\n\n    }, {\n      key: 'drawModifiers',\n      value: function drawModifiers() {\n        // Draw the modifiers\n        this.modifiers.forEach(function (modifier) {\n          // Only draw the dots if enabled\n          if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n          modifier.setContext(this.context);\n          modifier.draw();\n        }, this);\n      }\n\n      // Render the stem extension through the fret positions\n\n    }, {\n      key: 'drawStemThrough',\n      value: function drawStemThrough() {\n        var stem_x = this.getStemX();\n        var stem_y = this.getStemY();\n        var ctx = this.context;\n\n        var stem_through = this.render_options.draw_stem_through_stave;\n        var draw_stem = this.render_options.draw_stem;\n        if (draw_stem && stem_through) {\n          var total_lines = this.stave.getNumLines();\n          var strings_used = this.positions.map(function (position) {\n            return position.str;\n          });\n\n          var unused_strings = getUnusedStringGroups(total_lines, strings_used);\n          var stem_lines = getPartialStemLines(stem_y, unused_strings, this.getStave(), this.getStemDirection());\n\n          // Fine tune x position to match default stem\n          if (!this.beam || this.getStemDirection() === 1) {\n            stem_x += Stem.WIDTH / 2;\n          }\n\n          ctx.save();\n          ctx.setLineWidth(Stem.WIDTH);\n          stem_lines.forEach(function (bounds) {\n            if (bounds.length === 0) return;\n\n            ctx.beginPath();\n            ctx.moveTo(stem_x, bounds[0]);\n            ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n            ctx.stroke();\n            ctx.closePath();\n          });\n          ctx.restore();\n        }\n      }\n\n      // Render the fret positions onto the context\n\n    }, {\n      key: 'drawPositions',\n      value: function drawPositions() {\n        var ctx = this.context;\n        var x = this.getAbsoluteX();\n        var ys = this.ys;\n        var y = void 0;\n\n        for (var i = 0; i < this.positions.length; ++i) {\n          y = ys[i];\n\n          var glyph = this.glyphs[i];\n\n          // Center the fret text beneath the notation note head\n          var note_glyph_width = this.glyph.head_width;\n          var tab_x = x + note_glyph_width / 2 - glyph.width / 2;\n\n          ctx.clearRect(tab_x - 2, y - 3, glyph.width + 4, 6);\n\n          if (glyph.code) {\n            Glyph.renderGlyph(ctx, tab_x, y + 5 + glyph.shift_y, this.render_options.glyph_font_scale, glyph.code);\n          } else {\n            var text = glyph.text.toString();\n            ctx.fillText(text, tab_x, y + 5);\n          }\n        }\n      }\n\n      // The main rendering function for the entire note\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n        if (!this.stave) throw new Vex$1.RERR('NoStave', \"Can't draw without a stave.\");\n        if (this.ys.length === 0) throw new Vex$1.RERR('NoYValues', \"Can't draw note without Y values.\");\n\n        var render_stem = this.beam == null && this.render_options.draw_stem;\n\n        this.drawPositions();\n        this.drawStemThrough();\n\n        var stem_x = this.getStemX();\n        var stem_y = this.getStemY();\n        if (render_stem) {\n          this.drawStem({\n            x_begin: stem_x,\n            x_end: stem_x,\n            y_top: stem_y,\n            y_bottom: stem_y,\n            y_extend: 0,\n            stem_extension: this.getStemExtension(),\n            stem_direction: this.stem_direction\n          });\n        }\n\n        this.drawFlag();\n        this.drawModifiers();\n      }\n    }]);\n    return TabNote;\n  }(StemmableNote);\n\n  /** @constructor */\n  var ClefNote = function (_Note) {\n    inherits(ClefNote, _Note);\n    createClass(ClefNote, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'clefnote';\n      }\n    }]);\n\n    function ClefNote(type, size, annotation) {\n      classCallCheck(this, ClefNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(ClefNote).call(this, { duration: 'b' }));\n\n      _this.setType(type, size, annotation);\n\n      // Note properties\n      _this.ignore_ticks = true;\n      return _this;\n    }\n\n    createClass(ClefNote, [{\n      key: 'setType',\n      value: function setType(type, size, annotation) {\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n      }\n    }, {\n      key: 'getClef',\n      value: function getClef() {\n        return this.clef;\n      }\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;\n        this.glyph.setContext(this.context);\n        return this;\n      }\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        return new BoundingBox(0, 0, 0, 0);\n      }\n    }, {\n      key: 'addToModifierContext',\n      value: function addToModifierContext() {\n        /* overridden to ignore */\n        return this;\n      }\n    }, {\n      key: 'getCategory',\n      value: function getCategory() {\n        return ClefNote.CATEGORY;\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        this.setPreFormatted(true);\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.stave) throw new Vex$1.RERR('NoStave', \"Can't draw without a stave.\");\n\n        if (!this.glyph.getContext()) {\n          this.glyph.setContext(this.context);\n        }\n        var abs_x = this.getAbsoluteX();\n\n        this.glyph.setStave(this.stave);\n        this.glyph.setYShift(this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n        this.glyph.renderToStave(abs_x);\n\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.clef_obj.annotation !== undefined) {\n          var attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n          if (!attachment.getContext()) {\n            attachment.setContext(this.context);\n          }\n          attachment.setStave(this.stave);\n          attachment.setYShift(this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n          attachment.setXShift(this.clef_obj.annotation.x_shift);\n          attachment.renderToStave(abs_x);\n        }\n      }\n    }]);\n    return ClefNote;\n  }(Note);\n\n  var TimeSigNote = function (_Note) {\n    inherits(TimeSigNote, _Note);\n\n    function TimeSigNote(timeSpec, customPadding) {\n      classCallCheck(this, TimeSigNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TimeSigNote).call(this, { duration: 'b' }));\n\n      var timeSignature = new TimeSignature(timeSpec, customPadding);\n      _this.timeSig = timeSignature.getTimeSig();\n      _this.setWidth(_this.timeSig.glyph.getMetrics().width);\n\n      // Note properties\n      _this.ignore_ticks = true;\n      return _this;\n    }\n\n    createClass(TimeSigNote, [{\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        return new BoundingBox(0, 0, 0, 0);\n      }\n    }, {\n      key: 'addToModifierContext',\n      value: function addToModifierContext() {\n        /* overridden to ignore */\n        return this;\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        this.setPreFormatted(true);\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.stave) throw new Vex$1.RERR('NoStave', \"Can't draw without a stave.\");\n\n        if (!this.timeSig.glyph.getContext()) {\n          this.timeSig.glyph.setContext(this.context);\n        }\n\n        this.timeSig.glyph.setStave(this.stave);\n        this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n        this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n      }\n    }]);\n    return TimeSigNote;\n  }(Note);\n\n  var TabTie = function (_StaveTie) {\n    inherits(TabTie, _StaveTie);\n    createClass(TabTie, null, [{\n      key: 'createHammeron',\n      value: function createHammeron(notes) {\n        return new TabTie(notes, 'H');\n      }\n    }, {\n      key: 'createPulloff',\n      value: function createPulloff(notes) {\n        return new TabTie(notes, 'P');\n      }\n    }]);\n\n    function TabTie(notes, text) {\n      classCallCheck(this, TabTie);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TabTie).call(this, notes, text));\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *    first_indices: [n1, n2, n3],\n       *    last_indices: [n1, n2, n3]\n       *  }\n       *\n       **/\n\n\n      _this.render_options.cp1 = 9;\n      _this.render_options.cp2 = 11;\n      _this.render_options.y_shift = 3;\n\n      _this.setNotes(notes);\n      return _this;\n    }\n\n    createClass(TabTie, [{\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', 'No context to render tie.');\n        var first_note = this.first_note;\n        var last_note = this.last_note;\n        var first_x_px = void 0,\n            last_x_px = void 0,\n            first_ys = void 0,\n            last_ys = void 0;\n\n        if (first_note) {\n          first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n          first_ys = first_note.getYs();\n        } else {\n          first_x_px = last_note.getStave().getTieStartX();\n          first_ys = last_note.getYs();\n          this.first_indices = this.last_indices;\n        }\n\n        if (last_note) {\n          last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n          last_ys = last_note.getYs();\n        } else {\n          last_x_px = first_note.getStave().getTieEndX();\n          last_ys = first_note.getYs();\n          this.last_indices = this.first_indices;\n        }\n\n        this.renderTie({\n          first_x_px: first_x_px,\n          last_x_px: last_x_px,\n          first_ys: first_ys,\n          last_ys: last_ys,\n          direction: -1 });\n\n        // Tab tie's are always face up.\n        this.renderText(first_x_px, last_x_px);\n        return true;\n      }\n    }]);\n    return TabTie;\n  }(StaveTie);\n\n  var TabSlide = function (_TabTie) {\n    inherits(TabSlide, _TabTie);\n    createClass(TabSlide, null, [{\n      key: 'createSlideUp',\n      value: function createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n      }\n    }, {\n      key: 'createSlideDown',\n      value: function createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n      }\n    }, {\n      key: 'SLIDE_UP',\n      get: function get() {\n        return 1;\n      }\n    }, {\n      key: 'SLIDE_DOWN',\n      get: function get() {\n        return -1;\n      }\n    }]);\n\n    function TabSlide(notes, direction) {\n      classCallCheck(this, TabSlide);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TabSlide).call(this, notes, 'sl.'));\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *    first_indices: [n1, n2, n3],\n       *    last_indices: [n1, n2, n3]\n       *  }\n       *\n       **/\n\n\n      if (!direction) {\n        var first_fret = notes.first_note.getPositions()[0].fret;\n        var last_fret = notes.last_note.getPositions()[0].fret;\n\n        direction = parseInt(first_fret, 10) > parseInt(last_fret, 10) ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n      }\n\n      _this.slide_direction = direction;\n      _this.render_options.cp1 = 11;\n      _this.render_options.cp2 = 14;\n      _this.render_options.y_shift = 0.5;\n\n      _this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n      _this.setNotes(notes);\n      return _this;\n    }\n\n    createClass(TabSlide, [{\n      key: 'renderTie',\n      value: function renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) throw new Vex$1.RERR('BadArguments', 'No Y-values to render');\n\n        var ctx = this.context;\n        var first_x_px = params.first_x_px;\n        var first_ys = params.first_ys;\n        var last_x_px = params.last_x_px;\n\n        var direction = this.slide_direction;\n        if (direction != TabSlide.SLIDE_UP && direction != TabSlide.SLIDE_DOWN) {\n          throw new Vex$1.RERR('BadSlide', 'Invalid slide direction');\n        }\n\n        for (var i = 0; i < this.first_indices.length; ++i) {\n          var slide_y = first_ys[this.first_indices[i]] + this.render_options.y_shift;\n\n          if (isNaN(slide_y)) throw new Vex$1.RERR('BadArguments', 'Bad indices for slide rendering.');\n\n          ctx.beginPath();\n          ctx.moveTo(first_x_px, slide_y + 3 * direction);\n          ctx.lineTo(last_x_px, slide_y - 3 * direction);\n          ctx.closePath();\n          ctx.stroke();\n        }\n      }\n    }]);\n    return TabSlide;\n  }(TabTie);\n\n  var GraceNote = function (_StaveNote) {\n    inherits(GraceNote, _StaveNote);\n    createClass(GraceNote, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'gracenotes';\n      }\n    }]);\n\n    function GraceNote(note_struct) {\n      classCallCheck(this, GraceNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(GraceNote).call(this, note_struct));\n\n      _this.render_options.glyph_font_scale = 22;\n      _this.render_options.stem_height = 20;\n      _this.render_options.stroke_px = 2;\n      _this.glyph.head_width = 6;\n\n      _this.slash = note_struct.slash;\n      _this.slur = true;\n\n      _this.buildNoteHeads();\n\n      _this.width = 3;\n      return _this;\n    }\n\n    createClass(GraceNote, [{\n      key: 'getStemExtension',\n      value: function getStemExtension() {\n        var glyph = this.getGlyph();\n\n        if (this.stem_extension_override != null) {\n          return this.stem_extension_override;\n        }\n\n        if (glyph) {\n          return this.getStemDirection() === 1 ? glyph.gracenote_stem_up_extension : glyph.gracenote_stem_down_extension;\n        }\n\n        return 0;\n      }\n    }, {\n      key: 'getCategory',\n      value: function getCategory() {\n        return GraceNote.CATEGORY;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        get(Object.getPrototypeOf(GraceNote.prototype), 'draw', this).call(this);\n        var ctx = this.context;\n        var stem_direction = this.getStemDirection();\n\n        if (this.slash) {\n          ctx.beginPath();\n\n          var x = this.getAbsoluteX();\n          var y = this.getYs()[0] - this.stem.getHeight() / 2.8;\n          if (stem_direction === 1) {\n            x += 1;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + 13, y - 9);\n          } else if (stem_direction === -1) {\n            x -= 4;\n            y += 1;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + 13, y + 9);\n          }\n\n          ctx.closePath();\n          ctx.stroke();\n        }\n      }\n    }]);\n    return GraceNote;\n  }(StaveNote);\n\n  var Tuning = function () {\n    createClass(Tuning, null, [{\n      key: 'names',\n      get: function get() {\n        return {\n          'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n          'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n          'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n          'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n          'standardBanjo': 'D/5,B/4,G/4,D/4,G/5'\n        };\n      }\n    }]);\n\n    function Tuning() {\n      var tuningString = arguments.length <= 0 || arguments[0] === undefined ? 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2' : arguments[0];\n      classCallCheck(this, Tuning);\n\n      // Default to standard tuning.\n      this.setTuning(tuningString);\n    }\n\n    createClass(Tuning, [{\n      key: 'noteToInteger',\n      value: function noteToInteger(noteString) {\n        return Flow.keyProperties(noteString).int_value;\n      }\n    }, {\n      key: 'setTuning',\n      value: function setTuning(noteString) {\n        if (Tuning.names[noteString]) {\n          noteString = Tuning.names[noteString];\n        }\n\n        this.tuningString = noteString;\n        this.tuningValues = [];\n        this.numStrings = 0;\n\n        var keys = noteString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n          throw new Vex$1.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n        }\n\n        this.numStrings = keys.length;\n        for (var i = 0; i < this.numStrings; ++i) {\n          this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n      }\n    }, {\n      key: 'getValueForString',\n      value: function getValueForString(stringNum) {\n        var s = parseInt(stringNum, 10);\n        if (s < 1 || s > this.numStrings) {\n          throw new Vex$1.RERR('BadArguments', 'String number must be between 1 and ' + this.numStrings + ':' + stringNum);\n        }\n\n        return this.tuningValues[s - 1];\n      }\n    }, {\n      key: 'getValueForFret',\n      value: function getValueForFret(fretNum, stringNum) {\n        var stringValue = this.getValueForString(stringNum);\n        var f = parseInt(fretNum, 10);\n\n        if (f < 0) {\n          throw new Vex$1.RERR('BadArguments', 'Fret number must be 0 or higher: ' + fretNum);\n        }\n\n        return stringValue + f;\n      }\n    }, {\n      key: 'getNoteForFret',\n      value: function getNoteForFret(fretNum, stringNum) {\n        var noteValue = this.getValueForFret(fretNum, stringNum);\n\n        var octave = Math.floor(noteValue / 12);\n        var value = noteValue % 12;\n\n        return Flow.integerToNote(value) + '/' + octave;\n      }\n    }]);\n    return Tuning;\n  }();\n\n  var KeyManager = function () {\n    function KeyManager(key) {\n      classCallCheck(this, KeyManager);\n\n      this.music = new Music();\n      this.setKey(key);\n    }\n\n    createClass(KeyManager, [{\n      key: 'setKey',\n      value: function setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n      }\n    }, {\n      key: 'getKey',\n      value: function getKey() {\n        return this.key;\n      }\n    }, {\n      key: 'reset',\n      value: function reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n        var is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) throw new Vex$1.RERR('BadArguments', 'Unsupported key type: ' + this.key);\n\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n\n        var noteLocation = Music.root_indices[this.keyParts.root];\n\n        for (var i = 0; i < Music.roots.length; ++i) {\n          var index = (noteLocation + i) % Music.roots.length;\n          var rootName = Music.roots[index];\n\n          var noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n          this.scaleMap[rootName] = noteName;\n          this.scaleMapByValue[this.scale[i]] = noteName;\n          this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n\n        return this;\n      }\n    }, {\n      key: 'getAccidental',\n      value: function getAccidental(key) {\n        var root = this.music.getKeyParts(key).root;\n        var parts = this.music.getNoteParts(this.scaleMap[root]);\n\n        return {\n          note: this.scaleMap[root],\n          accidental: parts.accidental\n        };\n      }\n    }, {\n      key: 'selectNote',\n      value: function selectNote(note) {\n        note = note.toLowerCase();\n        var parts = this.music.getNoteParts(note);\n\n        // First look for matching note in our altered scale\n        var scaleNote = this.scaleMap[parts.root];\n        var modparts = this.music.getNoteParts(scaleNote);\n\n        if (scaleNote == note) return {\n          'note': scaleNote,\n          'accidental': parts.accidental,\n          'change': false\n        };\n\n        // Then search for a note of equivalent value in our altered scale\n        var valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n          return {\n            'note': valueNote,\n            'accidental': this.music.getNoteParts(valueNote).accidental,\n            'change': false\n          };\n        }\n\n        // Then search for a note of equivalent value in the original scale\n        var originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n          this.scaleMap[modparts.root] = originalValueNote;\n          delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n          this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n          return {\n            'note': originalValueNote,\n            'accidental': this.music.getNoteParts(originalValueNote).accidental,\n            'change': true\n          };\n        }\n\n        // Then try to unmodify a currently modified note.\n        if (modparts.root == note) {\n          delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n          this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n          this.scaleMap[modparts.root] = modparts.root;\n          return {\n            'note': modparts.root,\n            'accidental': null,\n            'change': true\n          };\n        }\n\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n\n        return {\n          note: note,\n          'accidental': parts.accidental,\n          'change': true\n        };\n      }\n    }]);\n    return KeyManager;\n  }();\n\n  var StaveHairpin = function () {\n    createClass(StaveHairpin, null, [{\n      key: 'FormatByTicksAndDraw',\n\n\n      /* Helper function to convert ticks into pixels.\n       * Requires a Formatter with voices joined and formatted (to\n       * get pixels per tick)\n       *\n       * options is struct that has:\n       *\n       *  {\n       *   height: px,\n       *   y_shift: px, //vertical offset\n       *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n       *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n       *  }\n       *\n       **/\n      value: function FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var ppt = formatter.pixelsPerTick;\n\n        if (ppt == null) {\n          throw new Vex$1.RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n\n        var l_shift_px = ppt * options.left_shift_ticks;\n        var r_shift_px = ppt * options.right_shift_ticks;\n\n        var hairpin_options = {\n          height: options.height,\n          y_shift: options.y_shift,\n          left_shift_px: l_shift_px,\n          right_shift_px: r_shift_px };\n\n        new StaveHairpin({\n          first_note: notes.first_note,\n          last_note: notes.last_note\n        }, type).setContext(ctx).setRenderOptions(hairpin_options).setPosition(position).draw();\n      }\n\n      /**\n       * Create a new hairpin from the specified notes.\n       *\n       * @constructor\n       * @param {!Object} notes The notes to tie up.\n       * @param {!Object} type The type of hairpin\n       */\n\n    }, {\n      key: 'type',\n      get: function get() {\n        return {\n          CRESC: 1,\n          DECRESC: 2\n        };\n      }\n    }]);\n\n    function StaveHairpin(notes, type) {\n      classCallCheck(this, StaveHairpin);\n\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *  }\n       *\n       **/\n\n      this.notes = notes;\n      this.hairpin = type;\n      this.position = Modifier.Position.BELOW;\n\n      this.context = null;\n\n      this.render_options = {\n        height: 10,\n        y_shift: 0, // vertical offset\n        left_shift_px: 0, // left horizontal offset\n        right_shift_px: 0 };\n\n      // right horizontal offset\n      this.setNotes(notes);\n    }\n\n    createClass(StaveHairpin, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n    }, {\n      key: 'setPosition',\n      value: function setPosition(position) {\n        if (position == Modifier.Position.ABOVE || position == Modifier.Position.BELOW) this.position = position;\n        return this;\n      }\n    }, {\n      key: 'setRenderOptions',\n      value: function setRenderOptions(options) {\n        if (options.height != null && options.y_shift != null && options.left_shift_px != null && options.right_shift_px != null) {\n          this.render_options = options;\n        }\n        return this;\n      }\n\n      /**\n       * Set the notes to attach this hairpin to.\n       *\n       * @param {!Object} notes The start and end notes.\n       */\n\n    }, {\n      key: 'setNotes',\n      value: function setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) throw new Vex$1.RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n\n        // Success. Lets grab 'em notes.\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n      }\n    }, {\n      key: 'renderHairpin',\n      value: function renderHairpin(params) {\n        var ctx = this.context;\n        var dis = this.render_options.y_shift + 20;\n        var y_shift = params.first_y;\n\n        if (this.position == Modifier.Position.ABOVE) {\n          dis = -dis + 30;\n          y_shift = params.first_y - params.staff_height;\n        }\n\n        var l_shift = this.render_options.left_shift_px;\n        var r_shift = this.render_options.right_shift_px;\n\n        ctx.beginPath();\n\n        switch (this.hairpin) {\n          case StaveHairpin.type.CRESC:\n            ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n            ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n            ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n            break;\n          case StaveHairpin.type.DECRESC:\n            ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n            ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n            ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n            break;\n          default:\n            // Default is NONE, so nothing to draw\n            break;\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw Hairpin without a context.\");\n\n        var first_note = this.first_note;\n        var last_note = this.last_note;\n\n        var start = first_note.getModifierStartXY(this.position, 0);\n        var end = last_note.getModifierStartXY(this.position, 0);\n\n        this.renderHairpin({\n          first_x: start.x,\n          last_x: end.x,\n          first_y: first_note.getStave().y + first_note.getStave().height,\n          last_y: last_note.getStave().y + last_note.getStave().height,\n          staff_height: first_note.getStave().height\n        });\n        return true;\n      }\n    }]);\n    return StaveHairpin;\n  }();\n\n  var Curve = function () {\n    createClass(Curve, null, [{\n      key: 'Position',\n      get: function get() {\n        return {\n          NEAR_HEAD: 1,\n          NEAR_TOP: 2\n        };\n      }\n\n      // from: Start note\n      // to: End note\n      // options:\n      //    cps: List of control points\n      //    x_shift: pixels to shift\n      //    y_shift: pixels to shift\n\n    }]);\n\n    function Curve(from, to, options) {\n      classCallCheck(this, Curve);\n\n      this.render_options = {\n        spacing: 2,\n        thickness: 2,\n        x_shift: 0,\n        y_shift: 10,\n        position: Curve.Position.NEAR_HEAD,\n        invert: false,\n        cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }]\n      };\n\n      Vex$1.Merge(this.render_options, options);\n      this.setNotes(from, to);\n    }\n\n    createClass(Curve, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n    }, {\n      key: 'setNotes',\n      value: function setNotes(from, to) {\n        if (!from && !to) throw new Vex$1.RuntimeError('BadArguments', 'Curve needs to have either first_note or last_note set.');\n\n        this.from = from;\n        this.to = to;\n        return this;\n      }\n\n      /**\n       * @return {boolean} Returns true if this is a partial bar.\n       */\n\n    }, {\n      key: 'isPartial',\n      value: function isPartial() {\n        return !this.from || !this.to;\n      }\n    }, {\n      key: 'renderCurve',\n      value: function renderCurve(params) {\n        var ctx = this.context;\n        var cps = this.render_options.cps;\n\n        var x_shift = this.render_options.x_shift;\n        var y_shift = this.render_options.y_shift * params.direction;\n\n        var first_x = params.first_x + x_shift;\n        var first_y = params.first_y + y_shift;\n        var last_x = params.last_x - x_shift;\n        var last_y = params.last_y + y_shift;\n        var thickness = this.render_options.thickness;\n\n        var cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cps[0].x, first_y + cps[0].y * params.direction, last_x - cp_spacing + cps[1].x, last_y + cps[1].y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cps[1].x, last_y + (cps[1].y + thickness) * params.direction, first_x + cp_spacing + cps[0].x, first_y + (cps[0].y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', 'No context to render tie.');\n        var first_note = this.from;\n        var last_note = this.to;\n        var first_x = void 0,\n            last_x = void 0,\n            first_y = void 0,\n            last_y = void 0,\n            stem_direction = void 0;\n\n        var metric = 'baseY';\n        var end_metric = 'baseY';\n        var position = this.render_options.position;\n        var position_end = this.render_options.position_end;\n\n        if (position === Curve.Position.NEAR_TOP) {\n          metric = 'topY';\n          end_metric = 'topY';\n        }\n\n        if (position_end == Curve.Position.NEAR_HEAD) {\n          end_metric = 'baseY';\n        } else if (position_end == Curve.Position.NEAR_TOP) {\n          end_metric = 'topY';\n        }\n\n        if (first_note) {\n          first_x = first_note.getTieRightX();\n          stem_direction = first_note.getStemDirection();\n          first_y = first_note.getStemExtents()[metric];\n        } else {\n          first_x = last_note.getStave().getTieStartX();\n          first_y = last_note.getStemExtents()[metric];\n        }\n\n        if (last_note) {\n          last_x = last_note.getTieLeftX();\n          stem_direction = last_note.getStemDirection();\n          last_y = last_note.getStemExtents()[end_metric];\n        } else {\n          last_x = first_note.getStave().getTieEndX();\n          last_y = first_note.getStemExtents()[end_metric];\n        }\n\n        this.renderCurve({\n          first_x: first_x,\n          last_x: last_x,\n          first_y: first_y,\n          last_y: last_y,\n          direction: stem_direction * (this.render_options.invert === true ? -1 : 1)\n        });\n        return true;\n      }\n    }]);\n    return Curve;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\n  function L$13() {\n    if (TextDynamics.DEBUG) Vex$1.L('Vex.Flow.TextDynamics', arguments);\n  }\n\n  var TextDynamics = function (_Note) {\n    inherits(TextDynamics, _Note);\n    createClass(TextDynamics, null, [{\n      key: 'GLYPHS',\n\n      // The glyph data for each dynamics letter\n      get: function get() {\n        return {\n          'f': {\n            code: 'vba',\n            width: 12\n          },\n          'p': {\n            code: 'vbf',\n            width: 14\n          },\n          'm': {\n            code: 'v62',\n            width: 17\n          },\n          's': {\n            code: 'v4a',\n            width: 10\n          },\n          'z': {\n            code: 'v80',\n            width: 12\n          },\n          'r': {\n            code: 'vb1',\n            width: 12\n          }\n        };\n      }\n\n      // A `TextDynamics` object inherits from `Note` so that it can be formatted\n      // within a `Voice`.\n      // Create the dynamics marking. `text_struct` is an object\n      // that contains a `duration` property and a `sequence` of\n      // letters that represents the letters to render\n\n    }]);\n\n    function TextDynamics(text_struct) {\n      classCallCheck(this, TextDynamics);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(TextDynamics).call(this, text_struct));\n\n      _this.sequence = text_struct.text.toLowerCase();\n      _this.line = text_struct.line || 0;\n      _this.glyphs = [];\n\n      Vex$1.Merge(_this.render_options, {\n        glyph_font_size: 40\n      });\n\n      L$13('New Dynamics Text: ', _this.sequence);\n      return _this;\n    }\n\n    // Set the Stave line on which the note should be placed\n\n\n    createClass(TextDynamics, [{\n      key: 'setLine',\n      value: function setLine(line) {\n        this.line = line;return this;\n      }\n\n      // Preformat the dynamics text\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        var total_width = 0;\n        // Iterate through each letter\n        this.sequence.split('').forEach(function (letter) {\n          // Get the glyph data for the letter\n          var glyph_data = TextDynamics.GLYPHS[letter];\n          if (!glyph_data) throw new Vex$1.RERR('Invalid dynamics character: ' + letter);\n\n          var size = this.render_options.glyph_font_size;\n          var glyph = new Glyph(glyph_data.code, size);\n\n          // Add the glyph\n          this.glyphs.push(glyph);\n\n          total_width += glyph_data.width;\n        }, this);\n\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n      }\n\n      // Draw the dynamics text on the rendering context\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var x = this.getAbsoluteX();\n        var y = this.stave.getYForLine(this.line + -3);\n\n        L$13('Rendering Dynamics: ', this.sequence);\n\n        var letter_x = x;\n        this.glyphs.forEach(function (glyph, index) {\n          var current_letter = this.sequence[index];\n          glyph.render(this.context, letter_x, y);\n          letter_x += TextDynamics.GLYPHS[current_letter].width;\n        }, this);\n      }\n    }]);\n    return TextDynamics;\n  }(Note);\n\n  // Attribution: Arrow rendering implementations based off of\n  // Patrick Horgan's article, \"Drawing lines and arcs with\n  // arrow heads on  HTML5 Canvas\"\n  //\n  // Draw an arrow head that connects between 3 coordinates\n  function drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n\n    ctx.fill();\n  }\n\n  // Helper function to draw a line with arrow heads\n  function drawArrowLine(ctx, point1, point2, config) {\n    var both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n    var x1 = point1.x;\n    var y1 = point1.y;\n    var x2 = point2.x;\n    var y2 = point2.y;\n\n    // For ends with arrow we actually want to stop before we get to the arrow\n    // so that wide lines won't put a flat end on the arrow.\n    var distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    var ratio = (distance - config.arrowhead_length / 3) / distance;\n    var end_x = void 0,\n        end_y = void 0,\n        start_x = void 0,\n        start_y = void 0;\n    if (config.draw_end_arrow || both_arrows) {\n      end_x = Math.round(x1 + (x2 - x1) * ratio);\n      end_y = Math.round(y1 + (y2 - y1) * ratio);\n    } else {\n      end_x = x2;\n      end_y = y2;\n    }\n\n    if (config.draw_start_arrow || both_arrows) {\n      start_x = x1 + (x2 - x1) * (1 - ratio);\n      start_y = y1 + (y2 - y1) * (1 - ratio);\n    } else {\n      start_x = x1;\n      start_y = y1;\n    }\n\n    if (config.color) {\n      ctx.setStrokeStyle(config.color);\n      ctx.setFillStyle(config.color);\n    }\n\n    // Draw the shaft of the arrow\n    ctx.beginPath();\n    ctx.moveTo(start_x, start_y);\n    ctx.lineTo(end_x, end_y);\n    ctx.stroke();\n    ctx.closePath();\n\n    // calculate the angle of the line\n    var line_angle = Math.atan2(y2 - y1, x2 - x1);\n    // h is the line length of a side of the arrow head\n    var h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n    var angle1 = void 0,\n        angle2 = void 0;\n    var top_x = void 0,\n        top_y = void 0;\n    var bottom_x = void 0,\n        bottom_y = void 0;\n\n    if (config.draw_end_arrow || both_arrows) {\n      angle1 = line_angle + Math.PI + config.arrowhead_angle;\n      top_x = x2 + Math.cos(angle1) * h;\n      top_y = y2 + Math.sin(angle1) * h;\n\n      angle2 = line_angle + Math.PI - config.arrowhead_angle;\n      bottom_x = x2 + Math.cos(angle2) * h;\n      bottom_y = y2 + Math.sin(angle2) * h;\n\n      drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n    }\n\n    if (config.draw_start_arrow || both_arrows) {\n      angle1 = line_angle + config.arrowhead_angle;\n      top_x = x1 + Math.cos(angle1) * h;\n      top_y = y1 + Math.sin(angle1) * h;\n\n      angle2 = line_angle - config.arrowhead_angle;\n      bottom_x = x1 + Math.cos(angle2) * h;\n      bottom_y = y1 + Math.sin(angle2) * h;\n\n      drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n    }\n  }\n\n  var StaveLine = function () {\n    createClass(StaveLine, null, [{\n      key: 'TextVerticalPosition',\n\n      // Text Positioning\n      get: function get() {\n        return {\n          TOP: 1,\n          BOTTOM: 2\n        };\n      }\n    }, {\n      key: 'TextJustification',\n      get: function get() {\n        return {\n          LEFT: 1,\n          CENTER: 2,\n          RIGHT: 3\n        };\n      }\n\n      // Initialize the StaveLine with the given `notes`.\n      //\n      // `notes` is a struct that has:\n      //\n      //  ```\n      //  {\n      //    first_note: Note,\n      //    last_note: Note,\n      //    first_indices: [n1, n2, n3],\n      //    last_indices: [n1, n2, n3]\n      //  }\n      //  ```\n\n    }]);\n\n    function StaveLine(notes) {\n      classCallCheck(this, StaveLine);\n\n      this.notes = notes;\n      this.context = null;\n\n      this.text = '';\n\n      this.font = {\n        family: 'Arial',\n        size: 10,\n        weight: ''\n      };\n\n      this.render_options = {\n        // Space to add to the left or the right\n        padding_left: 4,\n        padding_right: 3,\n\n        // The width of the line in pixels\n        line_width: 1,\n        // An array of line/space lengths. Unsupported with Raphael (SVG)\n        line_dash: null,\n        // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n        rounded_end: true,\n        // The color of the line and arrowheads\n        color: null,\n\n        // Flags to draw arrows on each end of the line\n        draw_start_arrow: false,\n        draw_end_arrow: false,\n\n        // The length of the arrowhead sides\n        arrowhead_length: 10,\n        // The angle of the arrowhead\n        arrowhead_angle: Math.PI / 8,\n\n        // The position of the text\n        text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n        text_justification: StaveLine.TextJustification.CENTER\n      };\n\n      this.setNotes(notes);\n    }\n\n    // Set the rendering context\n\n\n    createClass(StaveLine, [{\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n      // Set the font for the `StaveLine` text\n\n    }, {\n      key: 'setFont',\n      value: function setFont(font) {\n        this.font = font;return this;\n      }\n      // The the annotation for the `StaveLine`\n\n    }, {\n      key: 'setText',\n      value: function setText(text) {\n        this.text = text;return this;\n      }\n\n      // Set the notes for the `StaveLine`\n\n    }, {\n      key: 'setNotes',\n      value: function setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) throw new Vex$1.RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n\n        if (!notes.first_indices) notes.first_indices = [0];\n        if (!notes.last_indices) notes.last_indices = [0];\n\n        if (notes.first_indices.length != notes.last_indices.length) throw new Vex$1.RuntimeError('BadArguments', 'Connected notes must have similar' + ' index sizes');\n\n        // Success. Lets grab 'em notes.\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n      }\n\n      // Apply the style of the `StaveLine` to the context\n\n    }, {\n      key: 'applyLineStyle',\n      value: function applyLineStyle() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', 'No context to apply the styling to');\n        }\n\n        var render_options = this.render_options;\n        var ctx = this.context;\n\n        if (render_options.line_dash) {\n          ctx.setLineDash(render_options.line_dash);\n        }\n\n        if (render_options.line_width) {\n          ctx.setLineWidth(render_options.line_width);\n        }\n\n        if (render_options.rounded_end) {\n          ctx.setLineCap('round');\n        } else {\n          ctx.setLineCap('square');\n        }\n      }\n\n      // Apply the text styling to the context\n\n    }, {\n      key: 'applyFontStyle',\n      value: function applyFontStyle() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', 'No context to apply the styling to');\n        }\n\n        var ctx = this.context;\n\n        if (this.font) {\n          ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        }\n\n        if (this.render_options.color) {\n          ctx.setStrokeStyle(this.render_options.color);\n          ctx.setFillStyle(this.render_options.color);\n        }\n      }\n\n      // Renders the `StaveLine` on the context\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) {\n          throw new Vex$1.RERR('NoContext', 'No context to render StaveLine.');\n        }\n\n        var ctx = this.context;\n        var first_note = this.first_note;\n        var last_note = this.last_note;\n        var render_options = this.render_options;\n\n        ctx.save();\n        this.applyLineStyle();\n\n        // Cycle through each set of indices and draw lines\n        var start_position = void 0;\n        var end_position = void 0;\n        this.first_indices.forEach(function (first_index, i) {\n          var last_index = this.last_indices[i];\n\n          // Get initial coordinates for the start/end of the line\n          start_position = first_note.getModifierStartXY(2, first_index);\n          end_position = last_note.getModifierStartXY(1, last_index);\n          var upwards_slope = start_position.y > end_position.y;\n\n          // Adjust `x` coordinates for modifiers\n          start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n          end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n          // Adjust first `x` coordinates for displacements\n          var notehead_width = first_note.getGlyph().head_width;\n          var first_displaced = first_note.getKeyProps()[first_index].displaced;\n          if (first_displaced && first_note.getStemDirection() === 1) {\n            start_position.x += notehead_width + render_options.padding_left;\n          }\n\n          // Adjust last `x` coordinates for displacements\n          var last_displaced = last_note.getKeyProps()[last_index].displaced;\n          if (last_displaced && last_note.getStemDirection() === -1) {\n            end_position.x -= notehead_width + render_options.padding_right;\n          }\n\n          // Adjust y position better if it's not coming from the center of the note\n          start_position.y += upwards_slope ? -3 : 1;\n          end_position.y += upwards_slope ? 2 : 0;\n\n          drawArrowLine(ctx, start_position, end_position, this.render_options);\n        }, this);\n\n        ctx.restore();\n\n        // Determine the x coordinate where to start the text\n        var text_width = ctx.measureText(this.text).width;\n        var justification = render_options.text_justification;\n        var x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n          x = start_position.x;\n        } else if (justification === StaveLine.TextJustification.CENTER) {\n          var delta_x = end_position.x - start_position.x;\n          var center_x = delta_x / 2 + start_position.x;\n          x = center_x - text_width / 2;\n        } else if (justification === StaveLine.TextJustification.RIGHT) {\n          x = end_position.x - text_width;\n        }\n\n        // Determine the y value to start the text\n        var y = void 0;\n        var vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n          y = first_note.getStave().getYForTopText();\n        } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n          y = first_note.getStave().getYForBottomText();\n        }\n\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n\n        return this;\n      }\n    }]);\n    return StaveLine;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\n  function L$14() {\n    if (PedalMarking.DEBUG) Vex$1.L('Vex.Flow.PedalMarking', arguments);\n  }\n\n  // Draws a pedal glyph with the provided `name` on a rendering `context`\n  // at the coordinates `x` and `y. Takes into account the glyph data\n  // coordinate shifts.\n  function drawPedalGlyph(name, context, x, y, point) {\n    var glyph_data = PedalMarking.GLYPHS[name];\n    var glyph = new Glyph(glyph_data.code, point);\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n  }\n\n  var PedalMarking = function () {\n    createClass(PedalMarking, null, [{\n      key: 'createSustain',\n\n\n      // Create a sustain pedal marking. Returns the defaults PedalMarking.\n      // Which uses the traditional \"Ped\" and \"*\"\" markings.\n      value: function createSustain(notes) {\n        var pedal = new PedalMarking(notes);\n        return pedal;\n      }\n\n      // Create a sostenuto pedal marking\n\n    }, {\n      key: 'createSostenuto',\n      value: function createSostenuto(notes) {\n        var pedal = new PedalMarking(notes);\n        pedal.setStyle(PedalMarking.Styles.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n      }\n\n      // Create an una corda pedal marking\n\n    }, {\n      key: 'createUnaCorda',\n      value: function createUnaCorda(notes) {\n        var pedal = new PedalMarking(notes);\n        pedal.setStyle(PedalMarking.Styles.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n      }\n\n      // ## Prototype Methods\n\n    }, {\n      key: 'GLYPHS',\n\n\n      // Glyph data\n      get: function get() {\n        return {\n          'pedal_depress': {\n            code: 'v36',\n            x_shift: -10,\n            y_shift: 0\n          },\n          'pedal_release': {\n            code: 'v5d',\n            x_shift: -2,\n            y_shift: 3\n          }\n        };\n      }\n    }, {\n      key: 'Styles',\n      get: function get() {\n        return {\n          TEXT: 1,\n          BRACKET: 2,\n          MIXED: 3\n        };\n      }\n    }]);\n\n    function PedalMarking(notes) {\n      classCallCheck(this, PedalMarking);\n\n      this.notes = notes;\n      this.style = PedalMarking.TEXT;\n      this.line = 0;\n\n      // Custom text for the release/depress markings\n      this.custom_depress_text = '';\n      this.custom_release_text = '';\n\n      this.font = {\n        family: 'Times New Roman',\n        size: 12,\n        weight: 'italic bold'\n      };\n\n      this.render_options = {\n        bracket_height: 10,\n        text_margin_right: 6,\n        bracket_line_width: 1,\n        glyph_point_size: 40,\n        color: 'black'\n      };\n    }\n\n    // Set custom text for the `depress`/`release` pedal markings. No text is\n    // set if the parameter is falsy.\n\n\n    createClass(PedalMarking, [{\n      key: 'setCustomText',\n      value: function setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n      }\n\n      // Set the pedal marking style\n\n    }, {\n      key: 'setStyle',\n      value: function setStyle(style) {\n        if (style < 1 && style > 3) {\n          throw new Vex$1.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n        }\n\n        this.style = style;\n        return this;\n      }\n\n      // Set the staff line to render the markings on\n\n    }, {\n      key: 'setLine',\n      value: function setLine(line) {\n        this.line = line;return this;\n      }\n\n      // Set the rendering context\n\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n\n      // Draw the bracket based pedal markings\n\n    }, {\n      key: 'drawBracketed',\n      value: function drawBracketed() {\n        var ctx = this.context;\n        var is_pedal_depressed = false;\n        var prev_x = void 0;\n        var prev_y = void 0;\n        var pedal = this;\n\n        // Iterate through each note\n        this.notes.forEach(function (note, index, notes) {\n          // Each note triggers the opposite pedal action\n          is_pedal_depressed = !is_pedal_depressed;\n\n          // Get the initial coordinates for the note\n          var x = note.getAbsoluteX();\n          var y = note.getStave().getYForBottomText(pedal.line + 3);\n\n          // Throw if current note is positioned before the previous note\n          if (x < prev_x) throw new Vex$1.RERR('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n\n          // Determine if the previous or next note are the same\n          // as the current note. We need to keep track of this for\n          // when adjustments are made for the release+depress action\n          var next_is_same = notes[index + 1] === note;\n          var prev_is_same = notes[index - 1] === note;\n\n          var x_shift = 0;\n          if (is_pedal_depressed) {\n            // Adjustment for release+depress\n            x_shift = prev_is_same ? 5 : 0;\n\n            if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n              // For MIXED style, start with text instead of bracket\n              if (pedal.custom_depress_text) {\n                // If we have custom text, use instead of the default \"Ped\" glyph\n                var text_width = ctx.measureText(pedal.custom_depress_text).width;\n                ctx.fillText(pedal.custom_depress_text, x - text_width / 2, y);\n                x_shift = text_width / 2 + pedal.render_options.text_margin_right;\n              } else {\n                // Render the Ped glyph in position\n                drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n                x_shift = 20 + pedal.render_options.text_margin_right;\n              }\n            } else {\n              // Draw start bracket\n              ctx.beginPath();\n              ctx.moveTo(x, y - pedal.render_options.bracket_height);\n              ctx.lineTo(x + x_shift, y);\n              ctx.stroke();\n              ctx.closePath();\n            }\n          } else {\n            // Adjustment for release+depress\n            x_shift = next_is_same ? -5 : 0;\n\n            // Draw end bracket\n            ctx.beginPath();\n            ctx.moveTo(prev_x, prev_y);\n            ctx.lineTo(x + x_shift, y);\n            ctx.lineTo(x, y - pedal.render_options.bracket_height);\n            ctx.stroke();\n            ctx.closePath();\n          }\n\n          // Store previous coordinates\n          prev_x = x + x_shift;\n          prev_y = y;\n        });\n      }\n\n      // Draw the text based pedal markings. This defaults to the traditional\n      // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n\n    }, {\n      key: 'drawText',\n      value: function drawText() {\n        var ctx = this.context;\n        var is_pedal_depressed = false;\n        var pedal = this;\n\n        // The glyph point size\n        var point = pedal.render_options.glyph_point_size;\n\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach(function (note) {\n          is_pedal_depressed = !is_pedal_depressed;\n          var stave = note.getStave();\n          var x = note.getAbsoluteX();\n          var y = stave.getYForBottomText(pedal.line + 3);\n\n          var text_width = 0;\n          if (is_pedal_depressed) {\n            if (pedal.custom_depress_text) {\n              text_width = ctx.measureText(pedal.custom_depress_text).width;\n              ctx.fillText(pedal.custom_depress_text, x - text_width / 2, y);\n            } else {\n              drawPedalGlyph('pedal_depress', ctx, x, y, point);\n            }\n          } else {\n            if (pedal.custom_release_text) {\n              text_width = ctx.measureText(pedal.custom_release_text).width;\n              ctx.fillText(pedal.custom_release_text, x - text_width / 2, y);\n            } else {\n              drawPedalGlyph('pedal_release', ctx, x, y, point);\n            }\n          }\n        });\n      }\n\n      // Render the pedal marking in position on the rendering context\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw PedalMarking without a context.\");\n        var ctx = this.context;\n\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n        L$14('Rendering Pedal Marking');\n\n        if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n          ctx.setLineWidth(this.render_options.bracket_line_width);\n          this.drawBracketed();\n        } else if (this.style === PedalMarking.Styles.TEXT) {\n          this.drawText();\n        }\n\n        ctx.restore();\n      }\n    }]);\n    return PedalMarking;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n  function L$15() {\n    if (TextBracket.DEBUG) Vex$1.L('Vex.Flow.TextBracket', arguments);\n  }\n\n  var TextBracket = function () {\n    createClass(TextBracket, null, [{\n      key: 'Positions',\n      get: function get() {\n        return {\n          TOP: 1,\n          BOTTOM: -1\n        };\n      }\n    }]);\n\n    function TextBracket(bracket_data) {\n      classCallCheck(this, TextBracket);\n\n      this.start = bracket_data.start;\n      this.stop = bracket_data.stop;\n\n      this.text = bracket_data.text || '';\n      this.superscript = bracket_data.superscript || '';\n\n      this.position = bracket_data.position || TextBracket.Positions.TOP;\n      this.line = 1;\n\n      this.font = {\n        family: 'Serif',\n        size: 15,\n        weight: 'italic'\n      };\n\n      this.render_options = {\n        dashed: true,\n        dash: [5],\n        color: 'black',\n        line_width: 1,\n        show_bracket: true,\n        bracket_height: 8,\n\n        // In the BOTTOM position, the bracket line can extend\n        // under the superscript.\n        underline_superscript: true\n      };\n    }\n\n    // Apply the text backet styling to the provided `context`\n\n\n    createClass(TextBracket, [{\n      key: 'applyStyle',\n      value: function applyStyle(context) {\n        // Apply style for the octave bracket\n        context.setFont(this.font.family, this.font.size, this.font.weight);\n        context.setStrokeStyle(this.render_options.color);\n        context.setFillStyle(this.render_options.color);\n        context.setLineWidth(this.render_options.line_width);\n\n        return this;\n      }\n\n      // Set whether the bracket line should be `dashed`. You can also\n      // optionally set the `dash` pattern by passing in an array of numbers\n\n    }, {\n      key: 'setDashed',\n      value: function setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash) this.render_options.dash = dash;\n        return this;\n      }\n\n      // Set the font for the text\n\n    }, {\n      key: 'setFont',\n      value: function setFont(font) {\n        this.font = font;return this;\n      }\n      // Set the rendering `context` for the octave bracket\n\n    }, {\n      key: 'setContext',\n      value: function setContext(context) {\n        this.context = context;return this;\n      }\n      // Set the staff line to render the bracket on\n\n    }, {\n      key: 'setLine',\n      value: function setLine(line) {\n        this.line = line;return this;\n      }\n\n      // Draw the octave bracket on the rendering context\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var ctx = this.context;\n\n        var y = 0;\n        switch (this.position) {\n          case TextBracket.Positions.TOP:\n            y = this.start.getStave().getYForTopText(this.line);\n            break;\n          case TextBracket.Positions.BOTTOM:\n            y = this.start.getStave().getYForBottomText(this.line);\n            break;\n        }\n\n        // Get the preliminary start and stop coordintates for the bracket\n        var start = { x: this.start.getAbsoluteX(), y: y };\n        var stop = { x: this.stop.getAbsoluteX(), y: y };\n\n        L$15('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n        var bracket_height = this.render_options.bracket_height * this.position;\n\n        ctx.save();\n        this.applyStyle(ctx);\n\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n\n        // Get the width and height for the octave number\n        var main_width = ctx.measureText(this.text).width;\n        var main_height = ctx.measureText('M').width;\n\n        // Calculate the y position for the super script\n        var super_y = start.y - main_height / 2.5;\n\n        // Draw the superscript\n        ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n        // Determine width and height of the superscript\n        var superscript_width = ctx.measureText(this.superscript).width;\n        var super_height = ctx.measureText('M').width;\n\n        // Setup initial coordinates for the bracket line\n        var start_x = start.x;\n        var line_y = super_y;\n        var end_x = stop.x + this.stop.getGlyph().head_width;\n\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracket.Positions.TOP) {\n          start_x += main_width + superscript_width + 5;\n          line_y -= super_height / 2.7;\n        } else if (this.position === TextBracket.Positions.BOTTOM) {\n          line_y += super_height / 2.7;\n          start_x += main_width + 2;\n\n          if (!this.render_options.underline_superscript) {\n            start_x += superscript_width;\n          }\n        }\n\n        if (this.render_options.dashed) {\n          // Main line\n          Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n          // Ending Bracket\n          if (this.render_options.show_bracket) {\n            Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n          }\n        } else {\n          ctx.beginPath();\n          ctx.moveTo(start_x, line_y);\n          // Main line\n          ctx.lineTo(end_x, line_y);\n          if (this.render_options.show_bracket) {\n            // Ending bracket\n            ctx.lineTo(end_x, line_y + bracket_height);\n          }\n          ctx.stroke();\n          ctx.closePath();\n        }\n\n        ctx.restore();\n      }\n    }]);\n    return TextBracket;\n  }();\n\n  // To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\n  function L$16() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (BarNote.DEBUG) Vex$1.L('Vex.Flow.BarNote', args);\n  }\n\n  var BarNote = function (_Note) {\n    inherits(BarNote, _Note);\n\n    function BarNote() {\n      classCallCheck(this, BarNote);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(BarNote).call(this, { duration: 'b' }));\n\n      var TYPE = Barline.type;\n      _this.metrics = {\n        widths: {}\n      };\n\n      // Defined this way to prevent lint errors.\n      _this.metrics.widths[TYPE.SINGLE] = 8;\n      _this.metrics.widths[TYPE.DOUBLE] = 12;\n      _this.metrics.widths[TYPE.END] = 15;\n      _this.metrics.widths[TYPE.REPEAT_BEGIN] = 14;\n      _this.metrics.widths[TYPE.REPEAT_END] = 14;\n      _this.metrics.widths[TYPE.REPEAT_BOTH] = 18;\n      _this.metrics.widths[TYPE.NONE] = 0;\n\n      // Tell the formatter that bar notes have no duration.\n      _this.ignore_ticks = true;\n      _this.type = TYPE.SINGLE;\n\n      // Set width to width of relevant `Barline`.\n      _this.setWidth(_this.metrics.widths[_this.type]);\n      return _this;\n    }\n\n    // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n\n\n    createClass(BarNote, [{\n      key: 'getType',\n      value: function getType() {\n        return this.type;\n      }\n    }, {\n      key: 'setType',\n      value: function setType(type) {\n        this.type = type;\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n      }\n    }, {\n      key: 'getBoundingBox',\n      value: function getBoundingBox() {\n        return new BoundingBox(0, 0, 0, 0);\n      }\n    }, {\n      key: 'addToModifierContext',\n      value: function addToModifierContext() {\n        /* overridden to ignore */\n        return this;\n      }\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        /* overridden to ignore */\n        this.setPreFormatted(true);\n        return this;\n      }\n\n      // Render note to stave.\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.stave) throw new Vex$1.RERR('NoStave', \"Can't draw without a stave.\");\n        L$16('Rendering bar line at: ', this.getAbsoluteX());\n        var barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.stave);\n      }\n    }]);\n    return BarNote;\n  }(Note);\n\n  var Tremolo = function (_Modifier) {\n    inherits(Tremolo, _Modifier);\n    createClass(Tremolo, null, [{\n      key: 'CATEGORY',\n      get: function get() {\n        return 'tremolo';\n      }\n    }]);\n\n    function Tremolo(num) {\n      classCallCheck(this, Tremolo);\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Tremolo).call(this));\n\n      _this.num = num;\n      _this.note = null;\n      _this.index = null;\n      _this.position = Modifier.Position.CENTER;\n      _this.code = 'v74';\n      _this.shift_right = -2;\n      _this.y_spacing = 4;\n\n      _this.render_options = {\n        font_scale: 35,\n        stroke_px: 3,\n        stroke_spacing: 10\n      };\n\n      _this.font = {\n        family: 'Arial',\n        size: 16,\n        weight: ''\n      };\n      return _this;\n    }\n\n    createClass(Tremolo, [{\n      key: 'getCategory',\n      value: function getCategory() {\n        return Tremolo.CATEGORY;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw Tremolo without a context.\");\n        if (!(this.note && this.index != null)) throw new Vex$1.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n\n        var start = this.note.getModifierStartXY(this.position, this.index);\n        var x = start.x;\n        var y = start.y;\n\n        x += this.shift_right;\n        for (var i = 0; i < this.num; ++i) {\n          Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n          y += this.y_spacing;\n        }\n      }\n    }]);\n    return Tremolo;\n  }(Modifier);\n\n  // To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n  function L$17() {\n    if (Crescendo.DEBUG) Vex$1.L('Vex.Flow.Crescendo', arguments);\n  }\n\n  // Private helper to draw the hairpin\n  function renderHairpin(ctx, params) {\n    var begin_x = params.begin_x;\n    var end_x = params.end_x;\n    var y = params.y;\n    var half_height = params.height / 2;\n\n    ctx.beginPath();\n\n    if (params.reverse) {\n      ctx.moveTo(begin_x, y - half_height);\n      ctx.lineTo(end_x, y);\n      ctx.lineTo(begin_x, y + half_height);\n    } else {\n      ctx.moveTo(end_x, y - half_height);\n      ctx.lineTo(begin_x, y);\n      ctx.lineTo(end_x, y + half_height);\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  var Crescendo = function (_Note) {\n    inherits(Crescendo, _Note);\n\n    // Initialize the crescendo's properties\n\n    function Crescendo(note_struct) {\n      classCallCheck(this, Crescendo);\n\n\n      // Whether the object is a decrescendo\n\n      var _this = possibleConstructorReturn(this, Object.getPrototypeOf(Crescendo).call(this, note_struct));\n\n      _this.decrescendo = false;\n\n      // The staff line to be placed on\n      _this.line = note_struct.line || 0;\n\n      // The height at the open end of the cresc/decresc\n      _this.height = 15;\n\n      Vex$1.Merge(_this.render_options, {\n        // Extensions to the length of the crescendo on either side\n        extend_left: 0,\n        extend_right: 0,\n        // Vertical shift\n        y_shift: 0\n      });\n      return _this;\n    }\n\n    // Set the line to center the element on\n\n\n    createClass(Crescendo, [{\n      key: 'setLine',\n      value: function setLine(line) {\n        this.line = line;return this;\n      }\n\n      // Set the full height at the open end\n\n    }, {\n      key: 'setHeight',\n      value: function setHeight(height) {\n        this.height = height;return this;\n      }\n\n      // Set whether the sign should be a descresendo by passing a bool\n      // to `decresc`\n\n    }, {\n      key: 'setDecrescendo',\n      value: function setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n      }\n\n      // Preformat the note\n\n    }, {\n      key: 'preFormat',\n      value: function preFormat() {\n        this.preFormatted = true;return this;\n      }\n\n      // Render the Crescendo object onto the canvas\n\n    }, {\n      key: 'draw',\n      value: function draw() {\n        if (!this.context) throw new Vex$1.RERR('NoContext', \"Can't draw Hairpin without a context.\");\n\n        var tick_context = this.getTickContext();\n        var next_context = TickContext.getNextContext(tick_context);\n\n        var begin_x = this.getAbsoluteX();\n        var end_x = void 0;\n        if (next_context) {\n          end_x = next_context.getX();\n        } else {\n          end_x = this.stave.x + this.stave.width;\n        }\n\n        var y = this.stave.getYForLine(this.line + -3) + 1;\n\n        L$17('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n\n        renderHairpin(this.context, {\n          begin_x: begin_x - this.render_options.extend_left,\n          end_x: end_x + this.render_options.extend_right,\n          y: y + this.render_options.y_shift,\n          height: this.height,\n          reverse: this.decrescendo\n        });\n      }\n    }]);\n    return Crescendo;\n  }(Note);\n\n  Vex$1.Flow = Flow;\n  Vex$1.Flow.Fraction = Fraction;\n  Vex$1.Flow.Renderer = Renderer;\n  Vex$1.Flow.Formatter = Formatter;\n  Vex$1.Flow.Music = Music;\n  Vex$1.Flow.Glyph = Glyph;\n  Vex$1.Flow.Stave = Stave;\n  Vex$1.Flow.StaveNote = StaveNote;\n  Vex$1.Flow.Voice = Voice;\n  Vex$1.Flow.Accidental = Accidental;\n  Vex$1.Flow.Beam = Beam;\n  Vex$1.Flow.StaveTie = StaveTie;\n  Vex$1.Flow.TabStave = TabStave;\n  Vex$1.Flow.TabNote = TabNote;\n  Vex$1.Flow.Bend = Bend;\n  Vex$1.Flow.Vibrato = Vibrato;\n  Vex$1.Flow.Note = Note;\n  Vex$1.Flow.ModifierContext = ModifierContext;\n  Vex$1.Flow.TickContext = TickContext;\n  Vex$1.Flow.Articulation = Articulation;\n  Vex$1.Flow.Annotation = Annotation;\n  Vex$1.Flow.Barline = Barline;\n  Vex$1.Flow.NoteHead = NoteHead;\n  Vex$1.Flow.StaveConnector = StaveConnector;\n  Vex$1.Flow.ClefNote = ClefNote;\n  Vex$1.Flow.KeySignature = KeySignature;\n  Vex$1.Flow.TimeSignature = TimeSignature;\n  Vex$1.Flow.TimeSigNote = TimeSigNote;\n  Vex$1.Flow.Stem = Stem;\n  Vex$1.Flow.TabTie = TabTie;\n  Vex$1.Flow.Clef = Clef;\n  Vex$1.Flow.Modifier = Modifier;\n  Vex$1.Flow.TabSlide = TabSlide;\n  Vex$1.Flow.Tuplet = Tuplet;\n  Vex$1.Flow.GraceNote = GraceNote;\n  Vex$1.Flow.Tuning = Tuning;\n  Vex$1.Flow.KeyManager = KeyManager;\n  Vex$1.Flow.StaveHairpin = StaveHairpin;\n  Vex$1.Flow.BoundingBox = BoundingBox;\n  Vex$1.Flow.Stroke = Stroke;\n  Vex$1.Flow.TextNote = TextNote;\n  Vex$1.Flow.Curve = Curve;\n  Vex$1.Flow.TextDynamics = TextDynamics;\n  Vex$1.Flow.StaveLine = StaveLine;\n  Vex$1.Flow.Ornament = Ornament;\n  Vex$1.Flow.PedalMarking = PedalMarking;\n  Vex$1.Flow.TextBracket = TextBracket;\n  Vex$1.Flow.FretHandFinger = FretHandFinger;\n  Vex$1.Flow.Repetition = Repetition;\n  Vex$1.Flow.BarNote = BarNote;\n  Vex$1.Flow.GraceNoteGroup = GraceNoteGroup;\n  Vex$1.Flow.Tremolo = Tremolo;\n  Vex$1.Flow.StringNumber = StringNumber;\n  Vex$1.Flow.Crescendo = Crescendo;\n  Vex$1.Flow.Volta = Volta;\n  Vex$1.Flow.Font = Font;\n\n  return Vex$1;\n\n}));\n//# sourceMappingURL=vexflow-debug.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vexflow/releases/vexflow-debug.js\n ** module id = 52\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar StaffLine_1 = require(\"../StaffLine\");\nvar VexFlowStaffLine = (function (_super) {\n    __extends(VexFlowStaffLine, _super);\n    function VexFlowStaffLine(parentSystem, parentStaff) {\n        _super.call(this, parentSystem, parentStaff);\n    }\n    return VexFlowStaffLine;\n}(StaffLine_1.StaffLine));\nexports.VexFlowStaffLine = VexFlowStaffLine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowStaffLine.js\n ** module id = 53\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar StaffLineActivitySymbol_1 = require(\"./StaffLineActivitySymbol\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar StaffLine = (function (_super) {\n    __extends(StaffLine, _super);\n    function StaffLine(parentSystem, parentStaff) {\n        _super.call(this);\n        this.measures = [];\n        this.staffLines = new Array(5);\n        this.parentMusicSystem = parentSystem;\n        this.parentStaff = parentStaff;\n        this.boundingBox = new BoundingBox_1.BoundingBox(this, parentSystem.PositionAndShape);\n    }\n    Object.defineProperty(StaffLine.prototype, \"Measures\", {\n        get: function () {\n            return this.measures;\n        },\n        set: function (value) {\n            this.measures = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffLine.prototype, \"StaffLines\", {\n        get: function () {\n            return this.staffLines;\n        },\n        set: function (value) {\n            this.staffLines = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffLine.prototype, \"ParentMusicSystem\", {\n        get: function () {\n            return this.parentMusicSystem;\n        },\n        set: function (value) {\n            this.parentMusicSystem = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffLine.prototype, \"ParentStaff\", {\n        get: function () {\n            return this.parentStaff;\n        },\n        set: function (value) {\n            this.parentStaff = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffLine.prototype, \"SkyLine\", {\n        get: function () {\n            return this.skyLine;\n        },\n        set: function (value) {\n            this.skyLine = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffLine.prototype, \"BottomLine\", {\n        get: function () {\n            return this.bottomLine;\n        },\n        set: function (value) {\n            this.bottomLine = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StaffLine.prototype.addActivitySymbolClickArea = function () {\n        var activitySymbol = new StaffLineActivitySymbol_1.StaffLineActivitySymbol(this);\n        var staffLinePsi = this.PositionAndShape;\n        activitySymbol.PositionAndShape.RelativePosition =\n            new PointF2D_1.PointF2D(staffLinePsi.RelativePosition.x + staffLinePsi.BorderRight + 0.5, staffLinePsi.RelativePosition.y + 0.5);\n        this.parentMusicSystem.PositionAndShape.ChildElements.push(activitySymbol.PositionAndShape);\n    };\n    StaffLine.prototype.isPartOfMultiStaffInstrument = function () {\n        var instrument = this.parentStaff.ParentInstrument;\n        if (instrument.Staves.length > 1) {\n            return true;\n        }\n        return false;\n    };\n    StaffLine.prototype.findClosestStaffEntry = function (xPosition) {\n        var closestStaffentry = undefined;\n        var difference = Number.MAX_VALUE;\n        for (var idx = 0, len = this.Measures.length; idx < len; ++idx) {\n            var graphicalMeasure = this.Measures[idx];\n            for (var idx2 = 0, len2 = graphicalMeasure.staffEntries.length; idx2 < len2; ++idx2) {\n                var graphicalStaffEntry = graphicalMeasure.staffEntries[idx2];\n                if (Math.abs(graphicalStaffEntry.PositionAndShape.RelativePosition.x - xPosition + graphicalMeasure.PositionAndShape.RelativePosition.x) < 5.0) {\n                    difference = Math.abs(graphicalStaffEntry.PositionAndShape.RelativePosition.x - xPosition + graphicalMeasure.PositionAndShape.RelativePosition.x);\n                    closestStaffentry = graphicalStaffEntry;\n                }\n            }\n        }\n        return closestStaffentry;\n    };\n    return StaffLine;\n}(GraphicalObject_1.GraphicalObject));\nexports.StaffLine = StaffLine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/StaffLine.js\n ** module id = 54\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar StaffLineActivitySymbol = (function (_super) {\n    __extends(StaffLineActivitySymbol, _super);\n    function StaffLineActivitySymbol(staffLine) {\n        _super.call(this);\n        this.parentStaffLine = staffLine;\n        var staffLinePsi = staffLine.PositionAndShape;\n        this.boundingBox = new BoundingBox_1.BoundingBox(this, staffLinePsi);\n        this.boundingBox.BorderRight = 6;\n        this.boundingBox.BorderBottom = 4.5;\n        this.boundingBox.BorderLeft = -1.5;\n        this.boundingBox.BorderTop = -1.5;\n    }\n    return StaffLineActivitySymbol;\n}(GraphicalObject_1.GraphicalObject));\nexports.StaffLineActivitySymbol = StaffLineActivitySymbol;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/StaffLineActivitySymbol.js\n ** module id = 55\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vex = require(\"vexflow\");\nvar StaffMeasure_1 = require(\"../StaffMeasure\");\nvar VexFlowConverter_1 = require(\"./VexFlowConverter\");\nvar VexFlowMeasure = (function (_super) {\n    __extends(VexFlowMeasure, _super);\n    function VexFlowMeasure(staff, staffLine, sourceMeasure) {\n        if (staffLine === void 0) { staffLine = undefined; }\n        if (sourceMeasure === void 0) { sourceMeasure = undefined; }\n        _super.call(this, staff, sourceMeasure, staffLine);\n        // octaveOffset according to active clef\n        this.octaveOffset = 3;\n        // The VexFlow Voices in the measure\n        this.vfVoices = {};\n        // The unit\n        this.unit = 10.0;\n        // VexFlow StaveConnectors (vertical lines)\n        this.connectors = [];\n        // Intermediate object to construct beams\n        this.beams = {};\n        // VexFlow Beams\n        this.vfbeams = {};\n        this.minimumStaffEntriesWidth = -1;\n        this.resetLayout();\n    }\n    // Sets the absolute coordinates of the VFStave on the canvas\n    VexFlowMeasure.prototype.setAbsoluteCoordinates = function (x, y) {\n        this.stave.setX(x).setY(y);\n    };\n    /**\n     * Reset all the geometric values and parameters of this measure and put it in an initialized state.\n     * This is needed to evaluate a measure a second time by system builder.\n     */\n    VexFlowMeasure.prototype.resetLayout = function () {\n        // Take into account some space for the begin and end lines of the stave\n        // Will be changed when repetitions will be implemented\n        this.beginInstructionsWidth = 20 / this.unit;\n        this.endInstructionsWidth = 20 / this.unit;\n        this.stave = new Vex.Flow.Stave(0, 0, 0);\n    };\n    VexFlowMeasure.prototype.clean = function () {\n        //this.beams = {};\n        //this.vfbeams = {};\n        this.connectors = [];\n        console.log(\"clean!\");\n    };\n    /**\n     * returns the x-width of a given measure line.\n     * @param line\n     * @returns {SystemLinesEnum} the x-width\n     */\n    VexFlowMeasure.prototype.getLineWidth = function (line) {\n        // FIXME: See values in VexFlow's stavebarline.js\n        var vfline = VexFlowConverter_1.VexFlowConverter.line(line);\n        switch (vfline) {\n            case Vex.Flow.StaveConnector.type.SINGLE:\n                return 1.0 / this.unit;\n            case Vex.Flow.StaveConnector.type.DOUBLE:\n                return 3.0 / this.unit;\n            default:\n                return 0;\n        }\n    };\n    /**\n     * adds the given clef to the begin of the measure.\n     * This has to update/increase BeginInstructionsWidth.\n     * @param clef\n     */\n    VexFlowMeasure.prototype.addClefAtBegin = function (clef) {\n        this.octaveOffset = clef.OctaveOffset;\n        var vfclef = VexFlowConverter_1.VexFlowConverter.Clef(clef);\n        this.stave.addClef(vfclef, undefined, undefined, Vex.Flow.Modifier.Position.BEGIN);\n        this.increaseBeginInstructionWidth();\n    };\n    /**\n     * adds the given key to the begin of the measure.\n     * This has to update/increase BeginInstructionsWidth.\n     * @param currentKey the new valid key.\n     * @param previousKey the old cancelled key. Needed to show which accidentals are not valid any more.\n     * @param currentClef the valid clef. Needed to put the accidentals on the right y-positions.\n     */\n    VexFlowMeasure.prototype.addKeyAtBegin = function (currentKey, previousKey, currentClef) {\n        var keySig = new Vex.Flow.KeySignature(VexFlowConverter_1.VexFlowConverter.keySignature(currentKey), VexFlowConverter_1.VexFlowConverter.keySignature(previousKey));\n        this.stave.addModifier(keySig, Vex.Flow.Modifier.Position.BEGIN);\n    };\n    /**\n     * adds the given rhythm to the begin of the measure.\n     * This has to update/increase BeginInstructionsWidth.\n     * @param rhythm\n     */\n    VexFlowMeasure.prototype.addRhythmAtBegin = function (rhythm) {\n        var timeSig = VexFlowConverter_1.VexFlowConverter.TimeSignature(rhythm);\n        this.stave.addModifier(timeSig, Vex.Flow.Modifier.Position.BEGIN);\n        this.increaseBeginInstructionWidth();\n    };\n    /**\n     * adds the given clef to the end of the measure.\n     * This has to update/increase EndInstructionsWidth.\n     * @param clef\n     */\n    VexFlowMeasure.prototype.addClefAtEnd = function (clef) {\n        var vfclef = VexFlowConverter_1.VexFlowConverter.Clef(clef);\n        this.stave.setEndClef(vfclef, undefined, undefined);\n        this.increaseEndInstructionWidth();\n    };\n    /**\n     * Sets the overall x-width of the measure.\n     * @param width\n     */\n    VexFlowMeasure.prototype.setWidth = function (width) {\n        _super.prototype.setWidth.call(this, width);\n        // Set the width of the Vex.Flow.Stave\n        this.stave.setWidth(width * this.unit);\n        // If this is the first stave in the vertical measure, call the format\n        // method to set the width of all the voices\n        if (this.formatVoices) {\n            // The width of the voices does not include the instructions (StaveModifiers)\n            this.formatVoices((width - this.beginInstructionsWidth - this.endInstructionsWidth) * this.unit);\n        }\n    };\n    /**\n     * This method is called after the StaffEntriesScaleFactor has been set.\n     * Here the final x-positions of the staff entries have to be set.\n     * (multiply the minimal positions with the scaling factor, considering the BeginInstructionsWidth)\n     */\n    VexFlowMeasure.prototype.layoutSymbols = function () {\n        this.stave.format();\n    };\n    //public addGraphicalStaffEntry(entry: VexFlowStaffEntry): void {\n    //    super.addGraphicalStaffEntry(entry);\n    //}\n    //\n    //public addGraphicalStaffEntryAtTimestamp(entry: VexFlowStaffEntry): void {\n    //    super.addGraphicalStaffEntryAtTimestamp(entry);\n    //    // TODO\n    //}\n    /**\n     * Draw this measure on a VexFlow CanvasContext\n     * @param ctx\n     */\n    VexFlowMeasure.prototype.draw = function (ctx) {\n        // Draw stave lines\n        this.stave.setContext(ctx).draw();\n        // Draw all voices\n        for (var voiceID in this.vfVoices) {\n            if (this.vfVoices.hasOwnProperty(voiceID)) {\n                this.vfVoices[voiceID].draw(ctx, this.stave);\n            }\n        }\n        // Draw beams\n        for (var voiceID in this.vfbeams) {\n            if (this.vfbeams.hasOwnProperty(voiceID)) {\n                for (var _i = 0, _a = this.vfbeams[voiceID]; _i < _a.length; _i++) {\n                    var beam = _a[_i];\n                    beam.setContext(ctx).draw();\n                }\n            }\n        }\n        // Draw vertical lines\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var connector = _c[_b];\n            connector.setContext(ctx).draw();\n        }\n    };\n    /**\n     * Add a note to a beam\n     * @param graphicalNote\n     * @param beam\n     */\n    VexFlowMeasure.prototype.handleBeam = function (graphicalNote, beam) {\n        var voiceID = graphicalNote.sourceNote.ParentVoiceEntry.ParentVoice.VoiceId;\n        var beams = this.beams[voiceID];\n        if (beams === undefined) {\n            beams = this.beams[voiceID] = [];\n        }\n        var data;\n        for (var _i = 0, beams_1 = beams; _i < beams_1.length; _i++) {\n            var mybeam = beams_1[_i];\n            if (mybeam[0] === beam) {\n                data = mybeam;\n            }\n        }\n        if (data === undefined) {\n            data = [beam, []];\n            beams.push(data);\n        }\n        var parent = graphicalNote.parentStaffEntry;\n        if (data[1].indexOf(parent) === -1) {\n            data[1].push(parent);\n        }\n    };\n    /**\n     * Complete the creation of VexFlow Beams in this measure\n     */\n    VexFlowMeasure.prototype.finalizeBeams = function () {\n        for (var voiceID in this.beams) {\n            if (this.beams.hasOwnProperty(voiceID)) {\n                var vfbeams = this.vfbeams[voiceID];\n                if (vfbeams === undefined) {\n                    vfbeams = this.vfbeams[voiceID] = [];\n                }\n                for (var _i = 0, _a = this.beams[voiceID]; _i < _a.length; _i++) {\n                    var beam = _a[_i];\n                    var notes = [];\n                    for (var _b = 0, _c = beam[1]; _b < _c.length; _b++) {\n                        var entry = _c[_b];\n                        notes.push(entry.vfNotes[voiceID]);\n                    }\n                    if (notes.length > 1) {\n                        vfbeams.push(new Vex.Flow.Beam(notes, true));\n                    }\n                    else {\n                        console.log(\"Warning! Beam with no notes! Trying to ignore, but this is a serious problem.\");\n                    }\n                }\n            }\n        }\n    };\n    VexFlowMeasure.prototype.layoutStaffEntry = function (graphicalStaffEntry) {\n        var gnotes = graphicalStaffEntry.graphicalNotes;\n        var vfVoices = this.vfVoices;\n        for (var voiceID in gnotes) {\n            if (gnotes.hasOwnProperty(voiceID)) {\n                if (!(voiceID in vfVoices)) {\n                    vfVoices[voiceID] = new Vex.Flow.Voice({\n                        beat_value: 4,\n                        num_beats: 3,\n                        resolution: Vex.Flow.RESOLUTION,\n                    }).setMode(Vex.Flow.Voice.Mode.SOFT);\n                }\n                var vfnote = VexFlowConverter_1.VexFlowConverter.StaveNote(gnotes[voiceID]);\n                graphicalStaffEntry.vfNotes[voiceID] = vfnote;\n                vfVoices[voiceID].addTickable(vfnote);\n            }\n        }\n    };\n    /**\n     * Creates a line from 'top' to this measure, of type 'lineType'\n     * @param top\n     * @param lineType\n     */\n    VexFlowMeasure.prototype.lineTo = function (top, lineType) {\n        var connector = new Vex.Flow.StaveConnector(top.getVFStave(), this.stave);\n        connector.setType(lineType);\n        this.connectors.push(connector);\n    };\n    VexFlowMeasure.prototype.getVFStave = function () {\n        return this.stave;\n    };\n    VexFlowMeasure.prototype.increaseBeginInstructionWidth = function () {\n        var modifiers = this.stave.getModifiers();\n        var modifier = modifiers[modifiers.length - 1];\n        //let padding: number = modifier.getCategory() === \"keysignatures\" ? modifier.getPadding(2) : 0;\n        var padding = modifier.getPadding(20);\n        var width = modifier.getWidth();\n        this.beginInstructionsWidth += (padding + width) / this.unit;\n    };\n    VexFlowMeasure.prototype.increaseEndInstructionWidth = function () {\n        var modifiers = this.stave.getModifiers();\n        var modifier = modifiers[modifiers.length - 1];\n        var padding = 0;\n        var width = modifier.getWidth();\n        this.endInstructionsWidth += (padding + width) / this.unit;\n    };\n    return VexFlowMeasure;\n}(StaffMeasure_1.StaffMeasure));\nexports.VexFlowMeasure = VexFlowMeasure;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMeasure.js\n ** module id = 56\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar StaffMeasure = (function (_super) {\n    __extends(StaffMeasure, _super);\n    function StaffMeasure(staff, parentSourceMeasure, staffLine) {\n        if (staff === void 0) { staff = undefined; }\n        if (parentSourceMeasure === void 0) { parentSourceMeasure = undefined; }\n        if (staffLine === void 0) { staffLine = undefined; }\n        _super.call(this);\n        this.measureNumber = -1;\n        this.parentStaff = staff;\n        this.parentSourceMeasure = parentSourceMeasure;\n        this.parentStaffLine = staffLine;\n        if (staffLine !== undefined) {\n            this.parentStaff = staffLine.ParentStaff;\n            this.PositionAndShape = new BoundingBox_1.BoundingBox(this, staffLine.PositionAndShape);\n        }\n        else {\n            this.PositionAndShape = new BoundingBox_1.BoundingBox(this);\n        }\n        this.PositionAndShape.BorderBottom = 4;\n        if (this.parentSourceMeasure !== undefined) {\n            this.measureNumber = this.parentSourceMeasure.MeasureNumber;\n        }\n        this.staffEntries = [];\n    }\n    Object.defineProperty(StaffMeasure.prototype, \"ParentStaff\", {\n        get: function () {\n            return this.parentStaff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffMeasure.prototype, \"MeasureNumber\", {\n        get: function () {\n            return this.measureNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffMeasure.prototype, \"FirstInstructionStaffEntry\", {\n        get: function () {\n            return this.firstInstructionStaffEntry;\n        },\n        set: function (value) {\n            this.firstInstructionStaffEntry = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffMeasure.prototype, \"LastInstructionStaffEntry\", {\n        get: function () {\n            return this.lastInstructionStaffEntry;\n        },\n        set: function (value) {\n            this.lastInstructionStaffEntry = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffMeasure.prototype, \"ParentStaffLine\", {\n        get: function () {\n            return this.parentStaffLine;\n        },\n        set: function (value) {\n            this.parentStaffLine = value;\n            if (this.parentStaffLine !== undefined) {\n                this.PositionAndShape.Parent = this.parentStaffLine.PositionAndShape;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StaffMeasure.prototype.resetLayout = function () {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.getLineWidth = function (line) {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.addClefAtBegin = function (clef) {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.addKeyAtBegin = function (currentKey, previousKey, currentClef) {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.addRhythmAtBegin = function (rhythm) {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.addClefAtEnd = function (clef) {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.setPositionInStaffline = function (xPos) {\n        this.PositionAndShape.RelativePosition = new PointF2D_1.PointF2D(xPos, 0);\n    };\n    StaffMeasure.prototype.setWidth = function (width) {\n        this.PositionAndShape.BorderRight = width;\n    };\n    StaffMeasure.prototype.layoutSymbols = function () {\n        throw new Error(\"not implemented\");\n    };\n    StaffMeasure.prototype.findGraphicalStaffEntryFromTimestamp = function (relativeTimestamp) {\n        for (var idx = 0, len = this.staffEntries.length; idx < len; ++idx) {\n            var graphicalStaffEntry = this.staffEntries[idx];\n            if (graphicalStaffEntry.relInMeasureTimestamp === relativeTimestamp) {\n                return graphicalStaffEntry;\n            }\n        }\n        return undefined;\n    };\n    StaffMeasure.prototype.findGraphicalStaffEntryFromVerticalContainerTimestamp = function (absoluteTimestamp) {\n        for (var idx = 0, len = this.staffEntries.length; idx < len; ++idx) {\n            var graphicalStaffEntry = this.staffEntries[idx];\n            if (graphicalStaffEntry.sourceStaffEntry.VerticalContainerParent.getAbsoluteTimestamp() === absoluteTimestamp) {\n                return graphicalStaffEntry;\n            }\n        }\n        return undefined;\n    };\n    StaffMeasure.prototype.hasSameDurationWithSourceMeasureParent = function () {\n        var duration = new fraction_1.Fraction(0, 1);\n        for (var idx = 0, len = this.staffEntries.length; idx < len; ++idx) {\n            var graphicalStaffEntry = this.staffEntries[idx];\n            duration.Add(graphicalStaffEntry.findStaffEntryMinNoteLength());\n        }\n        return duration === this.parentSourceMeasure.Duration;\n    };\n    StaffMeasure.prototype.hasMultipleVoices = function () {\n        if (this.staffEntries.length === 0) {\n            return false;\n        }\n        var voices = [];\n        for (var idx = 0, len = this.staffEntries.length; idx < len; ++idx) {\n            var staffEntry = this.staffEntries[idx];\n            for (var idx2 = 0, len2 = staffEntry.sourceStaffEntry.VoiceEntries.length; idx2 < len2; ++idx2) {\n                var voiceEntry = staffEntry.sourceStaffEntry.VoiceEntries[idx2];\n                if (voices.indexOf(voiceEntry.ParentVoice) < 0) {\n                    voices.push(voiceEntry.ParentVoice);\n                }\n            }\n        }\n        if (voices.length > 1) {\n            return true;\n        }\n        return false;\n    };\n    StaffMeasure.prototype.isVisible = function () {\n        return this.ParentStaff.ParentInstrument.Visible;\n    };\n    StaffMeasure.prototype.getGraphicalMeasureDurationFromStaffEntries = function () {\n        var duration = new fraction_1.Fraction(0, 1);\n        var voices = [];\n        for (var idx = 0, len = this.staffEntries.length; idx < len; ++idx) {\n            var graphicalStaffEntry = this.staffEntries[idx];\n            for (var idx2 = 0, len2 = graphicalStaffEntry.sourceStaffEntry.VoiceEntries.length; idx2 < len2; ++idx2) {\n                var voiceEntry = graphicalStaffEntry.sourceStaffEntry.VoiceEntries[idx2];\n                if (voices.indexOf(voiceEntry.ParentVoice) < 0) {\n                    voices.push(voiceEntry.ParentVoice);\n                }\n            }\n        }\n        for (var idx = 0, len = voices.length; idx < len; ++idx) {\n            var voice = voices[idx];\n            var voiceDuration = new fraction_1.Fraction(0, 1);\n            for (var idx2 = 0, len2 = this.staffEntries.length; idx2 < len2; ++idx2) {\n                var graphicalStaffEntry = this.staffEntries[idx2];\n                for (var idx3 = 0, len3 = graphicalStaffEntry.notes.length; idx3 < len3; ++idx3) {\n                    var graphicalNotes = graphicalStaffEntry.notes[idx3];\n                    if (graphicalNotes.length > 0 && graphicalNotes[0].sourceNote.ParentVoiceEntry.ParentVoice === voice) {\n                        voiceDuration.Add(graphicalNotes[0].graphicalNoteLength);\n                    }\n                }\n            }\n            if (voiceDuration > duration) {\n                duration = fraction_1.Fraction.createFromFraction(voiceDuration);\n            }\n        }\n        return duration;\n    };\n    StaffMeasure.prototype.addGraphicalStaffEntry = function (graphicalStaffEntry) {\n        this.staffEntries.push(graphicalStaffEntry);\n        this.PositionAndShape.ChildElements.push(graphicalStaffEntry.PositionAndShape);\n    };\n    StaffMeasure.prototype.addGraphicalStaffEntryAtTimestamp = function (staffEntry) {\n        if (staffEntry !== undefined) {\n            if (this.staffEntries.length === 0 || this.staffEntries[this.staffEntries.length - 1].relInMeasureTimestamp < staffEntry.relInMeasureTimestamp) {\n                this.staffEntries.push(staffEntry);\n            }\n            else {\n                for (var i = this.staffEntries.length - 1; i >= 0; i--) {\n                    if (this.staffEntries[i].relInMeasureTimestamp < staffEntry.relInMeasureTimestamp) {\n                        this.staffEntries.splice(i + 1, 0, staffEntry);\n                        break;\n                    }\n                    if (i === 0) {\n                        this.staffEntries.splice(i, 0, staffEntry);\n                    }\n                }\n            }\n            this.PositionAndShape.ChildElements.push(staffEntry.PositionAndShape);\n        }\n    };\n    StaffMeasure.prototype.beginsWithLineRepetition = function () {\n        var sourceMeasure = this.parentSourceMeasure;\n        if (sourceMeasure === undefined) {\n            return false;\n        }\n        return sourceMeasure.beginsWithLineRepetition();\n    };\n    StaffMeasure.prototype.endsWithLineRepetition = function () {\n        var sourceMeasure = this.parentSourceMeasure;\n        if (sourceMeasure === undefined) {\n            return false;\n        }\n        return sourceMeasure.endsWithLineRepetition();\n    };\n    StaffMeasure.prototype.beginsWithWordRepetition = function () {\n        var sourceMeasure = this.parentSourceMeasure;\n        if (sourceMeasure === undefined) {\n            return false;\n        }\n        return sourceMeasure.beginsWithWordRepetition();\n    };\n    StaffMeasure.prototype.endsWithWordRepetition = function () {\n        var sourceMeasure = this.parentSourceMeasure;\n        if (sourceMeasure === undefined) {\n            return false;\n        }\n        return sourceMeasure.endsWithWordRepetition();\n    };\n    return StaffMeasure;\n}(GraphicalObject_1.GraphicalObject));\nexports.StaffMeasure = StaffMeasure;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/StaffMeasure.js\n ** module id = 57\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GraphicalStaffEntry_1 = require(\"../GraphicalStaffEntry\");\nvar VexFlowStaffEntry = (function (_super) {\n    __extends(VexFlowStaffEntry, _super);\n    function VexFlowStaffEntry(measure, sourceStaffEntry, staffEntryParent) {\n        _super.call(this, measure, sourceStaffEntry, staffEntryParent);\n        // The Graphical Notes belonging to this StaffEntry, sorted by voiceID\n        this.graphicalNotes = {};\n        // The corresponding VexFlow.StaveNotes\n        this.vfNotes = {};\n    }\n    return VexFlowStaffEntry;\n}(GraphicalStaffEntry_1.GraphicalStaffEntry));\nexports.VexFlowStaffEntry = VexFlowStaffEntry;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowStaffEntry.js\n ** module id = 58\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar LinkedVoice_1 = require(\"../VoiceData/LinkedVoice\");\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar collectionUtil_1 = require(\"../../Util/collectionUtil\");\nvar GraphicalStaffEntry = (function (_super) {\n    __extends(GraphicalStaffEntry, _super);\n    function GraphicalStaffEntry(parentMeasure, sourceStaffEntry, staffEntryParent) {\n        if (sourceStaffEntry === void 0) { sourceStaffEntry = undefined; }\n        if (staffEntryParent === void 0) { staffEntryParent = undefined; }\n        _super.call(this);\n        this.graphicalInstructions = [];\n        this.graphicalTies = [];\n        this.lyricsEntries = [];\n        this.parentMeasure = parentMeasure;\n        this.notes = [];\n        this.graceStaffEntriesBefore = [];\n        this.graceStaffEntriesAfter = [];\n        this.sourceStaffEntry = sourceStaffEntry;\n        if (staffEntryParent !== undefined) {\n            this.staffEntryParent = staffEntryParent;\n            this.parentVerticalContainer = staffEntryParent.parentVerticalContainer;\n            this.PositionAndShape = new BoundingBox_1.BoundingBox(this, staffEntryParent.PositionAndShape);\n        }\n        else {\n            this.PositionAndShape = new BoundingBox_1.BoundingBox(this, parentMeasure.PositionAndShape);\n        }\n        if (sourceStaffEntry !== undefined) {\n            this.relInMeasureTimestamp = sourceStaffEntry.Timestamp;\n        }\n    }\n    Object.defineProperty(GraphicalStaffEntry.prototype, \"GraphicalInstructions\", {\n        get: function () {\n            return this.graphicalInstructions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalStaffEntry.prototype, \"GraphicalTies\", {\n        get: function () {\n            return this.graphicalTies;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicalStaffEntry.prototype, \"LyricsEntries\", {\n        get: function () {\n            return this.lyricsEntries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicalStaffEntry.prototype.getAbsoluteTimestamp = function () {\n        var result = fraction_1.Fraction.createFromFraction(this.parentMeasure.parentSourceMeasure.AbsoluteTimestamp);\n        if (this.relInMeasureTimestamp !== undefined) {\n            result.Add(this.relInMeasureTimestamp);\n        }\n        return result;\n    };\n    GraphicalStaffEntry.prototype.findEndTieGraphicalNoteFromNote = function (tieNote) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                var note = graphicalNote.sourceNote;\n                if (note.Pitch !== undefined && note.Pitch.FundamentalNote === tieNote.Pitch.FundamentalNote\n                    && note.Pitch.Octave === tieNote.Pitch.Octave && note.getAbsoluteTimestamp() === tieNote.getAbsoluteTimestamp()) {\n                    return graphicalNote;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalStaffEntry.prototype.findEndTieGraphicalNoteFromNoteWithStartingSlur = function (tieNote, slur) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                var note = graphicalNote.sourceNote;\n                if (note.NoteTie !== undefined && note.NoteSlurs.indexOf(slur) !== -1) {\n                    return graphicalNote;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalStaffEntry.prototype.findEndTieGraphicalNoteFromNoteWithEndingSlur = function (tieNote) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                var note = graphicalNote.sourceNote;\n                if (note.Pitch !== undefined && note.Pitch.FundamentalNote === tieNote.Pitch.FundamentalNote\n                    && note.Pitch.Octave === tieNote.Pitch.Octave && this.getAbsoluteTimestamp() === tieNote.getAbsoluteTimestamp()) {\n                    return graphicalNote;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalStaffEntry.prototype.findGraphicalNoteFromGraceNote = function (graceNote) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                if (graphicalNote.sourceNote === graceNote) {\n                    return graphicalNote;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalStaffEntry.prototype.findGraphicalNoteFromNote = function (baseNote) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                if (graphicalNote.sourceNote === baseNote && this.getAbsoluteTimestamp() === baseNote.getAbsoluteTimestamp()) {\n                    return graphicalNote;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalStaffEntry.prototype.getGraphicalNoteDurationFromVoice = function (voice) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            if (graphicalNotes[0].sourceNote.ParentVoiceEntry.ParentVoice === voice) {\n                return graphicalNotes[0].graphicalNoteLength;\n            }\n        }\n        return new fraction_1.Fraction(0, 1);\n    };\n    GraphicalStaffEntry.prototype.findLinkedNotes = function (notLinkedNotes) {\n        if (this.sourceStaffEntry !== undefined && this.sourceStaffEntry.Link !== undefined) {\n            for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n                var graphicalNotes = this.notes[idx];\n                for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                    var graphicalNote = graphicalNotes[idx2];\n                    if (graphicalNote.parentStaffEntry === this) {\n                        notLinkedNotes.push(graphicalNote);\n                    }\n                }\n            }\n        }\n    };\n    GraphicalStaffEntry.prototype.findVoiceEntryGraphicalNotes = function (voiceEntry) {\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                if (graphicalNote.sourceNote.ParentVoiceEntry === voiceEntry) {\n                    return graphicalNotes;\n                }\n            }\n        }\n        return undefined;\n    };\n    GraphicalStaffEntry.prototype.isVoiceEntryPartOfLinkedVoiceEntry = function (voiceEntry) {\n        if (this.sourceStaffEntry.Link !== undefined) {\n            for (var idx = 0, len = this.sourceStaffEntry.Link.LinkStaffEntries.length; idx < len; ++idx) {\n                var sEntry = this.sourceStaffEntry.Link.LinkStaffEntries[idx];\n                if (sEntry.VoiceEntries.indexOf(voiceEntry) !== -1 && sEntry !== this.sourceStaffEntry) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    GraphicalStaffEntry.prototype.getMainVoice = function () {\n        for (var idx = 0, len = this.sourceStaffEntry.VoiceEntries.length; idx < len; ++idx) {\n            var voiceEntry = this.sourceStaffEntry.VoiceEntries[idx];\n            if (!(voiceEntry.ParentVoice instanceof LinkedVoice_1.LinkedVoice)) {\n                return voiceEntry.ParentVoice;\n            }\n        }\n        return this.notes[0][0].sourceNote.ParentVoiceEntry.ParentVoice;\n    };\n    GraphicalStaffEntry.prototype.findStaffEntryMinNoteLength = function () {\n        var minLength = new fraction_1.Fraction(Number.MAX_VALUE, 1);\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                var calNoteLen = graphicalNote.graphicalNoteLength;\n                if (calNoteLen < minLength && calNoteLen.Numerator > 0) {\n                    minLength = calNoteLen;\n                }\n            }\n        }\n        return minLength;\n    };\n    GraphicalStaffEntry.prototype.findStaffEntryMaxNoteLength = function () {\n        var maxLength = new fraction_1.Fraction(0, 1);\n        for (var idx = 0, len = this.notes.length; idx < len; ++idx) {\n            var graphicalNotes = this.notes[idx];\n            for (var idx2 = 0, len2 = graphicalNotes.length; idx2 < len2; ++idx2) {\n                var graphicalNote = graphicalNotes[idx2];\n                var calNoteLen = graphicalNote.graphicalNoteLength;\n                if (calNoteLen > maxLength && calNoteLen.Numerator > 0) {\n                    maxLength = calNoteLen;\n                }\n            }\n        }\n        return maxLength;\n    };\n    GraphicalStaffEntry.prototype.findOrCreateGraphicalNotesListFromVoiceEntry = function (voiceEntry) {\n        var graphicalNotes;\n        if (this.notes.length === 0) {\n            graphicalNotes = [];\n            this.notes.push(graphicalNotes);\n        }\n        else {\n            for (var i = 0; i < this.notes.length; i++) {\n                if (this.notes[i][0].sourceNote.ParentVoiceEntry.ParentVoice === voiceEntry.ParentVoice) {\n                    return this.notes[i];\n                }\n            }\n            graphicalNotes = [];\n            this.notes.push(graphicalNotes);\n        }\n        return graphicalNotes;\n    };\n    GraphicalStaffEntry.prototype.findOrCreateGraphicalNotesListFromGraphicalNote = function (graphicalNote) {\n        var graphicalNotes;\n        var tieStartSourceStaffEntry = graphicalNote.sourceNote.ParentStaffEntry;\n        if (this.sourceStaffEntry !== tieStartSourceStaffEntry) {\n            graphicalNotes = this.findOrCreateGraphicalNotesListFromVoiceEntry(graphicalNote.sourceNote.ParentVoiceEntry);\n        }\n        else {\n            if (this.notes.length === 0) {\n                graphicalNotes = [];\n                this.notes.push(graphicalNotes);\n            }\n            else {\n                for (var i = 0; i < this.notes.length; i++) {\n                    if (this.notes[i][0].sourceNote.ParentVoiceEntry.ParentVoice === graphicalNote.sourceNote.ParentVoiceEntry.ParentVoice) {\n                        return this.notes[i];\n                    }\n                }\n                graphicalNotes = [];\n                this.notes.push(graphicalNotes);\n            }\n        }\n        return graphicalNotes;\n    };\n    GraphicalStaffEntry.prototype.addGraphicalNoteToListAtCorrectYPosition = function (graphicalNotes, graphicalNote) {\n        if (graphicalNotes.length === 0 ||\n            graphicalNote.PositionAndShape.RelativePosition.y < collectionUtil_1.CollectionUtil.last(graphicalNotes).PositionAndShape.RelativePosition.Y) {\n            graphicalNotes.push(graphicalNote);\n        }\n        else {\n            for (var i = graphicalNotes.length - 1; i >= 0; i--) {\n                if (graphicalNotes[i].PositionAndShape.RelativePosition.y > graphicalNote.PositionAndShape.RelativePosition.y) {\n                    graphicalNotes.splice(i + 1, 0, graphicalNote);\n                    break;\n                }\n                if (i === 0) {\n                    graphicalNotes.splice(0, 0, graphicalNote);\n                    break;\n                }\n            }\n        }\n    };\n    return GraphicalStaffEntry;\n}(GraphicalObject_1.GraphicalObject));\nexports.GraphicalStaffEntry = GraphicalStaffEntry;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalStaffEntry.js\n ** module id = 59\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GraphicalObject_1 = require(\"./GraphicalObject\");\nvar MusicSheetCalculator_1 = require(\"./MusicSheetCalculator\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar GraphicalNote = (function (_super) {\n    __extends(GraphicalNote, _super);\n    function GraphicalNote(note, parent) {\n        _super.call(this);\n        this.sourceNote = note;\n        this.parentStaffEntry = parent;\n        this.PositionAndShape = new BoundingBox_1.BoundingBox(this, parent.PositionAndShape);\n    }\n    Object.defineProperty(GraphicalNote.prototype, \"ParentList\", {\n        get: function () {\n            for (var idx = 0, len = this.parentStaffEntry.notes.length; idx < len; ++idx) {\n                var graphicalNotes = this.parentStaffEntry.notes[idx];\n                if (graphicalNotes.indexOf(this) !== -1) {\n                    return graphicalNotes;\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicalNote.prototype.Transpose = function (keyInstruction, activeClef, halfTones, octaveEnum) {\n        var transposedPitch = this.sourceNote.Pitch;\n        if (MusicSheetCalculator_1.MusicSheetCalculator.transposeCalculator !== undefined) {\n            transposedPitch = MusicSheetCalculator_1.MusicSheetCalculator.transposeCalculator.transposePitch(this.sourceNote.Pitch, keyInstruction, halfTones);\n        }\n        return transposedPitch;\n    };\n    return GraphicalNote;\n}(GraphicalObject_1.GraphicalObject));\nexports.GraphicalNote = GraphicalNote;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/GraphicalNote.js\n ** module id = 60\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vex = require(\"vexflow\");\nvar GraphicalNote_1 = require(\"../GraphicalNote\");\nvar VexFlowConverter_1 = require(\"./VexFlowConverter\");\nvar VexFlowGraphicalNote = (function (_super) {\n    __extends(VexFlowGraphicalNote, _super);\n    function VexFlowGraphicalNote(note, parent, activeClef) {\n        _super.call(this, note, parent);\n        this.clef = activeClef;\n        if (note.Pitch) {\n            this.vfpitch = VexFlowConverter_1.VexFlowConverter.pitch(note.Pitch, this.clef);\n            this.vfpitch[1] = undefined;\n        }\n    }\n    VexFlowGraphicalNote.prototype.setPitch = function (pitch) {\n        if (this.vfnote) {\n            var acc = VexFlowConverter_1.VexFlowConverter.accidental(pitch.Accidental);\n            if (acc) {\n                alert(acc);\n                this.vfnote[0].addAccidental(this.vfnote[1], new Vex.Flow.Accidental(acc));\n            }\n        }\n        else {\n            this.vfpitch = VexFlowConverter_1.VexFlowConverter.pitch(pitch, this.clef);\n        }\n    };\n    /**\n     * Set the corresponding VexFlow StaveNote together with its index\n     * @param note\n     * @param index\n     */\n    VexFlowGraphicalNote.prototype.setIndex = function (note, index) {\n        this.vfnote = [note, index];\n        //if (this.vfpitch && this.vfpitch[1]) {\n        //    note.addAccidental(index, new Vex.Flow.Accidental(this.vfpitch[1]));\n        //}\n    };\n    return VexFlowGraphicalNote;\n}(GraphicalNote_1.GraphicalNote));\nexports.VexFlowGraphicalNote = VexFlowGraphicalNote;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowGraphicalNote.js\n ** module id = 61\n ** module chunks = 0\n **/","\"use strict\";\n/**\n * Created by Matthias on 21.06.2016.\n */\nvar VexFlowTextMeasurer = (function () {\n    function VexFlowTextMeasurer() {\n        var canvas = document.createElement(\"canvas\");\n        this.context = canvas.getContext(\"2d\");\n        this.context.font = \"20px 'Times New Roman'\";\n    }\n    VexFlowTextMeasurer.prototype.computeTextWidthToHeightRatio = function (text, font, style) {\n        var size = this.context.measureText(text);\n        return size.width / 20;\n    };\n    return VexFlowTextMeasurer;\n}());\nexports.VexFlowTextMeasurer = VexFlowTextMeasurer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowTextMeasurer.js\n ** module id = 62\n ** module chunks = 0\n **/","\"use strict\";\nvar MusicSheet_1 = require(\"../MusicSheet\");\nvar SourceMeasure_1 = require(\"../VoiceData/SourceMeasure\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar InstrumentReader_1 = require(\"./InstrumentReader\");\nvar Instrument_1 = require(\"../Instrument\");\nvar ITextTranslation_1 = require(\"../Interfaces/ITextTranslation\");\nvar Exceptions_1 = require(\"../Exceptions\");\nvar logging_1 = require(\"../../Common/logging\");\nvar RhythmInstruction_1 = require(\"../VoiceData/Instructions/RhythmInstruction\");\nvar RhythmInstruction_2 = require(\"../VoiceData/Instructions/RhythmInstruction\");\nvar SourceStaffEntry_1 = require(\"../VoiceData/SourceStaffEntry\");\nvar InstrumentalGroup_1 = require(\"../InstrumentalGroup\");\nvar SubInstrument_1 = require(\"../SubInstrument\");\nvar ClefInstruction_1 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar Label_1 = require(\"../Label\");\nvar MusicSheetReader /*implements IMusicSheetReader*/ = (function () {\n    function MusicSheetReader /*implements IMusicSheetReader*/() {\n        this.completeNumberOfStaves = 0;\n    }\n    Object.defineProperty(MusicSheetReader /*implements IMusicSheetReader*/.prototype, \"CompleteNumberOfStaves\", {\n        get: function () {\n            return this.completeNumberOfStaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheetReader /*implements IMusicSheetReader*/.doCalculationsAfterDurationHasBeenSet = function (instrumentReaders) {\n        for (var _i = 0, instrumentReaders_1 = instrumentReaders; _i < instrumentReaders_1.length; _i++) {\n            var instrumentReader = instrumentReaders_1[_i];\n            instrumentReader.doCalculationsAfterDurationHasBeenSet();\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.createMusicSheet = function (root, path) {\n        try {\n            return this._createMusicSheet(root, path);\n        }\n        catch (e) {\n            logging_1.Logging.log(\"MusicSheetReader.CreateMusicSheet\", e);\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype._removeFromArray = function (list, elem) {\n        var i = list.indexOf(elem);\n        if (i !== -1) {\n            list.splice(i, 1);\n        }\n    };\n    // Trim from a string also newlines\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.trimString = function (str) {\n        return str.replace(/^\\s+|\\s+$/g, \"\");\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype._lastElement = function (list) {\n        return list[list.length - 1];\n    };\n    //public SetPhonicScoreInterface(phonicScoreInterface: IPhonicScoreInterface): void {\n    //  this.phonicScoreInterface = phonicScoreInterface;\n    //}\n    //public ReadMusicSheetParameters(sheetObject: MusicSheetParameterObject, root: IXmlElement, path: string): MusicSheetParameterObject {\n    //  this.musicSheet = new MusicSheet();\n    //  if (root !== undefined) {\n    //    this.pushSheetLabels(root, path);\n    //    if (this.musicSheet.Title !== undefined) {\n    //      sheetObject.Title = this.musicSheet.Title.text;\n    //    }\n    //    if (this.musicSheet.Composer !== undefined) {\n    //      sheetObject.Composer = this.musicSheet.Composer.text;\n    //    }\n    //    if (this.musicSheet.Lyricist !== undefined) {\n    //      sheetObject.Lyricist = this.musicSheet.Lyricist.text;\n    //    }\n    //    let partlistNode: IXmlElement = root.element(\"part-list\");\n    //    let partList: IXmlElement[] = partlistNode.elements();\n    //    this.createInstrumentGroups(partList);\n    //    for (let idx: number = 0, len: number = this.musicSheet.Instruments.length; idx < len; ++idx) {\n    //      let instr: Instrument = this.musicSheet.Instruments[idx];\n    //      sheetObject.InstrumentList.push(__init(new MusicSheetParameterObject.LibrarySheetInstrument(), { name: instr.name }));\n    //    }\n    //  }\n    //  return sheetObject;\n    //}\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype._createMusicSheet = function (root, path) {\n        var instrumentReaders = [];\n        var sourceMeasureCounter = 0;\n        this.musicSheet = new MusicSheet_1.MusicSheet();\n        this.musicSheet.Path = path;\n        if (root === undefined) {\n            throw new Exceptions_1.MusicSheetReadingException(\"Undefined root element\");\n        }\n        this.pushSheetLabels(root, path);\n        var partlistNode = root.element(\"part-list\");\n        if (partlistNode === undefined) {\n            throw new Exceptions_1.MusicSheetReadingException(\"Undefined partListNode\");\n        }\n        var partInst = root.elements(\"part\");\n        console.log(partInst.length + \" parts\");\n        var partList = partlistNode.elements();\n        //Logging.debug(\"Starting initializeReading\");\n        this.initializeReading(partList, partInst, instrumentReaders);\n        //Logging.debug(\"Done initializeReading\");\n        var couldReadMeasure = true;\n        this.currentFraction = new fraction_1.Fraction(0, 1);\n        var guitarPro = false;\n        var encoding = root.element(\"identification\");\n        if (encoding !== undefined) {\n            encoding = encoding.element(\"encoding\");\n        }\n        if (encoding !== undefined) {\n            encoding = encoding.element(\"software\");\n        }\n        if (encoding !== undefined && encoding.value === \"Guitar Pro 5\") {\n            guitarPro = true;\n        }\n        while (couldReadMeasure) {\n            if (this.currentMeasure !== undefined && this.currentMeasure.endsPiece) {\n                sourceMeasureCounter = 0;\n            }\n            this.currentMeasure = new SourceMeasure_1.SourceMeasure(this.completeNumberOfStaves);\n            for (var _i = 0, instrumentReaders_2 = instrumentReaders; _i < instrumentReaders_2.length; _i++) {\n                var instrumentReader = instrumentReaders_2[_i];\n                try {\n                    couldReadMeasure = couldReadMeasure && instrumentReader.readNextXmlMeasure(this.currentMeasure, this.currentFraction, guitarPro);\n                }\n                catch (e) {\n                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/InstrumentError\", \"Error while reading instruments.\");\n                    throw new Exceptions_1.MusicSheetReadingException(errorMsg, e);\n                }\n            }\n            if (couldReadMeasure) {\n                //Logging.debug(\"couldReadMeasure: 1\");\n                this.musicSheet.addMeasure(this.currentMeasure);\n                //Logging.debug(\"couldReadMeasure: 2\");\n                this.checkIfRhythmInstructionsAreSetAndEqual(instrumentReaders);\n                //Logging.debug(\"couldReadMeasure: 3\");\n                this.checkSourceMeasureForundefinedEntries();\n                //Logging.debug(\"couldReadMeasure: 4\");\n                this.setSourceMeasureDuration(instrumentReaders, sourceMeasureCounter);\n                //Logging.debug(\"couldReadMeasure: 5\");\n                MusicSheetReader.doCalculationsAfterDurationHasBeenSet(instrumentReaders);\n                //Logging.debug(\"couldReadMeasure: 6\");\n                this.currentMeasure.AbsoluteTimestamp = this.currentFraction.clone();\n                this.musicSheet.SheetErrors.finalizeMeasure(this.currentMeasure.MeasureNumber);\n                this.currentFraction.Add(this.currentMeasure.Duration);\n                this.previousMeasure = this.currentMeasure;\n            }\n        }\n        if (this.repetitionInstructionReader !== undefined) {\n            this.repetitionInstructionReader.removeRedundantInstructions();\n            if (this.repetitionCalculator !== undefined) {\n                this.repetitionCalculator.calculateRepetitions(this.musicSheet, this.repetitionInstructionReader.RepetitionInstructions);\n            }\n        }\n        this.musicSheet.checkForInstrumentWithNoVoice();\n        this.musicSheet.fillStaffList();\n        //this.musicSheet.DefaultStartTempoInBpm = this.musicSheet.SheetPlaybackSetting.BeatsPerMinute;\n        //for (let idx: number = 0, len: number = this.afterSheetReadingModules.length; idx < len; ++idx) {\n        //  let afterSheetReadingModule: IAfterSheetReadingModule = this.afterSheetReadingModules[idx];\n        //  afterSheetReadingModule.calculate(this.musicSheet);\n        //}\n        return this.musicSheet;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.initializeReading = function (partList, partInst, instrumentReaders) {\n        var instrumentDict = this.createInstrumentGroups(partList);\n        this.completeNumberOfStaves = this.getCompleteNumberOfStavesFromXml(partInst);\n        if (partInst.length !== 0) {\n            // (*) this.repetitionInstructionReader.MusicSheet = this.musicSheet;\n            this.currentFraction = new fraction_1.Fraction(0, 1);\n            this.currentMeasure = undefined;\n            this.previousMeasure = undefined;\n        }\n        var counter = 0;\n        for (var _i = 0, partInst_1 = partInst; _i < partInst_1.length; _i++) {\n            var node = partInst_1[_i];\n            var idNode = node.attribute(\"id\");\n            if (idNode) {\n                var currentInstrument = instrumentDict[idNode.value];\n                var xmlMeasureList = node.elements(\"measure\");\n                var instrumentNumberOfStaves = 1;\n                try {\n                    instrumentNumberOfStaves = this.getInstrumentNumberOfStavesFromXml(node);\n                }\n                catch (err) {\n                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/InstrumentStavesNumberError\", \"Invalid number of staves at instrument: \");\n                    this.musicSheet.SheetErrors.push(errorMsg + currentInstrument.Name);\n                    continue;\n                }\n                currentInstrument.createStaves(instrumentNumberOfStaves);\n                instrumentReaders.push(new InstrumentReader_1.InstrumentReader(this.repetitionInstructionReader, xmlMeasureList, currentInstrument));\n                if (this.repetitionInstructionReader !== undefined) {\n                    this.repetitionInstructionReader.XmlMeasureList[counter] = xmlMeasureList;\n                }\n                counter++;\n            }\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.checkIfRhythmInstructionsAreSetAndEqual = function (instrumentReaders) {\n        var rhythmInstructions = [];\n        for (var i = 0; i < this.completeNumberOfStaves; i++) {\n            if (this.currentMeasure.FirstInstructionsStaffEntries[i] !== undefined) {\n                var last = this.currentMeasure.FirstInstructionsStaffEntries[i].Instructions[this.currentMeasure.FirstInstructionsStaffEntries[i].Instructions.length - 1];\n                if (last instanceof RhythmInstruction_1.RhythmInstruction) {\n                    rhythmInstructions.push(last);\n                }\n            }\n        }\n        var maxRhythmValue = 0.0;\n        var index = -1;\n        for (var idx = 0, len = rhythmInstructions.length; idx < len; ++idx) {\n            var rhythmInstruction = rhythmInstructions[idx];\n            if (rhythmInstruction.Rhythm.RealValue > maxRhythmValue) {\n                if (this.areRhythmInstructionsMixed(rhythmInstructions) && rhythmInstruction.SymbolEnum !== RhythmInstruction_2.RhythmSymbolEnum.NONE) {\n                    continue;\n                }\n                maxRhythmValue = rhythmInstruction.Rhythm.RealValue;\n                index = rhythmInstructions.indexOf(rhythmInstruction);\n            }\n        }\n        if (rhythmInstructions.length > 0 && rhythmInstructions.length < this.completeNumberOfStaves) {\n            var rhythmInstruction = rhythmInstructions[index].clone();\n            for (var i = 0; i < this.completeNumberOfStaves; i++) {\n                if (this.currentMeasure.FirstInstructionsStaffEntries[i] !== undefined &&\n                    !(this._lastElement(this.currentMeasure.FirstInstructionsStaffEntries[i].Instructions) instanceof RhythmInstruction_1.RhythmInstruction)) {\n                    this.currentMeasure.FirstInstructionsStaffEntries[i].removeAllInstructionsOfTypeRhythmInstruction();\n                    this.currentMeasure.FirstInstructionsStaffEntries[i].Instructions.push(rhythmInstruction.clone());\n                }\n                if (this.currentMeasure.FirstInstructionsStaffEntries[i] === undefined) {\n                    this.currentMeasure.FirstInstructionsStaffEntries[i] = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                    this.currentMeasure.FirstInstructionsStaffEntries[i].Instructions.push(rhythmInstruction.clone());\n                }\n            }\n            for (var idx = 0, len = instrumentReaders.length; idx < len; ++idx) {\n                var instrumentReader = instrumentReaders[idx];\n                instrumentReader.ActiveRhythm = rhythmInstruction;\n            }\n        }\n        if (rhythmInstructions.length === 0 && this.currentMeasure === this.musicSheet.SourceMeasures[0]) {\n            var rhythmInstruction = new RhythmInstruction_1.RhythmInstruction(new fraction_1.Fraction(4, 4, false), 4, 4, RhythmInstruction_2.RhythmSymbolEnum.NONE);\n            for (var i = 0; i < this.completeNumberOfStaves; i++) {\n                if (this.currentMeasure.FirstInstructionsStaffEntries[i] === undefined) {\n                    this.currentMeasure.FirstInstructionsStaffEntries[i] = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                }\n                else {\n                    this.currentMeasure.FirstInstructionsStaffEntries[i].removeAllInstructionsOfTypeRhythmInstruction();\n                }\n                this.currentMeasure.FirstInstructionsStaffEntries[i].Instructions.push(rhythmInstruction);\n            }\n            for (var idx = 0, len = instrumentReaders.length; idx < len; ++idx) {\n                var instrumentReader = instrumentReaders[idx];\n                instrumentReader.ActiveRhythm = rhythmInstruction;\n            }\n        }\n        for (var idx = 0, len = rhythmInstructions.length; idx < len; ++idx) {\n            var rhythmInstruction = rhythmInstructions[idx];\n            if (rhythmInstruction.Rhythm.RealValue < maxRhythmValue) {\n                if (this._lastElement(this.currentMeasure.FirstInstructionsStaffEntries[rhythmInstructions.indexOf(rhythmInstruction)].Instructions) instanceof RhythmInstruction_1.RhythmInstruction) {\n                    // TODO Test correctness\n                    var instrs = this.currentMeasure.FirstInstructionsStaffEntries[rhythmInstructions.indexOf(rhythmInstruction)].Instructions;\n                    instrs[instrs.length - 1] = rhythmInstructions[index].clone();\n                }\n            }\n            if (Math.abs(rhythmInstruction.Rhythm.RealValue - maxRhythmValue) < 0.000001 &&\n                rhythmInstruction.SymbolEnum !== RhythmInstruction_2.RhythmSymbolEnum.NONE &&\n                this.areRhythmInstructionsMixed(rhythmInstructions)) {\n                rhythmInstruction.SymbolEnum = RhythmInstruction_2.RhythmSymbolEnum.NONE;\n            }\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.areRhythmInstructionsMixed = function (rhythmInstructions) {\n        for (var i = 1; i < rhythmInstructions.length; i++) {\n            if (Math.abs(rhythmInstructions[i].Rhythm.RealValue - rhythmInstructions[0].Rhythm.RealValue) < 0.000001 &&\n                rhythmInstructions[i].SymbolEnum !== rhythmInstructions[0].SymbolEnum) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.setSourceMeasureDuration = function (instrumentReaders, sourceMeasureCounter) {\n        var activeRhythm = new fraction_1.Fraction(0, 1);\n        var instrumentsMaxTieNoteFractions = [];\n        for (var idx = 0, len = instrumentReaders.length; idx < len; ++idx) {\n            var instrumentReader = instrumentReaders[idx];\n            instrumentsMaxTieNoteFractions.push(instrumentReader.MaxTieNoteFraction);\n            var activeRythmMeasure = instrumentReader.ActiveRhythm.Rhythm;\n            if (activeRhythm < activeRythmMeasure) {\n                activeRhythm = new fraction_1.Fraction(activeRythmMeasure.Numerator, activeRythmMeasure.Denominator, false);\n            }\n        }\n        var instrumentsDurations = this.currentMeasure.calculateInstrumentsDuration(this.musicSheet, instrumentsMaxTieNoteFractions);\n        var maxInstrumentDuration = new fraction_1.Fraction(0, 1);\n        for (var idx = 0, len = instrumentsDurations.length; idx < len; ++idx) {\n            var instrumentsDuration = instrumentsDurations[idx];\n            if (maxInstrumentDuration < instrumentsDuration) {\n                maxInstrumentDuration = instrumentsDuration;\n            }\n        }\n        if (fraction_1.Fraction.Equal(maxInstrumentDuration, activeRhythm)) {\n            this.checkFractionsForEquivalence(maxInstrumentDuration, activeRhythm);\n        }\n        else {\n            if (maxInstrumentDuration < activeRhythm) {\n                maxInstrumentDuration = this.currentMeasure.reverseCheck(this.musicSheet, maxInstrumentDuration);\n                this.checkFractionsForEquivalence(maxInstrumentDuration, activeRhythm);\n            }\n        }\n        this.currentMeasure.ImplicitMeasure = this.checkIfMeasureIsImplicit(maxInstrumentDuration, activeRhythm);\n        if (!this.currentMeasure.ImplicitMeasure) {\n            sourceMeasureCounter++;\n        }\n        this.currentMeasure.Duration = maxInstrumentDuration;\n        this.currentMeasure.MeasureNumber = sourceMeasureCounter;\n        for (var i = 0; i < instrumentsDurations.length; i++) {\n            var instrumentsDuration = instrumentsDurations[i];\n            if ((this.currentMeasure.ImplicitMeasure && instrumentsDuration !== maxInstrumentDuration) ||\n                instrumentsDuration !== activeRhythm &&\n                    !this.allInstrumentsHaveSameDuration(instrumentsDurations, maxInstrumentDuration)) {\n                var firstStaffIndexOfInstrument = this.musicSheet.getGlobalStaffIndexOfFirstStaff(this.musicSheet.Instruments[i]);\n                for (var staffIndex = 0; staffIndex < this.musicSheet.Instruments[i].Staves.length; staffIndex++) {\n                    if (!this.staffMeasureIsEmpty(firstStaffIndexOfInstrument + staffIndex)) {\n                        this.currentMeasure.setErrorInStaffMeasure(firstStaffIndexOfInstrument + staffIndex, true);\n                        var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/MissingNotesError\", \"Given Notes don't correspond to measure duration.\");\n                        this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.checkFractionsForEquivalence = function (maxInstrumentDuration, activeRhythm) {\n        if (activeRhythm.Denominator > maxInstrumentDuration.Denominator) {\n            var factor = activeRhythm.Denominator / maxInstrumentDuration.Denominator;\n            maxInstrumentDuration.multiplyWithFactor(factor);\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.checkIfMeasureIsImplicit = function (maxInstrumentDuration, activeRhythm) {\n        if (this.previousMeasure === undefined && maxInstrumentDuration < activeRhythm) {\n            return true;\n        }\n        if (this.previousMeasure !== undefined) {\n            return fraction_1.Fraction.plus(this.previousMeasure.Duration, maxInstrumentDuration).CompareTo(activeRhythm) === 0;\n        }\n        return false;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.allInstrumentsHaveSameDuration = function (instrumentsDurations, maxInstrumentDuration) {\n        var counter = 0;\n        for (var idx = 0, len = instrumentsDurations.length; idx < len; ++idx) {\n            var instrumentsDuration = instrumentsDurations[idx];\n            if (instrumentsDuration === maxInstrumentDuration) {\n                counter++;\n            }\n        }\n        return (counter === instrumentsDurations.length && maxInstrumentDuration !== new fraction_1.Fraction(0, 1));\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.staffMeasureIsEmpty = function (index) {\n        var counter = 0;\n        for (var i = 0; i < this.currentMeasure.VerticalSourceStaffEntryContainers.length; i++) {\n            if (this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries[index] === undefined) {\n                counter++;\n            }\n        }\n        return (counter === this.currentMeasure.VerticalSourceStaffEntryContainers.length);\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.checkSourceMeasureForundefinedEntries = function () {\n        for (var i = this.currentMeasure.VerticalSourceStaffEntryContainers.length - 1; i >= 0; i--) {\n            for (var j = this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries.length - 1; j >= 0; j--) {\n                var sourceStaffEntry = this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries[j];\n                if (sourceStaffEntry !== undefined) {\n                    for (var k = sourceStaffEntry.VoiceEntries.length - 1; k >= 0; k--) {\n                        var voiceEntry = sourceStaffEntry.VoiceEntries[k];\n                        if (voiceEntry.Notes.length === 0) {\n                            this._removeFromArray(voiceEntry.ParentVoice.VoiceEntries, voiceEntry);\n                            this._removeFromArray(sourceStaffEntry.VoiceEntries, voiceEntry);\n                        }\n                    }\n                }\n                if (sourceStaffEntry !== undefined && sourceStaffEntry.VoiceEntries.length === 0) {\n                    this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries[j] = undefined;\n                }\n            }\n        }\n        for (var i = this.currentMeasure.VerticalSourceStaffEntryContainers.length - 1; i >= 0; i--) {\n            var counter = 0;\n            for (var idx = 0, len = this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries.length; idx < len; ++idx) {\n                var sourceStaffEntry = this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries[idx];\n                if (sourceStaffEntry === undefined) {\n                    counter++;\n                }\n            }\n            if (counter === this.currentMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries.length) {\n                this._removeFromArray(this.currentMeasure.VerticalSourceStaffEntryContainers, this.currentMeasure.VerticalSourceStaffEntryContainers[i]);\n            }\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.pushSheetLabels = function (root, filePath) {\n        this.readComposer(root);\n        this.readTitle(root);\n        if (this.musicSheet.Title === undefined || this.musicSheet.Composer === undefined) {\n            this.readTitleAndComposerFromCredits(root);\n        }\n        if (this.musicSheet.Title === undefined) {\n            try {\n                var barI = Math.max(0, filePath.lastIndexOf(\"/\"), filePath.lastIndexOf(\"\\\\\"));\n                var filename = filePath.substr(barI);\n                var filenameSplits = filename.split(\".\", 1);\n                this.musicSheet.Title = new Label_1.Label(filenameSplits[0]);\n            }\n            catch (ex) {\n                logging_1.Logging.log(\"MusicSheetReader.pushSheetLabels: \", ex);\n            }\n        }\n    };\n    // Checks whether _elem_ has an attribute with value _val_.\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.presentAttrsWithValue = function (elem, val) {\n        for (var _i = 0, _a = elem.attributes(); _i < _a.length; _i++) {\n            var attr = _a[_i];\n            if (attr.value === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.readComposer = function (root) {\n        var identificationNode = root.element(\"identification\");\n        if (identificationNode !== undefined) {\n            var creators = identificationNode.elements(\"creator\");\n            for (var idx = 0, len = creators.length; idx < len; ++idx) {\n                var creator = creators[idx];\n                if (creator.hasAttributes) {\n                    if (this.presentAttrsWithValue(creator, \"composer\")) {\n                        this.musicSheet.Composer = new Label_1.Label(this.trimString(creator.value));\n                        continue;\n                    }\n                    if (this.presentAttrsWithValue(creator, \"lyricist\") || this.presentAttrsWithValue(creator, \"poet\")) {\n                        this.musicSheet.Lyricist = new Label_1.Label(this.trimString(creator.value));\n                    }\n                }\n            }\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.readTitleAndComposerFromCredits = function (root) {\n        var systemYCoordinates = this.computeSystemYCoordinates(root);\n        if (systemYCoordinates === 0) {\n            return;\n        }\n        var largestTitleCreditSize = 1;\n        var finalTitle = undefined;\n        var largestCreditYInfo = 0;\n        var finalSubtitle = undefined;\n        var possibleTitle = undefined;\n        var creditElements = root.elements(\"credit\");\n        for (var idx = 0, len = creditElements.length; idx < len; ++idx) {\n            var credit = creditElements[idx];\n            if (!credit.attribute(\"page\")) {\n                return;\n            }\n            if (credit.attribute(\"page\").value === \"1\") {\n                var creditChild = undefined;\n                if (credit !== undefined) {\n                    creditChild = credit.element(\"credit-words\");\n                    if (!creditChild.attribute(\"justify\")) {\n                        break;\n                    }\n                    var creditJustify = creditChild.attribute(\"justify\").value;\n                    var creditY = creditChild.attribute(\"default-y\").value;\n                    var creditYInfo = parseFloat(creditY);\n                    if (creditYInfo > systemYCoordinates) {\n                        if (this.musicSheet.Title === undefined) {\n                            var creditSize = creditChild.attribute(\"font-size\").value;\n                            var titleCreditSizeInt = parseFloat(creditSize);\n                            if (largestTitleCreditSize < titleCreditSizeInt) {\n                                largestTitleCreditSize = titleCreditSizeInt;\n                                finalTitle = creditChild.value;\n                            }\n                        }\n                        if (this.musicSheet.Subtitle === undefined) {\n                            if (creditJustify !== \"right\" && creditJustify !== \"left\") {\n                                if (largestCreditYInfo < creditYInfo) {\n                                    largestCreditYInfo = creditYInfo;\n                                    if (possibleTitle) {\n                                        finalSubtitle = possibleTitle;\n                                        possibleTitle = creditChild.value;\n                                    }\n                                    else {\n                                        possibleTitle = creditChild.value;\n                                    }\n                                }\n                            }\n                        }\n                        if (!(this.musicSheet.Composer !== undefined && this.musicSheet.Lyricist !== undefined)) {\n                            switch (creditJustify) {\n                                case \"right\":\n                                    this.musicSheet.Composer = new Label_1.Label(this.trimString(creditChild.value));\n                                    break;\n                                case \"left\":\n                                    this.musicSheet.Lyricist = new Label_1.Label(this.trimString(creditChild.value));\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (this.musicSheet.Title === undefined && finalTitle) {\n            this.musicSheet.Title = new Label_1.Label(this.trimString(finalTitle));\n        }\n        if (this.musicSheet.Subtitle === undefined && finalSubtitle) {\n            this.musicSheet.Subtitle = new Label_1.Label(this.trimString(finalSubtitle));\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.computeSystemYCoordinates = function (root) {\n        if (root.element(\"defaults\") === undefined) {\n            return 0;\n        }\n        var paperHeight = 0;\n        var topSystemDistance = 0;\n        var defi = root.element(\"defaults\").element(\"page-layout\").element(\"page-height\").value;\n        paperHeight = parseFloat(defi);\n        var found = false;\n        var parts = root.elements(\"part\");\n        for (var idx = 0, len = parts.length; idx < len; ++idx) {\n            var measures = parts[idx].elements(\"measure\");\n            for (var idx2 = 0, len2 = measures.length; idx2 < len2; ++idx2) {\n                var measure = measures[idx2];\n                if (measure.element(\"print\") !== undefined) {\n                    var systemLayouts = measure.element(\"print\").elements(\"system-layout\");\n                    for (var idx3 = 0, len3 = systemLayouts.length; idx3 < len3; ++idx3) {\n                        var syslab = systemLayouts[idx3];\n                        if (syslab.element(\"top-system-distance\") !== undefined) {\n                            var topSystemDistanceString = syslab.element(\"top-system-distance\").value;\n                            topSystemDistance = parseFloat(topSystemDistanceString);\n                            found = true;\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            if (found) {\n                break;\n            }\n        }\n        if (root.element(\"defaults\").element(\"system-layout\") !== undefined) {\n            var syslay = root.element(\"defaults\").element(\"system-layout\");\n            if (syslay.element(\"top-system-distance\") !== undefined) {\n                var topSystemDistanceString = root.element(\"defaults\").element(\"system-layout\").element(\"top-system-distance\").value;\n                topSystemDistance = parseFloat(topSystemDistanceString);\n            }\n        }\n        if (topSystemDistance === 0) {\n            return 0;\n        }\n        return paperHeight - topSystemDistance;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.readTitle = function (root) {\n        var titleNode = root.element(\"work\");\n        var titleNodeChild = undefined;\n        if (titleNode !== undefined) {\n            titleNodeChild = titleNode.element(\"work-title\");\n            if (titleNodeChild !== undefined && titleNodeChild.value) {\n                this.musicSheet.Title = new Label_1.Label(this.trimString(titleNodeChild.value));\n            }\n        }\n        var movementNode = root.element(\"movement-title\");\n        var finalSubTitle = \"\";\n        if (movementNode !== undefined) {\n            if (this.musicSheet.Title === undefined) {\n                this.musicSheet.Title = new Label_1.Label(this.trimString(movementNode.value));\n            }\n            else {\n                finalSubTitle = this.trimString(movementNode.value);\n            }\n        }\n        if (titleNode !== undefined) {\n            var subtitleNodeChild = titleNode.element(\"work-number\");\n            if (subtitleNodeChild !== undefined) {\n                var workNumber = subtitleNodeChild.value;\n                if (workNumber) {\n                    if (finalSubTitle) {\n                        finalSubTitle = workNumber;\n                    }\n                    else {\n                        finalSubTitle = finalSubTitle + \", \" + workNumber;\n                    }\n                }\n            }\n        }\n        if (finalSubTitle) {\n            this.musicSheet.Subtitle = new Label_1.Label(finalSubTitle);\n        }\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.createInstrumentGroups = function (entryList) {\n        var instrumentId = 0;\n        var instrumentDict = {};\n        var currentGroup;\n        try {\n            var entryArray = entryList;\n            for (var idx = 0, len = entryArray.length; idx < len; ++idx) {\n                var node = entryArray[idx];\n                if (node.name === \"score-part\") {\n                    var instrIdString = node.attribute(\"id\").value;\n                    var instrument = new Instrument_1.Instrument(instrumentId, instrIdString, this.musicSheet, currentGroup);\n                    instrumentId++;\n                    var partElements = node.elements();\n                    for (var idx2 = 0, len2 = partElements.length; idx2 < len2; ++idx2) {\n                        var partElement = partElements[idx2];\n                        try {\n                            if (partElement.name === \"part-name\") {\n                                instrument.Name = partElement.value;\n                            }\n                            else if (partElement.name === \"score-instrument\") {\n                                var subInstrument = new SubInstrument_1.SubInstrument(instrument);\n                                subInstrument.idString = partElement.firstAttribute.value;\n                                instrument.SubInstruments.push(subInstrument);\n                                var subElement = partElement.element(\"instrument-name\");\n                                if (subElement !== undefined) {\n                                    subInstrument.name = subElement.value;\n                                    subInstrument.setMidiInstrument(subElement.value);\n                                }\n                            }\n                            else if (partElement.name === \"midi-instrument\") {\n                                var subInstrument = instrument.getSubInstrument(partElement.firstAttribute.value);\n                                for (var idx3 = 0, len3 = instrument.SubInstruments.length; idx3 < len3; ++idx3) {\n                                    var subInstr = instrument.SubInstruments[idx3];\n                                    if (subInstr.idString === partElement.value) {\n                                        subInstrument = subInstr;\n                                        break;\n                                    }\n                                }\n                                var instrumentElements = partElement.elements();\n                                for (var idx3 = 0, len3 = instrumentElements.length; idx3 < len3; ++idx3) {\n                                    var instrumentElement = instrumentElements[idx3];\n                                    try {\n                                        if (instrumentElement.name === \"midi-channel\") {\n                                            if (parseInt(instrumentElement.value, 10) === 10) {\n                                                instrument.MidiInstrumentId = ClefInstruction_1.MidiInstrument.Percussion;\n                                            }\n                                        }\n                                        else if (instrumentElement.name === \"midi-program\") {\n                                            if (instrument.SubInstruments.length > 0 && instrument.MidiInstrumentId !== ClefInstruction_1.MidiInstrument.Percussion) {\n                                                subInstrument.midiInstrumentID = Math.max(0, parseInt(instrumentElement.value, 10) - 1);\n                                            }\n                                        }\n                                        else if (instrumentElement.name === \"midi-unpitched\") {\n                                            subInstrument.fixedKey = Math.max(0, parseInt(instrumentElement.value, 10));\n                                        }\n                                        else if (instrumentElement.name === \"volume\") {\n                                            try {\n                                                var result = parseFloat(instrumentElement.value);\n                                                subInstrument.volume = result / 127.0;\n                                            }\n                                            catch (ex) {\n                                                logging_1.Logging.debug(\"ExpressionReader.readExpressionParameters\", \"read volume\", ex);\n                                            }\n                                        }\n                                        else if (instrumentElement.name === \"pan\") {\n                                            try {\n                                                var result = parseFloat(instrumentElement.value);\n                                                subInstrument.pan = result / 64.0;\n                                            }\n                                            catch (ex) {\n                                                logging_1.Logging.debug(\"ExpressionReader.readExpressionParameters\", \"read pan\", ex);\n                                            }\n                                        }\n                                    }\n                                    catch (ex) {\n                                        logging_1.Logging.log(\"MusicSheetReader.createInstrumentGroups midi settings: \", ex);\n                                    }\n                                }\n                            }\n                        }\n                        catch (ex) {\n                            logging_1.Logging.log(\"MusicSheetReader.createInstrumentGroups: \", ex);\n                        }\n                    }\n                    if (instrument.SubInstruments.length === 0) {\n                        var subInstrument = new SubInstrument_1.SubInstrument(instrument);\n                        instrument.SubInstruments.push(subInstrument);\n                    }\n                    instrumentDict[instrIdString] = instrument;\n                    if (currentGroup !== undefined) {\n                        currentGroup.InstrumentalGroups.push(instrument);\n                        this.musicSheet.Instruments.push(instrument);\n                    }\n                    else {\n                        this.musicSheet.InstrumentalGroups.push(instrument);\n                        this.musicSheet.Instruments.push(instrument);\n                    }\n                }\n                else {\n                    if ((node.name === \"part-group\") && (node.attribute(\"type\").value === \"start\")) {\n                        var iG = new InstrumentalGroup_1.InstrumentalGroup(\"group\", this.musicSheet, currentGroup);\n                        if (currentGroup !== undefined) {\n                            currentGroup.InstrumentalGroups.push(iG);\n                        }\n                        else {\n                            this.musicSheet.InstrumentalGroups.push(iG);\n                        }\n                        currentGroup = iG;\n                    }\n                    else {\n                        if ((node.name === \"part-group\") && (node.attribute(\"type\").value === \"stop\")) {\n                            if (currentGroup !== undefined) {\n                                if (currentGroup.InstrumentalGroups.length === 1) {\n                                    var instr = currentGroup.InstrumentalGroups[0];\n                                    if (currentGroup.Parent !== undefined) {\n                                        currentGroup.Parent.InstrumentalGroups.push(instr);\n                                        this._removeFromArray(currentGroup.Parent.InstrumentalGroups, currentGroup);\n                                    }\n                                    else {\n                                        this.musicSheet.InstrumentalGroups.push(instr);\n                                        this._removeFromArray(this.musicSheet.InstrumentalGroups, currentGroup);\n                                    }\n                                }\n                                currentGroup = currentGroup.Parent;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/InstrumentError\", \"Error while reading Instruments\");\n            throw new Exceptions_1.MusicSheetReadingException(errorMsg, e);\n        }\n        for (var idx = 0, len = this.musicSheet.Instruments.length; idx < len; ++idx) {\n            var instrument = this.musicSheet.Instruments[idx];\n            if (!instrument.Name) {\n                instrument.Name = \"Instr. \" + instrument.IdString;\n            }\n        }\n        return instrumentDict;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.getCompleteNumberOfStavesFromXml = function (partInst) {\n        var num = 0;\n        for (var _i = 0, partInst_2 = partInst; _i < partInst_2.length; _i++) {\n            var partNode = partInst_2[_i];\n            var xmlMeasureList = partNode.elements(\"measure\");\n            if (xmlMeasureList.length > 0) {\n                var xmlMeasure = xmlMeasureList[0];\n                if (xmlMeasure !== undefined) {\n                    var stavesNode = xmlMeasure.element(\"attributes\");\n                    if (stavesNode !== undefined) {\n                        stavesNode = stavesNode.element(\"staves\");\n                    }\n                    if (stavesNode === undefined) {\n                        num++;\n                    }\n                    else {\n                        num += parseInt(stavesNode.value, 10);\n                    }\n                }\n            }\n        }\n        if (isNaN(num) || num <= 0) {\n            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/StaffError\", \"Invalid number of staves.\");\n            throw new Exceptions_1.MusicSheetReadingException(errorMsg);\n        }\n        return num;\n    };\n    MusicSheetReader /*implements IMusicSheetReader*/.prototype.getInstrumentNumberOfStavesFromXml = function (partNode) {\n        var num = 0;\n        var xmlMeasure = partNode.element(\"measure\");\n        if (xmlMeasure !== undefined) {\n            var attributes = xmlMeasure.element(\"attributes\");\n            var staves = undefined;\n            if (attributes !== undefined) {\n                staves = attributes.element(\"staves\");\n            }\n            if (attributes === undefined || staves === undefined) {\n                num = 1;\n            }\n            else {\n                num = parseInt(staves.value, 10);\n            }\n        }\n        if (isNaN(num) || num <= 0) {\n            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/StaffError\", \"Invalid number of Staves.\");\n            throw new Exceptions_1.MusicSheetReadingException(errorMsg);\n        }\n        return num;\n    };\n    return MusicSheetReader /*implements IMusicSheetReader*/;\n}());\nexports.MusicSheetReader /*implements IMusicSheetReader*/ = MusicSheetReader /*implements IMusicSheetReader*/;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/ScoreIO/MusicSheetReader.js\n ** module id = 63\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../Common/DataObjects/fraction\");\nvar MusicPartManager_1 = require(\"./MusicParts/MusicPartManager\");\nvar Repetition_1 = require(\"./MusicSource/Repetition\");\nvar Voice_1 = require(\"./VoiceData/Voice\");\nvar MusicSheetErrors_1 = require(\"../Common/DataObjects/MusicSheetErrors\");\nvar EngravingRules_1 = require(\"./Graphical/EngravingRules\");\nvar DrawingEnums_1 = require(\"./Graphical/DrawingEnums\");\n// FIXME\n//type MusicSheetParameters = any;\n//type MultiTempoExpression = any;\n//type PlaybackSettings = any;\n//type MusicSheetParameterObject = any;\n//type EngravingRules = any;\n//type MusicSheetErrors = any;\n//type IPhonicScoreInterface = any;\n//type MusicSheetParameterChangedDelegate = any;\n//type IInstrument = any;\n//type ISettableInstrument = any;\n//type IRepetition = any;\n// FIXME Andrea: Commented out some things, have a look at (*)\nvar PlaybackSettings = (function () {\n    function PlaybackSettings() {\n    }\n    return PlaybackSettings;\n}());\nexports.PlaybackSettings = PlaybackSettings;\nvar MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/ = (function () {\n    function MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/() {\n        this.idString = \"kjgdfuilhsdaöoihfsvjh\";\n        this.sourceMeasures = [];\n        this.repetitions = [];\n        this.dynListStaves = [];\n        this.timestampSortedDynamicExpressionsList = [];\n        this.timestampSortedTempoExpressionsList = [];\n        this.instrumentalGroups = [];\n        this.instruments = [];\n        // private languages: Language[] = [];\n        // private activeLanguage: Language;\n        this.musicPartManager = undefined;\n        this.musicSheetErrors = new MusicSheetErrors_1.MusicSheetErrors();\n        this.staves = [];\n        this.transpose = 0;\n        this.defaultStartTempoInBpm = 0;\n        this.drawErroneousMeasures = false;\n        this.hasBeenOpenedForTheFirstTime = false;\n        this.currentEnrolledPosition = new fraction_1.Fraction(0, 1);\n        this.rules = EngravingRules_1.EngravingRules.Rules;\n        // (*) this.playbackSettings = new PlaybackSettings(new Fraction(4, 4, false), 100);\n        this.userStartTempoInBPM = 100;\n        this.pageWidth = 120;\n        this.MusicPartManager = new MusicPartManager_1.MusicPartManager(this);\n    }\n    // (*) private musicSheetParameterChangedDelegate: MusicSheetParameterChangedDelegate;\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.getIndexFromStaff = function (staff) {\n        return staff.idInMusicSheet;\n    };\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SourceMeasures\", {\n        get: function () {\n            return this.sourceMeasures;\n        },\n        set: function (value) {\n            this.sourceMeasures = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Repetitions\", {\n        get: function () {\n            return this.repetitions;\n        },\n        set: function (value) {\n            this.repetitions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"DynListStaves\", {\n        get: function () {\n            return this.dynListStaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"TimestampSortedTempoExpressionsList\", {\n        get: function () {\n            return this.timestampSortedTempoExpressionsList;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"TimestampSortedDynamicExpressionsList\", {\n        get: function () {\n            return this.timestampSortedDynamicExpressionsList;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"InstrumentalGroups\", {\n        get: function () {\n            return this.instrumentalGroups;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Instruments\", {\n        get: function () {\n            return this.instruments;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SheetPlaybackSetting\", {\n        get: function () {\n            return this.playbackSettings;\n        },\n        set: function (value) {\n            this.playbackSettings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"DrawErroneousMeasures\", {\n        get: function () {\n            return this.drawErroneousMeasures;\n        },\n        set: function (value) {\n            this.drawErroneousMeasures = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"HasBeenOpenedForTheFirstTime\", {\n        get: function () {\n            return this.hasBeenOpenedForTheFirstTime;\n        },\n        set: function (value) {\n            this.hasBeenOpenedForTheFirstTime = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.InitializeStartTempoInBPM = function (startTempo) {\n        // (*) this.playbackSettings.BeatsPerMinute = startTempo;\n        this.userStartTempoInBPM = startTempo;\n    };\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"DefaultStartTempoInBpm\", {\n        get: function () {\n            return this.defaultStartTempoInBpm;\n        },\n        set: function (value) {\n            this.defaultStartTempoInBpm = value;\n            this.InitializeStartTempoInBPM(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Path\", {\n        get: function () {\n            return this.path;\n        },\n        set: function (value) {\n            this.path = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Staves\", {\n        get: function () {\n            return this.staves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"TitleString\", {\n        get: function () {\n            if (this.title !== undefined) {\n                return this.title.text;\n            }\n            else {\n                return \"\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SubtitleString\", {\n        get: function () {\n            if (this.subtitle !== undefined) {\n                return this.subtitle.text;\n            }\n            else {\n                return \"\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"ComposerString\", {\n        get: function () {\n            if (this.composer !== undefined) {\n                return this.composer.text;\n            }\n            else {\n                return \"\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"LyricistString\", {\n        get: function () {\n            if (this.lyricist !== undefined) {\n                return this.lyricist.text;\n            }\n            else {\n                return \"\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Title\", {\n        get: function () {\n            return this.title;\n        },\n        set: function (value) {\n            this.title = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Subtitle\", {\n        get: function () {\n            return this.subtitle;\n        },\n        set: function (value) {\n            this.subtitle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Composer\", {\n        get: function () {\n            return this.composer;\n        },\n        set: function (value) {\n            this.composer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Lyricist\", {\n        get: function () {\n            return this.lyricist;\n        },\n        set: function (value) {\n            this.lyricist = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Rules\", {\n        get: function () {\n            return this.engravingRules;\n        },\n        set: function (value) {\n            this.engravingRules = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SheetErrors\", {\n        get: function () {\n            return this.musicSheetErrors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SelectionStart\", {\n        get: function () {\n            return this.selectionStart;\n        },\n        set: function (value) {\n            this.selectionStart = value.clone();\n            this.currentEnrolledPosition = value.clone();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SelectionEnd\", {\n        get: function () {\n            return this.selectionEnd;\n        },\n        set: function (value) {\n            this.selectionEnd = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // (*) public get MusicSheetParameterObject(): MusicSheetParameterObject {\n    //    return this.musicSheetParameterObject;\n    //}\n    // (*) public set MusicSheetParameterObject(value: MusicSheetParameterObject) {\n    //    this.musicSheetParameterObject = value;\n    //    this.Title = new Label(this.musicSheetParameterObject.Title);\n    //    this.Composer = new Label(this.musicSheetParameterObject.Composer);\n    //}\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.addMeasure = function (measure) {\n        this.sourceMeasures.push(measure);\n        measure.measureListIndex = this.sourceMeasures.length - 1;\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.checkForInstrumentWithNoVoice = function () {\n        for (var idx = 0, len = this.instruments.length; idx < len; ++idx) {\n            var instrument = this.instruments[idx];\n            if (instrument.Voices.length === 0) {\n                var voice = new Voice_1.Voice(instrument, 1);\n                instrument.Voices.push(voice);\n            }\n        }\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getStaffFromIndex = function (staffIndexInMusicSheet) {\n        return this.staves[staffIndexInMusicSheet];\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.fillStaffList = function () {\n        var i = 0;\n        for (var idx = 0, len = this.instruments.length; idx < len; ++idx) {\n            var instrument = this.instruments[idx];\n            for (var idx2 = 0, len2 = instrument.Staves.length; idx2 < len2; ++idx2) {\n                var staff = instrument.Staves[idx2];\n                staff.idInMusicSheet = i;\n                this.staves.push(staff);\n                i++;\n            }\n        }\n    };\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"MusicPartManager\", {\n        get: function () {\n            return this.musicPartManager;\n        },\n        set: function (value) {\n            this.musicPartManager = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getCompleteNumberOfStaves = function () {\n        var num = 0;\n        for (var idx = 0, len = this.instruments.length; idx < len; ++idx) {\n            var instrument = this.instruments[idx];\n            num += instrument.Staves.length;\n        }\n        return num;\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getListOfMeasuresFromIndeces = function (start, end) {\n        var measures = [];\n        for (var i = start; i <= end; i++) {\n            measures.push(this.sourceMeasures[i]);\n        }\n        return measures;\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getNextSourceMeasure = function (measure) {\n        var index = this.sourceMeasures.indexOf(measure);\n        if (index === this.sourceMeasures.length - 1) {\n            return measure;\n        }\n        return this.sourceMeasures[index + 1];\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getFirstSourceMeasure = function () {\n        return this.sourceMeasures[0];\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getLastSourceMeasure = function () {\n        return this.sourceMeasures[this.sourceMeasures.length - 1];\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.resetAllNoteStates = function () {\n        var iterator = this.MusicPartManager.getIterator();\n        while (!iterator.EndReached && iterator.CurrentVoiceEntries !== undefined) {\n            for (var idx = 0, len = iterator.CurrentVoiceEntries.length; idx < len; ++idx) {\n                var voiceEntry = iterator.CurrentVoiceEntries[idx];\n                for (var idx2 = 0, len2 = voiceEntry.Notes.length; idx2 < len2; ++idx2) {\n                    var note = voiceEntry.Notes[idx2];\n                    note.state = DrawingEnums_1.NoteState.Normal;\n                }\n            }\n            iterator.moveToNext();\n        }\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getMusicSheetInstrumentIndex = function (instrument) {\n        return this.Instruments.indexOf(instrument);\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getGlobalStaffIndexOfFirstStaff = function (instrument) {\n        var instrumentIndex = this.getMusicSheetInstrumentIndex(instrument);\n        var staffLineIndex = 0;\n        for (var i = 0; i < instrumentIndex; i++) {\n            staffLineIndex += this.Instruments[i].Staves.length;\n        }\n        return staffLineIndex;\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.setRepetitionNewUserNumberOfRepetitions = function (index, value) {\n        var repIndex = 0;\n        for (var i = 0; i < this.repetitions.length; i++) {\n            if (this.repetitions[i] instanceof Repetition_1.Repetition) {\n                if (index === repIndex) {\n                    this.repetitions[i].UserNumberOfRepetitions = value;\n                    break;\n                }\n                else {\n                    repIndex++;\n                }\n            }\n        }\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getRepetitionByIndex = function (index) {\n        var repIndex = 0;\n        for (var i = 0; i < this.repetitions.length; i++) {\n            if (this.repetitions[i] instanceof Repetition_1.Repetition) {\n                if (index === repIndex) {\n                    return this.repetitions[i];\n                }\n                repIndex++;\n            }\n        }\n        return undefined;\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.CompareTo = function (other) {\n        return this.Title.text.localeCompare(other.Title.text);\n    };\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Errors\", {\n        // (*)\n        //public get IInstruments(): IInstrument[] {\n        //    return this.instruments.slice()\n        //}\n        //public get IInitializableInstruments(): ISettableInstrument[] {\n        //    return this.instruments.slice();\n        //}\n        //public get IRepetitions(): IRepetition[] {\n        //    try {\n        //        let repetitions: IRepetition[] = [];\n        //        for (let idx: number = 0, len: number = this.repetitions.length; idx < len; ++idx) {\n        //            let partListEntry: PartListEntry = this.repetitions[idx];\n        //            if (partListEntry instanceof Repetition) {\n        //                repetitions.push(<Repetition>partListEntry);\n        //            }\n        //        }\n        //        return repetitions;\n        //    } catch (ex) {\n        //        console.log(/*Logger.DefaultLogger.LogError(LogLevel.NORMAL, FIXME */ \"MusicSheet.IRepetitions get: \", ex);\n        //        return undefined;\n        //    }\n        //\n        //}\n        //public GetExpressionsStartTempoInBPM(): number {\n        //    if (this.TimestampSortedTempoExpressionsList.length > 0) {\n        //        let me: MultiTempoExpression = this.TimestampSortedTempoExpressionsList[0];\n        //        if (me.InstantaniousTempo !== undefined) {\n        //            return me.InstantaniousTempo.TempoInBpm;\n        //        } else if (me.ContinuousTempo !== undefined) {\n        //            return me.ContinuousTempo.StartTempo;\n        //        }\n        //    }\n        //    return this.UserStartTempoInBPM;\n        //}\n        get: function () {\n            return this.musicSheetErrors.measureErrors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"FirstMeasureNumber\", {\n        get: function () {\n            try {\n                return this.getFirstSourceMeasure().MeasureNumber;\n            }\n            catch (ex) {\n                console.log(/* FIXME LogLevel.NORMAL, */ \"MusicSheet.FirstMeasureNumber: \", ex);\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"LastMeasureNumber\", {\n        get: function () {\n            try {\n                return this.getLastSourceMeasure().MeasureNumber;\n            }\n            catch (ex) {\n                console.log(/* FIXME LogLevel.NORMAL, */ \"MusicSheet.LastMeasureNumber: \", ex);\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"CurrentEnrolledPosition\", {\n        get: function () {\n            return this.currentEnrolledPosition.clone();\n        },\n        set: function (value) {\n            this.currentEnrolledPosition = value.clone();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"Transpose\", {\n        get: function () {\n            return this.transpose;\n        },\n        set: function (value) {\n            this.transpose = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"FullNameString\", {\n        // (*)\n        //public SetMusicSheetParameter(parameter: MusicSheetParameters, value: Object): void {\n        //    if (this.PhonicScoreInterface !== undefined) {\n        //        this.PhonicScoreInterface.RequestMusicSheetParameter(parameter, value);\n        //    } else {\n        //        let oldValue: Object = 0;\n        //        if (parameter === undefined) { // FIXME MusicSheetParameters.MusicSheetTranspose) {\n        //            oldValue = this.Transpose;\n        //            this.Transpose = <number>value;\n        //        }\n        //        if (parameter === undefined) { // FIXME MusicSheetParameters.StartTempoInBPM) {\n        //            oldValue = this.UserStartTempoInBPM;\n        //            this.UserStartTempoInBPM = <number>value;\n        //        }\n        //        if (parameter === undefined) { // FIXME MusicSheetParameters.HighlightErrors) {\n        //            oldValue = value;\n        //        }\n        //        if (this.MusicSheetParameterChanged !== undefined) {\n        //            this.musicSheetParameterChangedDelegate(undefined, parameter, value, oldValue);\n        //        }\n        //    }\n        //}\n        //public get MusicSheetParameterChanged(): MusicSheetParameterChangedDelegate {\n        //    return this.musicSheetParameterChangedDelegate;\n        //}\n        //public set MusicSheetParameterChanged(value: MusicSheetParameterChangedDelegate) {\n        //    this.musicSheetParameterChangedDelegate = value;\n        //}\n        get: function () {\n            return this.ComposerString + \" \" + this.TitleString;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"IdString\", {\n        get: function () {\n            return this.idString;\n        },\n        set: function (value) {\n            this.idString = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public Dispose(): void {\n    //    this.MusicSheetParameterChanged = undefined;\n    //    for (let idx: number = 0, len: number = this.instruments.length; idx < len; ++idx) {\n    //        let instrument: Instrument = this.instruments[idx];\n    //        instrument.dispose(); // FIXME\n    //    }\n    // }\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getEnrolledSelectionStartTimeStampWorkaround = function () {\n        var iter = this.MusicPartManager.getIterator(this.SelectionStart);\n        return fraction_1.Fraction.createFromFraction(iter.CurrentEnrolledTimestamp);\n    };\n    Object.defineProperty(MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype, \"SheetEndTimestamp\", {\n        get: function () {\n            var lastMeasure = this.getLastSourceMeasure();\n            return fraction_1.Fraction.plus(lastMeasure.AbsoluteTimestamp, lastMeasure.Duration);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getSourceMeasureFromTimeStamp = function (timeStamp) {\n        for (var idx = 0, len = this.sourceMeasures.length; idx < len; ++idx) {\n            var sm = this.sourceMeasures[idx];\n            for (var idx2 = 0, len2 = sm.VerticalSourceStaffEntryContainers.length; idx2 < len2; ++idx2) {\n                var vssec = sm.VerticalSourceStaffEntryContainers[idx2];\n                if (fraction_1.Fraction.Equal(timeStamp, vssec.getAbsoluteTimestamp())) {\n                    return sm;\n                }\n            }\n        }\n        return this.findSourceMeasureFromTimeStamp(timeStamp);\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.findSourceMeasureFromTimeStamp = function (timestamp) {\n        for (var _i = 0, _a = this.sourceMeasures; _i < _a.length; _i++) {\n            var sm = _a[_i];\n            if (sm.AbsoluteTimestamp.lte(timestamp) && timestamp.lt(fraction_1.Fraction.plus(sm.AbsoluteTimestamp, sm.Duration))) {\n                return sm;\n            }\n        }\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.prototype.getVisibleInstruments = function () {\n        var visInstruments = [];\n        for (var idx = 0, len = this.Instruments.length; idx < len; ++idx) {\n            var instrument = this.Instruments[idx];\n            if (instrument.Voices.length > 0 && instrument.Voices[0].Visible) {\n                visInstruments.push(instrument);\n            }\n        }\n        return visInstruments;\n    };\n    MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/.defaultTitle = \"[kein Titel]\";\n    return MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/;\n}());\nexports.MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/ = MusicSheet /*implements ISettableMusicSheet, IComparable<MusicSheet>*/;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSheet.js\n ** module id = 64\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar MusicPartManagerIterator_1 = require(\"./MusicPartManagerIterator\");\nvar MusicPartManager /*implements ISelectionListener*/ = (function () {\n    function MusicPartManager /*implements ISelectionListener*/(musicSheet) {\n        this.musicSheet = musicSheet;\n    }\n    MusicPartManager /*implements ISelectionListener*/.prototype.reInit = function () {\n        this.init();\n    };\n    MusicPartManager /*implements ISelectionListener*/.prototype.init = function () {\n        this.parts = this.musicSheet.Repetitions.slice();\n        this.sheetStart = this.musicSheet.SelectionStart = new fraction_1.Fraction(0, 1);\n        this.sheetEnd = this.musicSheet.SelectionEnd = this.musicSheet.SheetEndTimestamp;\n        this.calcMapping();\n    };\n    MusicPartManager /*implements ISelectionListener*/.prototype.getCurrentRepetitionTimestampTransform = function (curEnrolledTimestamp) {\n        var curTransform = undefined;\n        for (var i = this.timestamps.length - 1; i >= 0; i--) {\n            curTransform = this.timestamps[i];\n            if (curEnrolledTimestamp >= curTransform.$from) {\n                return curTransform;\n            }\n        }\n        return this.timestamps[0];\n    };\n    MusicPartManager /*implements ISelectionListener*/.prototype.absoluteEnrolledToSheetTimestamp = function (timestamp) {\n        if (this.timestamps.length === 0) {\n            return timestamp;\n        }\n        var transform = this.getCurrentRepetitionTimestampTransform(timestamp);\n        return fraction_1.Fraction.plus(timestamp, fraction_1.Fraction.minus(transform.to, transform.$from)); // FIXME\n    };\n    Object.defineProperty(MusicPartManager /*implements ISelectionListener*/.prototype, \"Parts\", {\n        get: function () {\n            return this.parts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManager /*implements ISelectionListener*/.prototype, \"MusicSheet\", {\n        get: function () {\n            return this.musicSheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicPartManager /*implements ISelectionListener*/.prototype.getIterator = function (start) {\n        if (start === undefined) {\n            return new MusicPartManagerIterator_1.MusicPartManagerIterator(this, this.musicSheet.SelectionStart, this.musicSheet.SelectionEnd);\n        }\n        return new MusicPartManagerIterator_1.MusicPartManagerIterator(this, start, undefined);\n    };\n    MusicPartManager /*implements ISelectionListener*/.prototype.setSelectionStart = function (beginning) {\n        this.musicSheet.SelectionStart = beginning;\n        this.musicSheet.SelectionEnd = undefined;\n    };\n    MusicPartManager /*implements ISelectionListener*/.prototype.setSelectionRange = function (start, end) {\n        this.musicSheet.SelectionStart = start === undefined ? this.sheetStart : start;\n        this.musicSheet.SelectionEnd = end === undefined ? this.sheetEnd : end;\n    };\n    MusicPartManager /*implements ISelectionListener*/.prototype.calcMapping = function () {\n        var timestamps = [];\n        var iterator = this.getIterator();\n        var currentRepetition = iterator.CurrentRepetition;\n        var curTimestampTransform = new TimestampTransform(iterator.CurrentEnrolledTimestamp.clone(), iterator.CurrentSourceTimestamp.clone(), undefined, 0);\n        timestamps.push(curTimestampTransform);\n        while (!iterator.EndReached) {\n            if (iterator.JumpOccurred || currentRepetition !== iterator.CurrentRepetition) {\n                currentRepetition = iterator.CurrentRepetition;\n                if (iterator.backJumpOccurred) {\n                    var jumpRep = iterator.JumpResponsibleRepetition;\n                    curTimestampTransform.nextBackJump = iterator.CurrentEnrolledTimestamp;\n                    curTimestampTransform.curRepetition = jumpRep;\n                    curTimestampTransform.curRepetitionIteration = iterator.CurrentJumpResponsibleRepetitionIterationBeforeJump;\n                    for (var i = this.timestamps.length - 2; i >= 0; i--) {\n                        if (jumpRep.AbsoluteTimestamp > timestamps[i].to || timestamps[i].curRepetition !== undefined) {\n                            break;\n                        }\n                        timestamps[i].nextBackJump = curTimestampTransform.nextBackJump;\n                        timestamps[i].curRepetition = jumpRep;\n                        timestamps[i].curRepetitionIteration = curTimestampTransform.curRepetitionIteration;\n                    }\n                }\n                curTimestampTransform = new TimestampTransform(iterator.CurrentEnrolledTimestamp.clone(), iterator.CurrentSourceTimestamp.clone(), undefined, 0);\n                timestamps.push(curTimestampTransform);\n            }\n            iterator.moveToNext();\n        }\n        this.timestamps = timestamps;\n    };\n    return MusicPartManager /*implements ISelectionListener*/;\n}());\nexports.MusicPartManager /*implements ISelectionListener*/ = MusicPartManager /*implements ISelectionListener*/;\nvar TimestampTransform = (function () {\n    function TimestampTransform(sourceTimestamp, enrolledTimestamp, repetition, curRepetitionIteration) {\n        this.$from = sourceTimestamp;\n        this.to = enrolledTimestamp;\n        this.curRepetition = repetition;\n        this.curRepetitionIteration = curRepetitionIteration;\n        this.nextBackJump = undefined;\n        this.nextForwardJump = undefined;\n    }\n    return TimestampTransform;\n}());\nexports.TimestampTransform = TimestampTransform;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicParts/MusicPartManager.js\n ** module id = 65\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar DynamicsContainer_1 = require(\"../VoiceData/HelperObjects/DynamicsContainer\");\nvar RhythmInstruction_1 = require(\"../VoiceData/Instructions/RhythmInstruction\");\nvar continuousDynamicExpression_1 = require(\"../VoiceData/Expressions/ContinuousExpressions/continuousDynamicExpression\");\nvar MusicPartManagerIterator = (function () {\n    function MusicPartManagerIterator(manager, startTimestamp, endTimestamp) {\n        this.currentMeasureIndex = 0;\n        this.currentPartIndex = 0;\n        this.currentVoiceEntryIndex = -1;\n        this.currentDynamicEntryIndex = 0;\n        this.currentTempoEntryIndex = 0;\n        this.currentDynamicChangingExpressions = [];\n        this.currentRepetition = undefined;\n        this.endReached = false;\n        this.frontReached = false;\n        this.currentTimeStamp = new fraction_1.Fraction(0, 1);\n        this.currentEnrolledMeasureTimestamp = new fraction_1.Fraction(0, 1);\n        this.currentVerticalContainerInMeasureTimestamp = new fraction_1.Fraction(0, 1);\n        this.jumpResponsibleRepetition = undefined;\n        this.activeDynamicExpressions = [];\n        try {\n            this.frontReached = true;\n            this.manager = manager;\n            this.currentVoiceEntries = undefined;\n            this.frontReached = false;\n            for (var _i = 0, _a = manager.MusicSheet.Repetitions; _i < _a.length; _i++) {\n                var rep = _a[_i];\n                this.setRepetitionIterationCount(rep, 1);\n            }\n            this.activeDynamicExpressions = new Array(manager.MusicSheet.getCompleteNumberOfStaves());\n            this.currentMeasure = this.manager.MusicSheet.SourceMeasures[0];\n            if (startTimestamp === undefined) {\n                return;\n            }\n            do {\n                this.moveToNext();\n            } while ((this.currentVoiceEntries === undefined || this.currentTimeStamp.lt(startTimestamp)) && !this.endReached);\n            for (var staffIndex = 0; staffIndex < this.activeDynamicExpressions.length; staffIndex++) {\n                if (this.activeDynamicExpressions[staffIndex] !== undefined) {\n                    if (this.activeDynamicExpressions[staffIndex] instanceof continuousDynamicExpression_1.ContinuousDynamicExpression) {\n                        var continuousDynamic = this.activeDynamicExpressions[staffIndex];\n                        this.currentDynamicChangingExpressions.push(new DynamicsContainer_1.DynamicsContainer(continuousDynamic, staffIndex));\n                    }\n                    else {\n                        var instantaniousDynamic = this.activeDynamicExpressions[staffIndex];\n                        this.currentDynamicChangingExpressions.push(new DynamicsContainer_1.DynamicsContainer(instantaniousDynamic, staffIndex));\n                    }\n                }\n            }\n            this.currentTempoChangingExpression = this.activeTempoExpression;\n        }\n        catch (err) {\n            console.log(\"MusicPartManagerIterator: Exception.\" + err); // FIXME\n        }\n    }\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"EndReached\", {\n        get: function () {\n            return this.endReached;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"FrontReached\", {\n        get: function () {\n            return this.frontReached;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentMeasure\", {\n        get: function () {\n            return this.currentMeasure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentRepetition\", {\n        get: function () {\n            return this.currentRepetition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentRepetitionIteration\", {\n        get: function () {\n            if (this.CurrentRepetition !== undefined) {\n                return this.getRepetitionIterationCount(this.CurrentRepetition);\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentJumpResponsibleRepetitionIterationBeforeJump\", {\n        get: function () {\n            if (this.jumpResponsibleRepetition !== undefined) {\n                return this.getRepetitionIterationCount(this.jumpResponsibleRepetition) - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentVoiceEntries\", {\n        get: function () {\n            return this.currentVoiceEntries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentMeasureIndex\", {\n        get: function () {\n            return this.currentMeasureIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentEnrolledTimestamp\", {\n        get: function () {\n            return fraction_1.Fraction.plus(this.currentEnrolledMeasureTimestamp, this.currentVerticalContainerInMeasureTimestamp);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentSourceTimestamp\", {\n        get: function () {\n            return this.currentTimeStamp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"JumpOccurred\", {\n        get: function () {\n            return this.backJumpOccurred || this.forwardJumpOccurred;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"ActiveTempoExpression\", {\n        get: function () {\n            return this.activeTempoExpression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"ActiveDynamicExpressions\", {\n        get: function () {\n            return this.activeDynamicExpressions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"CurrentTempoChangingExpression\", {\n        get: function () {\n            return this.currentTempoChangingExpression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MusicPartManagerIterator.prototype, \"JumpResponsibleRepetition\", {\n        get: function () {\n            return this.jumpResponsibleRepetition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicPartManagerIterator.prototype.clone = function () {\n        var ret = new MusicPartManagerIterator(this.manager);\n        ret.currentVoiceEntryIndex = this.currentVoiceEntryIndex;\n        ret.currentMappingPart = this.currentMappingPart;\n        ret.currentPartIndex = this.currentPartIndex;\n        ret.currentVoiceEntries = this.currentVoiceEntries;\n        ret.endReached = this.endReached;\n        ret.frontReached = this.frontReached;\n        return ret;\n    };\n    MusicPartManagerIterator.prototype.CurrentVisibleVoiceEntries = function (instrument) {\n        var voiceEntries = [];\n        if (this.currentVoiceEntries === undefined) {\n            return voiceEntries;\n        }\n        if (instrument !== undefined) {\n            for (var _i = 0, _a = this.currentVoiceEntries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                if (entry.ParentVoice.Parent.IdString === instrument.IdString) {\n                    this.getVisibleEntries(entry, voiceEntries);\n                    return voiceEntries;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = this.currentVoiceEntries; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                this.getVisibleEntries(entry, voiceEntries);\n            }\n        }\n        return voiceEntries;\n    };\n    MusicPartManagerIterator.prototype.CurrentAudibleVoiceEntries = function (instrument) {\n        var voiceEntries = [];\n        if (this.currentVoiceEntries === undefined) {\n            return voiceEntries;\n        }\n        if (instrument !== undefined) {\n            for (var _i = 0, _a = this.currentVoiceEntries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                if (entry.ParentVoice.Parent.IdString === instrument.IdString) {\n                    this.getAudibleEntries(entry, voiceEntries);\n                    return voiceEntries;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = this.currentVoiceEntries; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                this.getAudibleEntries(entry, voiceEntries);\n            }\n        }\n        return voiceEntries;\n    };\n    MusicPartManagerIterator.prototype.getCurrentDynamicChangingExpressions = function () {\n        return this.currentDynamicChangingExpressions;\n    };\n    MusicPartManagerIterator.prototype.CurrentScoreFollowingVoiceEntries = function (instrument) {\n        var voiceEntries = [];\n        if (this.currentVoiceEntries === undefined) {\n            return voiceEntries;\n        }\n        if (instrument !== undefined) {\n            for (var _i = 0, _a = this.currentVoiceEntries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                if (entry.ParentVoice.Parent.IdString === instrument.IdString) {\n                    this.getScoreFollowingEntries(entry, voiceEntries);\n                    return voiceEntries;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = this.currentVoiceEntries; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                this.getScoreFollowingEntries(entry, voiceEntries);\n            }\n        }\n        return voiceEntries;\n    };\n    //public currentPlaybackSettings(): PlaybackSettings {\n    //    return this.manager.MusicSheet.SheetPlaybackSetting;\n    //}\n    MusicPartManagerIterator.prototype.moveToNext = function () {\n        this.forwardJumpOccurred = this.backJumpOccurred = false;\n        if (this.endReached) {\n            return;\n        }\n        if (this.currentVoiceEntries !== undefined) {\n            this.currentVoiceEntries = [];\n        }\n        this.recursiveMove();\n        if (this.currentMeasure === undefined) {\n            this.currentTimeStamp = new fraction_1.Fraction(99999, 1);\n        }\n    };\n    MusicPartManagerIterator.prototype.moveToNextVisibleVoiceEntry = function (notesOnly) {\n        while (!this.endReached) {\n            this.moveToNext();\n            if (this.checkEntries(notesOnly)) {\n                return;\n            }\n        }\n    };\n    MusicPartManagerIterator.prototype.resetRepetitionIterationCount = function (repetition) {\n        this.setRepetitionIterationCount(repetition, 1);\n        return 1;\n    };\n    MusicPartManagerIterator.prototype.incrementRepetitionIterationCount = function (repetition) {\n        if (this.repetitionIterationCountDictKeys.indexOf(repetition) === -1) {\n            return this.setRepetitionIterationCount(repetition, 1);\n        }\n        else {\n            return this.setRepetitionIterationCount(repetition, this.getRepetitionIterationCount(repetition) + 1);\n        }\n    };\n    MusicPartManagerIterator.prototype.setRepetitionIterationCount = function (repetition, iterationCount) {\n        var i = this.repetitionIterationCountDictKeys.indexOf(repetition);\n        if (i === -1) {\n            this.repetitionIterationCountDictKeys.push(repetition);\n            this.repetitionIterationCountDictValues.push(iterationCount);\n        }\n        else {\n            this.repetitionIterationCountDictValues[i] = iterationCount;\n        }\n        return iterationCount;\n    };\n    MusicPartManagerIterator.prototype.getRepetitionIterationCount = function (rep) {\n        var i = this.repetitionIterationCountDictKeys.indexOf(rep);\n        if (i !== -1) {\n            return this.repetitionIterationCountDictValues[i];\n        }\n    };\n    /*    private moveTempoIndexToTimestamp(measureNumber: number): void {\n            for (let index: number = 0; index < this.manager.MusicSheet.TimestampSortedTempoExpressionsList.length; index++) {\n                if (this.manager.MusicSheet.TimestampSortedTempoExpressionsList[index].SourceMeasureParent.MeasureNumber >= measureNumber) {\n                    this.currentTempoEntryIndex = Math.Max(-1, index - 1);\n                    return\n                }\n            }\n        }\n        private getNextTempoEntryTimestamp(): Fraction {\n            if (this.currentTempoEntryIndex >= this.manager.MusicSheet.TimestampSortedTempoExpressionsList.length - 1) {\n                return new Fraction(99999, 1);\n            }\n            return this.manager.MusicSheet.TimestampSortedTempoExpressionsList[this.currentTempoEntryIndex + 1].SourceMeasureParent.AbsoluteTimestamp +\n            this.manager.MusicSheet.TimestampSortedTempoExpressionsList[this.currentTempoEntryIndex + 1].Timestamp;\n        }\n        private moveToNextDynamic(): void {\n            this.currentDynamicEntryIndex++;\n            this.currentDynamicChangingExpressions.Clear();\n            let curDynamicEntry: DynamicsContainer = this.manager.MusicSheet.TimestampSortedDynamicExpressionsList[this.currentDynamicEntryIndex];\n            this.currentDynamicChangingExpressions.push(curDynamicEntry);\n            let tsNow: Fraction = curDynamicEntry.parMultiExpression().AbsoluteTimestamp;\n            for (let i: number = this.currentDynamicEntryIndex + 1; i < this.manager.MusicSheet.TimestampSortedDynamicExpressionsList.length; i++) {\n                curDynamicEntry = this.manager.MusicSheet.TimestampSortedDynamicExpressionsList[i];\n                if ((curDynamicEntry.parMultiExpression().AbsoluteTimestamp !== tsNow)) { break; }\n                this.currentDynamicEntryIndex = i;\n                this.currentDynamicChangingExpressions.push(curDynamicEntry);\n            }\n        }\n        private moveDynamicIndexToTimestamp(absoluteTimestamp: Fraction): void {\n            let dynamics: DynamicsContainer[] = this.manager.MusicSheet.TimestampSortedDynamicExpressionsList;\n            for (let index: number = 0; index < dynamics.length; index++) {\n                if (dynamics[index].parMultiExpression().AbsoluteTimestamp >= absoluteTimestamp) {\n                    this.currentDynamicEntryIndex = Math.Max(0, index - 1);\n                    return\n                }\n            }\n        }\n        private getNextDynamicsEntryTimestamp(): Fraction {\n            if (this.currentDynamicEntryIndex >= this.manager.MusicSheet.TimestampSortedDynamicExpressionsList.length - 1) {\n                return new Fraction(99999, 1);\n            }\n            return this.manager.MusicSheet.TimestampSortedDynamicExpressionsList[this.currentDynamicEntryIndex + 1].parMultiExpression().AbsoluteTimestamp;\n        }\n        */\n    MusicPartManagerIterator.prototype.handleRepetitionsAtMeasureBegin = function () {\n        for (var idx = 0, len = this.currentMeasure.FirstRepetitionInstructions.length; idx < len; ++idx) {\n            var repetitionInstruction = this.currentMeasure.FirstRepetitionInstructions[idx];\n            if (repetitionInstruction.parentRepetition === undefined) {\n                continue;\n            }\n            var currentRepetition = repetitionInstruction.parentRepetition;\n            this.currentRepetition = currentRepetition;\n            if (currentRepetition.StartIndex === this.currentMeasureIndex) {\n                if (this.JumpResponsibleRepetition !== undefined &&\n                    currentRepetition !== this.JumpResponsibleRepetition &&\n                    currentRepetition.StartIndex >= this.JumpResponsibleRepetition.StartIndex &&\n                    currentRepetition.EndIndex <= this.JumpResponsibleRepetition.EndIndex) {\n                    this.resetRepetitionIterationCount(currentRepetition);\n                }\n            }\n        }\n    };\n    MusicPartManagerIterator.prototype.handleRepetitionsAtMeasureEnd = function () {\n        for (var idx = 0, len = this.currentMeasure.LastRepetitionInstructions.length; idx < len; ++idx) {\n            var repetitionInstruction = this.currentMeasure.LastRepetitionInstructions[idx];\n            var currentRepetition = repetitionInstruction.parentRepetition;\n            if (currentRepetition === undefined) {\n                continue;\n            }\n            if (currentRepetition.BackwardJumpInstructions.indexOf(repetitionInstruction) > -1) {\n                if (this.getRepetitionIterationCount(currentRepetition) < currentRepetition.UserNumberOfRepetitions) {\n                    this.doBackJump(currentRepetition);\n                    this.backJumpOccurred = true;\n                    return;\n                }\n            }\n            if (repetitionInstruction === currentRepetition.forwardJumpInstruction) {\n                if (this.JumpResponsibleRepetition !== undefined\n                    && currentRepetition !== this.JumpResponsibleRepetition\n                    && currentRepetition.StartIndex >= this.JumpResponsibleRepetition.StartIndex\n                    && currentRepetition.EndIndex <= this.JumpResponsibleRepetition.EndIndex) {\n                    this.resetRepetitionIterationCount(currentRepetition);\n                }\n                var forwardJumpTargetMeasureIndex = currentRepetition.getForwardJumpTargetForIteration(this.getRepetitionIterationCount(currentRepetition));\n                if (forwardJumpTargetMeasureIndex >= 0) {\n                    this.currentMeasureIndex = forwardJumpTargetMeasureIndex;\n                    this.currentMeasure = this.manager.MusicSheet.SourceMeasures[this.currentMeasureIndex];\n                    this.currentVoiceEntryIndex = -1;\n                    this.jumpResponsibleRepetition = currentRepetition;\n                    this.forwardJumpOccurred = true;\n                    return;\n                }\n                if (forwardJumpTargetMeasureIndex === -2) {\n                    this.endReached = true;\n                }\n            }\n        }\n        this.currentMeasureIndex++;\n        if (this.JumpResponsibleRepetition !== undefined && this.currentMeasureIndex > this.JumpResponsibleRepetition.EndIndex) {\n            this.jumpResponsibleRepetition = undefined;\n        }\n    };\n    MusicPartManagerIterator.prototype.doBackJump = function (currentRepetition) {\n        this.currentMeasureIndex = currentRepetition.getBackwardJumpTarget();\n        this.currentMeasure = this.manager.MusicSheet.SourceMeasures[this.currentMeasureIndex];\n        this.currentVoiceEntryIndex = -1;\n        this.incrementRepetitionIterationCount(currentRepetition);\n        this.jumpResponsibleRepetition = currentRepetition;\n    };\n    MusicPartManagerIterator.prototype.activateCurrentRhythmInstructions = function () {\n        if (this.currentMeasure !== undefined &&\n            this.currentMeasure.FirstInstructionsStaffEntries.length > 0 &&\n            this.currentMeasure.FirstInstructionsStaffEntries[0] !== undefined) {\n            var instructions = this.currentMeasure.FirstInstructionsStaffEntries[0].Instructions;\n            for (var idx = 0, len = instructions.length; idx < len; ++idx) {\n                var abstractNotationInstruction = instructions[idx];\n                if (abstractNotationInstruction instanceof RhythmInstruction_1.RhythmInstruction) {\n                    this.manager.MusicSheet.SheetPlaybackSetting.rhythm = abstractNotationInstruction.Rhythm;\n                }\n            }\n        }\n    };\n    MusicPartManagerIterator.prototype.activateCurrentDynamicOrTempoInstructions = function () {\n        var timeSortedDynamics = this.manager.MusicSheet.TimestampSortedDynamicExpressionsList;\n        while (this.currentDynamicEntryIndex > 0 && (this.currentDynamicEntryIndex >= timeSortedDynamics.length ||\n            timeSortedDynamics[this.currentDynamicEntryIndex].parMultiExpression().AbsoluteTimestamp >= this.CurrentSourceTimestamp)) {\n            this.currentDynamicEntryIndex--;\n        }\n        while (this.currentDynamicEntryIndex < timeSortedDynamics.length &&\n            timeSortedDynamics[this.currentDynamicEntryIndex].parMultiExpression().AbsoluteTimestamp < this.CurrentSourceTimestamp) {\n            this.currentDynamicEntryIndex++;\n        }\n        while (this.currentDynamicEntryIndex < timeSortedDynamics.length\n            && timeSortedDynamics[this.currentDynamicEntryIndex].parMultiExpression().AbsoluteTimestamp === this.CurrentSourceTimestamp) {\n            var dynamicsContainer = timeSortedDynamics[this.currentDynamicEntryIndex];\n            var staffIndex = dynamicsContainer.staffNumber;\n            if (this.CurrentSourceTimestamp === dynamicsContainer.parMultiExpression().AbsoluteTimestamp) {\n                if (dynamicsContainer.continuousDynamicExpression !== undefined) {\n                    this.activeDynamicExpressions[staffIndex] = dynamicsContainer.continuousDynamicExpression;\n                }\n                else if (dynamicsContainer.instantaneousDynamicExpression !== undefined) {\n                    this.activeDynamicExpressions[staffIndex] = dynamicsContainer.instantaneousDynamicExpression;\n                }\n            }\n            this.currentDynamicEntryIndex++;\n        }\n        this.currentDynamicChangingExpressions = [];\n        for (var staffIndex = 0; staffIndex < this.activeDynamicExpressions.length; staffIndex++) {\n            if (this.activeDynamicExpressions[staffIndex] !== undefined) {\n                var startTime = void 0;\n                var endTime = void 0;\n                if (this.activeDynamicExpressions[staffIndex] instanceof continuousDynamicExpression_1.ContinuousDynamicExpression) {\n                    var continuousDynamic = this.activeDynamicExpressions[staffIndex];\n                    startTime = continuousDynamic.StartMultiExpression.AbsoluteTimestamp;\n                    endTime = continuousDynamic.EndMultiExpression.AbsoluteTimestamp;\n                    if (this.CurrentSourceTimestamp >= startTime && this.CurrentSourceTimestamp <= endTime) {\n                        this.currentDynamicChangingExpressions.push(new DynamicsContainer_1.DynamicsContainer(continuousDynamic, staffIndex));\n                    }\n                }\n                else {\n                    var instantaniousDynamic = this.activeDynamicExpressions[staffIndex];\n                    if (this.CurrentSourceTimestamp === instantaniousDynamic.ParentMultiExpression.AbsoluteTimestamp) {\n                        this.currentDynamicChangingExpressions.push(new DynamicsContainer_1.DynamicsContainer(instantaniousDynamic, staffIndex));\n                    }\n                }\n            }\n        }\n        var timeSortedTempoExpressions = this.manager.MusicSheet.TimestampSortedTempoExpressionsList;\n        while (this.currentTempoEntryIndex > 0 && (this.currentTempoEntryIndex >= timeSortedTempoExpressions.length\n            || timeSortedTempoExpressions[this.currentTempoEntryIndex].AbsoluteTimestamp >= this.CurrentSourceTimestamp)) {\n            this.currentTempoEntryIndex--;\n        }\n        while (this.currentTempoEntryIndex < timeSortedTempoExpressions.length &&\n            timeSortedTempoExpressions[this.currentTempoEntryIndex].AbsoluteTimestamp < this.CurrentSourceTimestamp) {\n            this.currentTempoEntryIndex++;\n        }\n        while (this.currentTempoEntryIndex < timeSortedTempoExpressions.length\n            && timeSortedTempoExpressions[this.currentTempoEntryIndex].AbsoluteTimestamp === this.CurrentSourceTimestamp) {\n            this.activeTempoExpression = timeSortedTempoExpressions[this.currentTempoEntryIndex];\n            this.currentTempoEntryIndex++;\n        }\n        this.currentTempoChangingExpression = undefined;\n        if (this.activeTempoExpression !== undefined) {\n            var endTime = this.activeTempoExpression.AbsoluteTimestamp;\n            if (this.activeTempoExpression.ContinuousTempo !== undefined) {\n                endTime = this.activeTempoExpression.ContinuousTempo.AbsoluteEndTimestamp;\n            }\n            if (this.CurrentSourceTimestamp >= this.activeTempoExpression.AbsoluteTimestamp\n                || this.CurrentSourceTimestamp <= endTime) {\n                this.currentTempoChangingExpression = this.activeTempoExpression;\n            }\n        }\n    };\n    MusicPartManagerIterator.prototype.recursiveMove = function () {\n        this.currentVoiceEntryIndex++;\n        if (this.currentVoiceEntryIndex === 0) {\n            this.handleRepetitionsAtMeasureBegin();\n            this.activateCurrentRhythmInstructions();\n        }\n        if (this.currentVoiceEntryIndex >= 0 && this.currentVoiceEntryIndex < this.currentMeasure.VerticalSourceStaffEntryContainers.length) {\n            var currentContainer = this.currentMeasure.VerticalSourceStaffEntryContainers[this.currentVoiceEntryIndex];\n            this.currentVoiceEntries = this.getVoiceEntries(currentContainer);\n            this.currentVerticalContainerInMeasureTimestamp = currentContainer.Timestamp;\n            this.currentTimeStamp = fraction_1.Fraction.plus(this.currentMeasure.AbsoluteTimestamp, this.currentVerticalContainerInMeasureTimestamp);\n            if (this.currentTimeStamp >= this.manager.MusicSheet.SelectionEnd) {\n                this.endReached = true;\n            }\n            this.activateCurrentDynamicOrTempoInstructions();\n            return;\n        }\n        this.currentEnrolledMeasureTimestamp.Add(this.currentMeasure.Duration);\n        this.handleRepetitionsAtMeasureEnd();\n        if (this.currentMeasureIndex >= 0 && this.currentMeasureIndex < this.manager.MusicSheet.SourceMeasures.length) {\n            this.currentMeasure = this.manager.MusicSheet.SourceMeasures[this.currentMeasureIndex];\n            this.currentTimeStamp = fraction_1.Fraction.plus(this.currentMeasure.AbsoluteTimestamp, this.currentVerticalContainerInMeasureTimestamp);\n            this.currentVoiceEntryIndex = -1;\n            this.recursiveMove();\n            return;\n        }\n        this.currentVerticalContainerInMeasureTimestamp = new fraction_1.Fraction();\n        this.currentMeasure = undefined;\n        this.currentVoiceEntries = undefined;\n        this.endReached = true;\n    };\n    MusicPartManagerIterator.prototype.checkEntries = function (notesOnly) {\n        var tlist = this.CurrentVisibleVoiceEntries();\n        if (tlist.length > 0) {\n            if (!notesOnly) {\n                return true;\n            }\n            for (var idx = 0, len = tlist.length; idx < len; ++idx) {\n                var entry = tlist[idx];\n                if (entry.Notes[0].Pitch !== undefined) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    MusicPartManagerIterator.prototype.getVisibleEntries = function (entry, visibleEntries) {\n        if (entry.ParentVoice.Visible) {\n            visibleEntries.push(entry);\n        }\n    };\n    MusicPartManagerIterator.prototype.getAudibleEntries = function (entry, audibleEntries) {\n        if (entry.ParentVoice.Audible) {\n            audibleEntries.push(entry);\n        }\n    };\n    MusicPartManagerIterator.prototype.getScoreFollowingEntries = function (entry, followingEntries) {\n        if (entry.ParentVoice.Following && entry.ParentVoice.Parent.Following) {\n            followingEntries.push(entry);\n        }\n    };\n    MusicPartManagerIterator.prototype.getVoiceEntries = function (container) {\n        var entries = [];\n        for (var _i = 0, _a = container.StaffEntries; _i < _a.length; _i++) {\n            var sourceStaffEntry = _a[_i];\n            if (sourceStaffEntry === undefined) {\n                continue;\n            }\n            for (var _b = 0, _c = sourceStaffEntry.VoiceEntries; _b < _c.length; _b++) {\n                var voiceEntry = _c[_b];\n                entries.push(voiceEntry);\n            }\n        }\n        return entries;\n    };\n    return MusicPartManagerIterator;\n}());\nexports.MusicPartManagerIterator = MusicPartManagerIterator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicParts/MusicPartManagerIterator.js\n ** module id = 66\n ** module chunks = 0\n **/","\"use strict\";\nvar continuousDynamicExpression_1 = require(\"../Expressions/ContinuousExpressions/continuousDynamicExpression\");\nvar instantaniousDynamicExpression_1 = require(\"../Expressions/instantaniousDynamicExpression\");\nvar DynamicsContainer /*implements IComparable<DynamicsContainer>*/ = (function () {\n    function DynamicsContainer /*implements IComparable<DynamicsContainer>*/(dynamicExpression, staffNumber) {\n        if (dynamicExpression instanceof continuousDynamicExpression_1.ContinuousDynamicExpression) {\n            this.continuousDynamicExpression = dynamicExpression;\n        }\n        else if (dynamicExpression instanceof instantaniousDynamicExpression_1.InstantaniousDynamicExpression) {\n            this.instantaneousDynamicExpression = dynamicExpression;\n        }\n        this.staffNumber = staffNumber;\n    }\n    DynamicsContainer /*implements IComparable<DynamicsContainer>*/.prototype.parMultiExpression = function () {\n        if (this.continuousDynamicExpression !== undefined) {\n            return this.continuousDynamicExpression.StartMultiExpression;\n        }\n        if (this.instantaneousDynamicExpression !== undefined) {\n            return this.instantaneousDynamicExpression.ParentMultiExpression;\n        }\n        return undefined;\n    };\n    DynamicsContainer /*implements IComparable<DynamicsContainer>*/.prototype.CompareTo = function (other) {\n        return this.parMultiExpression().AbsoluteTimestamp.CompareTo(other.parMultiExpression().AbsoluteTimestamp);\n    };\n    return DynamicsContainer /*implements IComparable<DynamicsContainer>*/;\n}());\nexports.DynamicsContainer /*implements IComparable<DynamicsContainer>*/ = DynamicsContainer /*implements IComparable<DynamicsContainer>*/;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/HelperObjects/DynamicsContainer.js\n ** module id = 67\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar abstractExpression_1 = require(\"../abstractExpression\");\nvar fraction_1 = require(\"../../../../Common/DataObjects/fraction\");\nvar ContinuousDynamicExpression = (function (_super) {\n    __extends(ContinuousDynamicExpression, _super);\n    //constructor(placement: PlacementEnum, staffNumber: number, label: string) {\n    //    this.label = label;\n    //    this.placement = placement;\n    //    this.staffNumber = staffNumber;\n    //    this.startVolume = -1;\n    //    this.endVolume = -1;\n    //    this.setType();\n    //}\n    function ContinuousDynamicExpression(dynamicType, placement, staffNumber, label) {\n        _super.call(this);\n        this.dynamicType = dynamicType;\n        this.label = label;\n        this.placement = placement;\n        this.staffNumber = staffNumber;\n        this.startVolume = -1;\n        this.endVolume = -1;\n        this.setType();\n    }\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"DynamicType\", {\n        get: function () {\n            return this.dynamicType;\n        },\n        set: function (value) {\n            this.dynamicType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"StartMultiExpression\", {\n        get: function () {\n            return this.startMultiExpression;\n        },\n        set: function (value) {\n            this.startMultiExpression = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"EndMultiExpression\", {\n        get: function () {\n            return this.endMultiExpression;\n        },\n        set: function (value) {\n            this.endMultiExpression = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"Placement\", {\n        get: function () {\n            return this.placement;\n        },\n        set: function (value) {\n            this.placement = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"StartVolume\", {\n        get: function () {\n            return this.startVolume;\n        },\n        set: function (value) {\n            this.startVolume = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"EndVolume\", {\n        get: function () {\n            return this.endVolume;\n        },\n        set: function (value) {\n            this.endVolume = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"StaffNumber\", {\n        get: function () {\n            return this.staffNumber;\n        },\n        set: function (value) {\n            this.staffNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousDynamicExpression.prototype, \"Label\", {\n        get: function () {\n            return this.label;\n        },\n        set: function (value) {\n            this.label = value;\n            this.setType();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContinuousDynamicExpression.isInputStringContinuousDynamic = function (inputString) {\n        if (inputString === undefined) {\n            return false;\n        }\n        return (ContinuousDynamicExpression.isStringInStringList(ContinuousDynamicExpression.listContinuousDynamicIncreasing, inputString)\n            || ContinuousDynamicExpression.isStringInStringList(ContinuousDynamicExpression.listContinuousDynamicDecreasing, inputString));\n    };\n    ContinuousDynamicExpression.prototype.getInterpolatedDynamic = function (currentAbsoluteTimestamp) {\n        var continuousAbsoluteStartTimestamp = this.StartMultiExpression.AbsoluteTimestamp;\n        var continuousAbsoluteEndTimestamp;\n        if (this.EndMultiExpression !== undefined) {\n            continuousAbsoluteEndTimestamp = this.EndMultiExpression.AbsoluteTimestamp;\n        }\n        else {\n            continuousAbsoluteEndTimestamp = fraction_1.Fraction.plus(this.startMultiExpression.SourceMeasureParent.AbsoluteTimestamp, this.startMultiExpression.SourceMeasureParent.Duration);\n        }\n        if (currentAbsoluteTimestamp.lt(continuousAbsoluteStartTimestamp)) {\n            return -1;\n        }\n        if (currentAbsoluteTimestamp.lt(continuousAbsoluteEndTimestamp)) {\n            return -2;\n        }\n        var interpolationRatio = fraction_1.Fraction.minus(currentAbsoluteTimestamp, continuousAbsoluteStartTimestamp).RealValue\n            / fraction_1.Fraction.minus(continuousAbsoluteEndTimestamp, continuousAbsoluteStartTimestamp).RealValue;\n        var interpolatedVolume = Math.max(0.0, Math.min(99.9, this.startVolume + (this.endVolume - this.startVolume) * interpolationRatio));\n        return interpolatedVolume;\n    };\n    ContinuousDynamicExpression.prototype.isWedge = function () {\n        return this.label === undefined;\n    };\n    ContinuousDynamicExpression.prototype.setType = function () {\n        if (ContinuousDynamicExpression.isStringInStringList(ContinuousDynamicExpression.listContinuousDynamicIncreasing, this.label)) {\n            this.dynamicType = ContDynamicEnum.crescendo;\n        }\n        else if (ContinuousDynamicExpression.isStringInStringList(ContinuousDynamicExpression.listContinuousDynamicDecreasing, this.label)) {\n            this.dynamicType = ContDynamicEnum.diminuendo;\n        }\n    };\n    ContinuousDynamicExpression.listContinuousDynamicIncreasing = [\"crescendo\", \"cresc\", \"cresc.\", \"cres.\"];\n    ContinuousDynamicExpression.listContinuousDynamicDecreasing = [\"decrescendo\", \"decresc\", \"decr.\", \"diminuendo\", \"dim.\", \"dim\"];\n    return ContinuousDynamicExpression;\n}(abstractExpression_1.AbstractExpression));\nexports.ContinuousDynamicExpression = ContinuousDynamicExpression;\n(function (ContDynamicEnum) {\n    ContDynamicEnum[ContDynamicEnum[\"crescendo\"] = 0] = \"crescendo\";\n    ContDynamicEnum[ContDynamicEnum[\"diminuendo\"] = 1] = \"diminuendo\";\n})(exports.ContDynamicEnum || (exports.ContDynamicEnum = {}));\nvar ContDynamicEnum = exports.ContDynamicEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/ContinuousExpressions/continuousDynamicExpression.js\n ** module id = 68\n ** module chunks = 0\n **/","\"use strict\";\nvar AbstractExpression = (function () {\n    function AbstractExpression() {\n    }\n    //constructor() {\n    //\n    //}\n    AbstractExpression.isStringInStringList = function (stringList, inputString) {\n        for (var idx = 0, len = stringList.length; idx < len; ++idx) {\n            var s = stringList[idx];\n            if (inputString.toLowerCase() === s.toLowerCase().trim()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return AbstractExpression;\n}());\nexports.AbstractExpression = AbstractExpression;\n(function (PlacementEnum) {\n    PlacementEnum[PlacementEnum[\"Above\"] = 0] = \"Above\";\n    PlacementEnum[PlacementEnum[\"Below\"] = 1] = \"Below\";\n    PlacementEnum[PlacementEnum[\"NotYetDefined\"] = 2] = \"NotYetDefined\";\n})(exports.PlacementEnum || (exports.PlacementEnum = {}));\nvar PlacementEnum = exports.PlacementEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/abstractExpression.js\n ** module id = 69\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar abstractExpression_1 = require(\"./abstractExpression\");\nvar dynamicExpressionSymbolEnum_1 = require(\"./dynamicExpressionSymbolEnum\");\n//import {ArgumentOutOfRangeException} from \"../../Exceptions\";\nvar Exceptions_1 = require(\"../../Exceptions\");\nvar logging_1 = require(\"../../../Common/logging\");\nvar InstantaniousDynamicExpression = (function (_super) {\n    __extends(InstantaniousDynamicExpression, _super);\n    function InstantaniousDynamicExpression(dynamicExpression, soundDynamics, placement, staffNumber) {\n        _super.call(this);\n        this.dynamicEnum = DynamicEnum[dynamicExpression.toLowerCase()];\n        this.soundDynamic = soundDynamics;\n        this.placement = placement;\n        this.staffNumber = staffNumber;\n    }\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"ParentMultiExpression\", {\n        get: function () {\n            return this.multiExpression;\n        },\n        set: function (value) {\n            this.multiExpression = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"DynEnum\", {\n        get: function () {\n            return this.dynamicEnum;\n        },\n        set: function (value) {\n            this.dynamicEnum = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"SoundDynamic\", {\n        get: function () {\n            return this.soundDynamic;\n        },\n        set: function (value) {\n            this.soundDynamic = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"Placement\", {\n        get: function () {\n            return this.placement;\n        },\n        set: function (value) {\n            this.placement = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"StaffNumber\", {\n        get: function () {\n            return this.staffNumber;\n        },\n        set: function (value) {\n            this.staffNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"Length\", {\n        get: function () {\n            if (Math.abs(this.length) < 0.0001) {\n                this.length = this.calculateLength();\n            }\n            return this.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstantaniousDynamicExpression.prototype, \"MidiVolume\", {\n        get: function () {\n            return InstantaniousDynamicExpression.dynamicToRelativeVolumeDict[this.dynamicEnum] * 127;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    InstantaniousDynamicExpression.isInputStringInstantaniousDynamic = function (inputString) {\n        if (inputString === undefined) {\n            return false;\n        }\n        return InstantaniousDynamicExpression.isStringInStringList(InstantaniousDynamicExpression.listInstantaniousDynamics, inputString);\n    };\n    //public getInstantaniousDynamicSymbol(expressionSymbolEnum:DynamicExpressionSymbolEnum): FontInfo.MusicFontSymbol {\n    //    switch (expressionSymbolEnum) {\n    //        case DynamicExpressionSymbolEnum.p:\n    //            return FontInfo.MusicFontSymbol.P;\n    //        case DynamicExpressionSymbolEnum.f:\n    //            return FontInfo.MusicFontSymbol.F;\n    //        case DynamicExpressionSymbolEnum.s:\n    //            return FontInfo.MusicFontSymbol.S;\n    //        case DynamicExpressionSymbolEnum.z:\n    //            return FontInfo.MusicFontSymbol.Z;\n    //        case DynamicExpressionSymbolEnum.m:\n    //            return FontInfo.MusicFontSymbol.M;\n    //        case DynamicExpressionSymbolEnum.r:\n    //            return FontInfo.MusicFontSymbol.R;\n    //        default:\n    //            throw new ArgumentOutOfRangeException(\"expressionSymbolEnum\");\n    //    }\n    //}\n    InstantaniousDynamicExpression.prototype.getDynamicExpressionSymbol = function (c) {\n        switch (c) {\n            case \"p\":\n                return dynamicExpressionSymbolEnum_1.DynamicExpressionSymbolEnum.p;\n            case \"f\":\n                return dynamicExpressionSymbolEnum_1.DynamicExpressionSymbolEnum.f;\n            case \"s\":\n                return dynamicExpressionSymbolEnum_1.DynamicExpressionSymbolEnum.s;\n            case \"z\":\n                return dynamicExpressionSymbolEnum_1.DynamicExpressionSymbolEnum.z;\n            case \"m\":\n                return dynamicExpressionSymbolEnum_1.DynamicExpressionSymbolEnum.m;\n            case \"r\":\n                return dynamicExpressionSymbolEnum_1.DynamicExpressionSymbolEnum.r;\n            default:\n                throw new Exceptions_1.InvalidEnumArgumentException(\"unknown DynamicExpressionSymbolEnum: \" + c);\n        }\n    };\n    InstantaniousDynamicExpression.prototype.calculateLength = function () {\n        //let length: number = 0.0;\n        //let dynamic: string = DynamicEnum[this.dynamicEnum];\n        //for (let idx: number = 0, len: number = dynamic.length; idx < len; ++idx) {\n        //    let c: string = dynamic[idx];\n        //    let dynamicExpressionSymbol: DynamicExpressionSymbolEnum = this.getDynamicExpressionSymbol(c);\n        //    let symbol: FontInfo.MusicFontSymbol = this.getInstantaniousDynamicSymbol(dynamicExpressionSymbol);\n        //    length += FontInfo.Info.getBoundingBox(symbol).Width;\n        //}\n        //return length;\n        logging_1.Logging.debug(\"[Andrea] instantaniousDynamicExpression: not implemented: calculateLength!\");\n        return 0.0;\n    };\n    InstantaniousDynamicExpression.dynamicToRelativeVolumeDict = {\n        \"ffffff\": (127.0 / 127.0),\n        \"fffff\": (126.0 / 127.0),\n        \"ffff\": 125.0 / 127.0,\n        \"fff\": 124.0 / 127.0,\n        \"ff\": 108.0 / 127.0,\n        \"f\": 92.0 / 127.0,\n        \"mf\": 76.0 / 127.0,\n        \"mp\": 60.0 / 127.0,\n        \"p\": 44.0 / 127.0,\n        \"pp\": 28.0 / 127.0,\n        \"ppp\": 12.0 / 127.0,\n        \"pppp\": 10.0 / 127.0,\n        \"ppppp\": 8.0 / 127.0,\n        \"pppppp\": 6.0 / 127.0,\n        \"sf\": 0.5,\n        \"sfp\": 0.5,\n        \"sfpp\": 0.5,\n        \"fp\": 0.5,\n        \"rf\": 0.5,\n        \"rfz\": 0.5,\n        \"sfz\": 0.5,\n        \"sffz\": 0.5,\n        \"fz\": 0.5,\n    };\n    //private static weight: number;\n    InstantaniousDynamicExpression.listInstantaniousDynamics = [\n        \"pppppp\", \"ppppp\", \"pppp\", \"ppp\", \"pp\", \"p\",\n        \"ffffff\", \"fffff\", \"ffff\", \"fff\", \"ff\", \"f\",\n        \"mf\", \"mp\", \"sf\", \"sp\", \"spp\", \"fp\", \"rf\", \"rfz\", \"sfz\", \"sffz\", \"fz\",\n    ];\n    return InstantaniousDynamicExpression;\n}(abstractExpression_1.AbstractExpression));\nexports.InstantaniousDynamicExpression = InstantaniousDynamicExpression;\n(function (DynamicEnum) {\n    DynamicEnum[DynamicEnum[\"pppppp\"] = 0] = \"pppppp\";\n    DynamicEnum[DynamicEnum[\"ppppp\"] = 1] = \"ppppp\";\n    DynamicEnum[DynamicEnum[\"pppp\"] = 2] = \"pppp\";\n    DynamicEnum[DynamicEnum[\"ppp\"] = 3] = \"ppp\";\n    DynamicEnum[DynamicEnum[\"pp\"] = 4] = \"pp\";\n    DynamicEnum[DynamicEnum[\"p\"] = 5] = \"p\";\n    DynamicEnum[DynamicEnum[\"mp\"] = 6] = \"mp\";\n    DynamicEnum[DynamicEnum[\"mf\"] = 7] = \"mf\";\n    DynamicEnum[DynamicEnum[\"f\"] = 8] = \"f\";\n    DynamicEnum[DynamicEnum[\"ff\"] = 9] = \"ff\";\n    DynamicEnum[DynamicEnum[\"fff\"] = 10] = \"fff\";\n    DynamicEnum[DynamicEnum[\"ffff\"] = 11] = \"ffff\";\n    DynamicEnum[DynamicEnum[\"fffff\"] = 12] = \"fffff\";\n    DynamicEnum[DynamicEnum[\"ffffff\"] = 13] = \"ffffff\";\n    DynamicEnum[DynamicEnum[\"sf\"] = 14] = \"sf\";\n    DynamicEnum[DynamicEnum[\"sfp\"] = 15] = \"sfp\";\n    DynamicEnum[DynamicEnum[\"sfpp\"] = 16] = \"sfpp\";\n    DynamicEnum[DynamicEnum[\"fp\"] = 17] = \"fp\";\n    DynamicEnum[DynamicEnum[\"rf\"] = 18] = \"rf\";\n    DynamicEnum[DynamicEnum[\"rfz\"] = 19] = \"rfz\";\n    DynamicEnum[DynamicEnum[\"sfz\"] = 20] = \"sfz\";\n    DynamicEnum[DynamicEnum[\"sffz\"] = 21] = \"sffz\";\n    DynamicEnum[DynamicEnum[\"fz\"] = 22] = \"fz\";\n    DynamicEnum[DynamicEnum[\"other\"] = 23] = \"other\";\n})(exports.DynamicEnum || (exports.DynamicEnum = {}));\nvar DynamicEnum = exports.DynamicEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/instantaniousDynamicExpression.js\n ** module id = 70\n ** module chunks = 0\n **/","\"use strict\";\n(function (DynamicExpressionSymbolEnum) {\n    DynamicExpressionSymbolEnum[DynamicExpressionSymbolEnum[\"p\"] = 0] = \"p\";\n    DynamicExpressionSymbolEnum[DynamicExpressionSymbolEnum[\"f\"] = 1] = \"f\";\n    DynamicExpressionSymbolEnum[DynamicExpressionSymbolEnum[\"s\"] = 2] = \"s\";\n    DynamicExpressionSymbolEnum[DynamicExpressionSymbolEnum[\"z\"] = 3] = \"z\";\n    DynamicExpressionSymbolEnum[DynamicExpressionSymbolEnum[\"m\"] = 4] = \"m\";\n    DynamicExpressionSymbolEnum[DynamicExpressionSymbolEnum[\"r\"] = 5] = \"r\";\n})(exports.DynamicExpressionSymbolEnum || (exports.DynamicExpressionSymbolEnum = {}));\nvar DynamicExpressionSymbolEnum = exports.DynamicExpressionSymbolEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Expressions/dynamicExpressionSymbolEnum.js\n ** module id = 71\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SourceMusicPart_1 = require(\"./SourceMusicPart\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar PartListEntry_1 = require(\"./PartListEntry\");\nvar Repetition = (function (_super) {\n    __extends(Repetition, _super);\n    function Repetition(musicSheet, virtualOverallRepetition) {\n        _super.call(this, musicSheet);\n        this.backwardJumpInstructions = [];\n        this.endingParts = [];\n        this.endingIndexDict = {};\n        this.userNumberOfRepetitions = 0;\n        this.visibles = [];\n        this.fromWords = false;\n        this.repetitonIterationOrder = [];\n        this.numberOfEndings = 1;\n        this.musicSheet2 = musicSheet;\n        this.virtualOverallRepetition = virtualOverallRepetition;\n    }\n    Object.defineProperty(Repetition.prototype, \"BackwardJumpInstructions\", {\n        get: function () {\n            return this.backwardJumpInstructions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"EndingIndexDict\", {\n        get: function () {\n            return this.endingIndexDict;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"EndingParts\", {\n        get: function () {\n            return this.endingParts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"Visibles\", {\n        get: function () {\n            return this.visibles;\n        },\n        set: function (value) {\n            this.visibles = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"DefaultNumberOfRepetitions\", {\n        get: function () {\n            var defaultNumber = 2;\n            if (this.virtualOverallRepetition) {\n                defaultNumber = 1;\n            }\n            return Math.max(defaultNumber, Object.keys(this.endingIndexDict).length, this.checkRepetitionForMultipleLyricVerses());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"UserNumberOfRepetitions\", {\n        get: function () {\n            return this.userNumberOfRepetitions;\n        },\n        set: function (value) {\n            this.userNumberOfRepetitions = value;\n            this.repetitonIterationOrder = [];\n            var endingsDiff = this.userNumberOfRepetitions - this.NumberOfEndings;\n            for (var i = 1; i <= this.userNumberOfRepetitions; i++) {\n                if (i <= endingsDiff) {\n                    this.repetitonIterationOrder.push(1);\n                }\n                else {\n                    this.repetitonIterationOrder.push(i - endingsDiff);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Repetition.prototype.getForwardJumpTargetForIteration = function (iteration) {\n        var endingIndex = this.repetitonIterationOrder[iteration - 1];\n        if (this.endingIndexDict[endingIndex] !== undefined) {\n            return this.endingIndexDict[endingIndex].part.StartIndex;\n        }\n        return -1;\n    };\n    Repetition.prototype.getBackwardJumpTarget = function () {\n        return this.startMarker.measureIndex;\n    };\n    Repetition.prototype.SetEndingStartIndex = function (endingNumbers, startIndex) {\n        var part = new RepetitionEndingPart(new SourceMusicPart_1.SourceMusicPart(this.musicSheet2, startIndex, startIndex));\n        this.endingParts.push(part);\n        for (var _i = 0, endingNumbers_1 = endingNumbers; _i < endingNumbers_1.length; _i++) {\n            var endingNumber = endingNumbers_1[_i];\n            try {\n                this.endingIndexDict[endingNumber] = part;\n                part.endingIndices.push(endingNumber);\n                if (this.numberOfEndings < endingNumber) {\n                    this.numberOfEndings = endingNumber;\n                }\n            }\n            catch (err) {\n                console.log(\"Repetition: Exception.\"); // FIXME\n            }\n        }\n    };\n    //public SetEndingStartIndex(endingNumber: number, startIndex: number): void {\n    //    let part: RepetitionEndingPart = new RepetitionEndingPart(new SourceMusicPart(this.musicSheet2, startIndex, startIndex));\n    //    this.endingParts.push(part);\n    //    this.endingIndexDict[endingNumber] = part;\n    //    part.endingIndices.push(endingNumber);\n    //    if (this.numberOfEndings < endingNumber) {\n    //        this.numberOfEndings = endingNumber;\n    //    }\n    //}\n    Repetition.prototype.setEndingEndIndex = function (endingNumber, endIndex) {\n        if (this.endingIndexDict[endingNumber] !== undefined) {\n            this.endingIndexDict[endingNumber].part.setEndIndex(endIndex);\n        }\n    };\n    Object.defineProperty(Repetition.prototype, \"NumberOfEndings\", {\n        get: function () {\n            return this.numberOfEndings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"FromWords\", {\n        get: function () {\n            return this.fromWords;\n        },\n        set: function (value) {\n            this.fromWords = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"AbsoluteTimestamp\", {\n        get: function () {\n            return fraction_1.Fraction.createFromFraction(this.musicSheet2.SourceMeasures[this.startMarker.measureIndex].AbsoluteTimestamp);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"StartIndex\", {\n        get: function () {\n            return this.startMarker.measureIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"EndIndex\", {\n        get: function () {\n            if (this.BackwardJumpInstructions.length === 0) {\n                return this.StartIndex;\n            }\n            var result = this.backwardJumpInstructions[this.backwardJumpInstructions.length - 1].measureIndex;\n            if (this.endingIndexDict[this.NumberOfEndings] !== undefined) {\n                result = Math.max(this.endingIndexDict[this.NumberOfEndings].part.EndIndex, result);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Repetition.prototype.checkRepetitionForMultipleLyricVerses = function () {\n        var lyricVerses = 0;\n        var start = this.StartIndex;\n        var end = this.EndIndex;\n        for (var measureIndex = start; measureIndex <= end; measureIndex++) {\n            var sourceMeasure = this.musicSheet2.SourceMeasures[measureIndex];\n            for (var i = 0; i < sourceMeasure.CompleteNumberOfStaves; i++) {\n                for (var _i = 0, _a = sourceMeasure.VerticalSourceStaffEntryContainers[i].StaffEntries; _i < _a.length; _i++) {\n                    var sourceStaffEntry = _a[_i];\n                    if (sourceStaffEntry !== undefined) {\n                        var verses = 0;\n                        for (var _b = 0, _c = sourceStaffEntry.VoiceEntries; _b < _c.length; _b++) {\n                            var voiceEntry = _c[_b];\n                            verses += Object.keys(voiceEntry.LyricsEntries).length;\n                        }\n                        lyricVerses = Math.max(lyricVerses, verses);\n                    }\n                }\n            }\n        }\n        return lyricVerses;\n    };\n    Object.defineProperty(Repetition.prototype, \"FirstSourceMeasureNumber\", {\n        get: function () {\n            return this.getFirstSourceMeasure().MeasureNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Repetition.prototype, \"LastSourceMeasureNumber\", {\n        get: function () {\n            return this.getLastSourceMeasure().MeasureNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repetition;\n}(PartListEntry_1.PartListEntry));\nexports.Repetition = Repetition;\nvar RepetitionEndingPart = (function () {\n    function RepetitionEndingPart(endingPart) {\n        this.endingIndices = [];\n        this.part = endingPart;\n    }\n    RepetitionEndingPart.prototype.ToString = function () {\n        return this.endingIndices.join(\", \");\n    };\n    return RepetitionEndingPart;\n}());\nexports.RepetitionEndingPart = RepetitionEndingPart;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSource/Repetition.js\n ** module id = 72\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PartListEntry_1 = require(\"./PartListEntry\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar SourceMusicPart = (function (_super) {\n    __extends(SourceMusicPart, _super);\n    function SourceMusicPart(musicSheet, startIndex, endIndex) {\n        _super.call(this, musicSheet);\n        this.musicSheet = musicSheet;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n    }\n    Object.defineProperty(SourceMusicPart.prototype, \"MeasuresCount\", {\n        //private startIndex: number;\n        //private endIndex: number;\n        get: function () {\n            return this.endIndex - this.startIndex + 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMusicPart.prototype, \"StartIndex\", {\n        get: function () {\n            return this.startIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMusicPart.prototype, \"EndIndex\", {\n        get: function () {\n            return this.endIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMusicPart.prototype, \"ParentRepetition\", {\n        get: function () {\n            return this.parentRepetition;\n        },\n        set: function (value) {\n            this.parentRepetition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMusicPart.prototype, \"AbsoluteTimestamp\", {\n        get: function () {\n            return fraction_1.Fraction.createFromFraction(this.musicSheet.SourceMeasures[this.startIndex].AbsoluteTimestamp);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SourceMusicPart.prototype.setStartIndex = function (startIndex) {\n        this.startIndex = startIndex;\n    };\n    SourceMusicPart.prototype.setEndIndex = function (index) {\n        this.endIndex = index;\n    };\n    return SourceMusicPart;\n}(PartListEntry_1.PartListEntry));\nexports.SourceMusicPart = SourceMusicPart;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSource/SourceMusicPart.js\n ** module id = 73\n ** module chunks = 0\n **/","\"use strict\";\nvar PartListEntry = (function () {\n    function PartListEntry(musicSheet) {\n        this.enrolledTimestamps = [];\n        this.visible = true;\n        this.musicSheet = musicSheet;\n    }\n    Object.defineProperty(PartListEntry.prototype, \"Visible\", {\n        get: function () {\n            return this.visible;\n        },\n        set: function (value) {\n            this.visible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PartListEntry.prototype.getFirstSourceMeasure = function () {\n        return this.musicSheet.SourceMeasures[this.startIndex];\n    };\n    PartListEntry.prototype.getLastSourceMeasure = function () {\n        return this.musicSheet.SourceMeasures[this.endIndex];\n    };\n    return PartListEntry;\n}());\nexports.PartListEntry = PartListEntry;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/MusicSource/PartListEntry.js\n ** module id = 74\n ** module chunks = 0\n **/","// skeleton by Andrea\n\"use strict\";\nvar MusicSheetErrors = (function () {\n    function MusicSheetErrors() {\n        this.measureErrors = {};\n        this.errors = [];\n        this.tempErrors = [];\n    }\n    MusicSheetErrors.prototype.finalizeMeasure = function (measureNumber) {\n        var list = this.measureErrors[measureNumber];\n        if (list === undefined) {\n            list = [];\n        }\n        this.measureErrors[measureNumber] = list.concat(this.tempErrors);\n        this.tempErrors = [];\n    };\n    MusicSheetErrors.prototype.pushMeasureError = function (errorMsg) {\n        this.tempErrors.push(errorMsg);\n    };\n    MusicSheetErrors.prototype.push = function (errorMsg) {\n        this.errors.push(errorMsg);\n    };\n    return MusicSheetErrors;\n}());\nexports.MusicSheetErrors = MusicSheetErrors;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/Common/DataObjects/MusicSheetErrors.js\n ** module id = 75\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar VerticalSourceStaffEntryContainer_1 = require(\"./VerticalSourceStaffEntryContainer\");\nvar SourceStaffEntry_1 = require(\"./SourceStaffEntry\");\nvar VoiceEntry_1 = require(\"./VoiceEntry\");\nvar KeyInstruction_1 = require(\"./Instructions/KeyInstruction\");\nvar SourceMeasure = (function () {\n    function SourceMeasure(completeNumberOfStaves) {\n        this.staffLinkedExpressions = [];\n        this.tempoExpressions = [];\n        this.verticalSourceStaffEntryContainers = [];\n        this.staffMeasureErrors = [];\n        this.firstRepetitionInstructions = [];\n        this.lastRepetitionInstructions = [];\n        this.completeNumberOfStaves = completeNumberOfStaves;\n        this.implicitMeasure = false;\n        this.breakSystemAfter = false;\n        this.endsPiece = false;\n        this.firstInstructionsStaffEntries = new Array(completeNumberOfStaves);\n        this.lastInstructionsStaffEntries = new Array(completeNumberOfStaves);\n        for (var i = 0; i < completeNumberOfStaves; i++) {\n            this.staffMeasureErrors.push(false);\n            this.staffLinkedExpressions.push([]);\n        }\n    }\n    Object.defineProperty(SourceMeasure.prototype, \"MeasureNumber\", {\n        get: function () {\n            return this.measureNumber;\n        },\n        set: function (value) {\n            this.measureNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"AbsoluteTimestamp\", {\n        get: function () {\n            return this.absoluteTimestamp;\n        },\n        set: function (value) {\n            this.absoluteTimestamp = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"CompleteNumberOfStaves\", {\n        get: function () {\n            return this.completeNumberOfStaves;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"Duration\", {\n        get: function () {\n            return this.duration;\n        },\n        set: function (value) {\n            this.duration = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"ImplicitMeasure\", {\n        get: function () {\n            return this.implicitMeasure;\n        },\n        set: function (value) {\n            this.implicitMeasure = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"BreakSystemAfter\", {\n        get: function () {\n            return this.breakSystemAfter;\n        },\n        set: function (value) {\n            this.breakSystemAfter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"StaffLinkedExpressions\", {\n        get: function () {\n            return this.staffLinkedExpressions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"TempoExpressions\", {\n        get: function () {\n            return this.tempoExpressions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"VerticalSourceStaffEntryContainers\", {\n        get: function () {\n            return this.verticalSourceStaffEntryContainers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"FirstInstructionsStaffEntries\", {\n        get: function () {\n            return this.firstInstructionsStaffEntries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"LastInstructionsStaffEntries\", {\n        get: function () {\n            return this.lastInstructionsStaffEntries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"FirstRepetitionInstructions\", {\n        get: function () {\n            return this.firstRepetitionInstructions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceMeasure.prototype, \"LastRepetitionInstructions\", {\n        get: function () {\n            return this.lastRepetitionInstructions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SourceMeasure.prototype.getErrorInMeasure = function (staffIndex) {\n        return this.staffMeasureErrors[staffIndex];\n    };\n    SourceMeasure.prototype.setErrorInStaffMeasure = function (staffIndex, hasError) {\n        this.staffMeasureErrors[staffIndex] = hasError;\n    };\n    SourceMeasure.prototype.getNextMeasure = function (measures) {\n        return measures[this.measureListIndex + 1];\n    };\n    SourceMeasure.prototype.getPreviousMeasure = function (measures) {\n        if (this.measureListIndex > 1) {\n            return measures[this.measureListIndex - 1];\n        }\n        return undefined;\n    };\n    SourceMeasure.prototype.findOrCreateStaffEntry = function (inMeasureTimestamp, inSourceMeasureStaffIndex, staff) {\n        // FIXME Andrea: debug & Test\n        var staffEntry = undefined;\n        // Find:\n        var existingVerticalSourceStaffEntryContainer;\n        for (var _i = 0, _a = this.verticalSourceStaffEntryContainers; _i < _a.length; _i++) {\n            var container = _a[_i];\n            if (container.Timestamp.Equals(inMeasureTimestamp)) {\n                existingVerticalSourceStaffEntryContainer = container;\n                break;\n            }\n        }\n        if (existingVerticalSourceStaffEntryContainer !== undefined) {\n            if (existingVerticalSourceStaffEntryContainer.StaffEntries[inSourceMeasureStaffIndex] !== undefined) {\n                staffEntry = existingVerticalSourceStaffEntryContainer.StaffEntries[inSourceMeasureStaffIndex];\n            }\n            else {\n                staffEntry = new SourceStaffEntry_1.SourceStaffEntry(existingVerticalSourceStaffEntryContainer, staff);\n                existingVerticalSourceStaffEntryContainer.StaffEntries[inSourceMeasureStaffIndex] = staffEntry;\n            }\n            return { createdNewContainer: false, staffEntry: staffEntry };\n        }\n        var last = this.verticalSourceStaffEntryContainers[this.verticalSourceStaffEntryContainers.length - 1];\n        if (this.verticalSourceStaffEntryContainers.length === 0 || last.Timestamp.lt(inMeasureTimestamp)) {\n            var container = new VerticalSourceStaffEntryContainer_1.VerticalSourceStaffEntryContainer(this, inMeasureTimestamp.clone(), this.completeNumberOfStaves);\n            this.verticalSourceStaffEntryContainers.push(container);\n            staffEntry = new SourceStaffEntry_1.SourceStaffEntry(container, staff);\n            container.StaffEntries[inSourceMeasureStaffIndex] = staffEntry;\n        }\n        else {\n            for (var i = this.verticalSourceStaffEntryContainers.length - 1; i >= 0; i--) {\n                if (this.verticalSourceStaffEntryContainers[i].Timestamp.lt(inMeasureTimestamp)) {\n                    var container = new VerticalSourceStaffEntryContainer_1.VerticalSourceStaffEntryContainer(this, inMeasureTimestamp.clone(), this.completeNumberOfStaves);\n                    this.verticalSourceStaffEntryContainers.splice(i + 1, 0, container);\n                    staffEntry = new SourceStaffEntry_1.SourceStaffEntry(container, staff);\n                    container.StaffEntries[inSourceMeasureStaffIndex] = staffEntry;\n                    break;\n                }\n                if (i === 0) {\n                    var container = new VerticalSourceStaffEntryContainer_1.VerticalSourceStaffEntryContainer(this, inMeasureTimestamp.clone(), this.completeNumberOfStaves);\n                    this.verticalSourceStaffEntryContainers.splice(i, 0, container);\n                    staffEntry = new SourceStaffEntry_1.SourceStaffEntry(container, staff);\n                    container.StaffEntries[inSourceMeasureStaffIndex] = staffEntry;\n                    break;\n                }\n            }\n        }\n        //Logging.debug(\"created new container: \", staffEntry, this.verticalSourceStaffEntryContainers);\n        return { createdNewContainer: true, staffEntry: staffEntry };\n    };\n    SourceMeasure.prototype.findOrCreateVoiceEntry = function (sse, voice) {\n        var ve = undefined;\n        var createdNewVoiceEntry = false;\n        for (var _i = 0, _a = sse.VoiceEntries; _i < _a.length; _i++) {\n            var voiceEntry = _a[_i];\n            if (voiceEntry.ParentVoice === voice) {\n                ve = voiceEntry;\n                break;\n            }\n        }\n        if (ve === undefined) {\n            ve = new VoiceEntry_1.VoiceEntry(sse.Timestamp, voice, sse);\n            sse.VoiceEntries.push(ve);\n            createdNewVoiceEntry = true;\n        }\n        return { createdVoiceEntry: createdNewVoiceEntry, voiceEntry: ve };\n    };\n    SourceMeasure.prototype.getPreviousSourceStaffEntryFromIndex = function (verticalIndex, horizontalIndex) {\n        for (var i = horizontalIndex - 1; i >= 0; i--) {\n            if (this.verticalSourceStaffEntryContainers[i][verticalIndex] !== undefined) {\n                return this.verticalSourceStaffEntryContainers[i][verticalIndex];\n            }\n        }\n        return undefined;\n    };\n    SourceMeasure.prototype.getVerticalContainerIndexByTimestamp = function (musicTimestamp) {\n        for (var idx = 0, len = this.VerticalSourceStaffEntryContainers.length; idx < len; ++idx) {\n            if (this.VerticalSourceStaffEntryContainers[idx].Timestamp.Equals(musicTimestamp)) {\n                return idx; // this.verticalSourceStaffEntryContainers.indexOf(verticalSourceStaffEntryContainer);\n            }\n        }\n        return -1;\n    };\n    SourceMeasure.prototype.getVerticalContainerByTimestamp = function (musicTimestamp) {\n        for (var idx = 0, len = this.VerticalSourceStaffEntryContainers.length; idx < len; ++idx) {\n            var verticalSourceStaffEntryContainer = this.VerticalSourceStaffEntryContainers[idx];\n            if (verticalSourceStaffEntryContainer.Timestamp.Equals(musicTimestamp)) {\n                return verticalSourceStaffEntryContainer;\n            }\n        }\n        return undefined;\n    };\n    SourceMeasure.prototype.checkForEmptyVerticalContainer = function (index) {\n        var undefinedCounter = 0;\n        for (var i = 0; i < this.completeNumberOfStaves; i++) {\n            if (this.verticalSourceStaffEntryContainers[index][i] === undefined) {\n                undefinedCounter++;\n            }\n        }\n        if (undefinedCounter === this.completeNumberOfStaves) {\n            this.verticalSourceStaffEntryContainers.splice(index, 1);\n        }\n    };\n    SourceMeasure.prototype.reverseCheck = function (musicSheet, maxInstDuration) {\n        var maxDuration = new fraction_1.Fraction(0, 1);\n        var instrumentsDurations = [];\n        for (var i = 0; i < musicSheet.Instruments.length; i++) {\n            var instrumentDuration = new fraction_1.Fraction(0, 1);\n            var inSourceMeasureInstrumentIndex = musicSheet.getGlobalStaffIndexOfFirstStaff(musicSheet.Instruments[i]);\n            for (var j = 0; j < musicSheet.Instruments[i].Staves.length; j++) {\n                var lastStaffEntry = this.getLastSourceStaffEntryForInstrument(inSourceMeasureInstrumentIndex + j);\n                if (lastStaffEntry !== undefined && !lastStaffEntry.hasTie()) {\n                    var verticalContainerIndex = this.verticalSourceStaffEntryContainers.indexOf(lastStaffEntry.VerticalContainerParent);\n                    for (var m = verticalContainerIndex - 1; m >= 0; m--) {\n                        var previousStaffEntry = this.verticalSourceStaffEntryContainers[m][inSourceMeasureInstrumentIndex + j];\n                        if (previousStaffEntry !== undefined && previousStaffEntry.hasTie()) {\n                            if (instrumentDuration.lt(fraction_1.Fraction.plus(previousStaffEntry.Timestamp, previousStaffEntry.calculateMaxNoteLength()))) {\n                                instrumentDuration = fraction_1.Fraction.plus(previousStaffEntry.Timestamp, previousStaffEntry.calculateMaxNoteLength());\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            instrumentsDurations.push(instrumentDuration);\n        }\n        for (var idx = 0, len = instrumentsDurations.length; idx < len; ++idx) {\n            var instrumentsDuration = instrumentsDurations[idx];\n            if (maxDuration.lt(instrumentsDuration)) {\n                maxDuration = instrumentsDuration;\n            }\n        }\n        return fraction_1.Fraction.max(maxDuration, maxInstDuration);\n    };\n    SourceMeasure.prototype.calculateInstrumentsDuration = function (musicSheet, instrumentMaxTieNoteFractions) {\n        var instrumentsDurations = [];\n        for (var i = 0; i < musicSheet.Instruments.length; i++) {\n            var instrumentDuration = new fraction_1.Fraction(0, 1);\n            var inSourceMeasureInstrumentIndex = musicSheet.getGlobalStaffIndexOfFirstStaff(musicSheet.Instruments[i]);\n            for (var j = 0; j < musicSheet.Instruments[i].Staves.length; j++) {\n                var lastStaffEntry = this.getLastSourceStaffEntryForInstrument(inSourceMeasureInstrumentIndex + j);\n                if (lastStaffEntry !== undefined && lastStaffEntry.Timestamp !== undefined) {\n                    if (instrumentDuration.lt(fraction_1.Fraction.plus(lastStaffEntry.Timestamp, lastStaffEntry.calculateMaxNoteLength()))) {\n                        instrumentDuration = fraction_1.Fraction.plus(lastStaffEntry.Timestamp, lastStaffEntry.calculateMaxNoteLength());\n                    }\n                }\n            }\n            if (instrumentDuration.lt(instrumentMaxTieNoteFractions[i])) {\n                instrumentDuration = instrumentMaxTieNoteFractions[i];\n            }\n            instrumentsDurations.push(instrumentDuration);\n        }\n        return instrumentsDurations;\n    };\n    SourceMeasure.prototype.getEntriesPerStaff = function (staffIndex) {\n        var sourceStaffEntries = [];\n        for (var _i = 0, _a = this.VerticalSourceStaffEntryContainers; _i < _a.length; _i++) {\n            var container = _a[_i];\n            var sse = container.StaffEntries[staffIndex];\n            if (sse !== undefined) {\n                sourceStaffEntries.push(sse);\n            }\n        }\n        return sourceStaffEntries;\n    };\n    SourceMeasure.prototype.hasBeginInstructions = function () {\n        for (var staffIndex = 0, len = this.FirstInstructionsStaffEntries.length; staffIndex < len; staffIndex++) {\n            var beginInstructionsStaffEntry = this.FirstInstructionsStaffEntries[staffIndex];\n            if (beginInstructionsStaffEntry !== undefined && beginInstructionsStaffEntry.Instructions.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceMeasure.prototype.beginsWithLineRepetition = function () {\n        for (var idx = 0, len = this.FirstRepetitionInstructions.length; idx < len; ++idx) {\n            var instr = this.FirstRepetitionInstructions[idx];\n            if (instr.parentRepetition !== undefined && instr === instr.parentRepetition.startMarker && !instr.parentRepetition.FromWords) {\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceMeasure.prototype.endsWithLineRepetition = function () {\n        for (var idx = 0, len = this.LastRepetitionInstructions.length; idx < len; ++idx) {\n            var instruction = this.LastRepetitionInstructions[idx];\n            var rep = instruction.parentRepetition;\n            if (rep === undefined) {\n                continue;\n            }\n            if (rep.FromWords) {\n                continue;\n            }\n            for (var idx2 = 0, len2 = rep.BackwardJumpInstructions.length; idx2 < len2; ++idx2) {\n                var backJumpInstruction = rep.BackwardJumpInstructions[idx2];\n                if (instruction === backJumpInstruction) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    SourceMeasure.prototype.beginsWithWordRepetition = function () {\n        for (var idx = 0, len = this.FirstRepetitionInstructions.length; idx < len; ++idx) {\n            var instruction = this.FirstRepetitionInstructions[idx];\n            if (instruction.parentRepetition !== undefined &&\n                instruction === instruction.parentRepetition.startMarker && instruction.parentRepetition.FromWords) {\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceMeasure.prototype.endsWithWordRepetition = function () {\n        for (var idx = 0, len = this.LastRepetitionInstructions.length; idx < len; ++idx) {\n            var instruction = this.LastRepetitionInstructions[idx];\n            var rep = instruction.parentRepetition;\n            if (rep === undefined) {\n                continue;\n            }\n            if (!rep.FromWords) {\n                continue;\n            }\n            for (var idx2 = 0, len2 = rep.BackwardJumpInstructions.length; idx2 < len2; ++idx2) {\n                var backJumpInstruction = rep.BackwardJumpInstructions[idx2];\n                if (instruction === backJumpInstruction) {\n                    return true;\n                }\n            }\n            if (instruction === rep.forwardJumpInstruction) {\n                return true;\n            }\n        }\n        return false;\n    };\n    SourceMeasure.prototype.getKeyInstruction = function (staffIndex) {\n        if (this.FirstInstructionsStaffEntries[staffIndex] !== undefined) {\n            var sourceStaffEntry = this.FirstInstructionsStaffEntries[staffIndex];\n            for (var idx = 0, len = sourceStaffEntry.Instructions.length; idx < len; ++idx) {\n                var abstractNotationInstruction = sourceStaffEntry.Instructions[idx];\n                if (abstractNotationInstruction instanceof KeyInstruction_1.KeyInstruction) {\n                    return abstractNotationInstruction;\n                }\n            }\n        }\n        return undefined;\n    };\n    SourceMeasure.prototype.getLastSourceStaffEntryForInstrument = function (instrumentIndex) {\n        for (var i = this.verticalSourceStaffEntryContainers.length - 1; i >= 0; i--) {\n            if (this.verticalSourceStaffEntryContainers[i][instrumentIndex] !== undefined) {\n                return this.verticalSourceStaffEntryContainers[i][instrumentIndex];\n            }\n        }\n        return undefined;\n    };\n    return SourceMeasure;\n}());\nexports.SourceMeasure = SourceMeasure;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/SourceMeasure.js\n ** module id = 76\n ** module chunks = 0\n **/","\"use strict\";\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar VerticalSourceStaffEntryContainer = (function () {\n    function VerticalSourceStaffEntryContainer(parentMeasure, timestamp, size) {\n        this.staffEntries = [];\n        this.comments = [];\n        this.timestamp = timestamp;\n        this.size = size;\n        this.staffEntries = new Array(size);\n        this.parentMeasure = parentMeasure;\n    }\n    VerticalSourceStaffEntryContainer.prototype.$get$ = function (index) {\n        return this.staffEntries[index];\n    };\n    VerticalSourceStaffEntryContainer.prototype.$set$ = function (index, value) {\n        this.staffEntries[index] = value;\n    };\n    Object.defineProperty(VerticalSourceStaffEntryContainer.prototype, \"Timestamp\", {\n        get: function () {\n            return this.timestamp;\n        },\n        set: function (value) {\n            this.timestamp = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VerticalSourceStaffEntryContainer.prototype, \"StaffEntries\", {\n        get: function () {\n            return this.staffEntries;\n        },\n        set: function (value) {\n            this.staffEntries = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VerticalSourceStaffEntryContainer.prototype, \"Comments\", {\n        get: function () {\n            return this.comments;\n        },\n        set: function (value) {\n            this.comments = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VerticalSourceStaffEntryContainer.prototype, \"ParentMeasure\", {\n        get: function () {\n            return this.parentMeasure;\n        },\n        set: function (value) {\n            this.parentMeasure = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VerticalSourceStaffEntryContainer.prototype.getAbsoluteTimestamp = function () {\n        return fraction_1.Fraction.plus(this.timestamp, this.parentMeasure.AbsoluteTimestamp);\n    };\n    return VerticalSourceStaffEntryContainer;\n}());\nexports.VerticalSourceStaffEntryContainer = VerticalSourceStaffEntryContainer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/VerticalSourceStaffEntryContainer.js\n ** module id = 77\n ** module chunks = 0\n **/","\"use strict\";\nvar VoiceGenerator_1 = require(\"./VoiceGenerator\");\nvar SourceStaffEntry_1 = require(\"../VoiceData/SourceStaffEntry\");\nvar ClefInstruction_1 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar KeyInstruction_1 = require(\"../VoiceData/Instructions/KeyInstruction\");\nvar RhythmInstruction_1 = require(\"../VoiceData/Instructions/RhythmInstruction\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar ITextTranslation_1 = require(\"../Interfaces/ITextTranslation\");\nvar Exceptions_1 = require(\"../Exceptions\");\nvar ClefInstruction_2 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar RhythmInstruction_2 = require(\"../VoiceData/Instructions/RhythmInstruction\");\nvar KeyInstruction_2 = require(\"../VoiceData/Instructions/KeyInstruction\");\nvar logging_1 = require(\"../../Common/logging\");\nvar ClefInstruction_3 = require(\"../VoiceData/Instructions/ClefInstruction\");\nvar InstrumentReader = (function () {\n    function InstrumentReader(repetitionInstructionReader, xmlMeasureList, instrument) {\n        this.voiceGeneratorsDict = {};\n        this.staffMainVoiceGeneratorDict = {};\n        this.divisions = 0;\n        this.currentXmlMeasureIndex = 0;\n        this.activeKeyHasBeenInitialized = false;\n        this.abstractInstructions = [];\n        // (*) this.repetitionInstructionReader = repetitionInstructionReader;\n        this.xmlMeasureList = xmlMeasureList;\n        this.musicSheet = instrument.GetMusicSheet;\n        this.instrument = instrument;\n        this.activeClefs = new Array(instrument.Staves.length);\n        this.activeClefsHaveBeenInitialized = new Array(instrument.Staves.length);\n        for (var i = 0; i < instrument.Staves.length; i++) {\n            this.activeClefsHaveBeenInitialized[i] = false;\n        }\n        // FIXME createExpressionGenerators(instrument.Staves.length);\n        // (*) this.slurReader = MusicSymbolModuleFactory.createSlurReader(this.musicSheet);\n    }\n    Object.defineProperty(InstrumentReader.prototype, \"ActiveKey\", {\n        get: function () {\n            return this.activeKey;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstrumentReader.prototype, \"MaxTieNoteFraction\", {\n        get: function () {\n            return this.maxTieNoteFraction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstrumentReader.prototype, \"ActiveRhythm\", {\n        get: function () {\n            return this.activeRhythm;\n        },\n        set: function (value) {\n            this.activeRhythm = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    InstrumentReader.prototype.readNextXmlMeasure = function (currentMeasure, measureStartAbsoluteTimestamp, guitarPro) {\n        if (this.currentXmlMeasureIndex >= this.xmlMeasureList.length) {\n            return false;\n        }\n        this.currentMeasure = currentMeasure;\n        this.inSourceMeasureInstrumentIndex = this.musicSheet.getGlobalStaffIndexOfFirstStaff(this.instrument);\n        // (*) if (this.repetitionInstructionReader !== undefined) {\n        //  this.repetitionInstructionReader.prepareReadingMeasure(currentMeasure, this.currentXmlMeasureIndex);\n        //}\n        var currentFraction = new fraction_1.Fraction(0, 1);\n        var previousFraction = new fraction_1.Fraction(0, 1);\n        var divisionsException = false;\n        this.maxTieNoteFraction = new fraction_1.Fraction(0, 1);\n        var lastNoteWasGrace = false;\n        try {\n            var xmlMeasureListArr = this.xmlMeasureList[this.currentXmlMeasureIndex].elements();\n            for (var _i = 0, xmlMeasureListArr_1 = xmlMeasureListArr; _i < xmlMeasureListArr_1.length; _i++) {\n                var xmlNode = xmlMeasureListArr_1[_i];\n                if (xmlNode.name === \"note\") {\n                    if (xmlNode.hasAttributes && xmlNode.attribute(\"print-object\") && xmlNode.attribute(\"print-spacing\")) {\n                        continue;\n                    }\n                    var noteStaff = 1;\n                    if (this.instrument.Staves.length > 1) {\n                        if (xmlNode.element(\"staff\") !== undefined) {\n                            noteStaff = parseInt(xmlNode.element(\"staff\").value, 10);\n                            if (isNaN(noteStaff)) {\n                                logging_1.Logging.debug(\"InstrumentReader.readNextXmlMeasure.get staff number\");\n                                noteStaff = 1;\n                            }\n                        }\n                    }\n                    this.currentStaff = this.instrument.Staves[noteStaff - 1];\n                    var isChord = xmlNode.element(\"chord\") !== undefined;\n                    if (xmlNode.element(\"voice\") !== undefined) {\n                        var noteVoice = parseInt(xmlNode.element(\"voice\").value, 10);\n                        this.currentVoiceGenerator = this.getOrCreateVoiceGenerator(noteVoice, noteStaff - 1);\n                    }\n                    else {\n                        if (!isChord || this.currentVoiceGenerator === undefined) {\n                            this.currentVoiceGenerator = this.getOrCreateVoiceGenerator(1, noteStaff - 1);\n                        }\n                    }\n                    var noteDivisions = 0;\n                    var noteDuration = new fraction_1.Fraction(0, 1);\n                    var isTuplet = false;\n                    if (xmlNode.element(\"duration\") !== undefined) {\n                        noteDivisions = parseInt(xmlNode.element(\"duration\").value, 10);\n                        if (!isNaN(noteDivisions)) {\n                            noteDuration = new fraction_1.Fraction(noteDivisions, 4 * this.divisions);\n                            if (noteDivisions === 0) {\n                                noteDuration = this.getNoteDurationFromTypeNode(xmlNode);\n                            }\n                            if (xmlNode.element(\"time-modification\") !== undefined) {\n                                noteDuration = this.getNoteDurationForTuplet(xmlNode);\n                                isTuplet = true;\n                            }\n                        }\n                        else {\n                            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteDurationError\", \"Invalid Note Duration.\");\n                            this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                            logging_1.Logging.debug(\"InstrumentReader.readNextXmlMeasure\", errorMsg);\n                            continue;\n                        }\n                    }\n                    var restNote = xmlNode.element(\"rest\") !== undefined;\n                    //Logging.log(\"New note found!\", noteDivisions, noteDuration.toString(), restNote);\n                    var isGraceNote = xmlNode.element(\"grace\") !== undefined || noteDivisions === 0 || isChord && lastNoteWasGrace;\n                    var musicTimestamp = currentFraction.clone();\n                    if (isChord) {\n                        musicTimestamp = previousFraction.clone();\n                    }\n                    this.currentStaffEntry = this.currentMeasure.findOrCreateStaffEntry(musicTimestamp, this.inSourceMeasureInstrumentIndex + noteStaff - 1, this.currentStaff).staffEntry;\n                    //Logging.log(\"currentStaffEntry\", this.currentStaffEntry, this.currentMeasure.VerticalSourceStaffEntryContainers.length);\n                    if (!this.currentVoiceGenerator.hasVoiceEntry() || (!isChord && !isGraceNote && !lastNoteWasGrace) || (!lastNoteWasGrace && isGraceNote)) {\n                        this.currentVoiceGenerator.createVoiceEntry(musicTimestamp, this.currentStaffEntry, !restNote);\n                    }\n                    if (!isGraceNote && !isChord) {\n                        previousFraction = currentFraction.clone();\n                        currentFraction.Add(noteDuration);\n                    }\n                    if (isChord &&\n                        this.currentStaffEntry !== undefined &&\n                        this.currentStaffEntry.ParentStaff !== this.currentStaff) {\n                        this.currentStaffEntry = this.currentVoiceGenerator.checkForStaffEntryLink(this.inSourceMeasureInstrumentIndex + noteStaff - 1, this.currentStaff, this.currentStaffEntry, this.currentMeasure);\n                    }\n                    var beginOfMeasure = (this.currentStaffEntry !== undefined &&\n                        this.currentStaffEntry.Timestamp !== undefined &&\n                        this.currentStaffEntry.Timestamp.Equals(new fraction_1.Fraction(0, 1)) && !this.currentStaffEntry.hasNotes());\n                    this.saveAbstractInstructionList(this.instrument.Staves.length, beginOfMeasure);\n                    if (this.openChordSymbolContainer !== undefined) {\n                        this.currentStaffEntry.ChordContainer = this.openChordSymbolContainer;\n                        this.openChordSymbolContainer = undefined;\n                    }\n                    if (this.activeRhythm !== undefined) {\n                    }\n                    if (isTuplet) {\n                        this.currentVoiceGenerator.read(xmlNode, noteDuration.Numerator, noteDuration.Denominator, restNote, isGraceNote, this.currentStaffEntry, this.currentMeasure, measureStartAbsoluteTimestamp, this.maxTieNoteFraction, isChord, guitarPro);\n                    }\n                    else {\n                        this.currentVoiceGenerator.read(xmlNode, noteDivisions, 4 * this.divisions, restNote, isGraceNote, this.currentStaffEntry, this.currentMeasure, measureStartAbsoluteTimestamp, this.maxTieNoteFraction, isChord, guitarPro);\n                    }\n                    var notationsNode = xmlNode.element(\"notations\");\n                    if (notationsNode !== undefined && notationsNode.element(\"dynamics\") !== undefined) {\n                    }\n                    lastNoteWasGrace = isGraceNote;\n                }\n                else if (xmlNode.name === \"attributes\") {\n                    var divisionsNode = xmlNode.element(\"divisions\");\n                    if (divisionsNode !== undefined) {\n                        this.divisions = parseInt(divisionsNode.value, 10);\n                        if (isNaN(this.divisions)) {\n                            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/DivisionError\", \"Invalid divisions value at Instrument: \");\n                            logging_1.Logging.debug(\"InstrumentReader.readNextXmlMeasure\", errorMsg);\n                            this.divisions = this.readDivisionsFromNotes();\n                            if (this.divisions > 0) {\n                                this.musicSheet.SheetErrors.push(errorMsg + this.instrument.Name);\n                            }\n                            else {\n                                divisionsException = true;\n                                throw new Exceptions_1.MusicSheetReadingException(errorMsg + this.instrument.Name);\n                            }\n                        }\n                    }\n                    if (xmlNode.element(\"divisions\") === undefined &&\n                        this.divisions === 0 &&\n                        this.currentXmlMeasureIndex === 0) {\n                        var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/DivisionError\", \"Invalid divisions value at Instrument: \");\n                        this.divisions = this.readDivisionsFromNotes();\n                        if (this.divisions > 0) {\n                            this.musicSheet.SheetErrors.push(errorMsg + this.instrument.Name);\n                        }\n                        else {\n                            divisionsException = true;\n                            throw new Exceptions_1.MusicSheetReadingException(errorMsg + this.instrument.Name);\n                        }\n                    }\n                    this.addAbstractInstruction(xmlNode, guitarPro);\n                    if (currentFraction.Equals(new fraction_1.Fraction(0, 1)) &&\n                        this.isAttributesNodeAtBeginOfMeasure(this.xmlMeasureList[this.currentXmlMeasureIndex], xmlNode)) {\n                        this.saveAbstractInstructionList(this.instrument.Staves.length, true);\n                    }\n                    if (this.isAttributesNodeAtEndOfMeasure(this.xmlMeasureList[this.currentXmlMeasureIndex], xmlNode)) {\n                        this.saveClefInstructionAtEndOfMeasure();\n                    }\n                }\n                else if (xmlNode.name === \"forward\") {\n                    var forFraction = parseInt(xmlNode.element(\"duration\").value, 10);\n                    currentFraction.Add(new fraction_1.Fraction(forFraction, 4 * this.divisions));\n                }\n                else if (xmlNode.name === \"backup\") {\n                    var backFraction = parseInt(xmlNode.element(\"duration\").value, 10);\n                    currentFraction.Sub(new fraction_1.Fraction(backFraction, 4 * this.divisions));\n                    if (currentFraction.Numerator < 0) {\n                        currentFraction = new fraction_1.Fraction(0, 1);\n                    }\n                    previousFraction.Sub(new fraction_1.Fraction(backFraction, 4 * this.divisions));\n                    if (previousFraction.Numerator < 0) {\n                        previousFraction = new fraction_1.Fraction(0, 1);\n                    }\n                }\n                else if (xmlNode.name === \"direction\") {\n                    // unused let directionTypeNode: IXmlElement = xmlNode.element(\"direction-type\");\n                    // (*) MetronomeReader.readMetronomeInstructions(xmlNode, this.musicSheet, this.currentXmlMeasureIndex);\n                    var relativePositionInMeasure = Math.min(1, currentFraction.RealValue);\n                    if (this.activeRhythm !== undefined && this.activeRhythm.Rhythm !== undefined) {\n                        relativePositionInMeasure /= this.activeRhythm.Rhythm.RealValue;\n                    }\n                }\n                else if (xmlNode.name === \"barline\") {\n                }\n                else if (xmlNode.name === \"sound\") {\n                }\n                else if (xmlNode.name === \"harmony\") {\n                }\n            }\n            for (var j in this.voiceGeneratorsDict) {\n                if (this.voiceGeneratorsDict.hasOwnProperty(j)) {\n                    var voiceGenerator = this.voiceGeneratorsDict[j];\n                    voiceGenerator.checkForOpenBeam();\n                    voiceGenerator.checkForOpenGraceNotes();\n                }\n            }\n            if (this.currentXmlMeasureIndex === this.xmlMeasureList.length - 1) {\n                for (var i = 0; i < this.instrument.Staves.length; i++) {\n                    if (!this.activeClefsHaveBeenInitialized[i]) {\n                        this.createDefaultClefInstruction(this.musicSheet.getGlobalStaffIndexOfFirstStaff(this.instrument) + i);\n                    }\n                }\n                if (!this.activeKeyHasBeenInitialized) {\n                    this.createDefaultKeyInstruction();\n                }\n            }\n        }\n        catch (e) {\n            if (divisionsException) {\n                throw new Exceptions_1.MusicSheetReadingException(e.Message);\n            }\n            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/MeasureError\", \"Error while reading Measure.\");\n            this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n            logging_1.Logging.debug(\"InstrumentReader.readNextXmlMeasure\", errorMsg, e);\n        }\n        this.previousMeasure = this.currentMeasure;\n        this.currentXmlMeasureIndex += 1;\n        return true;\n    };\n    InstrumentReader.prototype.doCalculationsAfterDurationHasBeenSet = function () {\n        for (var j in this.voiceGeneratorsDict) {\n            if (this.voiceGeneratorsDict.hasOwnProperty(j)) {\n                this.voiceGeneratorsDict[j].checkOpenTies();\n            }\n        }\n    };\n    InstrumentReader.prototype.getOrCreateVoiceGenerator = function (voiceId, staffId) {\n        var staff = this.instrument.Staves[staffId];\n        var voiceGenerator = this.voiceGeneratorsDict[voiceId];\n        if (voiceGenerator !== undefined) {\n            if (staff.Voices.indexOf(voiceGenerator.GetVoice) === -1) {\n                staff.Voices.push(voiceGenerator.GetVoice);\n            }\n        }\n        else {\n            var mainVoiceGenerator = this.staffMainVoiceGeneratorDict[staffId];\n            if (mainVoiceGenerator !== undefined) {\n                voiceGenerator = new VoiceGenerator_1.VoiceGenerator(this.instrument, voiceId, this.slurReader, mainVoiceGenerator.GetVoice);\n                staff.Voices.push(voiceGenerator.GetVoice);\n                this.voiceGeneratorsDict[voiceId] = voiceGenerator;\n            }\n            else {\n                voiceGenerator = new VoiceGenerator_1.VoiceGenerator(this.instrument, voiceId, this.slurReader);\n                staff.Voices.push(voiceGenerator.GetVoice);\n                this.voiceGeneratorsDict[voiceId] = voiceGenerator;\n                this.staffMainVoiceGeneratorDict[staffId] = voiceGenerator;\n            }\n        }\n        return voiceGenerator;\n    };\n    //private createExpressionGenerators(numberOfStaves: number): void {\n    //  // (*)\n    //  //this.expressionReaders = new Array(numberOfStaves);\n    //  //for (let i: number = 0; i < numberOfStaves; i++) {\n    //  //  this.expressionReaders[i] = MusicSymbolModuleFactory.createExpressionGenerator(this.musicSheet, this.instrument, i + 1);\n    //  //}\n    //}\n    InstrumentReader.prototype.createDefaultClefInstruction = function (staffIndex) {\n        var first;\n        if (this.musicSheet.SourceMeasures.length > 0) {\n            first = this.musicSheet.SourceMeasures[0];\n        }\n        else {\n            first = this.currentMeasure;\n        }\n        var clefInstruction = new ClefInstruction_1.ClefInstruction(ClefInstruction_2.ClefEnum.G, 0, 2);\n        var firstStaffEntry;\n        if (first.FirstInstructionsStaffEntries[staffIndex] === undefined) {\n            firstStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n            first.FirstInstructionsStaffEntries[staffIndex] = firstStaffEntry;\n        }\n        else {\n            firstStaffEntry = first.FirstInstructionsStaffEntries[staffIndex];\n            firstStaffEntry.removeFirstInstructionOfTypeClefInstruction();\n        }\n        clefInstruction.Parent = firstStaffEntry;\n        firstStaffEntry.Instructions.splice(0, 0, clefInstruction);\n    };\n    InstrumentReader.prototype.createDefaultKeyInstruction = function () {\n        var first;\n        if (this.musicSheet.SourceMeasures.length > 0) {\n            first = this.musicSheet.SourceMeasures[0];\n        }\n        else {\n            first = this.currentMeasure;\n        }\n        var keyInstruction = new KeyInstruction_1.KeyInstruction(undefined, 0, KeyInstruction_2.KeyEnum.major);\n        for (var j = this.inSourceMeasureInstrumentIndex; j < this.inSourceMeasureInstrumentIndex + this.instrument.Staves.length; j++) {\n            if (first.FirstInstructionsStaffEntries[j] === undefined) {\n                var firstStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                first.FirstInstructionsStaffEntries[j] = firstStaffEntry;\n                keyInstruction.Parent = firstStaffEntry;\n                firstStaffEntry.Instructions.push(keyInstruction);\n            }\n            else {\n                var firstStaffEntry = first.FirstInstructionsStaffEntries[j];\n                keyInstruction.Parent = firstStaffEntry;\n                firstStaffEntry.removeFirstInstructionOfTypeKeyInstruction();\n                if (firstStaffEntry.Instructions[0] instanceof ClefInstruction_1.ClefInstruction) {\n                    firstStaffEntry.Instructions.splice(1, 0, keyInstruction);\n                }\n                else {\n                    firstStaffEntry.Instructions.splice(0, 0, keyInstruction);\n                }\n            }\n        }\n    };\n    InstrumentReader.prototype.isAttributesNodeAtBeginOfMeasure = function (parentNode, attributesNode) {\n        var children = parentNode.elements();\n        var attributesNodeIndex = children.indexOf(attributesNode); // FIXME | 0\n        if (attributesNodeIndex > 0 && children[attributesNodeIndex - 1].name === \"backup\") {\n            return true;\n        }\n        var firstNoteNodeIndex = -1;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].name === \"note\") {\n                firstNoteNodeIndex = i;\n                break;\n            }\n        }\n        return (attributesNodeIndex < firstNoteNodeIndex && firstNoteNodeIndex > 0) || (firstNoteNodeIndex < 0);\n    };\n    InstrumentReader.prototype.isAttributesNodeAtEndOfMeasure = function (parentNode, attributesNode) {\n        var childs = parentNode.elements().slice();\n        var attributesNodeIndex = 0;\n        for (var i = 0; i < childs.length; i++) {\n            if (childs[i] === attributesNode) {\n                attributesNodeIndex = i;\n                break;\n            }\n        }\n        var nextNoteNodeIndex = 0;\n        for (var i = attributesNodeIndex; i < childs.length; i++) {\n            if (childs[i].name === \"note\") {\n                nextNoteNodeIndex = i;\n                break;\n            }\n        }\n        return attributesNodeIndex > nextNoteNodeIndex;\n    };\n    InstrumentReader.prototype.getNoteDurationFromTypeNode = function (xmlNode) {\n        if (xmlNode.element(\"type\") !== undefined) {\n            var typeNode = xmlNode.element(\"type\");\n            if (typeNode !== undefined) {\n                var type = typeNode.value;\n                return this.currentVoiceGenerator.getNoteDurationFromType(type);\n            }\n        }\n        return new fraction_1.Fraction(0, 4 * this.divisions);\n    };\n    InstrumentReader.prototype.addAbstractInstruction = function (node, guitarPro) {\n        if (node.element(\"divisions\") !== undefined) {\n            if (node.elements().length === 1) {\n                return;\n            }\n        }\n        var transposeNode = node.element(\"transpose\");\n        if (transposeNode !== undefined) {\n            var chromaticNode = transposeNode.element(\"chromatic\");\n            if (chromaticNode !== undefined) {\n                this.instrument.PlaybackTranspose = parseInt(chromaticNode.value, 10);\n            }\n        }\n        var clefList = node.elements(\"clef\");\n        var errorMsg;\n        if (clefList.length > 0) {\n            for (var idx = 0, len = clefList.length; idx < len; ++idx) {\n                var nodeList = clefList[idx];\n                var clefEnum = ClefInstruction_2.ClefEnum.G;\n                var line = 2;\n                var staffNumber = 1;\n                var clefOctaveOffset = 0;\n                var lineNode = nodeList.element(\"line\");\n                if (lineNode !== undefined) {\n                    try {\n                        line = parseInt(lineNode.value, 10);\n                    }\n                    catch (ex) {\n                        errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/ClefLineError\", \"Invalid clef line given -> using default clef line.\");\n                        this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                        line = 2;\n                        logging_1.Logging.debug(\"InstrumentReader.addAbstractInstruction\", errorMsg, ex);\n                    }\n                }\n                var signNode = nodeList.element(\"sign\");\n                if (signNode !== undefined) {\n                    try {\n                        clefEnum = ClefInstruction_2.ClefEnum[signNode.value];\n                        if (!ClefInstruction_1.ClefInstruction.isSupportedClef(clefEnum)) {\n                            if (clefEnum === ClefInstruction_2.ClefEnum.TAB && guitarPro) {\n                                clefOctaveOffset = -1;\n                            }\n                            errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/ClefError\", \"Unsupported clef found -> using default clef.\");\n                            this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                            clefEnum = ClefInstruction_2.ClefEnum.G;\n                            line = 2;\n                        }\n                    }\n                    catch (e) {\n                        errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/ClefError\", \"Invalid clef found -> using default clef.\");\n                        this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                        clefEnum = ClefInstruction_2.ClefEnum.G;\n                        line = 2;\n                        logging_1.Logging.debug(\"InstrumentReader.addAbstractInstruction\", errorMsg, e);\n                    }\n                }\n                var clefOctaveNode = nodeList.element(\"clef-octave-change\");\n                if (clefOctaveNode !== undefined) {\n                    try {\n                        clefOctaveOffset = parseInt(clefOctaveNode.value, 10);\n                    }\n                    catch (e) {\n                        errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/ClefOctaveError\", \"Invalid clef octave found -> using default clef octave.\");\n                        this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                        clefOctaveOffset = 0;\n                    }\n                }\n                if (nodeList.hasAttributes && nodeList.attributes()[0].name === \"number\") {\n                    try {\n                        staffNumber = parseInt(nodeList.attributes()[0].value, 10);\n                    }\n                    catch (err) {\n                        errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/ClefError\", \"Invalid clef found -> using default clef.\");\n                        this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                        staffNumber = 1;\n                    }\n                }\n                var clefInstruction = new ClefInstruction_1.ClefInstruction(clefEnum, clefOctaveOffset, line);\n                this.abstractInstructions.push([staffNumber, clefInstruction]);\n            }\n        }\n        if (node.element(\"key\") !== undefined && this.instrument.MidiInstrumentId !== ClefInstruction_3.MidiInstrument.Percussion) {\n            var key = 0;\n            var keyNode = node.element(\"key\").element(\"fifths\");\n            if (keyNode !== undefined) {\n                try {\n                    key = parseInt(keyNode.value, 10);\n                }\n                catch (ex) {\n                    errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/KeyError\", \"Invalid key found -> set to default.\");\n                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    key = 0;\n                    logging_1.Logging.debug(\"InstrumentReader.addAbstractInstruction\", errorMsg, ex);\n                }\n            }\n            var keyEnum = KeyInstruction_2.KeyEnum.none;\n            var modeNode = node.element(\"key\");\n            if (modeNode !== undefined) {\n                modeNode = modeNode.element(\"mode\");\n            }\n            if (modeNode !== undefined) {\n                try {\n                    keyEnum = KeyInstruction_2.KeyEnum[modeNode.value];\n                }\n                catch (ex) {\n                    errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/KeyError\", \"Invalid key found -> set to default.\");\n                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    keyEnum = KeyInstruction_2.KeyEnum.major;\n                    logging_1.Logging.debug(\"InstrumentReader.addAbstractInstruction\", errorMsg, ex);\n                }\n            }\n            var keyInstruction = new KeyInstruction_1.KeyInstruction(undefined, key, keyEnum);\n            this.abstractInstructions.push([1, keyInstruction]);\n        }\n        if (node.element(\"time\") !== undefined) {\n            var symbolEnum = RhythmInstruction_2.RhythmSymbolEnum.NONE;\n            var timeNode = node.element(\"time\");\n            if (timeNode !== undefined && timeNode.hasAttributes) {\n                var firstAttr = timeNode.firstAttribute;\n                if (firstAttr.name === \"symbol\") {\n                    if (firstAttr.value === \"common\") {\n                        symbolEnum = RhythmInstruction_2.RhythmSymbolEnum.COMMON;\n                    }\n                    else if (firstAttr.value === \"cut\") {\n                        symbolEnum = RhythmInstruction_2.RhythmSymbolEnum.CUT;\n                    }\n                }\n            }\n            var num = 0;\n            var denom = 0;\n            var senzaMisura = (timeNode !== undefined && timeNode.element(\"senza-misura\") !== undefined);\n            var timeList = node.elements(\"time\");\n            var beatsList = [];\n            var typeList = [];\n            for (var idx = 0, len = timeList.length; idx < len; ++idx) {\n                var xmlNode = timeList[idx];\n                beatsList.push.apply(beatsList, xmlNode.elements(\"beats\"));\n                typeList.push.apply(typeList, xmlNode.elements(\"beat-type\"));\n            }\n            if (!senzaMisura) {\n                try {\n                    if (beatsList !== undefined && beatsList.length > 0 && typeList !== undefined && beatsList.length === typeList.length) {\n                        var length_1 = beatsList.length;\n                        var fractions = new Array(length_1);\n                        var maxDenom = 0;\n                        for (var i = 0; i < length_1; i++) {\n                            var s = beatsList[i].value;\n                            var n = 0;\n                            var d = 0;\n                            if (s.indexOf(\"+\") !== -1) {\n                                var numbers = s.split(\"+\");\n                                for (var idx = 0, len = numbers.length; idx < len; ++idx) {\n                                    n += parseInt(numbers[idx], 10);\n                                }\n                            }\n                            else {\n                                n = parseInt(s, 10);\n                            }\n                            d = parseInt(typeList[i].value, 10);\n                            maxDenom = Math.max(maxDenom, d);\n                            fractions[i] = new fraction_1.Fraction(n, d, false);\n                        }\n                        for (var i = 0; i < length_1; i++) {\n                            if (fractions[i].Denominator === maxDenom) {\n                                num += fractions[i].Numerator;\n                            }\n                            else {\n                                num += (maxDenom / fractions[i].Denominator) * fractions[i].Numerator;\n                            }\n                        }\n                        denom = maxDenom;\n                    }\n                    else {\n                        num = parseInt(node.element(\"time\").element(\"beats\").value, 10);\n                        denom = parseInt(node.element(\"time\").element(\"beat-type\").value, 10);\n                    }\n                }\n                catch (ex) {\n                    errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/RhythmError\", \"Invalid rhythm found -> set to default.\");\n                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    num = 4;\n                    denom = 4;\n                    logging_1.Logging.debug(\"InstrumentReader.addAbstractInstruction\", errorMsg, ex);\n                }\n                if ((num === 4 && denom === 4) || (num === 2 && denom === 2)) {\n                    symbolEnum = RhythmInstruction_2.RhythmSymbolEnum.NONE;\n                }\n                this.abstractInstructions.push([1, new RhythmInstruction_1.RhythmInstruction(new fraction_1.Fraction(num, denom, false), num, denom, symbolEnum)]);\n            }\n            else {\n                this.abstractInstructions.push([1, new RhythmInstruction_1.RhythmInstruction(new fraction_1.Fraction(4, 4, false), 4, 4, RhythmInstruction_2.RhythmSymbolEnum.NONE)]);\n            }\n        }\n    };\n    InstrumentReader.prototype.saveAbstractInstructionList = function (numberOfStaves, beginOfMeasure) {\n        for (var i = this.abstractInstructions.length - 1; i >= 0; i--) {\n            var pair = this.abstractInstructions[i];\n            var key = pair[0];\n            var value = pair[1];\n            if (value instanceof ClefInstruction_1.ClefInstruction) {\n                var clefInstruction = value;\n                if (this.currentXmlMeasureIndex === 0 || (key <= this.activeClefs.length && clefInstruction !== this.activeClefs[key - 1])) {\n                    if (!beginOfMeasure && this.currentStaffEntry !== undefined && !this.currentStaffEntry.hasNotes() && key - 1\n                        === this.instrument.Staves.indexOf(this.currentStaffEntry.ParentStaff)) {\n                        var newClefInstruction = clefInstruction;\n                        newClefInstruction.Parent = this.currentStaffEntry;\n                        this.currentStaffEntry.removeFirstInstructionOfTypeClefInstruction();\n                        this.currentStaffEntry.Instructions.push(newClefInstruction);\n                        this.activeClefs[key - 1] = clefInstruction;\n                        this.abstractInstructions.splice(i, 1);\n                    }\n                    else if (beginOfMeasure) {\n                        var firstStaffEntry = void 0;\n                        if (this.currentMeasure !== undefined) {\n                            var newClefInstruction = clefInstruction;\n                            var sseIndex = this.inSourceMeasureInstrumentIndex + key - 1;\n                            var firstSse = this.currentMeasure.FirstInstructionsStaffEntries[sseIndex];\n                            if (this.currentXmlMeasureIndex === 0) {\n                                if (firstSse === undefined) {\n                                    firstStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                                    this.currentMeasure.FirstInstructionsStaffEntries[sseIndex] = firstStaffEntry;\n                                    newClefInstruction.Parent = firstStaffEntry;\n                                    firstStaffEntry.Instructions.push(newClefInstruction);\n                                    this.activeClefsHaveBeenInitialized[key - 1] = true;\n                                }\n                                else if (this.currentMeasure.FirstInstructionsStaffEntries[sseIndex]\n                                    !==\n                                        undefined && !(firstSse.Instructions[0] instanceof ClefInstruction_1.ClefInstruction)) {\n                                    firstStaffEntry = firstSse;\n                                    newClefInstruction.Parent = firstStaffEntry;\n                                    firstStaffEntry.removeFirstInstructionOfTypeClefInstruction();\n                                    firstStaffEntry.Instructions.splice(0, 0, newClefInstruction);\n                                    this.activeClefsHaveBeenInitialized[key - 1] = true;\n                                }\n                                else {\n                                    var lastStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                                    this.currentMeasure.LastInstructionsStaffEntries[sseIndex] = lastStaffEntry;\n                                    newClefInstruction.Parent = lastStaffEntry;\n                                    lastStaffEntry.Instructions.push(newClefInstruction);\n                                }\n                            }\n                            else if (!this.activeClefsHaveBeenInitialized[key - 1]) {\n                                var first = this.musicSheet.SourceMeasures[0];\n                                if (first.FirstInstructionsStaffEntries[sseIndex] === undefined) {\n                                    firstStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                                }\n                                else {\n                                    firstStaffEntry = first.FirstInstructionsStaffEntries[sseIndex];\n                                    firstStaffEntry.removeFirstInstructionOfTypeClefInstruction();\n                                }\n                                newClefInstruction.Parent = firstStaffEntry;\n                                firstStaffEntry.Instructions.splice(0, 0, newClefInstruction);\n                                this.activeClefsHaveBeenInitialized[key - 1] = true;\n                            }\n                            else {\n                                var lastStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                                this.previousMeasure.LastInstructionsStaffEntries[sseIndex] = lastStaffEntry;\n                                newClefInstruction.Parent = lastStaffEntry;\n                                lastStaffEntry.Instructions.push(newClefInstruction);\n                            }\n                            this.activeClefs[key - 1] = clefInstruction;\n                            this.abstractInstructions.splice(i, 1);\n                        }\n                    }\n                }\n                else if (key <= this.activeClefs.length && clefInstruction === this.activeClefs[key - 1]) {\n                    this.abstractInstructions.splice(i, 1);\n                }\n            }\n            if (value instanceof KeyInstruction_1.KeyInstruction) {\n                var keyInstruction = value;\n                if (this.activeKey === undefined || this.activeKey.Key !== keyInstruction.Key) {\n                    this.activeKey = keyInstruction;\n                    this.abstractInstructions.splice(i, 1);\n                    var sourceMeasure = void 0;\n                    if (!this.activeKeyHasBeenInitialized) {\n                        this.activeKeyHasBeenInitialized = true;\n                        if (this.currentXmlMeasureIndex > 0) {\n                            sourceMeasure = this.musicSheet.SourceMeasures[0];\n                        }\n                        else {\n                            sourceMeasure = this.currentMeasure;\n                        }\n                    }\n                    else {\n                        sourceMeasure = this.currentMeasure;\n                    }\n                    if (sourceMeasure !== undefined) {\n                        for (var j = this.inSourceMeasureInstrumentIndex; j < this.inSourceMeasureInstrumentIndex + numberOfStaves; j++) {\n                            var newKeyInstruction = keyInstruction;\n                            if (sourceMeasure.FirstInstructionsStaffEntries[j] === undefined) {\n                                var firstStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                                sourceMeasure.FirstInstructionsStaffEntries[j] = firstStaffEntry;\n                                newKeyInstruction.Parent = firstStaffEntry;\n                                firstStaffEntry.Instructions.push(newKeyInstruction);\n                            }\n                            else {\n                                var firstStaffEntry = sourceMeasure.FirstInstructionsStaffEntries[j];\n                                newKeyInstruction.Parent = firstStaffEntry;\n                                firstStaffEntry.removeFirstInstructionOfTypeKeyInstruction();\n                                if (firstStaffEntry.Instructions.length === 0) {\n                                    firstStaffEntry.Instructions.push(newKeyInstruction);\n                                }\n                                else {\n                                    if (firstStaffEntry.Instructions[0] instanceof ClefInstruction_1.ClefInstruction) {\n                                        firstStaffEntry.Instructions.splice(1, 0, newKeyInstruction);\n                                    }\n                                    else {\n                                        firstStaffEntry.Instructions.splice(0, 0, newKeyInstruction);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    this.abstractInstructions.splice(i, 1);\n                }\n            }\n            if (value instanceof RhythmInstruction_1.RhythmInstruction) {\n                var rhythmInstruction = value;\n                if (this.activeRhythm === undefined || this.activeRhythm !== rhythmInstruction) {\n                    this.activeRhythm = rhythmInstruction;\n                    this.abstractInstructions.splice(i, 1);\n                    if (this.currentMeasure !== undefined) {\n                        for (var j = this.inSourceMeasureInstrumentIndex; j < this.inSourceMeasureInstrumentIndex + numberOfStaves; j++) {\n                            var newRhythmInstruction = rhythmInstruction;\n                            var firstStaffEntry = void 0;\n                            if (this.currentMeasure.FirstInstructionsStaffEntries[j] === undefined) {\n                                firstStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                                this.currentMeasure.FirstInstructionsStaffEntries[j] = firstStaffEntry;\n                            }\n                            else {\n                                firstStaffEntry = this.currentMeasure.FirstInstructionsStaffEntries[j];\n                                firstStaffEntry.removeFirstInstructionOfTypeRhythmInstruction();\n                            }\n                            newRhythmInstruction.Parent = firstStaffEntry;\n                            firstStaffEntry.Instructions.push(newRhythmInstruction);\n                        }\n                    }\n                }\n                else {\n                    this.abstractInstructions.splice(i, 1);\n                }\n            }\n        }\n    };\n    InstrumentReader.prototype.saveClefInstructionAtEndOfMeasure = function () {\n        for (var i = this.abstractInstructions.length - 1; i >= 0; i--) {\n            var key = this.abstractInstructions[i][0];\n            var value = this.abstractInstructions[i][1];\n            if (value instanceof ClefInstruction_1.ClefInstruction) {\n                var clefInstruction = value;\n                if ((this.activeClefs[key - 1] === undefined) ||\n                    (clefInstruction.ClefType !== this.activeClefs[key - 1].ClefType || (clefInstruction.ClefType === this.activeClefs[key - 1].ClefType &&\n                        clefInstruction.Line !== this.activeClefs[key - 1].Line))) {\n                    var lastStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(undefined, undefined);\n                    this.currentMeasure.LastInstructionsStaffEntries[this.inSourceMeasureInstrumentIndex + key - 1] = lastStaffEntry;\n                    var newClefInstruction = clefInstruction;\n                    newClefInstruction.Parent = lastStaffEntry;\n                    lastStaffEntry.Instructions.push(newClefInstruction);\n                    this.activeClefs[key - 1] = clefInstruction;\n                    this.abstractInstructions.splice(i, 1);\n                }\n            }\n        }\n    };\n    InstrumentReader.prototype.getNoteDurationForTuplet = function (xmlNode) {\n        var duration = new fraction_1.Fraction(0, 1);\n        var typeDuration = this.getNoteDurationFromTypeNode(xmlNode);\n        if (xmlNode.element(\"time-modification\") !== undefined) {\n            var time = xmlNode.element(\"time-modification\");\n            if (time !== undefined) {\n                if (time.element(\"actual-notes\") !== undefined && time.element(\"normal-notes\") !== undefined) {\n                    var actualNotes = time.element(\"actual-notes\");\n                    var normalNotes = time.element(\"normal-notes\");\n                    if (actualNotes !== undefined && normalNotes !== undefined) {\n                        var actual = parseInt(actualNotes.value, 10);\n                        var normal = parseInt(normalNotes.value, 10);\n                        duration = new fraction_1.Fraction(normal * typeDuration.Numerator, actual * typeDuration.Denominator);\n                    }\n                }\n            }\n        }\n        return duration;\n    };\n    //private readExpressionStaffNumber(xmlNode: IXmlElement): number {\n    //  let directionStaffNumber: number = 1;\n    //  if (xmlNode.element(\"staff\") !== undefined) {\n    //    let staffNode: IXmlElement = xmlNode.element(\"staff\");\n    //    if (staffNode !== undefined) {\n    //      try {\n    //        directionStaffNumber = parseInt(staffNode.value, 10);\n    //      } catch (ex) {\n    //        let errorMsg: string = ITextTranslation.translateText(\n    //          \"ReaderErrorMessages/ExpressionStaffError\", \"Invalid Expression staff number -> set to default.\"\n    //        );\n    //        this.musicSheet.SheetErrors.pushTemp(errorMsg);\n    //        directionStaffNumber = 1;\n    //        logging.debug(\"InstrumentReader.readExpressionStaffNumber\", errorMsg, ex);\n    //      }\n    //\n    //    }\n    //  }\n    //  return directionStaffNumber;\n    //}\n    InstrumentReader.prototype.readDivisionsFromNotes = function () {\n        var divisionsFromNote = 0;\n        var xmlMeasureIndex = this.currentXmlMeasureIndex;\n        var read = false;\n        while (!read) {\n            var xmlMeasureListArr = this.xmlMeasureList[xmlMeasureIndex].elements();\n            for (var idx = 0, len = xmlMeasureListArr.length; idx < len; ++idx) {\n                var xmlNode = xmlMeasureListArr[idx];\n                if (xmlNode.name === \"note\" && xmlNode.element(\"time-modification\") === undefined) {\n                    if (xmlNode.element(\"duration\") !== undefined && xmlNode.element(\"type\") !== undefined) {\n                        var durationNode = xmlNode.element(\"duration\");\n                        var typeNode = xmlNode.element(\"type\");\n                        if (durationNode !== undefined && typeNode !== undefined) {\n                            var type = typeNode.value;\n                            var noteDuration = 0;\n                            try {\n                                noteDuration = parseInt(durationNode.value, 10);\n                            }\n                            catch (ex) {\n                                logging_1.Logging.debug(\"InstrumentReader.readDivisionsFromNotes\", ex);\n                                continue;\n                            }\n                            switch (type) {\n                                case \"1024th\":\n                                    divisionsFromNote = (noteDuration / 4) * 1024;\n                                    break;\n                                case \"512th\":\n                                    divisionsFromNote = (noteDuration / 4) * 512;\n                                    break;\n                                case \"256th\":\n                                    divisionsFromNote = (noteDuration / 4) * 256;\n                                    break;\n                                case \"128th\":\n                                    divisionsFromNote = (noteDuration / 4) * 128;\n                                    break;\n                                case \"64th\":\n                                    divisionsFromNote = (noteDuration / 4) * 64;\n                                    break;\n                                case \"32nd\":\n                                    divisionsFromNote = (noteDuration / 4) * 32;\n                                    break;\n                                case \"16th\":\n                                    divisionsFromNote = (noteDuration / 4) * 16;\n                                    break;\n                                case \"eighth\":\n                                    divisionsFromNote = (noteDuration / 4) * 8;\n                                    break;\n                                case \"quarter\":\n                                    divisionsFromNote = (noteDuration / 4) * 4;\n                                    break;\n                                case \"half\":\n                                    divisionsFromNote = (noteDuration / 4) * 2;\n                                    break;\n                                case \"whole\":\n                                    divisionsFromNote = (noteDuration / 4);\n                                    break;\n                                case \"breve\":\n                                    divisionsFromNote = (noteDuration / 4) / 2;\n                                    break;\n                                case \"long\":\n                                    divisionsFromNote = (noteDuration / 4) / 4;\n                                    break;\n                                case \"maxima\":\n                                    divisionsFromNote = (noteDuration / 4) / 8;\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                }\n                if (divisionsFromNote > 0) {\n                    read = true;\n                    break;\n                }\n            }\n            if (divisionsFromNote === 0) {\n                xmlMeasureIndex++;\n                if (xmlMeasureIndex === this.xmlMeasureList.length) {\n                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMEssages/DivisionsError\", \"Invalid divisions value at Instrument: \");\n                    throw new Exceptions_1.MusicSheetReadingException(errorMsg + this.instrument.Name);\n                }\n            }\n        }\n        return divisionsFromNote;\n    };\n    return InstrumentReader;\n}());\nexports.InstrumentReader = InstrumentReader;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/ScoreIO/InstrumentReader.js\n ** module id = 78\n ** module chunks = 0\n **/","\"use strict\";\nvar LinkedVoice_1 = require(\"../VoiceData/LinkedVoice\");\nvar Voice_1 = require(\"../VoiceData/Voice\");\nvar VoiceEntry_1 = require(\"../VoiceData/VoiceEntry\");\nvar Note_1 = require(\"../VoiceData/Note\");\nvar SourceStaffEntry_1 = require(\"../VoiceData/SourceStaffEntry\");\nvar Beam_1 = require(\"../VoiceData/Beam\");\nvar Tie_1 = require(\"../VoiceData/Tie\");\nvar Tuplet_1 = require(\"../VoiceData/Tuplet\");\nvar fraction_1 = require(\"../../Common/DataObjects/fraction\");\nvar ITextTranslation_1 = require(\"../Interfaces/ITextTranslation\");\nvar VoiceEntry_2 = require(\"../VoiceData/VoiceEntry\");\nvar Exceptions_1 = require(\"../Exceptions\");\nvar pitch_1 = require(\"../../Common/DataObjects/pitch\");\nvar pitch_2 = require(\"../../Common/DataObjects/pitch\");\nvar StaffEntryLink_1 = require(\"../VoiceData/StaffEntryLink\");\nvar logging_1 = require(\"../../Common/logging\");\nvar pitch_3 = require(\"../../Common/DataObjects/pitch\");\nvar collectionUtil_1 = require(\"../../Util/collectionUtil\");\nvar VoiceGenerator = (function () {\n    function VoiceGenerator(instrument, voiceId, slurReader, mainVoice) {\n        if (mainVoice === void 0) { mainVoice = undefined; }\n        this.lastBeamTag = \"\";\n        this.openTieDict = {};\n        this.currentOctaveShift = 0;\n        this.tupletDict = {};\n        this.openTupletNumber = 0;\n        this.musicSheet = instrument.GetMusicSheet;\n        this.slurReader = slurReader;\n        if (mainVoice !== undefined) {\n            this.voice = new LinkedVoice_1.LinkedVoice(instrument, voiceId, mainVoice);\n        }\n        else {\n            this.voice = new Voice_1.Voice(instrument, voiceId);\n        }\n        instrument.Voices.push(this.voice);\n        //this.lyricsReader = MusicSymbolModuleFactory.createLyricsReader(this.musicSheet);\n        //this.articulationReader = MusicSymbolModuleFactory.createArticulationReader();\n    }\n    Object.defineProperty(VoiceGenerator.prototype, \"GetVoice\", {\n        get: function () {\n            return this.voice;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VoiceGenerator.prototype, \"OctaveShift\", {\n        get: function () {\n            return this.currentOctaveShift;\n        },\n        set: function (value) {\n            this.currentOctaveShift = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VoiceGenerator.prototype.createVoiceEntry = function (musicTimestamp, parentStaffEntry, addToVoice) {\n        this.currentVoiceEntry = new VoiceEntry_1.VoiceEntry(musicTimestamp.clone(), this.voice, parentStaffEntry);\n        if (addToVoice) {\n            this.voice.VoiceEntries.push(this.currentVoiceEntry);\n        }\n        if (parentStaffEntry.VoiceEntries.indexOf(this.currentVoiceEntry) === -1) {\n            parentStaffEntry.VoiceEntries.push(this.currentVoiceEntry);\n        }\n    };\n    VoiceGenerator.prototype.read = function (noteNode, noteDuration, divisions, restNote, graceNote, parentStaffEntry, parentMeasure, measureStartAbsoluteTimestamp, maxTieNoteFraction, chord, guitarPro) {\n        this.currentStaffEntry = parentStaffEntry;\n        this.currentMeasure = parentMeasure;\n        //Logging.debug(\"read called:\", restNote);\n        try {\n            this.currentNote = restNote\n                ? this.addRestNote(noteDuration, divisions)\n                : this.addSingleNote(noteNode, noteDuration, divisions, graceNote, chord, guitarPro);\n            // (*)\n            //if (this.lyricsReader !== undefined && noteNode.element(\"lyric\") !== undefined) {\n            //    this.lyricsReader.addLyricEntry(noteNode, this.currentVoiceEntry);\n            //    this.voice.Parent.HasLyrics = true;\n            //}\n            var notationNode = noteNode.element(\"notations\");\n            if (notationNode !== undefined) {\n                // let articNode: IXmlElement = undefined;\n                // (*)\n                //if (this.articulationReader !== undefined) {\n                //    this.readArticulations(notationNode, this.currentVoiceEntry);\n                //}\n                //let slurNodes: IXmlElement[] = undefined;\n                // (*)\n                //if (this.slurReader !== undefined && (slurNodes = notationNode.elements(\"slur\")))\n                //    this.slurReader.addSlur(slurNodes, this.currentNote);\n                var tupletNodeList = notationNode.elements(\"tuplet\");\n                if (tupletNodeList) {\n                    this.openTupletNumber = this.addTuplet(noteNode, tupletNodeList);\n                }\n                if (notationNode.element(\"arpeggiate\") !== undefined && !graceNote) {\n                    this.currentVoiceEntry.ArpeggiosNotesIndices.push(this.currentVoiceEntry.Notes.indexOf(this.currentNote));\n                }\n                var tiedNodeList = notationNode.elements(\"tied\");\n                if (tiedNodeList) {\n                    this.addTie(tiedNodeList, measureStartAbsoluteTimestamp, maxTieNoteFraction);\n                }\n                var openTieDict = this.openTieDict;\n                for (var key in openTieDict) {\n                    if (openTieDict.hasOwnProperty(key)) {\n                        var tie = openTieDict[key];\n                        if (fraction_1.Fraction.plus(tie.Start.ParentStaffEntry.Timestamp, tie.Start.Length).lt(this.currentStaffEntry.Timestamp)) {\n                            delete openTieDict[key];\n                        }\n                    }\n                }\n            }\n            if (noteNode.element(\"time-modification\") !== undefined && notationNode === undefined) {\n                this.handleTimeModificationNode(noteNode);\n            }\n        }\n        catch (err) {\n            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteError\", \"Ignored erroneous Note.\");\n            this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n        }\n        return this.currentNote;\n    };\n    VoiceGenerator.prototype.checkForOpenGraceNotes = function () {\n        if (this.currentStaffEntry !== undefined\n            && this.currentStaffEntry.VoiceEntries.length === 0\n            && this.currentVoiceEntry.graceVoiceEntriesBefore !== undefined\n            && this.currentVoiceEntry.graceVoiceEntriesBefore.length > 0) {\n            var voice = this.currentVoiceEntry.ParentVoice;\n            var horizontalIndex = this.currentMeasure.VerticalSourceStaffEntryContainers.indexOf(this.currentStaffEntry.VerticalContainerParent);\n            var verticalIndex = this.currentStaffEntry.VerticalContainerParent.StaffEntries.indexOf(this.currentStaffEntry);\n            var previousStaffEntry = this.currentMeasure.getPreviousSourceStaffEntryFromIndex(verticalIndex, horizontalIndex);\n            if (previousStaffEntry !== undefined) {\n                var previousVoiceEntry = undefined;\n                for (var idx = 0, len = previousStaffEntry.VoiceEntries.length; idx < len; ++idx) {\n                    var voiceEntry = previousStaffEntry.VoiceEntries[idx];\n                    if (voiceEntry.ParentVoice === voice) {\n                        previousVoiceEntry = voiceEntry;\n                        previousVoiceEntry.graceVoiceEntriesAfter = [];\n                        for (var idx2 = 0, len2 = this.currentVoiceEntry.graceVoiceEntriesBefore.length; idx2 < len2; ++idx2) {\n                            var graceVoiceEntry = this.currentVoiceEntry.graceVoiceEntriesBefore[idx2];\n                            previousVoiceEntry.graceVoiceEntriesAfter.push(graceVoiceEntry);\n                        }\n                        this.currentVoiceEntry.graceVoiceEntriesBefore = [];\n                        this.currentStaffEntry = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    VoiceGenerator.prototype.checkForStaffEntryLink = function (index, currentStaff, currentStaffEntry, currentMeasure) {\n        var staffEntryLink = new StaffEntryLink_1.StaffEntryLink(this.currentVoiceEntry);\n        staffEntryLink.LinkStaffEntries.push(currentStaffEntry);\n        currentStaffEntry.Link = staffEntryLink;\n        var linkMusicTimestamp = this.currentVoiceEntry.Timestamp.clone();\n        var verticalSourceStaffEntryContainer = currentMeasure.getVerticalContainerByTimestamp(linkMusicTimestamp);\n        currentStaffEntry = verticalSourceStaffEntryContainer.StaffEntries[index];\n        if (currentStaffEntry === undefined) {\n            currentStaffEntry = new SourceStaffEntry_1.SourceStaffEntry(verticalSourceStaffEntryContainer, currentStaff);\n            verticalSourceStaffEntryContainer.StaffEntries[index] = currentStaffEntry;\n        }\n        currentStaffEntry.VoiceEntries.push(this.currentVoiceEntry);\n        staffEntryLink.LinkStaffEntries.push(currentStaffEntry);\n        currentStaffEntry.Link = staffEntryLink;\n        return currentStaffEntry;\n    };\n    VoiceGenerator.prototype.checkForOpenBeam = function () {\n        if (this.openBeam !== undefined && this.currentNote !== undefined) {\n            this.handleOpenBeam();\n        }\n    };\n    VoiceGenerator.prototype.checkOpenTies = function () {\n        var openTieDict = this.openTieDict;\n        for (var key in openTieDict) {\n            if (openTieDict.hasOwnProperty(key)) {\n                var tie = openTieDict[key];\n                if (fraction_1.Fraction.plus(tie.Start.ParentStaffEntry.Timestamp, tie.Start.Length)\n                    .lt(tie.Start.ParentStaffEntry.VerticalContainerParent.ParentMeasure.Duration)) {\n                    delete openTieDict[key];\n                }\n            }\n        }\n    };\n    VoiceGenerator.prototype.hasVoiceEntry = function () {\n        return this.currentVoiceEntry !== undefined;\n    };\n    VoiceGenerator.prototype.getNoteDurationFromType = function (type) {\n        switch (type) {\n            case \"1024th\":\n                return new fraction_1.Fraction(1, 1024);\n            case \"512th\":\n                return new fraction_1.Fraction(1, 512);\n            case \"256th\":\n                return new fraction_1.Fraction(1, 256);\n            case \"128th\":\n                return new fraction_1.Fraction(1, 128);\n            case \"64th\":\n                return new fraction_1.Fraction(1, 64);\n            case \"32th\":\n            case \"32nd\":\n                return new fraction_1.Fraction(1, 32);\n            case \"16th\":\n                return new fraction_1.Fraction(1, 16);\n            case \"eighth\":\n                return new fraction_1.Fraction(1, 8);\n            case \"quarter\":\n                return new fraction_1.Fraction(1, 4);\n            case \"half\":\n                return new fraction_1.Fraction(1, 2);\n            case \"whole\":\n                return new fraction_1.Fraction(1, 1);\n            case \"breve\":\n                return new fraction_1.Fraction(2, 1);\n            case \"long\":\n                return new fraction_1.Fraction(4, 1);\n            case \"maxima\":\n                return new fraction_1.Fraction(8, 1);\n            default: {\n                var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteDurationError\", \"Invalid note duration.\");\n                throw new Exceptions_1.MusicSheetReadingException(errorMsg);\n            }\n        }\n    };\n    // (*)\n    //private readArticulations(notationNode: IXmlElement, currentVoiceEntry: VoiceEntry): void {\n    //    let articNode: IXmlElement;\n    //    if ((articNode = notationNode.element(\"articulations\")) !== undefined)\n    //        this.articulationReader.addArticulationExpression(articNode, currentVoiceEntry);\n    //    let fermaNode: IXmlElement = undefined;\n    //    if ((fermaNode = notationNode.element(\"fermata\")) !== undefined)\n    //        this.articulationReader.addFermata(fermaNode, currentVoiceEntry);\n    //    let tecNode: IXmlElement = undefined;\n    //    if ((tecNode = notationNode.element(\"technical\")) !== undefined)\n    //        this.articulationReader.addTechnicalArticulations(tecNode, currentVoiceEntry);\n    //    let ornaNode: IXmlElement = undefined;\n    //    if ((ornaNode = notationNode.element(\"ornaments\")) !== undefined)\n    //        this.articulationReader.addOrnament(ornaNode, currentVoiceEntry);\n    //}\n    VoiceGenerator.prototype.addSingleNote = function (node, noteDuration, divisions, graceNote, chord, guitarPro) {\n        //Logging.debug(\"addSingleNote called\");\n        var noteAlter = pitch_1.AccidentalEnum.NONE;\n        var noteStep = pitch_2.NoteEnum.C;\n        var noteOctave = 0;\n        var playbackInstrumentId = undefined;\n        var xmlnodeElementsArr = node.elements();\n        for (var idx = 0, len = xmlnodeElementsArr.length; idx < len; ++idx) {\n            var noteElement = xmlnodeElementsArr[idx];\n            try {\n                if (noteElement.name === \"pitch\") {\n                    var noteElementsArr = noteElement.elements();\n                    for (var idx2 = 0, len2 = noteElementsArr.length; idx2 < len2; ++idx2) {\n                        var pitchElement = noteElementsArr[idx2];\n                        try {\n                            if (pitchElement.name === \"step\") {\n                                noteStep = pitch_2.NoteEnum[pitchElement.value];\n                                if (noteStep === undefined) {\n                                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NotePitchError\", \"Invalid pitch while reading note.\");\n                                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                                    throw new Exceptions_1.MusicSheetReadingException(errorMsg, undefined);\n                                }\n                            }\n                            else if (pitchElement.name === \"alter\") {\n                                noteAlter = parseInt(pitchElement.value, 10);\n                                if (isNaN(noteAlter)) {\n                                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteAlterationError\", \"Invalid alteration while reading note.\");\n                                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                                    throw new Exceptions_1.MusicSheetReadingException(errorMsg, undefined);\n                                }\n                            }\n                            else if (pitchElement.name === \"octave\") {\n                                noteOctave = parseInt(pitchElement.value, 10);\n                                if (isNaN(noteOctave)) {\n                                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteOctaveError\", \"Invalid octave value while reading note.\");\n                                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                                    throw new Exceptions_1.MusicSheetReadingException(errorMsg, undefined);\n                                }\n                            }\n                        }\n                        catch (ex) {\n                            logging_1.Logging.log(\"VoiceGenerator.addSingleNote read Step: \", ex.message);\n                        }\n                    }\n                }\n                else if (noteElement.name === \"unpitched\") {\n                    var displayStep = noteElement.element(\"display-step\");\n                    if (displayStep !== undefined) {\n                        noteStep = pitch_2.NoteEnum[displayStep.value.toUpperCase()];\n                    }\n                    var octave = noteElement.element(\"display-octave\");\n                    if (octave !== undefined) {\n                        noteOctave = parseInt(octave.value, 10);\n                        if (guitarPro) {\n                            noteOctave += 1;\n                        }\n                    }\n                }\n                else if (noteElement.name === \"instrument\") {\n                    if (noteElement.firstAttribute !== undefined) {\n                        playbackInstrumentId = noteElement.firstAttribute.value;\n                    }\n                }\n            }\n            catch (ex) {\n                logging_1.Logging.log(\"VoiceGenerator.addSingleNote: \", ex);\n            }\n        }\n        noteOctave -= pitch_3.Pitch.OctaveXmlDifference;\n        var pitch = new pitch_3.Pitch(noteStep, noteOctave, noteAlter);\n        var noteLength = new fraction_1.Fraction(noteDuration, divisions);\n        var note = new Note_1.Note(this.currentVoiceEntry, this.currentStaffEntry, noteLength, pitch);\n        note.PlaybackInstrumentId = playbackInstrumentId;\n        if (!graceNote) {\n            this.currentVoiceEntry.Notes.push(note);\n        }\n        else {\n            this.handleGraceNote(node, note);\n        }\n        if (node.elements(\"beam\") && !chord) {\n            this.createBeam(node, note, graceNote);\n        }\n        return note;\n    };\n    VoiceGenerator.prototype.addRestNote = function (noteDuration, divisions) {\n        var restFraction = new fraction_1.Fraction(noteDuration, divisions);\n        var restNote = new Note_1.Note(this.currentVoiceEntry, this.currentStaffEntry, restFraction, undefined);\n        this.currentVoiceEntry.Notes.push(restNote);\n        if (this.openBeam !== undefined) {\n            this.openBeam.ExtendedNoteList.push(restNote);\n        }\n        return restNote;\n    };\n    VoiceGenerator.prototype.createBeam = function (node, note, grace) {\n        try {\n            var beamNode = node.element(\"beam\");\n            var beamAttr = undefined;\n            if (beamNode !== undefined && beamNode.hasAttributes) {\n                beamAttr = beamNode.attribute(\"number\");\n            }\n            if (beamAttr !== undefined) {\n                var beamNumber = parseInt(beamAttr.value, 10);\n                var mainBeamNode = node.elements(\"beam\");\n                var currentBeamTag = mainBeamNode[0].value;\n                if (beamNumber === 1 && mainBeamNode !== undefined) {\n                    if (currentBeamTag === \"begin\" && this.lastBeamTag !== currentBeamTag) {\n                        if (grace) {\n                            if (this.openGraceBeam !== undefined) {\n                                this.handleOpenBeam();\n                            }\n                            this.openGraceBeam = new Beam_1.Beam();\n                        }\n                        else {\n                            if (this.openBeam !== undefined) {\n                                this.handleOpenBeam();\n                            }\n                            this.openBeam = new Beam_1.Beam();\n                        }\n                    }\n                    this.lastBeamTag = currentBeamTag;\n                }\n                var sameVoiceEntry = false;\n                if (grace) {\n                    if (this.openGraceBeam === undefined) {\n                        return;\n                    }\n                    for (var idx = 0, len = this.openGraceBeam.Notes.length; idx < len; ++idx) {\n                        var beamNote = this.openGraceBeam.Notes[idx];\n                        if (this.currentVoiceEntry === beamNote.ParentVoiceEntry) {\n                            sameVoiceEntry = true;\n                        }\n                    }\n                    if (!sameVoiceEntry) {\n                        this.openGraceBeam.addNoteToBeam(note);\n                        if (currentBeamTag === \"end\" && beamNumber === 1) {\n                            this.openGraceBeam = undefined;\n                        }\n                    }\n                }\n                else {\n                    if (this.openBeam === undefined) {\n                        return;\n                    }\n                    for (var idx = 0, len = this.openBeam.Notes.length; idx < len; ++idx) {\n                        var beamNote = this.openBeam.Notes[idx];\n                        if (this.currentVoiceEntry === beamNote.ParentVoiceEntry) {\n                            sameVoiceEntry = true;\n                        }\n                    }\n                    if (!sameVoiceEntry) {\n                        this.openBeam.addNoteToBeam(note);\n                        if (currentBeamTag === \"end\" && beamNumber === 1) {\n                            this.openBeam = undefined;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/BeamError\", \"Error while reading beam.\");\n            this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n            throw new Exceptions_1.MusicSheetReadingException(\"\", e);\n        }\n    };\n    VoiceGenerator.prototype.handleOpenBeam = function () {\n        if (this.openBeam.Notes.length === 1) {\n            var beamNote = this.openBeam.Notes[0];\n            beamNote.NoteBeam = undefined;\n            this.openBeam = undefined;\n            return;\n        }\n        if (this.currentNote === collectionUtil_1.CollectionUtil.last(this.openBeam.Notes)) {\n            this.openBeam = undefined;\n        }\n        else {\n            var beamLastNote = collectionUtil_1.CollectionUtil.last(this.openBeam.Notes);\n            var beamLastNoteStaffEntry = beamLastNote.ParentStaffEntry;\n            var horizontalIndex = this.currentMeasure.getVerticalContainerIndexByTimestamp(beamLastNoteStaffEntry.Timestamp);\n            var verticalIndex = beamLastNoteStaffEntry.VerticalContainerParent.StaffEntries.indexOf(beamLastNoteStaffEntry);\n            if (horizontalIndex < this.currentMeasure.VerticalSourceStaffEntryContainers.length - 1) {\n                var nextStaffEntry = this.currentMeasure.VerticalSourceStaffEntryContainers[horizontalIndex + 1].StaffEntries[verticalIndex];\n                if (nextStaffEntry !== undefined) {\n                    for (var idx = 0, len = nextStaffEntry.VoiceEntries.length; idx < len; ++idx) {\n                        var voiceEntry = nextStaffEntry.VoiceEntries[idx];\n                        if (voiceEntry.ParentVoice === this.voice) {\n                            var candidateNote = voiceEntry.Notes[0];\n                            if (candidateNote.Length <= new fraction_1.Fraction(1, 8)) {\n                                this.openBeam.addNoteToBeam(candidateNote);\n                                this.openBeam = undefined;\n                            }\n                            else {\n                                this.openBeam = undefined;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                this.openBeam = undefined;\n            }\n        }\n    };\n    VoiceGenerator.prototype.handleGraceNote = function (node, note) {\n        var graceChord = false;\n        var type = \"\";\n        if (node.elements(\"type\")) {\n            var typeNode = node.elements(\"type\");\n            if (typeNode) {\n                type = typeNode[0].value;\n                try {\n                    note.Length = this.getNoteDurationFromType(type);\n                    note.Length.Numerator = 1;\n                }\n                catch (e) {\n                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteDurationError\", \"Invalid note duration.\");\n                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    throw new Exceptions_1.MusicSheetReadingException(errorMsg, e);\n                }\n            }\n        }\n        var graceNode = node.element(\"grace\");\n        if (graceNode !== undefined && graceNode.attributes()) {\n            if (graceNode.attribute(\"slash\")) {\n                var slash = graceNode.attribute(\"slash\").value;\n                if (slash === \"yes\") {\n                    note.GraceNoteSlash = true;\n                }\n            }\n        }\n        if (node.element(\"chord\") !== undefined) {\n            graceChord = true;\n        }\n        var graceVoiceEntry = undefined;\n        if (!graceChord) {\n            graceVoiceEntry = new VoiceEntry_1.VoiceEntry(new fraction_1.Fraction(0, 1), this.currentVoiceEntry.ParentVoice, this.currentStaffEntry);\n            if (this.currentVoiceEntry.graceVoiceEntriesBefore === undefined) {\n                this.currentVoiceEntry.graceVoiceEntriesBefore = [];\n            }\n            this.currentVoiceEntry.graceVoiceEntriesBefore.push(graceVoiceEntry);\n        }\n        else {\n            if (this.currentVoiceEntry.graceVoiceEntriesBefore !== undefined\n                && this.currentVoiceEntry.graceVoiceEntriesBefore.length > 0) {\n                graceVoiceEntry = collectionUtil_1.CollectionUtil.last(this.currentVoiceEntry.graceVoiceEntriesBefore);\n            }\n        }\n        if (graceVoiceEntry !== undefined) {\n            graceVoiceEntry.Notes.push(note);\n            note.ParentVoiceEntry = graceVoiceEntry;\n        }\n    };\n    VoiceGenerator.prototype.addTuplet = function (node, tupletNodeList) {\n        if (tupletNodeList !== undefined && tupletNodeList.length > 1) {\n            var timeModNode = node.element(\"time-modification\");\n            if (timeModNode !== undefined) {\n                timeModNode = timeModNode.element(\"actual-notes\");\n            }\n            var tupletNodeListArr = tupletNodeList;\n            for (var idx = 0, len = tupletNodeListArr.length; idx < len; ++idx) {\n                var tupletNode = tupletNodeListArr[idx];\n                if (tupletNode !== undefined && tupletNode.attributes()) {\n                    var type = tupletNode.attribute(\"type\").value;\n                    if (type === \"start\") {\n                        var tupletNumber = 1;\n                        if (tupletNode.attribute(\"number\")) {\n                            tupletNumber = parseInt(tupletNode.attribute(\"number\").value, 10);\n                        }\n                        var tupletLabelNumber = 0;\n                        if (timeModNode !== undefined) {\n                            tupletLabelNumber = parseInt(timeModNode.value, 10);\n                            if (isNaN(tupletLabelNumber)) {\n                                var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/TupletNoteDurationError\", \"Invalid tuplet note duration.\");\n                                this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                                throw new Exceptions_1.MusicSheetReadingException(errorMsg, undefined);\n                            }\n                        }\n                        var tuplet = new Tuplet_1.Tuplet(tupletLabelNumber);\n                        if (this.tupletDict[tupletNumber] !== undefined) {\n                            delete this.tupletDict[tupletNumber];\n                            if (Object.keys(this.tupletDict).length === 0) {\n                                this.openTupletNumber = 0;\n                            }\n                            else if (Object.keys(this.tupletDict).length > 1) {\n                                this.openTupletNumber--;\n                            }\n                        }\n                        this.tupletDict[tupletNumber] = tuplet;\n                        var subnotelist = [];\n                        subnotelist.push(this.currentNote);\n                        tuplet.Notes.push(subnotelist);\n                        tuplet.Fractions.push(this.getTupletNoteDurationFromType(node));\n                        this.currentNote.NoteTuplet = tuplet;\n                        this.openTupletNumber = tupletNumber;\n                    }\n                    else if (type === \"stop\") {\n                        var tupletNumber = 1;\n                        if (tupletNode.attribute(\"number\")) {\n                            tupletNumber = parseInt(tupletNode.attribute(\"number\").value, 10);\n                        }\n                        var tuplet = this.tupletDict[tupletNumber];\n                        if (tuplet !== undefined) {\n                            var subnotelist = [];\n                            subnotelist.push(this.currentNote);\n                            tuplet.Notes.push(subnotelist);\n                            tuplet.Fractions.push(this.getTupletNoteDurationFromType(node));\n                            this.currentNote.NoteTuplet = tuplet;\n                            delete this.tupletDict[tupletNumber];\n                            if (Object.keys(this.tupletDict).length === 0) {\n                                this.openTupletNumber = 0;\n                            }\n                            else if (Object.keys(this.tupletDict).length > 1) {\n                                this.openTupletNumber--;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (tupletNodeList[0] !== undefined) {\n            var n = tupletNodeList[0];\n            if (n.hasAttributes) {\n                var type = n.attribute(\"type\").value;\n                var tupletnumber = 1;\n                if (n.attribute(\"number\")) {\n                    tupletnumber = parseInt(n.attribute(\"number\").value, 10);\n                }\n                var noTupletNumbering = isNaN(tupletnumber);\n                if (type === \"start\") {\n                    var tupletLabelNumber = 0;\n                    var timeModNode = node.element(\"time-modification\");\n                    if (timeModNode !== undefined) {\n                        timeModNode = timeModNode.element(\"actual-notes\");\n                    }\n                    if (timeModNode !== undefined) {\n                        tupletLabelNumber = parseInt(timeModNode.value, 10);\n                        if (isNaN(tupletLabelNumber)) {\n                            var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/TupletNoteDurationError\", \"Invalid tuplet note duration.\");\n                            this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                            throw new Exceptions_1.MusicSheetReadingException(errorMsg);\n                        }\n                    }\n                    if (noTupletNumbering) {\n                        this.openTupletNumber++;\n                        tupletnumber = this.openTupletNumber;\n                    }\n                    var tuplet = this.tupletDict[tupletnumber];\n                    if (tuplet === undefined) {\n                        tuplet = this.tupletDict[tupletnumber] = new Tuplet_1.Tuplet(tupletLabelNumber);\n                    }\n                    var subnotelist = [];\n                    subnotelist.push(this.currentNote);\n                    tuplet.Notes.push(subnotelist);\n                    tuplet.Fractions.push(this.getTupletNoteDurationFromType(node));\n                    this.currentNote.NoteTuplet = tuplet;\n                    this.openTupletNumber = tupletnumber;\n                }\n                else if (type === \"stop\") {\n                    if (noTupletNumbering) {\n                        tupletnumber = this.openTupletNumber;\n                    }\n                    var tuplet = this.tupletDict[this.openTupletNumber];\n                    if (tuplet !== undefined) {\n                        var subnotelist = [];\n                        subnotelist.push(this.currentNote);\n                        tuplet.Notes.push(subnotelist);\n                        tuplet.Fractions.push(this.getTupletNoteDurationFromType(node));\n                        this.currentNote.NoteTuplet = tuplet;\n                        if (Object.keys(this.tupletDict).length === 0) {\n                            this.openTupletNumber = 0;\n                        }\n                        else if (Object.keys(this.tupletDict).length > 1) {\n                            this.openTupletNumber--;\n                        }\n                        delete this.tupletDict[tupletnumber];\n                    }\n                }\n            }\n        }\n        return this.openTupletNumber;\n    };\n    VoiceGenerator.prototype.handleTimeModificationNode = function (noteNode) {\n        if (this.openTupletNumber in this.tupletDict) {\n            try {\n                var tuplet = this.tupletDict[this.openTupletNumber];\n                var notes = collectionUtil_1.CollectionUtil.last(tuplet.Notes);\n                var lastTupletVoiceEntry = notes[0].ParentVoiceEntry;\n                var noteList = void 0;\n                if (lastTupletVoiceEntry.Timestamp === this.currentVoiceEntry.Timestamp) {\n                    noteList = notes;\n                }\n                else {\n                    noteList = [];\n                    tuplet.Notes.push(noteList);\n                    tuplet.Fractions.push(this.getTupletNoteDurationFromType(noteNode));\n                }\n                noteList.push(this.currentNote);\n                this.currentNote.NoteTuplet = tuplet;\n            }\n            catch (ex) {\n                var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/TupletNumberError\", \"Invalid tuplet number.\");\n                this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                throw ex;\n            }\n        }\n        else if (this.currentVoiceEntry.Notes.length > 0) {\n            var firstNote = this.currentVoiceEntry.Notes[0];\n            if (firstNote.NoteTuplet !== undefined) {\n                var tuplet = firstNote.NoteTuplet;\n                var notes = collectionUtil_1.CollectionUtil.last(tuplet.Notes);\n                notes.push(this.currentNote);\n                this.currentNote.NoteTuplet = tuplet;\n            }\n        }\n    };\n    VoiceGenerator.prototype.addTie = function (tieNodeList, measureStartAbsoluteTimestamp, maxTieNoteFraction) {\n        if (tieNodeList !== undefined) {\n            if (tieNodeList.length === 1) {\n                var tieNode = tieNodeList[0];\n                if (tieNode !== undefined && tieNode.attributes()) {\n                    var type = tieNode.attribute(\"type\").value;\n                    try {\n                        if (type === \"start\") {\n                            var num = this.findCurrentNoteInTieDict(this.currentNote);\n                            if (num < 0) {\n                                delete this.openTieDict[num];\n                            }\n                            var newTieNumber = this.getNextAvailableNumberForTie();\n                            var tie = new Tie_1.Tie(this.currentNote);\n                            this.openTieDict[newTieNumber] = tie;\n                            if (this.currentNote.NoteBeam !== undefined) {\n                                if (this.currentNote.NoteBeam.Notes[0] === this.currentNote) {\n                                    tie.BeamStartTimestamp = fraction_1.Fraction.plus(measureStartAbsoluteTimestamp, this.currentVoiceEntry.Timestamp);\n                                }\n                                else {\n                                    for (var idx = 0, len = this.currentNote.NoteBeam.Notes.length; idx < len; ++idx) {\n                                        var note = this.currentNote.NoteBeam.Notes[idx];\n                                        if (note.NoteTie !== undefined && note.NoteTie !== tie && note.NoteTie.BeamStartTimestamp !== undefined) {\n                                            tie.BeamStartTimestamp = note.NoteTie.BeamStartTimestamp;\n                                            break;\n                                        }\n                                    }\n                                    if (this.currentNote === collectionUtil_1.CollectionUtil.last(this.currentNote.NoteBeam.Notes)) {\n                                        tie.BeamStartTimestamp = fraction_1.Fraction.plus(measureStartAbsoluteTimestamp, this.currentVoiceEntry.Timestamp);\n                                    }\n                                }\n                            }\n                        }\n                        else if (type === \"stop\") {\n                            var tieNumber = this.findCurrentNoteInTieDict(this.currentNote);\n                            var tie = this.openTieDict[tieNumber];\n                            if (tie !== undefined) {\n                                var tieStartNote = tie.Start;\n                                tieStartNote.NoteTie = tie;\n                                tieStartNote.Length.Add(this.currentNote.Length);\n                                tie.Fractions.push(this.currentNote.Length);\n                                if (maxTieNoteFraction.lt(fraction_1.Fraction.plus(this.currentStaffEntry.Timestamp, this.currentNote.Length))) {\n                                    maxTieNoteFraction = fraction_1.Fraction.plus(this.currentStaffEntry.Timestamp, this.currentNote.Length);\n                                }\n                                var i = this.currentVoiceEntry.Notes.indexOf(this.currentNote);\n                                if (i !== -1) {\n                                    this.currentVoiceEntry.Notes.splice(i, 1);\n                                }\n                                if (this.currentVoiceEntry.Articulations.length === 1\n                                    && this.currentVoiceEntry.Articulations[0] === VoiceEntry_2.ArticulationEnum.fermata\n                                    && tieStartNote.ParentVoiceEntry.Articulations[VoiceEntry_2.ArticulationEnum.fermata] === undefined) {\n                                    tieStartNote.ParentVoiceEntry.Articulations.push(VoiceEntry_2.ArticulationEnum.fermata);\n                                }\n                                if (this.currentNote.NoteBeam !== undefined) {\n                                    var noteBeamIndex = this.currentNote.NoteBeam.Notes.indexOf(this.currentNote);\n                                    if (noteBeamIndex === 0 && tie.BeamStartTimestamp === undefined) {\n                                        tie.BeamStartTimestamp = fraction_1.Fraction.plus(measureStartAbsoluteTimestamp, this.currentVoiceEntry.Timestamp);\n                                    }\n                                    var noteBeam = this.currentNote.NoteBeam;\n                                    noteBeam.Notes[noteBeamIndex] = tieStartNote;\n                                    tie.TieBeam = noteBeam;\n                                }\n                                if (this.currentNote.NoteTuplet !== undefined) {\n                                    var noteTupletIndex = this.currentNote.NoteTuplet.getNoteIndex(this.currentNote);\n                                    var index = this.currentNote.NoteTuplet.Notes[noteTupletIndex].indexOf(this.currentNote);\n                                    var noteTuplet = this.currentNote.NoteTuplet;\n                                    noteTuplet.Notes[noteTupletIndex][index] = tieStartNote;\n                                    tie.TieTuplet = noteTuplet;\n                                }\n                                for (var idx = 0, len = this.currentNote.NoteSlurs.length; idx < len; ++idx) {\n                                    var slur = this.currentNote.NoteSlurs[idx];\n                                    if (slur.StartNote === this.currentNote) {\n                                        slur.StartNote = tie.Start;\n                                        slur.StartNote.NoteSlurs.push(slur);\n                                    }\n                                    if (slur.EndNote === this.currentNote) {\n                                        slur.EndNote = tie.Start;\n                                        slur.EndNote.NoteSlurs.push(slur);\n                                    }\n                                }\n                                var lyricsEntries = this.currentVoiceEntry.LyricsEntries;\n                                for (var lyricsEntry in lyricsEntries) {\n                                    if (lyricsEntries.hasOwnProperty(lyricsEntry)) {\n                                        var val = this.currentVoiceEntry.LyricsEntries[lyricsEntry];\n                                        if (!tieStartNote.ParentVoiceEntry.LyricsEntries.hasOwnProperty(lyricsEntry)) {\n                                            tieStartNote.ParentVoiceEntry.LyricsEntries[lyricsEntry] = val;\n                                            val.Parent = tieStartNote.ParentVoiceEntry;\n                                        }\n                                    }\n                                }\n                                delete this.openTieDict[tieNumber];\n                            }\n                        }\n                    }\n                    catch (err) {\n                        var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/TieError\", \"Error while reading tie.\");\n                        this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    }\n                }\n            }\n            else if (tieNodeList.length === 2) {\n                var tieNumber = this.findCurrentNoteInTieDict(this.currentNote);\n                if (tieNumber >= 0) {\n                    var tie = this.openTieDict[tieNumber];\n                    var tieStartNote_1 = tie.Start;\n                    tieStartNote_1.Length.Add(this.currentNote.Length);\n                    tie.Fractions.push(this.currentNote.Length);\n                    if (this.currentNote.NoteBeam !== undefined) {\n                        var noteBeamIndex = this.currentNote.NoteBeam.Notes.indexOf(this.currentNote);\n                        if (noteBeamIndex === 0 && tie.BeamStartTimestamp === undefined) {\n                            tie.BeamStartTimestamp = fraction_1.Fraction.plus(measureStartAbsoluteTimestamp, this.currentVoiceEntry.Timestamp);\n                        }\n                        var noteBeam = this.currentNote.NoteBeam;\n                        noteBeam.Notes[noteBeamIndex] = tieStartNote_1;\n                        tie.TieBeam = noteBeam;\n                    }\n                    for (var idx = 0, len = this.currentNote.NoteSlurs.length; idx < len; ++idx) {\n                        var slur = this.currentNote.NoteSlurs[idx];\n                        if (slur.StartNote === this.currentNote) {\n                            slur.StartNote = tie.Start;\n                            slur.StartNote.NoteSlurs.push(slur);\n                        }\n                        if (slur.EndNote === this.currentNote) {\n                            slur.EndNote = tie.Start;\n                            slur.EndNote.NoteSlurs.push(slur);\n                        }\n                    }\n                    this.currentVoiceEntry.LyricsEntries.forEach(function (key, value) {\n                        if (!tieStartNote_1.ParentVoiceEntry.LyricsEntries.containsKey(key)) {\n                            tieStartNote_1.ParentVoiceEntry.LyricsEntries.setValue(key, value);\n                            value.Parent = tieStartNote_1.ParentVoiceEntry;\n                        }\n                    });\n                    if (maxTieNoteFraction.lt(fraction_1.Fraction.plus(this.currentStaffEntry.Timestamp, this.currentNote.Length))) {\n                        maxTieNoteFraction = fraction_1.Fraction.plus(this.currentStaffEntry.Timestamp, this.currentNote.Length);\n                    }\n                    // delete currentNote from Notes:\n                    var i = this.currentVoiceEntry.Notes.indexOf(this.currentNote);\n                    if (i !== -1) {\n                        this.currentVoiceEntry.Notes.splice(i, 1);\n                    }\n                }\n            }\n        }\n    };\n    VoiceGenerator.prototype.getNextAvailableNumberForTie = function () {\n        var keys = Object.keys(this.openTieDict);\n        if (keys.length === 0) {\n            return 1;\n        }\n        keys.sort(function (a, b) { return (+a - +b); }); // FIXME Andrea: test\n        for (var i = 0; i < keys.length; i++) {\n            if (\"\" + (i + 1) !== keys[i]) {\n                return i + 1;\n            }\n        }\n        return +(keys[keys.length - 1]) + 1;\n    };\n    VoiceGenerator.prototype.findCurrentNoteInTieDict = function (candidateNote) {\n        var openTieDict = this.openTieDict;\n        for (var key in openTieDict) {\n            if (openTieDict.hasOwnProperty(key)) {\n                var tie = openTieDict[key];\n                if (tie.Start.Pitch.FundamentalNote === candidateNote.Pitch.FundamentalNote && tie.Start.Pitch.Octave === candidateNote.Pitch.Octave) {\n                    return +key;\n                }\n            }\n        }\n        return -1;\n    };\n    VoiceGenerator.prototype.getTupletNoteDurationFromType = function (xmlNode) {\n        if (xmlNode.element(\"type\") !== undefined) {\n            var typeNode = xmlNode.element(\"type\");\n            if (typeNode !== undefined) {\n                var type = typeNode.value;\n                try {\n                    return this.getNoteDurationFromType(type);\n                }\n                catch (e) {\n                    var errorMsg = ITextTranslation_1.ITextTranslation.translateText(\"ReaderErrorMessages/NoteDurationError\", \"Invalid note duration.\");\n                    this.musicSheet.SheetErrors.pushMeasureError(errorMsg);\n                    throw new Exceptions_1.MusicSheetReadingException(\"\", e);\n                }\n            }\n        }\n        return undefined;\n    };\n    return VoiceGenerator;\n}());\nexports.VoiceGenerator = VoiceGenerator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/ScoreIO/VoiceGenerator.js\n ** module id = 79\n ** module chunks = 0\n **/","\"use strict\";\nvar Beam = (function () {\n    function Beam() {\n        this.notes = [];\n        this.extendedNoteList = [];\n    }\n    Object.defineProperty(Beam.prototype, \"Notes\", {\n        get: function () {\n            return this.notes;\n        },\n        set: function (value) {\n            this.notes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Beam.prototype, \"ExtendedNoteList\", {\n        get: function () {\n            return this.extendedNoteList;\n        },\n        set: function (value) {\n            this.extendedNoteList = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Beam.prototype.addNoteToBeam = function (note) {\n        if (note !== undefined) {\n            note.NoteBeam = this;\n            this.notes.push(note);\n            this.extendedNoteList.push(note);\n        }\n    };\n    return Beam;\n}());\nexports.Beam = Beam;\n(function (BeamEnum) {\n    BeamEnum[BeamEnum[\"BeamNone\"] = -1] = \"BeamNone\";\n    BeamEnum[BeamEnum[\"BeamBegin\"] = 0] = \"BeamBegin\";\n    BeamEnum[BeamEnum[\"BeamContinue\"] = 1] = \"BeamContinue\";\n    BeamEnum[BeamEnum[\"BeamEnd\"] = 2] = \"BeamEnd\";\n    BeamEnum[BeamEnum[\"BeamForward\"] = 3] = \"BeamForward\";\n    BeamEnum[BeamEnum[\"BeamBackward\"] = 4] = \"BeamBackward\";\n})(exports.BeamEnum || (exports.BeamEnum = {}));\nvar BeamEnum = exports.BeamEnum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Beam.js\n ** module id = 80\n ** module chunks = 0\n **/","\"use strict\";\nvar Tie = (function () {\n    function Tie(note) {\n        this.fractions = [];\n        this.noteHasBeenCreated = [];\n        this.start = note;\n    }\n    Object.defineProperty(Tie.prototype, \"Start\", {\n        get: function () {\n            return this.start;\n        },\n        set: function (value) {\n            this.start = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tie.prototype, \"TieBeam\", {\n        get: function () {\n            return this.tieBeam;\n        },\n        set: function (value) {\n            this.tieBeam = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tie.prototype, \"BeamStartTimestamp\", {\n        get: function () {\n            return this.beamStartTimestamp;\n        },\n        set: function (value) {\n            this.beamStartTimestamp = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tie.prototype, \"TieTuplet\", {\n        get: function () {\n            return this.tieTuplet;\n        },\n        set: function (value) {\n            this.tieTuplet = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tie.prototype, \"Fractions\", {\n        get: function () {\n            return this.fractions;\n        },\n        set: function (value) {\n            this.fractions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tie.prototype, \"NoteHasBeenCreated\", {\n        get: function () {\n            return this.noteHasBeenCreated;\n        },\n        set: function (value) {\n            this.noteHasBeenCreated = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tie.prototype, \"BaseNoteYPosition\", {\n        get: function () {\n            return this.baseNoteYPosition;\n        },\n        set: function (value) {\n            this.baseNoteYPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tie.prototype.initializeBoolList = function () {\n        this.noteHasBeenCreated = [];\n        for (var idx = 0, len = this.fractions.length; idx < len; ++idx) {\n            // let fraction: Fraction = this.fractions[idx];\n            this.noteHasBeenCreated.push(false);\n        }\n    };\n    Tie.prototype.allGraphicalNotesHaveBeenCreated = function () {\n        for (var idx = 0, len = this.noteHasBeenCreated.length; idx < len; ++idx) {\n            if (!this.noteHasBeenCreated[idx]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return Tie;\n}());\nexports.Tie = Tie;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Tie.js\n ** module id = 81\n ** module chunks = 0\n **/","\"use strict\";\nvar Tuplet = (function () {\n    function Tuplet(tupletLabelNumber) {\n        this.notes = [];\n        this.fractions = [];\n        this.tupletLabelNumber = tupletLabelNumber;\n    }\n    Object.defineProperty(Tuplet.prototype, \"TupletLabelNumber\", {\n        get: function () {\n            return this.tupletLabelNumber;\n        },\n        set: function (value) {\n            this.tupletLabelNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tuplet.prototype, \"Notes\", {\n        get: function () {\n            return this.notes;\n        },\n        set: function (value) {\n            this.notes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tuplet.prototype, \"Fractions\", {\n        get: function () {\n            return this.fractions;\n        },\n        set: function (value) {\n            this.fractions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tuplet.prototype.getNoteIndex = function (note) {\n        for (var i = this.notes.length - 1; i >= 0; i--) {\n            for (var j = 0; j < this.notes[i].length; j++) {\n                if (note === this.notes[i][j]) {\n                    return i;\n                }\n            }\n        }\n        return 0;\n    };\n    return Tuplet;\n}());\nexports.Tuplet = Tuplet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/Tuplet.js\n ** module id = 82\n ** module chunks = 0\n **/","\"use strict\";\nvar ITextTranslation = (function () {\n    function ITextTranslation() {\n    }\n    ITextTranslation.translateText = function (tag, text) {\n        if (this.defaultTextTranslation === undefined) {\n            return text;\n        }\n        //return this.DefaultTextTranslation.translate(tag, text);\n    };\n    return ITextTranslation;\n}());\nexports.ITextTranslation = ITextTranslation;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Interfaces/ITextTranslation.js\n ** module id = 83\n ** module chunks = 0\n **/","\"use strict\";\nvar StaffEntryLink = (function () {\n    function StaffEntryLink(voiceEntry) {\n        this.linkStaffEntries = [];\n        this.voiceEntry = voiceEntry;\n    }\n    Object.defineProperty(StaffEntryLink.prototype, \"GetVoiceEntry\", {\n        get: function () {\n            return this.voiceEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaffEntryLink.prototype, \"LinkStaffEntries\", {\n        get: function () {\n            return this.linkStaffEntries;\n        },\n        set: function (value) {\n            this.linkStaffEntries = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return StaffEntryLink;\n}());\nexports.StaffEntryLink = StaffEntryLink;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/VoiceData/StaffEntryLink.js\n ** module id = 84\n ** module chunks = 0\n **/","\"use strict\";\nvar ClefInstruction_1 = require(\"./VoiceData/Instructions/ClefInstruction\");\nvar SubInstrument = (function () {\n    function SubInstrument(parentInstrument) {\n        this.parentInstrument = parentInstrument;\n        this.fixedKey = -1;\n        this.name = this.parseMidiInstrument(this.parentInstrument.Name);\n        this.midiInstrumentID = SubInstrument.midiInstrument[this.name];\n        this.volume = 1.0;\n    }\n    Object.defineProperty(SubInstrument.prototype, \"ParentInstrument\", {\n        get: function () {\n            return this.parentInstrument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SubInstrument.isPianoInstrument = function (instrument) {\n        return (instrument === ClefInstruction_1.MidiInstrument.Acoustic_Grand_Piano\n            || instrument === ClefInstruction_1.MidiInstrument.Bright_Acoustic_Piano\n            || instrument === ClefInstruction_1.MidiInstrument.Electric_Grand_Piano\n            || instrument === ClefInstruction_1.MidiInstrument.Electric_Piano_1\n            || instrument === ClefInstruction_1.MidiInstrument.Electric_Piano_2);\n    };\n    SubInstrument.prototype.setMidiInstrument = function (instrumentType) {\n        this.midiInstrumentID = SubInstrument.midiInstrument[this.parseMidiInstrument(instrumentType)];\n    };\n    SubInstrument.prototype.parseMidiInstrument = function (instrumentType) {\n        // FIXME: test this function\n        try {\n            if (instrumentType) {\n                var tmpName = instrumentType.toLowerCase().trim();\n                for (var key in SubInstrument.midiInstrument) {\n                    if (tmpName.indexOf(key) !== -1) {\n                        return key;\n                    }\n                }\n            }\n            if (this.parentInstrument.Name) {\n                var tmpName = this.parentInstrument.Name.toLowerCase().trim();\n                for (var key in SubInstrument.midiInstrument) {\n                    if (tmpName.indexOf(key) !== -1) {\n                        return key;\n                    }\n                }\n            }\n        }\n        catch (e) {\n            console.log(\"Error parsing MIDI Instrument. Default to Grand Piano.\"); // FIXME\n        }\n        return \"unnamed\";\n    };\n    SubInstrument.midiInstrument = {\n        \"cello\": ClefInstruction_1.MidiInstrument.Cello,\n        \"violon-c\": ClefInstruction_1.MidiInstrument.Cello,\n        \"contrabass\": ClefInstruction_1.MidiInstrument.Contrabass,\n        \"kontrabass\": ClefInstruction_1.MidiInstrument.Contrabass,\n        \"clarinet\": ClefInstruction_1.MidiInstrument.Clarinet,\n        \"klarinette\": ClefInstruction_1.MidiInstrument.Clarinet,\n        \"flute\": ClefInstruction_1.MidiInstrument.Flute,\n        \"flöte\": ClefInstruction_1.MidiInstrument.Flute,\n        \"frenchhorn\": ClefInstruction_1.MidiInstrument.French_Horn,\n        \"guitar\": ClefInstruction_1.MidiInstrument.Acoustic_Guitar_nylon,\n        \"gitarre\": ClefInstruction_1.MidiInstrument.Acoustic_Guitar_nylon,\n        \"harp\": ClefInstruction_1.MidiInstrument.Orchestral_Harp,\n        \"harfe\": ClefInstruction_1.MidiInstrument.Orchestral_Harp,\n        \"oboe\": ClefInstruction_1.MidiInstrument.Oboe,\n        \"organ\": ClefInstruction_1.MidiInstrument.Church_Organ,\n        \"orgue\": ClefInstruction_1.MidiInstrument.Church_Organ,\n        \"orgel\": ClefInstruction_1.MidiInstrument.Church_Organ,\n        \"piano\": ClefInstruction_1.MidiInstrument.Acoustic_Grand_Piano,\n        \"klavier\": ClefInstruction_1.MidiInstrument.Acoustic_Grand_Piano,\n        \"piccolo\": ClefInstruction_1.MidiInstrument.Piccolo,\n        \"strings\": ClefInstruction_1.MidiInstrument.String_Ensemble_1,\n        \"streicher\": ClefInstruction_1.MidiInstrument.String_Ensemble_1,\n        \"steeldrum\": ClefInstruction_1.MidiInstrument.Steel_Drums,\n        \"trombone\": ClefInstruction_1.MidiInstrument.Trombone,\n        \"posaune\": ClefInstruction_1.MidiInstrument.Trombone,\n        \"brass\": ClefInstruction_1.MidiInstrument.Trombone,\n        \"trumpet\": ClefInstruction_1.MidiInstrument.Trumpet,\n        \"trompete\": ClefInstruction_1.MidiInstrument.Trumpet,\n        \"tpt\": ClefInstruction_1.MidiInstrument.Trumpet,\n        \"tuba\": ClefInstruction_1.MidiInstrument.Tuba,\n        \"sax\": ClefInstruction_1.MidiInstrument.Tenor_Sax,\n        \"viola\": ClefInstruction_1.MidiInstrument.Viola,\n        \"bratsche\": ClefInstruction_1.MidiInstrument.Viola,\n        \"violin\": ClefInstruction_1.MidiInstrument.Violin,\n        \"violon.\": ClefInstruction_1.MidiInstrument.Violin,\n        \"woodblock\": ClefInstruction_1.MidiInstrument.Woodblock,\n        \"alt\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"alto\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"tenor\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"bariton\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"baritone\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"bass\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"sopran\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"voice\": ClefInstruction_1.MidiInstrument.Synth_Voice,\n        \"recorder\": ClefInstruction_1.MidiInstrument.Recorder,\n        \"blockflöte\": ClefInstruction_1.MidiInstrument.Recorder,\n        \"banjo\": ClefInstruction_1.MidiInstrument.Banjo,\n        \"drums\": ClefInstruction_1.MidiInstrument.Percussion,\n        \"percussion\": ClefInstruction_1.MidiInstrument.Percussion,\n        \"schlagzeug\": ClefInstruction_1.MidiInstrument.Percussion,\n        \"schlagwerk\": ClefInstruction_1.MidiInstrument.Percussion,\n        \"unnamed\": ClefInstruction_1.MidiInstrument.Acoustic_Grand_Piano,\n    };\n    return SubInstrument;\n}());\nexports.SubInstrument = SubInstrument;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/SubInstrument.js\n ** module id = 85\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vex = require(\"vexflow\");\nvar MusicSheetDrawer_1 = require(\"../MusicSheetDrawer\");\nvar RectangleF2D_1 = require(\"../../../Common/DataObjects/RectangleF2D\");\nvar PointF2D_1 = require(\"../../../Common/DataObjects/PointF2D\");\n/**\n * Created by Matthias on 22.06.2016.\n */\nvar VexFlowMusicSheetDrawer = (function (_super) {\n    __extends(VexFlowMusicSheetDrawer, _super);\n    function VexFlowMusicSheetDrawer(canvas, textMeasurer, isPreviewImageDrawer) {\n        if (isPreviewImageDrawer === void 0) { isPreviewImageDrawer = false; }\n        _super.call(this, textMeasurer, isPreviewImageDrawer);\n        this.renderer = new Vex.Flow.Renderer(canvas, Vex.Flow.Renderer.Backends.CANVAS);\n        this.ctx = this.renderer.getContext();\n    }\n    VexFlowMusicSheetDrawer.prototype.scale = function (k) {\n        this.ctx.scale(k, k);\n    };\n    VexFlowMusicSheetDrawer.prototype.resize = function (x, y) {\n        this.renderer.resize(x, y);\n    };\n    VexFlowMusicSheetDrawer.prototype.translate = function (x, y) {\n        // FIXME\n        this.ctx.vexFlowCanvasContext.translate(x, y);\n    };\n    /**\n     * Converts a distance from unit to pixel space.\n     * @param unitDistance the distance in units\n     * @returns {number} the distance in pixels\n     */\n    VexFlowMusicSheetDrawer.prototype.calculatePixelDistance = function (unitDistance) {\n        // ToDo: implement!\n        return unitDistance * 10.0;\n    };\n    VexFlowMusicSheetDrawer.prototype.drawMeasure = function (measure) {\n        measure.setAbsoluteCoordinates(measure.PositionAndShape.AbsolutePosition.x * measure.unit, measure.PositionAndShape.AbsolutePosition.y * measure.unit);\n        return measure.draw(this.ctx);\n    };\n    /**\n     * Renders a Label to the screen (e.g. Title, composer..)\n     * @param graphicalLabel holds the label string, the text height in units and the font parameters\n     * @param layer is the current rendering layer. There are many layers on top of each other to which can be rendered. Not needed for now.\n     * @param bitmapWidth Not needed for now.\n     * @param bitmapHeight Not needed for now.\n     * @param heightInPixel the height of the text in screen coordinates\n     * @param screenPosition the position of the lower left corner of the text in screen coordinates\n     */\n    VexFlowMusicSheetDrawer.prototype.renderLabel = function (graphicalLabel, layer, bitmapWidth, bitmapHeight, heightInPixel, screenPosition) {\n        // ToDo: implement!\n        var ctx = this.ctx.vexFlowCanvasContext;\n        ctx.font = Math.floor(graphicalLabel.Label.fontHeight * 10) + \"px 'Times New Roman'\";\n        console.log(graphicalLabel.Label.text, screenPosition.x, screenPosition.y);\n        ctx.fillText(graphicalLabel.Label.text, screenPosition.x, screenPosition.y);\n    };\n    /**\n     * Renders a rectangle with the given style to the screen.\n     * It is given in screen coordinates.\n     * @param rectangle the rect in screen coordinates\n     * @param layer is the current rendering layer. There are many layers on top of each other to which can be rendered. Not needed for now.\n     * @param styleId the style id\n     */\n    VexFlowMusicSheetDrawer.prototype.renderRectangle = function (rectangle, layer, styleId) {\n        // ToDo: implement!\n    };\n    /**\n     * Converts a point from unit to pixel space.\n     * @param point\n     * @returns {PointF2D}\n     */\n    VexFlowMusicSheetDrawer.prototype.applyScreenTransformation = function (point) {\n        // ToDo: implement!\n        return new PointF2D_1.PointF2D(point.x * 10.0, point.y * 10.0);\n    };\n    /**\n     * Converts a rectangle from unit to pixel space.\n     * @param rectangle\n     * @returns {RectangleF2D}\n     */\n    VexFlowMusicSheetDrawer.prototype.applyScreenTransformationForRect = function (rectangle) {\n        // FIXME Check if correct\n        return new RectangleF2D_1.RectangleF2D(rectangle.x * 10, rectangle.y * 10, rectangle.width * 10, rectangle.height * 10);\n    };\n    return VexFlowMusicSheetDrawer;\n}(MusicSheetDrawer_1.MusicSheetDrawer));\nexports.VexFlowMusicSheetDrawer = VexFlowMusicSheetDrawer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/VexFlow/VexFlowMusicSheetDrawer.js\n ** module id = 86\n ** module chunks = 0\n **/","\"use strict\";\nvar BoundingBox_1 = require(\"./BoundingBox\");\nvar DrawingEnums_1 = require(\"./DrawingEnums\");\nvar DrawingParameters_1 = require(\"./DrawingParameters\");\nvar GraphicalLine_1 = require(\"./GraphicalLine\");\nvar RectangleF2D_1 = require(\"../../Common/DataObjects/RectangleF2D\");\nvar PointF2D_1 = require(\"../../Common/DataObjects/PointF2D\");\nvar TextAlignment_1 = require(\"../../Common/Enums/TextAlignment\");\nvar Exceptions_1 = require(\"../Exceptions\");\nvar MusicSymbol_1 = require(\"./MusicSymbol\");\nvar DrawingMode_1 = require(\"./DrawingMode\");\nvar MusicSheetDrawer = (function () {\n    function MusicSheetDrawer(textMeasurer, isPreviewImageDrawer) {\n        if (isPreviewImageDrawer === void 0) { isPreviewImageDrawer = false; }\n        this.drawingParameters = new DrawingParameters_1.DrawingParameters();\n        this.phonicScoreMode = DrawingMode_1.PhonicScoreModes.Manual;\n        this.textMeasurer = textMeasurer;\n        this.splitScreenLineColor = -1;\n        if (isPreviewImageDrawer) {\n            this.drawingParameters.setForThumbmail();\n        }\n        else {\n            this.drawingParameters.setForAllOn();\n        }\n    }\n    Object.defineProperty(MusicSheetDrawer.prototype, \"Mode\", {\n        set: function (value) {\n            this.phonicScoreMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheetDrawer.prototype.drawSheet = function (graphicalMusicSheet) {\n        this.graphicalMusicSheet = graphicalMusicSheet;\n        this.rules = graphicalMusicSheet.ParentMusicSheet.Rules;\n        this.drawSplitScreenLine();\n        if (this.drawingParameters.drawCursors) {\n            for (var _i = 0, _a = graphicalMusicSheet.Cursors; _i < _a.length; _i++) {\n                var line = _a[_i];\n                var psi = new BoundingBox_1.BoundingBox(line);\n                psi.AbsolutePosition = line.Start;\n                psi.BorderBottom = line.End.y - line.Start.y;\n                psi.BorderRight = line.Width / 2.0;\n                psi.BorderLeft = -line.Width / 2.0;\n                if (this.isVisible(psi)) {\n                    this.drawLineAsVerticalRectangle(line, DrawingEnums_1.GraphicalLayers.Cursor);\n                }\n            }\n        }\n        if (this.drawingParameters.drawScrollIndicator) {\n            this.drawScrollIndicator();\n        }\n        for (var _b = 0, _c = this.graphicalMusicSheet.MusicPages; _b < _c.length; _b++) {\n            var page = _c[_b];\n            this.drawPage(page);\n        }\n    };\n    MusicSheetDrawer.prototype.drawLineAsHorizontalRectangle = function (line, layer) {\n        var rectangle = new RectangleF2D_1.RectangleF2D(line.Start.x, line.End.y - line.Width / 2, line.End.x - line.Start.x, line.Width);\n        rectangle = this.applyScreenTransformationForRect(rectangle);\n        this.renderRectangle(rectangle, layer, line.styleId);\n    };\n    MusicSheetDrawer.prototype.drawLineAsVerticalRectangle = function (line, layer) {\n        var lineStart = line.Start;\n        var lineWidth = line.Width;\n        var rectangle = new RectangleF2D_1.RectangleF2D(lineStart.x - lineWidth / 2, lineStart.y, lineWidth, line.End.y - lineStart.y);\n        rectangle = this.applyScreenTransformationForRect(rectangle);\n        this.renderRectangle(rectangle, layer, line.styleId);\n    };\n    MusicSheetDrawer.prototype.drawLineAsHorizontalRectangleWithOffset = function (line, offset, layer) {\n        var start = new PointF2D_1.PointF2D(line.Start.x + offset.x, line.Start.y + offset.y);\n        var end = new PointF2D_1.PointF2D(line.End.x + offset.x, line.End.y + offset.y);\n        var width = line.Width;\n        var rectangle = new RectangleF2D_1.RectangleF2D(start.x, end.y - width / 2, end.x - start.x, width);\n        rectangle = this.applyScreenTransformationForRect(rectangle);\n        this.renderRectangle(rectangle, layer, line.styleId);\n    };\n    MusicSheetDrawer.prototype.drawLineAsVerticalRectangleWithOffset = function (line, offset, layer) {\n        var start = new PointF2D_1.PointF2D(line.Start.x + offset.x, line.Start.y + offset.y);\n        var end = new PointF2D_1.PointF2D(line.End.x + offset.x, line.End.y + offset.y);\n        var width = line.Width;\n        var rectangle = new RectangleF2D_1.RectangleF2D(start.x, start.y, width, end.y - start.y);\n        rectangle = this.applyScreenTransformationForRect(rectangle);\n        this.renderRectangle(rectangle, layer, line.styleId);\n    };\n    MusicSheetDrawer.prototype.drawRectangle = function (rect, layer) {\n        var psi = rect.PositionAndShape;\n        var rectangle = new RectangleF2D_1.RectangleF2D(psi.AbsolutePosition.x, psi.AbsolutePosition.y, psi.BorderRight, psi.BorderBottom);\n        rectangle = this.applyScreenTransformationForRect(rectangle);\n        this.renderRectangle(rectangle, layer, rect.style);\n    };\n    MusicSheetDrawer.prototype.calculatePixelDistance = function (unitDistance) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSheetDrawer.prototype.drawLabel = function (graphicalLabel, layer) {\n        if (!this.isVisible(graphicalLabel.PositionAndShape)) {\n            return;\n        }\n        var label = graphicalLabel.Label;\n        if (label.text.trim() === \"\") {\n            return;\n        }\n        var screenPosition = this.applyScreenTransformation(graphicalLabel.PositionAndShape.AbsolutePosition);\n        var heightInPixel = this.calculatePixelDistance(label.fontHeight);\n        var widthInPixel = heightInPixel * this.textMeasurer.computeTextWidthToHeightRatio(label.text, label.font, label.fontStyle);\n        var bitmapWidth = Math.ceil(widthInPixel);\n        var bitmapHeight = Math.ceil(heightInPixel * 1.2);\n        switch (label.textAlignment) {\n            case TextAlignment_1.TextAlignment.LeftTop:\n                break;\n            case TextAlignment_1.TextAlignment.LeftCenter:\n                screenPosition.y -= bitmapHeight / 2;\n                break;\n            case TextAlignment_1.TextAlignment.LeftBottom:\n                screenPosition.y -= bitmapHeight;\n                break;\n            case TextAlignment_1.TextAlignment.CenterTop:\n                screenPosition.x -= bitmapWidth / 2;\n                break;\n            case TextAlignment_1.TextAlignment.CenterCenter:\n                screenPosition.x -= bitmapWidth / 2;\n                screenPosition.y -= bitmapHeight / 2;\n                break;\n            case TextAlignment_1.TextAlignment.CenterBottom:\n                screenPosition.x -= bitmapWidth / 2;\n                screenPosition.y -= bitmapHeight;\n                break;\n            case TextAlignment_1.TextAlignment.RightTop:\n                screenPosition.x -= bitmapWidth;\n                break;\n            case TextAlignment_1.TextAlignment.RightCenter:\n                screenPosition.x -= bitmapWidth;\n                screenPosition.y -= bitmapHeight / 2;\n                break;\n            case TextAlignment_1.TextAlignment.RightBottom:\n                screenPosition.x -= bitmapWidth;\n                screenPosition.y -= bitmapHeight;\n                break;\n            default:\n                throw new Exceptions_1.ArgumentOutOfRangeException(\"\");\n        }\n        this.renderLabel(graphicalLabel, layer, bitmapWidth, bitmapHeight, heightInPixel, screenPosition);\n    };\n    MusicSheetDrawer.prototype.applyScreenTransformation = function (point) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSheetDrawer.prototype.applyScreenTransformations = function (points) {\n        var transformedPoints = [];\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var point = points_1[_i];\n            transformedPoints.push(this.applyScreenTransformation(point));\n        }\n        return transformedPoints;\n    };\n    MusicSheetDrawer.prototype.applyScreenTransformationForRect = function (rectangle) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSheetDrawer.prototype.drawSplitScreenLine = function () {\n        // empty\n    };\n    MusicSheetDrawer.prototype.renderRectangle = function (rectangle, layer, styleId) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSheetDrawer.prototype.drawScrollIndicator = function () {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawSelectionStartSymbol = function (symbol) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawSelectionEndSymbol = function (symbol) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.renderLabel = function (graphicalLabel, layer, bitmapWidth, bitmapHeight, heightInPixel, screenPosition) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSheetDrawer.prototype.renderSystemToScreen = function (system, systemBoundingBoxInPixels, absBoundingRectWithMargin) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawMeasure = function (measure) {\n        throw new Error(\"not implemented\");\n    };\n    MusicSheetDrawer.prototype.drawSkyLine = function (staffLine) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawBottomLine = function (staffLine) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawInstrumentBracket = function (bracket, system) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawGroupBracket = function (bracket, system) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.isVisible = function (psi) {\n        return true;\n    };\n    MusicSheetDrawer.prototype.drawMusicSystem = function (system) {\n        var absBoundingRectWithMargin = this.getSystemAbsBoundingRect(system);\n        var systemBoundingBoxInPixels = this.getSytemBoundingBoxInPixels(absBoundingRectWithMargin);\n        this.drawMusicSystemComponents(system, systemBoundingBoxInPixels, absBoundingRectWithMargin);\n    };\n    MusicSheetDrawer.prototype.getSytemBoundingBoxInPixels = function (absBoundingRectWithMargin) {\n        var systemBoundingBoxInPixels = this.applyScreenTransformationForRect(absBoundingRectWithMargin);\n        systemBoundingBoxInPixels.x = Math.round(systemBoundingBoxInPixels.x);\n        systemBoundingBoxInPixels.y = Math.round(systemBoundingBoxInPixels.y);\n        return systemBoundingBoxInPixels;\n    };\n    MusicSheetDrawer.prototype.getSystemAbsBoundingRect = function (system) {\n        var relBoundingRect = system.PositionAndShape.BoundingRectangle;\n        var absBoundingRectWithMargin = new RectangleF2D_1.RectangleF2D(system.PositionAndShape.AbsolutePosition.x + system.PositionAndShape.BorderLeft - 1, system.PositionAndShape.AbsolutePosition.y + system.PositionAndShape.BorderTop - 1, (relBoundingRect.width + 6), (relBoundingRect.height + 2));\n        return absBoundingRectWithMargin;\n    };\n    MusicSheetDrawer.prototype.drawMusicSystemComponents = function (musicSystem, systemBoundingBoxInPixels, absBoundingRectWithMargin) {\n        var selectStartSymb = this.graphicalMusicSheet.SelectionStartSymbol;\n        var selectEndSymb = this.graphicalMusicSheet.SelectionEndSymbol;\n        if (this.drawingParameters.drawSelectionStartSymbol) {\n            if (selectStartSymb !== undefined && this.isVisible(selectStartSymb.PositionAndShape)) {\n                this.drawSelectionStartSymbol(selectStartSymb);\n            }\n        }\n        if (this.drawingParameters.drawSelectionEndSymbol) {\n            if (selectEndSymb !== undefined && this.isVisible(selectEndSymb.PositionAndShape)) {\n                this.drawSelectionEndSymbol(selectEndSymb);\n            }\n        }\n        for (var _i = 0, _a = musicSystem.StaffLines; _i < _a.length; _i++) {\n            var staffLine = _a[_i];\n            this.drawStaffLine(staffLine);\n        }\n        for (var _b = 0, _c = musicSystem.SystemLines; _b < _c.length; _b++) {\n            var systemLine = _c[_b];\n            this.drawSystemLineObject(systemLine);\n        }\n        if (musicSystem === musicSystem.Parent.MusicSystems[0] && musicSystem.Parent === musicSystem.Parent.Parent.MusicPages[0]) {\n            for (var _d = 0, _e = musicSystem.Labels; _d < _e.length; _d++) {\n                var label = _e[_d];\n                this.drawLabel(label, DrawingEnums_1.GraphicalLayers.Notes);\n            }\n        }\n        for (var _f = 0, _g = musicSystem.InstrumentBrackets; _f < _g.length; _f++) {\n            var bracket = _g[_f];\n            this.drawInstrumentBracket(bracket, musicSystem);\n        }\n        for (var _h = 0, _j = musicSystem.GroupBrackets; _h < _j.length; _h++) {\n            var bracket = _j[_h];\n            this.drawGroupBracket(bracket, musicSystem);\n        }\n        if (!this.leadSheet) {\n            for (var _k = 0, _l = musicSystem.MeasureNumberLabels; _k < _l.length; _k++) {\n                var measureNumberLabel = _l[_k];\n                this.drawLabel(measureNumberLabel, DrawingEnums_1.GraphicalLayers.Notes);\n            }\n        }\n        for (var _m = 0, _o = musicSystem.StaffLines; _m < _o.length; _m++) {\n            var staffLine = _o[_m];\n            this.drawStaffLineSymbols(staffLine);\n        }\n        if (this.drawingParameters.drawMarkedAreas) {\n            this.drawMarkedAreas(musicSystem);\n        }\n        if (this.drawingParameters.drawComments) {\n            this.drawComment(musicSystem);\n        }\n    };\n    MusicSheetDrawer.prototype.activateSystemRendering = function (systemId, absBoundingRect, systemBoundingBoxInPixels, createNewImage) {\n        return true;\n    };\n    MusicSheetDrawer.prototype.drawSystemLineObject = function (systemLine) {\n        // empty\n    };\n    MusicSheetDrawer.prototype.drawStaffLine = function (staffLine) {\n        for (var _i = 0, _a = staffLine.Measures; _i < _a.length; _i++) {\n            var measure = _a[_i];\n            this.drawMeasure(measure);\n        }\n    };\n    // protected drawSlur(slur: GraphicalSlur, abs: PointF2D): void {\n    //\n    // }\n    MusicSheetDrawer.prototype.drawOctaveShift = function (staffLine, graphicalOctaveShift) {\n        this.drawSymbol(graphicalOctaveShift.octaveSymbol, DrawingMode_1.MusicSymbolDrawingStyle.Normal, graphicalOctaveShift.PositionAndShape.AbsolutePosition);\n        var absolutePos = staffLine.PositionAndShape.AbsolutePosition;\n        if (graphicalOctaveShift.dashesStart.x < graphicalOctaveShift.dashesEnd.x) {\n            var horizontalLine = new GraphicalLine_1.GraphicalLine(graphicalOctaveShift.dashesStart, graphicalOctaveShift.dashesEnd, this.rules.OctaveShiftLineWidth);\n            this.drawLineAsHorizontalRectangleWithOffset(horizontalLine, absolutePos, DrawingEnums_1.GraphicalLayers.Notes);\n        }\n        if (!graphicalOctaveShift.endsOnDifferentStaffLine || graphicalOctaveShift.isSecondPart) {\n            var verticalLine = void 0;\n            var dashEnd = graphicalOctaveShift.dashesEnd;\n            var octShiftVertLineLength = this.rules.OctaveShiftVerticalLineLength;\n            var octShiftLineWidth = this.rules.OctaveShiftLineWidth;\n            if (graphicalOctaveShift.octaveSymbol === MusicSymbol_1.MusicSymbol.VA8 || graphicalOctaveShift.octaveSymbol === MusicSymbol_1.MusicSymbol.MA15) {\n                verticalLine = new GraphicalLine_1.GraphicalLine(dashEnd, new PointF2D_1.PointF2D(dashEnd.x, dashEnd.y + octShiftVertLineLength), octShiftLineWidth);\n            }\n            else {\n                verticalLine = new GraphicalLine_1.GraphicalLine(new PointF2D_1.PointF2D(dashEnd.x, dashEnd.y - octShiftVertLineLength), dashEnd, octShiftLineWidth);\n            }\n            this.drawLineAsVerticalRectangleWithOffset(verticalLine, absolutePos, DrawingEnums_1.GraphicalLayers.Notes);\n        }\n    };\n    MusicSheetDrawer.prototype.drawStaffLines = function (staffLine) {\n        if (staffLine.StaffLines !== undefined) {\n            var position = staffLine.PositionAndShape.AbsolutePosition;\n            for (var i = 0; i < 5; i++) {\n                this.drawLineAsHorizontalRectangleWithOffset(staffLine.StaffLines[i], position, DrawingEnums_1.GraphicalLayers.Notes);\n            }\n        }\n    };\n    // protected drawEnding(ending: GraphicalRepetitionEnding, absolutePosition: PointF2D): void {\n    //     if (undefined !== ending.Left)\n    //         drawLineAsVerticalRectangle(ending.Left, absolutePosition, <number>GraphicalLayers.Notes);\n    //     this.drawLineAsHorizontalRectangle(ending.Top, absolutePosition, <number>GraphicalLayers.Notes);\n    //     if (undefined !== ending.Right)\n    //         drawLineAsVerticalRectangle(ending.Right, absolutePosition, <number>GraphicalLayers.Notes);\n    //     this.drawLabel(ending.Label, <number>GraphicalLayers.Notes);\n    // }\n    // protected drawInstantaniousDynamic(expression: GraphicalInstantaniousDynamicExpression): void {\n    //     expression.ExpressionSymbols.forEach(function (expressionSymbol) {\n    //         let position: PointF2D = expressionSymbol.PositionAndShape.AbsolutePosition;\n    //         let symbol: MusicSymbol = expressionSymbol.GetSymbol;\n    //         drawSymbol(symbol, MusicSymbolDrawingStyle.Normal, position);\n    //     });\n    // }\n    // protected drawContinuousDynamic(expression: GraphicalContinuousDynamicExpression,\n    //     absolute: PointF2D): void {\n    //     throw new Error(\"not implemented\");\n    // }\n    MusicSheetDrawer.prototype.drawSymbol = function (symbol, symbolStyle, position, scalingFactor, layer) {\n        if (scalingFactor === void 0) { scalingFactor = 1; }\n        if (layer === void 0) { layer = DrawingEnums_1.GraphicalLayers.Notes; }\n        //empty\n    };\n    Object.defineProperty(MusicSheetDrawer.prototype, \"leadSheet\", {\n        get: function () {\n            return this.graphicalMusicSheet.LeadSheet;\n        },\n        set: function (value) {\n            this.graphicalMusicSheet.LeadSheet = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MusicSheetDrawer.prototype.drawPage = function (page) {\n        if (!this.isVisible(page.PositionAndShape)) {\n            return;\n        }\n        for (var _i = 0, _a = page.MusicSystems; _i < _a.length; _i++) {\n            var system = _a[_i];\n            if (this.isVisible(system.PositionAndShape)) {\n                this.drawMusicSystem(system);\n            }\n        }\n        if (page === page.Parent.MusicPages[0]) {\n            for (var _b = 0, _c = page.Labels; _b < _c.length; _b++) {\n                var label = _c[_b];\n                this.drawLabel(label, DrawingEnums_1.GraphicalLayers.Notes);\n            }\n        }\n    };\n    MusicSheetDrawer.prototype.drawMarkedAreas = function (system) {\n        for (var _i = 0, _a = system.GraphicalMarkedAreas; _i < _a.length; _i++) {\n            var markedArea = _a[_i];\n            if (markedArea !== undefined) {\n                if (markedArea.systemRectangle !== undefined) {\n                    this.drawRectangle(markedArea.systemRectangle, DrawingEnums_1.GraphicalLayers.Background);\n                }\n                if (markedArea.settings !== undefined) {\n                    this.drawLabel(markedArea.settings, DrawingEnums_1.GraphicalLayers.Comment);\n                }\n                if (markedArea.labelRectangle !== undefined) {\n                    this.drawRectangle(markedArea.labelRectangle, DrawingEnums_1.GraphicalLayers.Background);\n                }\n                if (markedArea.label !== undefined) {\n                    this.drawLabel(markedArea.label, DrawingEnums_1.GraphicalLayers.Comment);\n                }\n            }\n        }\n    };\n    MusicSheetDrawer.prototype.drawComment = function (system) {\n        for (var _i = 0, _a = system.GraphicalComments; _i < _a.length; _i++) {\n            var comment = _a[_i];\n            if (comment !== undefined) {\n                if (comment.settings !== undefined) {\n                    this.drawLabel(comment.settings, DrawingEnums_1.GraphicalLayers.Comment);\n                }\n                if (comment.label !== undefined) {\n                    this.drawLabel(comment.label, DrawingEnums_1.GraphicalLayers.Comment);\n                }\n            }\n        }\n    };\n    MusicSheetDrawer.prototype.drawStaffLineSymbols = function (staffLine) {\n        var parentInst = staffLine.ParentStaff.ParentInstrument;\n        var absX = staffLine.PositionAndShape.AbsolutePosition.x;\n        var absY = staffLine.PositionAndShape.AbsolutePosition.y + 2;\n        var borderRight = staffLine.PositionAndShape.BorderRight;\n        if (parentInst.highlight && this.drawingParameters.drawHighlights) {\n            this.drawLineAsHorizontalRectangle(new GraphicalLine_1.GraphicalLine(new PointF2D_1.PointF2D(absX, absY), new PointF2D_1.PointF2D(absX + borderRight, absY), 4, DrawingEnums_1.OutlineAndFillStyleEnum.Highlighted), DrawingEnums_1.GraphicalLayers.Highlight);\n        }\n        var style = DrawingMode_1.MusicSymbolDrawingStyle.Disabled;\n        var symbol = MusicSymbol_1.MusicSymbol.PLAY;\n        var drawSymbols = this.drawingParameters.drawActivitySymbols;\n        switch (this.phonicScoreMode) {\n            case DrawingMode_1.PhonicScoreModes.Midi:\n                symbol = MusicSymbol_1.MusicSymbol.PLAY;\n                if (this.midiPlaybackAvailable && staffLine.ParentStaff.audible) {\n                    style = DrawingMode_1.MusicSymbolDrawingStyle.PlaybackSymbols;\n                }\n                break;\n            case DrawingMode_1.PhonicScoreModes.Following:\n                symbol = MusicSymbol_1.MusicSymbol.MIC;\n                if (staffLine.ParentStaff.following) {\n                    style = DrawingMode_1.MusicSymbolDrawingStyle.FollowSymbols;\n                }\n                break;\n            default:\n                drawSymbols = false;\n                break;\n        }\n        if (drawSymbols) {\n            var p = new PointF2D_1.PointF2D(absX + borderRight + 2, absY);\n            this.drawSymbol(symbol, style, p);\n        }\n        if (this.drawingParameters.drawErrors) {\n            for (var _i = 0, _a = staffLine.Measures; _i < _a.length; _i++) {\n                var measure = _a[_i];\n                var measurePSI = measure.PositionAndShape;\n                var absXPSI = measurePSI.AbsolutePosition.x;\n                var absYPSI = measurePSI.AbsolutePosition.y + 2;\n                if (measure.hasError && this.graphicalMusicSheet.ParentMusicSheet.DrawErroneousMeasures) {\n                    this.drawLineAsHorizontalRectangle(new GraphicalLine_1.GraphicalLine(new PointF2D_1.PointF2D(absXPSI, absYPSI), new PointF2D_1.PointF2D(absXPSI + measurePSI.BorderRight, absYPSI), 4, DrawingEnums_1.OutlineAndFillStyleEnum.ErrorUnderlay), DrawingEnums_1.GraphicalLayers.MeasureError);\n                }\n            }\n        }\n    };\n    return MusicSheetDrawer;\n}());\nexports.MusicSheetDrawer = MusicSheetDrawer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSheetDrawer.js\n ** module id = 87\n ** module chunks = 0\n **/","\"use strict\";\nvar DrawingParameters = (function () {\n    function DrawingParameters() {\n    }\n    DrawingParameters.prototype.setForAllOn = function () {\n        this.drawHighlights = true;\n        this.drawErrors = true;\n        this.drawSelectionStartSymbol = true;\n        this.drawSelectionEndSymbol = true;\n        this.drawCursors = true;\n        this.drawActivitySymbols = true;\n        this.drawScrollIndicator = true;\n        this.drawComments = true;\n        this.drawMarkedAreas = true;\n    };\n    DrawingParameters.prototype.setForThumbmail = function () {\n        this.drawHighlights = false;\n        this.drawErrors = false;\n        this.drawSelectionStartSymbol = false;\n        this.drawSelectionStartSymbol = false;\n        this.drawCursors = false;\n        this.drawActivitySymbols = false;\n        this.drawScrollIndicator = false;\n        this.drawComments = true;\n        this.drawMarkedAreas = true;\n    };\n    DrawingParameters.prototype.setForLeadsheet = function () {\n        this.drawHighlights = false;\n        this.drawErrors = false;\n        this.drawSelectionStartSymbol = true;\n        this.drawSelectionEndSymbol = true;\n        this.drawCursors = true;\n        this.drawActivitySymbols = false;\n        this.drawScrollIndicator = true;\n        this.drawComments = true;\n        this.drawMarkedAreas = true;\n    };\n    return DrawingParameters;\n}());\nexports.DrawingParameters = DrawingParameters;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/DrawingParameters.js\n ** module id = 88\n ** module chunks = 0\n **/","\"use strict\";\n(function (MusicSymbol) {\n    MusicSymbol[MusicSymbol[\"Unused_first_Symbol\"] = 0] = \"Unused_first_Symbol\";\n    MusicSymbol[MusicSymbol[\"BLACK_HEAD\"] = 1] = \"BLACK_HEAD\";\n    MusicSymbol[MusicSymbol[\"UPWARDS_TAIL\"] = 2] = \"UPWARDS_TAIL\";\n    MusicSymbol[MusicSymbol[\"DOWNWARDS_TAIL\"] = 3] = \"DOWNWARDS_TAIL\";\n    MusicSymbol[MusicSymbol[\"UPWARDS_DOUBLE_TAIL\"] = 4] = \"UPWARDS_DOUBLE_TAIL\";\n    MusicSymbol[MusicSymbol[\"DOWNWARDS_DOUBLE_TAIL\"] = 5] = \"DOWNWARDS_DOUBLE_TAIL\";\n    MusicSymbol[MusicSymbol[\"UPWARDS_TRIPLE_TAIL\"] = 6] = \"UPWARDS_TRIPLE_TAIL\";\n    MusicSymbol[MusicSymbol[\"DOWNWARDS_TRIPLE_TAIL\"] = 7] = \"DOWNWARDS_TRIPLE_TAIL\";\n    MusicSymbol[MusicSymbol[\"UPWARDS_QUAD_TAIL\"] = 8] = \"UPWARDS_QUAD_TAIL\";\n    MusicSymbol[MusicSymbol[\"DOWNWARDS_QUAD_TAIL\"] = 9] = \"DOWNWARDS_QUAD_TAIL\";\n    MusicSymbol[MusicSymbol[\"ROUND_HEAD\"] = 10] = \"ROUND_HEAD\";\n    MusicSymbol[MusicSymbol[\"WHITE_HEAD\"] = 11] = \"WHITE_HEAD\";\n    MusicSymbol[MusicSymbol[\"G_CLEF\"] = 12] = \"G_CLEF\";\n    MusicSymbol[MusicSymbol[\"F_CLEF\"] = 13] = \"F_CLEF\";\n    MusicSymbol[MusicSymbol[\"C_CLEF\"] = 14] = \"C_CLEF\";\n    MusicSymbol[MusicSymbol[\"BREVE\"] = 15] = \"BREVE\";\n    MusicSymbol[MusicSymbol[\"BREVE_REST\"] = 16] = \"BREVE_REST\";\n    MusicSymbol[MusicSymbol[\"COMMON_TIME\"] = 17] = \"COMMON_TIME\";\n    MusicSymbol[MusicSymbol[\"CUT_TIME\"] = 18] = \"CUT_TIME\";\n    MusicSymbol[MusicSymbol[\"WHOLE_REST\"] = 19] = \"WHOLE_REST\";\n    MusicSymbol[MusicSymbol[\"HALF_REST\"] = 20] = \"HALF_REST\";\n    MusicSymbol[MusicSymbol[\"QUARTER_REST\"] = 21] = \"QUARTER_REST\";\n    MusicSymbol[MusicSymbol[\"EIGHTH_REST\"] = 22] = \"EIGHTH_REST\";\n    MusicSymbol[MusicSymbol[\"SIXTEENTH_REST\"] = 23] = \"SIXTEENTH_REST\";\n    MusicSymbol[MusicSymbol[\"THIRTYSECOND_REST\"] = 24] = \"THIRTYSECOND_REST\";\n    MusicSymbol[MusicSymbol[\"SIXTYFOURTH_REST\"] = 25] = \"SIXTYFOURTH_REST\";\n    MusicSymbol[MusicSymbol[\"FLAT\"] = 26] = \"FLAT\";\n    MusicSymbol[MusicSymbol[\"SHARP\"] = 27] = \"SHARP\";\n    MusicSymbol[MusicSymbol[\"NATURAL\"] = 28] = \"NATURAL\";\n    MusicSymbol[MusicSymbol[\"DOUBLE_FLAT\"] = 29] = \"DOUBLE_FLAT\";\n    MusicSymbol[MusicSymbol[\"DOUBLE_SHARP\"] = 30] = \"DOUBLE_SHARP\";\n    MusicSymbol[MusicSymbol[\"ZERO\"] = 31] = \"ZERO\";\n    MusicSymbol[MusicSymbol[\"ONE\"] = 32] = \"ONE\";\n    MusicSymbol[MusicSymbol[\"TWO\"] = 33] = \"TWO\";\n    MusicSymbol[MusicSymbol[\"THREE\"] = 34] = \"THREE\";\n    MusicSymbol[MusicSymbol[\"FOUR\"] = 35] = \"FOUR\";\n    MusicSymbol[MusicSymbol[\"FIVE\"] = 36] = \"FIVE\";\n    MusicSymbol[MusicSymbol[\"SIX\"] = 37] = \"SIX\";\n    MusicSymbol[MusicSymbol[\"SEVEN\"] = 38] = \"SEVEN\";\n    MusicSymbol[MusicSymbol[\"EIGHT\"] = 39] = \"EIGHT\";\n    MusicSymbol[MusicSymbol[\"NINE\"] = 40] = \"NINE\";\n    MusicSymbol[MusicSymbol[\"DOT\"] = 41] = \"DOT\";\n    MusicSymbol[MusicSymbol[\"FERMATA\"] = 42] = \"FERMATA\";\n    MusicSymbol[MusicSymbol[\"INVERTED_FERMATA\"] = 43] = \"INVERTED_FERMATA\";\n    MusicSymbol[MusicSymbol[\"SPICCATO\"] = 44] = \"SPICCATO\";\n    MusicSymbol[MusicSymbol[\"TENUTO\"] = 45] = \"TENUTO\";\n    MusicSymbol[MusicSymbol[\"MARCATO\"] = 46] = \"MARCATO\";\n    MusicSymbol[MusicSymbol[\"MARCATISSIMO\"] = 47] = \"MARCATISSIMO\";\n    MusicSymbol[MusicSymbol[\"INVERTED_MARCATISSIMO\"] = 48] = \"INVERTED_MARCATISSIMO\";\n    MusicSymbol[MusicSymbol[\"P\"] = 49] = \"P\";\n    MusicSymbol[MusicSymbol[\"F\"] = 50] = \"F\";\n    MusicSymbol[MusicSymbol[\"S\"] = 51] = \"S\";\n    MusicSymbol[MusicSymbol[\"Z\"] = 52] = \"Z\";\n    MusicSymbol[MusicSymbol[\"M\"] = 53] = \"M\";\n    MusicSymbol[MusicSymbol[\"R\"] = 54] = \"R\";\n    MusicSymbol[MusicSymbol[\"SEGNO\"] = 55] = \"SEGNO\";\n    MusicSymbol[MusicSymbol[\"CODA\"] = 56] = \"CODA\";\n    MusicSymbol[MusicSymbol[\"DRUM_CLEF\"] = 57] = \"DRUM_CLEF\";\n    MusicSymbol[MusicSymbol[\"G_CLEF_SUB8\"] = 58] = \"G_CLEF_SUB8\";\n    MusicSymbol[MusicSymbol[\"G_CLEF_SUPER8\"] = 59] = \"G_CLEF_SUPER8\";\n    MusicSymbol[MusicSymbol[\"G_CLEF_SUB15\"] = 60] = \"G_CLEF_SUB15\";\n    MusicSymbol[MusicSymbol[\"G_CLEF_SUPER15\"] = 61] = \"G_CLEF_SUPER15\";\n    MusicSymbol[MusicSymbol[\"F_CLEF_SUB8\"] = 62] = \"F_CLEF_SUB8\";\n    MusicSymbol[MusicSymbol[\"F_CLEF_SUPER8\"] = 63] = \"F_CLEF_SUPER8\";\n    MusicSymbol[MusicSymbol[\"F_CLEF_SUB15\"] = 64] = \"F_CLEF_SUB15\";\n    MusicSymbol[MusicSymbol[\"F_CLEF_SUPER15\"] = 65] = \"F_CLEF_SUPER15\";\n    MusicSymbol[MusicSymbol[\"DOWN_BOW\"] = 66] = \"DOWN_BOW\";\n    MusicSymbol[MusicSymbol[\"MORDENT\"] = 67] = \"MORDENT\";\n    MusicSymbol[MusicSymbol[\"INVERTED_MORDENT\"] = 68] = \"INVERTED_MORDENT\";\n    MusicSymbol[MusicSymbol[\"TURN\"] = 69] = \"TURN\";\n    MusicSymbol[MusicSymbol[\"INVERTED_TURN\"] = 70] = \"INVERTED_TURN\";\n    MusicSymbol[MusicSymbol[\"LEFTHAND_PIZZICATO\"] = 71] = \"LEFTHAND_PIZZICATO\";\n    MusicSymbol[MusicSymbol[\"RELEASE_PED\"] = 72] = \"RELEASE_PED\";\n    MusicSymbol[MusicSymbol[\"ENGAGE_PED\"] = 73] = \"ENGAGE_PED\";\n    MusicSymbol[MusicSymbol[\"VA8\"] = 74] = \"VA8\";\n    MusicSymbol[MusicSymbol[\"VB8\"] = 75] = \"VB8\";\n    MusicSymbol[MusicSymbol[\"TRILL\"] = 76] = \"TRILL\";\n    MusicSymbol[MusicSymbol[\"MA15\"] = 77] = \"MA15\";\n    MusicSymbol[MusicSymbol[\"MB15\"] = 78] = \"MB15\";\n    MusicSymbol[MusicSymbol[\"HIGH\"] = 79] = \"HIGH\";\n    MusicSymbol[MusicSymbol[\"PLAY\"] = 80] = \"PLAY\";\n    MusicSymbol[MusicSymbol[\"MIC\"] = 81] = \"MIC\";\n    MusicSymbol[MusicSymbol[\"SNAP_PIZZICATO\"] = 82] = \"SNAP_PIZZICATO\";\n    MusicSymbol[MusicSymbol[\"NATURAL_HARMONIC\"] = 83] = \"NATURAL_HARMONIC\";\n    MusicSymbol[MusicSymbol[\"EditPen\"] = 84] = \"EditPen\";\n})(exports.MusicSymbol || (exports.MusicSymbol = {}));\nvar MusicSymbol = exports.MusicSymbol;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/MusicSymbol.js\n ** module id = 89\n ** module chunks = 0\n **/","\"use strict\";\n(function (DrawingMode) {\n    DrawingMode[DrawingMode[\"All\"] = 0] = \"All\";\n    DrawingMode[DrawingMode[\"NoOverlays\"] = 1] = \"NoOverlays\";\n    DrawingMode[DrawingMode[\"Leadsheet\"] = 2] = \"Leadsheet\";\n})(exports.DrawingMode || (exports.DrawingMode = {}));\nvar DrawingMode = exports.DrawingMode;\n(function (MusicSymbolDrawingStyle) {\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Normal\"] = 0] = \"Normal\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Disabled\"] = 1] = \"Disabled\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Selected\"] = 2] = \"Selected\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Clickable\"] = 3] = \"Clickable\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"PlaybackSymbols\"] = 4] = \"PlaybackSymbols\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"FollowSymbols\"] = 5] = \"FollowSymbols\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"QFeedbackNotFound\"] = 6] = \"QFeedbackNotFound\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"QFeedbackOk\"] = 7] = \"QFeedbackOk\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"QFeedbackPerfect\"] = 8] = \"QFeedbackPerfect\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Debug1\"] = 9] = \"Debug1\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Debug2\"] = 10] = \"Debug2\";\n    MusicSymbolDrawingStyle[MusicSymbolDrawingStyle[\"Debug3\"] = 11] = \"Debug3\";\n})(exports.MusicSymbolDrawingStyle || (exports.MusicSymbolDrawingStyle = {}));\nvar MusicSymbolDrawingStyle = exports.MusicSymbolDrawingStyle;\n(function (PhonicScoreModes) {\n    PhonicScoreModes[PhonicScoreModes[\"Following\"] = 0] = \"Following\";\n    PhonicScoreModes[PhonicScoreModes[\"Midi\"] = 1] = \"Midi\";\n    PhonicScoreModes[PhonicScoreModes[\"Manual\"] = 2] = \"Manual\";\n})(exports.PhonicScoreModes || (exports.PhonicScoreModes = {}));\nvar PhonicScoreModes = exports.PhonicScoreModes;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/opensheetmusicdisplay/dist/src/MusicalScore/Graphical/DrawingMode.js\n ** module id = 90\n ** module chunks = 0\n **/"],"sourceRoot":""}